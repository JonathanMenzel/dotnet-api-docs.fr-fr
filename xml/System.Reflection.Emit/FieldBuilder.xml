<Type Name="FieldBuilder" FullName="System.Reflection.Emit.FieldBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b74eae851ec9ef633160759f992f78bf405fe4ff" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30470243" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FieldBuilder : System.Reflection.FieldInfo, System.Runtime.InteropServices._FieldBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit FieldBuilder extends System.Reflection.FieldInfo implements class System.Runtime.InteropServices._FieldBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.FieldBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FieldBuilder&#xA;Inherits FieldInfo&#xA;Implements _FieldBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class FieldBuilder sealed : System::Reflection::FieldInfo, System::Runtime::InteropServices::_FieldBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.FieldInfo</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._FieldBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._FieldBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="76afe-101">Définit et représente un champ.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76afe-101">Defines and represents a field.</span>
      </span>
      <span data-ttu-id="76afe-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76afe-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76afe-103">Obtenir une instance de `FieldBuilder` en appelant <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A>, ou <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A>.</span><span class="sxs-lookup"><span data-stu-id="76afe-103">Get an instance of `FieldBuilder` by calling <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A>, or <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76afe-104">Le <xref:System.Reflection.Emit.FieldBuilder.SetValue%2A> méthode n’est actuellement pas prise en charge.</span><span class="sxs-lookup"><span data-stu-id="76afe-104">The <xref:System.Reflection.Emit.FieldBuilder.SetValue%2A> method is currently not supported.</span></span> <span data-ttu-id="76afe-105">Pour résoudre ce problème, vous devez récupérer le <xref:System.Reflection.FieldInfo> par la réflexion sur le type fini et l’appel <xref:System.Reflection.FieldInfo.SetValue%2A> pour définir la valeur du champ.</span><span class="sxs-lookup"><span data-stu-id="76afe-105">As a workaround, retrieve the <xref:System.Reflection.FieldInfo> by reflecting on the finished type and call <xref:System.Reflection.FieldInfo.SetValue%2A> to set the value of the field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76afe-106">L’exemple de code suivant illustre l’utilisation de `FieldBuilder`.</span><span class="sxs-lookup"><span data-stu-id="76afe-106">The following code sample illustrates the use of `FieldBuilder`.</span></span>  
  
 [!code-cpp[FieldBuilder_Class_Name#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldBuilder_Class_Name/CPP/fieldbuilder_name.cpp#1)]
 [!code-csharp[FieldBuilder_Class_Name#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldBuilder_Class_Name/CS/fieldbuilder_name.cs#1)]
 [!code-vb[FieldBuilder_Class_Name#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldBuilder_Class_Name/VB/fieldbuilder_name.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FieldBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.FieldBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FieldBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.FieldAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.FieldBuilder.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As FieldAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::FieldAttributes Attributes { System::Reflection::FieldAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76afe-107">Indique les attributs de ce champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-107">Indicates the attributes of this field.</span>
          </span>
          <span data-ttu-id="76afe-108">Cette propriété est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-108">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76afe-109">Attributs de ce champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-109">The attributes of this field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76afe-110">L’exemple de code suivant illustre l’utilisation de `Attributes`.</span><span class="sxs-lookup"><span data-stu-id="76afe-110">The following code sample illustrates the use of `Attributes`.</span></span>  
  
 [!code-cpp[FieldBuilder_ReflectedType#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldBuilder_ReflectedType/CPP/fieldbuilder_reflectedtype.cpp#1)]
 [!code-csharp[FieldBuilder_ReflectedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldBuilder_ReflectedType/CS/fieldbuilder_reflectedtype.cs#1)]
 [!code-vb[FieldBuilder_ReflectedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldBuilder_ReflectedType/VB/fieldbuilder_reflectedtype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public override Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.FieldBuilder.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76afe-111">Indique une référence à l'objet <see cref="T:System.Type" /> pour le type qui déclare ce champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-111">Indicates a reference to the <see cref="T:System.Type" /> object for the type that declares this field.</span>
          </span>
          <span data-ttu-id="76afe-112">Cette propriété est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-112">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76afe-113">Référence à l'objet <see cref="T:System.Type" /> pour le type qui déclare ce champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-113">A reference to the <see cref="T:System.Type" /> object for the type that declares this field.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldHandle">
      <MemberSignature Language="C#" Value="public override RuntimeFieldHandle FieldHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeFieldHandle FieldHandle" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.FieldBuilder.FieldHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldHandle As RuntimeFieldHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property RuntimeFieldHandle FieldHandle { RuntimeFieldHandle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeFieldHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76afe-114">Indique le handle de métadonnées interne de ce champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-114">Indicates the internal metadata handle for this field.</span>
          </span>
          <span data-ttu-id="76afe-115">Cette propriété est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-115">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76afe-116">Handle de métadonnées interne de ce champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-116">The internal metadata handle for this field.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="76afe-117">Cette méthode n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-117">This method is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FieldType">
      <MemberSignature Language="C#" Value="public override Type FieldType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type FieldType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.FieldBuilder.FieldType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ FieldType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76afe-118">Indique l'objet <see cref="T:System.Type" /> qui représente le type de ce champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-118">Indicates the <see cref="T:System.Type" /> object that represents the type of this field.</span>
          </span>
          <span data-ttu-id="76afe-119">Cette propriété est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-119">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76afe-120">Objet <see cref="T:System.Type" /> qui représente le type de ce champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-120">The <see cref="T:System.Type" /> object that represents the type of this field.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="76afe-121">Retourne les attributs personnalisés définis pour ce champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-121">Returns the custom attributes defined for this field.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.FieldBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="76afe-122">Contrôle l’héritage des attributs personnalisés à partir des classes de base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-122">Controls inheritance of custom attributes from base classes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76afe-123">Retourne tous les attributs personnalisés définis pour ce champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-123">Returns all the custom attributes defined for this field.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76afe-124">Tableau de type <see cref="T:System.Object" /> représentant tous les attributs personnalisés du constructeur représenté par cette instance <see cref="T:System.Reflection.Emit.FieldBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-124">An array of type <see cref="T:System.Object" /> representing all the custom attributes of the constructor represented by this <see cref="T:System.Reflection.Emit.FieldBuilder" /> instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="76afe-125">Cette méthode n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-125">This method is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.FieldBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="76afe-126">Type d’attribut personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-126">The custom attribute type.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="76afe-127">Contrôle l’héritage des attributs personnalisés à partir des classes de base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-127">Controls inheritance of custom attributes from base classes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76afe-128">Retourne tous les attributs personnalisés définis pour ce champ et identifiés par le type donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-128">Returns all the custom attributes defined for this field identified by the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76afe-129">Tableau de type <see cref="T:System.Object" /> représentant tous les attributs personnalisés du constructeur représenté par cette instance <see cref="T:System.Reflection.Emit.FieldBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-129">An array of type <see cref="T:System.Object" /> representing all the custom attributes of the constructor represented by this <see cref="T:System.Reflection.Emit.FieldBuilder" /> instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="76afe-130">Cette méthode n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-130">This method is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.FieldToken GetToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.FieldToken GetToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.FieldBuilder.GetToken" />
      <MemberSignature Language="VB.NET" Value="Public Function GetToken () As FieldToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::FieldToken GetToken();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.FieldToken</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76afe-131">Retourne le jeton représentant ce champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-131">Returns the token representing this field.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76afe-132">Retourne l'objet <see cref="T:System.Reflection.Emit.FieldToken" /> qui représente le jeton de ce champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-132">Returns the <see cref="T:System.Reflection.Emit.FieldToken" /> object that represents the token for this field.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.FieldBuilder.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="76afe-133">Objet sur lequel accéder au champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-133">The object on which to access the field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76afe-134">Récupère la valeur du champ pris en charge par l'objet donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-134">Retrieves the value of the field supported by the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76afe-135">
            <see cref="T:System.Object" /> qui contient la valeur du champ réfléchi par cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-135">An <see cref="T:System.Object" /> containing the value of the field reflected by this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76afe-136">Si le champ est `static`, le `obj` paramètre est ignoré.</span><span class="sxs-lookup"><span data-stu-id="76afe-136">If the field is `static`, the `obj` parameter is ignored.</span></span> <span data-ttu-id="76afe-137">Pour les champs non statiques, `obj` doit être une instance d’une classe qui hérite ou déclare le champ.</span><span class="sxs-lookup"><span data-stu-id="76afe-137">For non-static fields, `obj` should be an instance of a class that inherits or declares the field.</span></span>  
  
 <span data-ttu-id="76afe-138">Le type de retour de <xref:System.Reflection.Emit.FieldBuilder.GetValue%2A> est <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="76afe-138">The return type of <xref:System.Reflection.Emit.FieldBuilder.GetValue%2A> is <xref:System.Object>.</span></span> <span data-ttu-id="76afe-139">Par exemple, si le champ contient une valeur booléenne primitifs valeur, une instance de <xref:System.Object> avec la valeur booléenne appropriée la valeur est retournée.</span><span class="sxs-lookup"><span data-stu-id="76afe-139">For example, if the field holds a Boolean primitive value, an instance of <xref:System.Object> with the appropriate Boolean value is returned.</span></span> <span data-ttu-id="76afe-140">Avant de retourner la valeur <xref:System.Reflection.Emit.FieldBuilder.GetValue%2A> vérifie si l’utilisateur a l’autorisation d’accès.</span><span class="sxs-lookup"><span data-stu-id="76afe-140">Before returning the value, <xref:System.Reflection.Emit.FieldBuilder.GetValue%2A> checks to see if the user has access permission.</span></span>  
  
 <span data-ttu-id="76afe-141">Restrictions d’accès sont ignorées pour le code de confiance.</span><span class="sxs-lookup"><span data-stu-id="76afe-141">Access restrictions are ignored for fully-trusted code.</span></span> <span data-ttu-id="76afe-142">`Private` constructeurs, méthodes, champs et propriétés sont accessibles et appelé à l’aide de la réflexion lorsque le code est entièrement fiables.</span><span class="sxs-lookup"><span data-stu-id="76afe-142">`Private` constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully-trusted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="76afe-143">Cette méthode n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-143">This method is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.FieldBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="76afe-144">Type de l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-144">The type of the attribute.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="76afe-145">Contrôle l’héritage des attributs personnalisés à partir des classes de base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-145">Controls inheritance of custom attributes from base classes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76afe-146">Indique si un attribut doté du type spécifié est défini sur un champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-146">Indicates whether an attribute having the specified type is defined on a field.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76afe-147">
            <see langword="true" /> si une ou plusieurs instances de <paramref name="attributeType" /> sont définies sur ce champ ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-147">
              <see langword="true" /> if one or more instance of <paramref name="attributeType" /> is defined on this field; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="76afe-148">Cette méthode n’est pas prise en charge pour l’instant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-148">This method is not currently supported.</span>
          </span>
          <span data-ttu-id="76afe-149">Vous pouvez récupérer le champ à l'aide de <see cref="M:System.Type.GetField(System.String,System.Reflection.BindingFlags)" /> et appeler <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> sur le <see cref="T:System.Reflection.FieldInfo" /> retourné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-149">Retrieve the field using <see cref="M:System.Type.GetField(System.String,System.Reflection.BindingFlags)" /> and call <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> on the returned <see cref="T:System.Reflection.FieldInfo" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module Module" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.FieldBuilder.Module" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Module As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ Module { System::Reflection::Module ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76afe-150">Obtient le module dans lequel le type qui contient ce champ est défini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-150">Gets the module in which the type that contains this field is being defined.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76afe-151">
            <see cref="T:System.Reflection.Module" /> représentant le module dynamique dans lequel ce champ est défini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-151">A <see cref="T:System.Reflection.Module" /> that represents the dynamic module in which this field is being defined.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Reflection.Module" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.FieldBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76afe-152">Indique le nom de ce champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-152">Indicates the name of this field.</span>
          </span>
          <span data-ttu-id="76afe-153">Cette propriété est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-153">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76afe-154">
            <see cref="T:System.String" /> qui contient le nom de ce champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-154">A <see cref="T:System.String" /> containing the name of this field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76afe-155">L’exemple de code suivant illustre l’utilisation de `Name`.</span><span class="sxs-lookup"><span data-stu-id="76afe-155">The following code sample illustrates the use of `Name`.</span></span>  
  
 [!code-cpp[FieldBuilder_Class_Name#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldBuilder_Class_Name/CPP/fieldbuilder_name.cpp#1)]
 [!code-csharp[FieldBuilder_Class_Name#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldBuilder_Class_Name/CS/fieldbuilder_name.cs#1)]
 [!code-vb[FieldBuilder_Class_Name#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldBuilder_Class_Name/VB/fieldbuilder_name.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public override Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.FieldBuilder.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76afe-156">Indique la référence à l'objet <see cref="T:System.Type" /> à partir duquel cet objet a été obtenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-156">Indicates the reference to the <see cref="T:System.Type" /> object from which this object was obtained.</span>
          </span>
          <span data-ttu-id="76afe-157">Cette propriété est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-157">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76afe-158">Référence à l'objet <see cref="T:System.Type" /> à partir duquel cette instance a été obtenue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-158">A reference to the <see cref="T:System.Type" /> object from which this instance was obtained.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76afe-159">A <xref:System.Reflection.Emit.FieldBuilder> objet représente un champ d’une classe particulière.</span><span class="sxs-lookup"><span data-stu-id="76afe-159">A <xref:System.Reflection.Emit.FieldBuilder> object represents a field of a particular class.</span></span> <span data-ttu-id="76afe-160">Pour obtenir un <xref:System.Reflection.Emit.FieldBuilder> objet, le <xref:System.Type> objet qui représente la classe qui prend en charge le champ est interrogé.</span><span class="sxs-lookup"><span data-stu-id="76afe-160">In order to obtain a <xref:System.Reflection.Emit.FieldBuilder> object, the <xref:System.Type> object that represents the class that supports the field is queried.</span></span> <span data-ttu-id="76afe-161">Cette propriété contient une référence à cet <xref:System.Type> objet.</span><span class="sxs-lookup"><span data-stu-id="76afe-161">This property holds a reference to that <xref:System.Type> object.</span></span>  
  
 <span data-ttu-id="76afe-162">L’exemple de code suivant illustre l’utilisation de `ReflectedType`.</span><span class="sxs-lookup"><span data-stu-id="76afe-162">The following code sample illustrates the use of `ReflectedType`.</span></span>  
  
 [!code-cpp[FieldBuilder_ReflectedType#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldBuilder_ReflectedType/CPP/fieldbuilder_reflectedtype.cpp#1)]
 [!code-csharp[FieldBuilder_ReflectedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldBuilder_ReflectedType/CS/fieldbuilder_reflectedtype.cs#1)]
 [!code-vb[FieldBuilder_ReflectedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldBuilder_ReflectedType/VB/fieldbuilder_reflectedtype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetConstant">
      <MemberSignature Language="C#" Value="public void SetConstant (object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetConstant(object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.FieldBuilder.SetConstant(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetConstant (defaultValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetConstant(System::Object ^ defaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="defaultValue">
          <span data-ttu-id="76afe-163">Nouvelle valeur par défaut de ce champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-163">The new default value for this field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76afe-164">Définit la valeur par défaut de ce champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-164">Sets the default value of this field.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76afe-165">`defaultValue` est limité aux types suivants : `Boolean`, `SByte`, `Int16`, `Int32`, `Int64`, `Byte`, `UInt16`, `UInt32`, `UInt64`, `Single`, `Double`, `DateTime` , `Char`, `String`, et `Enum`.</span><span class="sxs-lookup"><span data-stu-id="76afe-165">`defaultValue` is restricted to the following types: `Boolean`, `SByte`, `Int16`, `Int32`, `Int64`, `Byte`, `UInt16`, `UInt32`, `UInt64`, `Single`, `Double`, `DateTime`, `Char`, `String`, and `Enum`.</span></span> <span data-ttu-id="76afe-166">Si le type de champ est un type référence, la conformité CLS requiert `defaultValue` être `null`.</span><span class="sxs-lookup"><span data-stu-id="76afe-166">If the field type is a reference type, CLS compliance requires `defaultValue` to be `null`.</span></span> <span data-ttu-id="76afe-167">Cependant, depuis le [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], `defaultValue` peut être non null pour un type référence tant que la valeur peut être assignée à ce type référence.</span><span class="sxs-lookup"><span data-stu-id="76afe-167">However, starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], `defaultValue` can be non-null for a reference type as long as the value can be assigned to that reference type.</span></span> <span data-ttu-id="76afe-168">Par exemple, un `Int32` valeur peut être assignée à un champ de type <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="76afe-168">For example, an `Int32` value can be assigned to a field of type <xref:System.Object>.</span></span> <span data-ttu-id="76afe-169">Ce n’est pas conforme CLS, mais il peut être utile dans les scénarios d’interopérabilité.</span><span class="sxs-lookup"><span data-stu-id="76afe-169">This is not CLS-compliant, but it can be useful in interop scenarios.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="76afe-170">Le type conteneur a été créé à l’aide de <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-170">The containing type has been created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="76afe-171">Le champ ne correspond pas à un type pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-171">The field is not one of the supported types.</span>
          </span>
          <span data-ttu-id="76afe-172">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-172">-or-</span>
          </span>
          <span data-ttu-id="76afe-173">Le type de <paramref name="defaultValue" /> ne correspond pas au type du champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-173">The type of <paramref name="defaultValue" /> does not match the type of the field.</span>
          </span>
          <span data-ttu-id="76afe-174">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-174">-or-</span>
          </span>
          <span data-ttu-id="76afe-175">Le champ est de type <see cref="T:System.Object" /> ou d'un autre type référence, <paramref name="defaultValue" /> n'est pas <see langword="null" />, et la valeur ne peut pas être assignée au type référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-175">The field is of type <see cref="T:System.Object" /> or other reference type, <paramref name="defaultValue" /> is not <see langword="null" />, and the value cannot be assigned to the reference type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="76afe-176">Définit un attribut personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-176">Sets a custom attribute.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.FieldBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder">
          <span data-ttu-id="76afe-177">Instance d’une classe d’assistance pour définir l’attribut personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-177">An instance of a helper class to define the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76afe-178">Définit un attribut personnalisé à l’aide d’un générateur d’attributs personnalisés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-178">Sets a custom attribute using a custom attribute builder.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="76afe-179">L’exemple de code suivant illustre l’utilisation de `SetCustomAttribute` dans le contexte de <xref:System.Reflection.Emit.FieldBuilder>, en utilisant un <xref:System.Reflection.Emit.CustomAttributeBuilder>.</span><span class="sxs-lookup"><span data-stu-id="76afe-179">The following code sample illustrates the use of `SetCustomAttribute` in the context of <xref:System.Reflection.Emit.FieldBuilder>, using a <xref:System.Reflection.Emit.CustomAttributeBuilder>.</span></span>  
  
 [!code-cpp[FieldBuilder_SetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldBuilder_SetCustomAttributes/CPP/fieldbuilder_setcustomattributes.cpp#1)]
 [!code-csharp[FieldBuilder_SetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldBuilder_SetCustomAttributes/CS/fieldbuilder_setcustomattributes.cs#1)]
 [!code-vb[FieldBuilder_SetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldBuilder_SetCustomAttributes/VB/fieldbuilder_setcustomattributes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76afe-180">
            <paramref name="con" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-180">
              <paramref name="con" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="76afe-181">Le type parent de ce champ est complet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-181">The parent type of this field is complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.FieldBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con">
          <span data-ttu-id="76afe-182">Le constructeur de l’attribut personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-182">The constructor for the custom attribute.</span>
          </span>
        </param>
        <param name="binaryAttribute">
          <span data-ttu-id="76afe-183">Objet blob d’octets représentant les attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-183">A byte blob representing the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76afe-184">Définit un attribut personnalisé à l’aide d’un objet blob d’attribut personnalisé spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-184">Sets a custom attribute using a specified custom attribute blob.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76afe-185">Consultez la spécification de métadonnées dans la documentation ECMA Partition II pour plus d’informations sur la mise en forme `binaryAttribute`.</span><span class="sxs-lookup"><span data-stu-id="76afe-185">See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`.</span></span> <span data-ttu-id="76afe-186">La documentation est disponible en ligne. Consultez [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) sur MSDN et [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) sur le site web d’Ecma International.</span><span class="sxs-lookup"><span data-stu-id="76afe-186">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76afe-187">L’exemple de code suivant illustre l’utilisation de `SetCustomAttribute` dans le contexte de <xref:System.Reflection.Emit.FieldBuilder>, à l’aide d’un objet blob d’octets.</span><span class="sxs-lookup"><span data-stu-id="76afe-187">The following code sample illustrates the use of `SetCustomAttribute` in the context of <xref:System.Reflection.Emit.FieldBuilder>, using a byte blob.</span></span>  
  
 [!code-cpp[FieldBuilder_SetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldBuilder_SetCustomAttributes/CPP/fieldbuilder_setcustomattributes.cpp#1)]
 [!code-csharp[FieldBuilder_SetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldBuilder_SetCustomAttributes/CS/fieldbuilder_setcustomattributes.cs#1)]
 [!code-vb[FieldBuilder_SetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldBuilder_SetCustomAttributes/VB/fieldbuilder_setcustomattributes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76afe-188">
            <paramref name="con" /> ou <paramref name="binaryAttribute" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-188">
              <paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="76afe-189">Le type parent de ce champ est complet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-189">The parent type of this field is complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetMarshal">
      <MemberSignature Language="C#" Value="public void SetMarshal (System.Reflection.Emit.UnmanagedMarshal unmanagedMarshal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMarshal(class System.Reflection.Emit.UnmanagedMarshal unmanagedMarshal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.FieldBuilder.SetMarshal(System.Reflection.Emit.UnmanagedMarshal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMarshal(System::Reflection::Emit::UnmanagedMarshal ^ unmanagedMarshal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedMarshal" Type="System.Reflection.Emit.UnmanagedMarshal" />
      </Parameters>
      <Docs>
        <param name="unmanagedMarshal">
          <span data-ttu-id="76afe-190">Descripteur spécifiant le marshaling natif de ce champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-190">A descriptor specifying the native marshalling of this field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76afe-191">Décrit le marshaling natif du champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-191">Describes the native marshaling of the field.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76afe-192">L’exemple de code suivant illustre l’utilisation de `SetMarshal`.</span><span class="sxs-lookup"><span data-stu-id="76afe-192">The following code sample illustrates the use of `SetMarshal`.</span></span>  
  
 [!code-cpp[FieldBuilder_SetOffset#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldBuilder_SetOffset/CPP/fieldbuilder_setoffset.cpp#1)]
 [!code-csharp[FieldBuilder_SetOffset#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldBuilder_SetOffset/CS/fieldbuilder_setoffset.cs#1)]
 [!code-vb[FieldBuilder_SetOffset#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldBuilder_SetOffset/VB/fieldbuilder_setoffset.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76afe-193">
            <paramref name="unmanagedMarshal" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-193">
              <paramref name="unmanagedMarshal" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="76afe-194">Le type conteneur a été créé à l’aide de <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-194">The containing type has been created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetOffset">
      <MemberSignature Language="C#" Value="public void SetOffset (int iOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOffset(int32 iOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.FieldBuilder.SetOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOffset (iOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOffset(int iOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="iOffset">
          <span data-ttu-id="76afe-195">Offset du champ dans le type contenant ce champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-195">The offset of the field within the type containing this field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76afe-196">Spécifie la disposition du champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-196">Specifies the field layout.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76afe-197">L’exemple de code suivant illustre l’utilisation de `SetOffset`.</span><span class="sxs-lookup"><span data-stu-id="76afe-197">The following code sample illustrates the use of `SetOffset`.</span></span>  
  
 [!code-cpp[FieldBuilder_SetOffset#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldBuilder_SetOffset/CPP/fieldbuilder_setoffset.cpp#1)]
 [!code-csharp[FieldBuilder_SetOffset#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldBuilder_SetOffset/CS/fieldbuilder_setoffset.cs#1)]
 [!code-vb[FieldBuilder_SetOffset#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldBuilder_SetOffset/VB/fieldbuilder_setoffset.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="76afe-198">Le type conteneur a été créé à l’aide de <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-198">The containing type has been created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="76afe-199">
            <paramref name="iOffset" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-199">
              <paramref name="iOffset" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public override void SetValue (object obj, object val, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetValue(object obj, object val, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.FieldBuilder.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetValue(System::Object ^ obj, System::Object ^ val, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="val" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="76afe-200">Objet sur lequel accéder au champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-200">The object on which to access the field.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="76afe-201">La valeur à affecter au champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-201">The value to assign to the field.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="76afe-202">Membre de <see langword="IBinder" /> qui spécifie le type de liaison requis (par exemple, IBinder.CreateInstance, IBinder.ExactBinding).</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-202">A member of <see langword="IBinder" /> that specifies the type of binding that is desired (for example, IBinder.CreateInstance, IBinder.ExactBinding).</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="76afe-203">Ensemble de propriétés et d'activations de la liaison, de la contrainte des types d'arguments et d'appel des membres à l'aide de la réflexion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-203">A set of properties and enabling for binding, coercion of argument types, and invocation of members using reflection.</span>
          </span>
          <span data-ttu-id="76afe-204">Si binder est null, Binder.DefaultBinding est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-204">If binder is null, then IBinder.DefaultBinding is used.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="76afe-205">Préférences logicielles d'une culture spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-205">The software preferences of a particular culture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76afe-206">Définit la valeur du champ pris en charge par l’objet donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-206">Sets the value of the field supported by the given object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76afe-207">Cette méthode attribue le `val` paramètre au champ réfléchi par cette instance <xref:System.Object> `obj`.</span><span class="sxs-lookup"><span data-stu-id="76afe-207">This method will assign the `val` parameter to the field reflected by this instance on <xref:System.Object>`obj`.</span></span> <span data-ttu-id="76afe-208">Si le champ est statique, `obj` sera ignoré.</span><span class="sxs-lookup"><span data-stu-id="76afe-208">If the field is static, `obj` will be ignored.</span></span> <span data-ttu-id="76afe-209">Pour les champs non statiques, `obj` doit être une instance d’une classe qui hérite ou déclare le champ.</span><span class="sxs-lookup"><span data-stu-id="76afe-209">For non-static fields, `obj` should be an instance of a class that inherits or declares the field.</span></span>  
  
 <span data-ttu-id="76afe-210">La nouvelle valeur est passée comme un <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="76afe-210">The new value is passed as an <xref:System.Object>.</span></span> <span data-ttu-id="76afe-211">Par exemple, si le type du champ est booléen, une instance de <xref:System.Object> avec la valeur booléenne appropriée la valeur est passée.</span><span class="sxs-lookup"><span data-stu-id="76afe-211">For example, if the field's type is Boolean, an instance of <xref:System.Object> with the appropriate Boolean value is passed.</span></span> <span data-ttu-id="76afe-212">Avant de définir la valeur, <xref:System.Reflection.Emit.FieldBuilder.SetValue%2A> vérifie si l’utilisateur a l’autorisation d’accès.</span><span class="sxs-lookup"><span data-stu-id="76afe-212">Before setting the value, <xref:System.Reflection.Emit.FieldBuilder.SetValue%2A> checks to see if the user has access permission.</span></span>  
  
 <span data-ttu-id="76afe-213">Restrictions d’accès sont ignorées pour le code de confiance.</span><span class="sxs-lookup"><span data-stu-id="76afe-213">Access restrictions are ignored for fully-trusted code.</span></span> <span data-ttu-id="76afe-214">`Private` constructeurs, méthodes, champs et propriétés sont accessibles et appelé à l’aide de la réflexion lorsque le code est entièrement fiables.</span><span class="sxs-lookup"><span data-stu-id="76afe-214">`Private` constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully-trusted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76afe-215">Cette méthode n'est actuellement pas prise en charge.</span><span class="sxs-lookup"><span data-stu-id="76afe-215">This method is currently not supported.</span></span> <span data-ttu-id="76afe-216">Pour résoudre ce problème, vous devez récupérer le <xref:System.Reflection.FieldInfo> par la réflexion sur le type fini et l’appel <xref:System.Reflection.FieldInfo.SetValue%2A> pour définir la valeur du champ.</span><span class="sxs-lookup"><span data-stu-id="76afe-216">As a workaround, retrieve the <xref:System.Reflection.FieldInfo> by reflecting on the finished type and call <xref:System.Reflection.FieldInfo.SetValue%2A> to set the value of the field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="76afe-217">Cette méthode n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-217">This method is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._FieldBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _FieldBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._FieldBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.FieldBuilder.System#Runtime#InteropServices#_FieldBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _FieldBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._FieldBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_FieldBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="76afe-218">Réservé à un usage ultérieur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-218">Reserved for future use.</span>
          </span>
          <span data-ttu-id="76afe-219">Doit être IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-219">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="76afe-220">Tableau passé des noms à mapper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-220">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="76afe-221">Compte des noms à mapper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-221">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="76afe-222">Contexte des paramètres régionaux dans lequel interpréter les noms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-222">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="76afe-223">Tableau alloué par l'appelant et recevant les ID qui correspondent aux noms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-223">Caller-allocated array which receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76afe-224">Mappe un jeu de noms avec un jeu correspondant d'identificateurs de dispatch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-224">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76afe-225">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="76afe-225">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="76afe-226">Pour plus d’informations sur `IDispatch::GetIDsOfNames`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="76afe-226">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="76afe-227">La méthode est appelée à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-227">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._FieldBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _FieldBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._FieldBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.FieldBuilder.System#Runtime#InteropServices#_FieldBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _FieldBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._FieldBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_FieldBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="76afe-228">Informations de type à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-228">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="76afe-229">Identificateur des paramètres régionaux pour les informations de type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-229">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="76afe-230">Reçoit un pointeur vers l'objet d'informations de type demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-230">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76afe-231">Récupère les informations de type pour un objet, qui peuvent être utilisées ensuite pour obtenir les informations de type d'une interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-231">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76afe-232">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="76afe-232">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="76afe-233">Pour plus d’informations sur `IDispatch::GetTypeInfo`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="76afe-233">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="76afe-234">La méthode est appelée à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-234">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._FieldBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _FieldBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._FieldBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.FieldBuilder.System#Runtime#InteropServices#_FieldBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _FieldBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._FieldBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_FieldBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="76afe-235">Pointe vers un emplacement qui reçoit le nombre d'interfaces d'informations de type fourni par l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-235">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76afe-236">Récupère le nombre d'interfaces d'informations de type fourni par un objet (0 ou 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-236">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76afe-237">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="76afe-237">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="76afe-238">Pour plus d’informations sur `IDispatch::GetTypeInfoCount`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="76afe-238">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="76afe-239">La méthode est appelée à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-239">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._FieldBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _FieldBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._FieldBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.FieldBuilder.System#Runtime#InteropServices#_FieldBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _FieldBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._FieldBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_FieldBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="76afe-240">Identifie le membre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-240">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="76afe-241">Réservé à un usage ultérieur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-241">Reserved for future use.</span>
          </span>
          <span data-ttu-id="76afe-242">Doit être IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-242">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="76afe-243">Contexte des paramètres régionaux dans lequel interpréter les arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-243">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="76afe-244">Indicateurs décrivant le contexte de l'appel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-244">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="76afe-245">Pointeur vers une structure qui contient un tableau d’arguments, un tableau d’arguments DISPID pour les arguments nommés et le nombre d’éléments de chaque tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-245">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="76afe-246">Pointeur vers l'emplacement où le résultat doit être stocké.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-246">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="76afe-247">Pointeur vers une structure qui contient les informations sur les exceptions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-247">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="76afe-248">Index du premier argument comportant une erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-248">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76afe-249">Fournit l'accès aux propriétés et aux méthodes exposées par un objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-249">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76afe-250">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="76afe-250">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="76afe-251">Pour plus d’informations sur `IDispatch::Invoke`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="76afe-251">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="76afe-252">La méthode est appelée à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76afe-252">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>