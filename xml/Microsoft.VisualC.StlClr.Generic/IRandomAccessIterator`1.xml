<Type Name="IRandomAccessIterator&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e36051db159f51fb4ba5a078fd0dd18dc6305a06" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36726086" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRandomAccessIterator&lt;TValue&gt; : Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IRandomAccessIterator`1&lt;TValue&gt; implements class Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1&lt;!TValue&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRandomAccessIterator(Of TValue)&#xA;Implements IBidirectionalIterator(Of TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public interface class IRandomAccessIterator : Microsoft::VisualC::StlClr::Generic::IBidirectionalIterator&lt;TValue&gt;" />
  <TypeSignature Language="F#" Value="type IRandomAccessIterator&lt;'Value&gt; = interface&#xA;    interface IBidirectionalIterator&lt;'Value&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;TValue&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TValue">
      <span data-ttu-id="52546-101">[! Include[cpp_iter_arg](~/Includes/cpp-ITER-arg-MD.MD)]</span>
      <span class="sxs-lookup">
        <span data-stu-id="52546-101">[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="52546-102">Définit l'interface pour un itérateur d'accès aléatoire.</span>
      <span class="sxs-lookup">
        <span data-stu-id="52546-102">Defines the interface for a random access iterator.</span>
      </span>
      <span data-ttu-id="52546-103">Les itérateurs d’accès aléatoire prennent en charge les opérations suivantes : déplacement vers l’avant d’une position en appelant <c>operator++</c>, déplacement vers l’arrière d’une position en appelant <c>operator--</c>, accès à un élément en utilisant <c>operator[]</c> et accès à un élément en utilisant les opérations arithmétiques de pointeur.</span>
      <span class="sxs-lookup">
        <span data-stu-id="52546-103">Random access iterators support the following operations: moving forward one position by calling <c>operator++</c>, moving backward one position by calling <c>operator--</c>, accessing an element by using <c>operator[]</c>, and accessing an element by using pointer arithmetic.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="distance">
      <MemberSignature Language="C#" Value="public int distance (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 distance(class Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function distance (_Right As IRandomAccessIterator(Of TValue)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int distance(Microsoft::VisualC::StlClr::Generic::IRandomAccessIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member distance : Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;'Value&gt; -&gt; int" Usage="iRandomAccessIterator.distance _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right">
          <span data-ttu-id="52546-104">Itérateur valide qui pointe sur le même conteneur que l'itérateur actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52546-104">A valid iterator that points to the same container as the current iterator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52546-105">Détermine la distance entre l'élément sur lequel pointe l'itérateur actuel et l'élément sur lequel pointe l'itérateur donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52546-105">Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52546-106">Distance, en nombre d'éléments, entre l'élément sur lequel pointe l'itérateur actuel et l'élément sur lequel pointe <paramref name="_Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52546-106">The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to.</span>
          </span>
          <span data-ttu-id="52546-107">Ce nombre est négatif si <paramref name="_Right" /> pointe sur un élément qui se trouve avant l'élément sur lequel pointe l'itérateur actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52546-107">This number is negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="less_than">
      <MemberSignature Language="C#" Value="public bool less_than (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool less_than(class Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function less_than (_Right As IRandomAccessIterator(Of TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool less_than(Microsoft::VisualC::StlClr::Generic::IRandomAccessIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member less_than : Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;'Value&gt; -&gt; bool" Usage="iRandomAccessIterator.less_than _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right">
          <span data-ttu-id="52546-108">Itérateur valide qui pointe sur le même conteneur que l'itérateur actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52546-108">A valid iterator that points to the same container as the current iterator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52546-109">Détermine si l'itérateur actuel pointe sur un élément dans le conteneur qui précède l'élément sur lequel pointe l'itérateur donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52546-109">Determines whether the current iterator is pointing to an element in the container that precedes the element that the given iterator points to.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52546-110">
            <see langword="true" /> si l'itérateur actuel pointe sur un élément qui se trouve avant l'élément sur lequel pointe <paramref name="_Right" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52546-110">
              <see langword="true" /> if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="move">
      <MemberSignature Language="C#" Value="public int move (int _Offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 move(int32 _Offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function move (_Offset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int move(int _Offset);" />
      <MemberSignature Language="F#" Value="abstract member move : int -&gt; int" Usage="iRandomAccessIterator.move _Offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Offset">
          <span data-ttu-id="52546-111">Nombre d'éléments à parcourir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52546-111">The number of elements to traverse.</span>
          </span>
          <span data-ttu-id="52546-112">Pour déplacer l'itérateur vers l'avant, indiquez un nombre positif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52546-112">To move the iterator forward, specify a positive number.</span>
          </span>
          <span data-ttu-id="52546-113">Pour déplacer l'itérateur vers l'arrière, utilisez un nombre négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52546-113">To move the iterator backward, use a negative number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52546-114">Déplace l'itérateur en fonction du nombre d'éléments donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52546-114">Moves the iterator by the given number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52546-115">Nombre réel d'éléments parcourus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52546-115">The actual number of elements traversed.</span>
          </span>
          <span data-ttu-id="52546-116">Ce nombre différera de <paramref name="_Offset" /> si le début ou fin du conteneur est atteinte avant d'itérer le nombre voulu d'éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52546-116">This number will differ from <paramref name="_Offset" /> if the beginning or end of the container is reached before iterating the desired number of elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>