<Type Name="UIElementCollection" FullName="System.Windows.Controls.UIElementCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9d1762d150fe7a5def8d993b4647d69dcb607998" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UIElementCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UIElementCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.UIElementCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class UIElementCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class UIElementCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="93b58-101">Représente une collection ordonnée d'éléments enfants <see cref="T:System.Windows.UIElement" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93b58-101">Represents an ordered collection of <see cref="T:System.Windows.UIElement" /> child elements.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93b58-102">Le <xref:System.Windows.Controls.Panel> utilise de la classe de base un <xref:System.Windows.Controls.UIElementCollection> pour représenter la collection d’éléments enfants.</span><span class="sxs-lookup"><span data-stu-id="93b58-102">The <xref:System.Windows.Controls.Panel> base class uses a <xref:System.Windows.Controls.UIElementCollection> to represent its collection of child elements.</span></span> <span data-ttu-id="93b58-103">Méthodes et propriétés définies par le <xref:System.Windows.Controls.UIElementCollection> affectent tous les objets dérivés de <xref:System.Windows.Controls.Panel> et définir un ensemble de fonctionnalités de manipulation de commun <xref:System.Windows.Controls.Panel> des éléments enfants.</span><span class="sxs-lookup"><span data-stu-id="93b58-103">Methods and properties defined by the <xref:System.Windows.Controls.UIElementCollection> affect all objects derived from <xref:System.Windows.Controls.Panel> and define a common feature-set for the manipulation of <xref:System.Windows.Controls.Panel> child elements.</span></span>  
  
 <span data-ttu-id="93b58-104">A <xref:System.Windows.Controls.UIElementCollection> possède l’affinité de son propre contexte (classe).</span><span class="sxs-lookup"><span data-stu-id="93b58-104">A <xref:System.Windows.Controls.UIElementCollection> has affinity to its own context (class).</span></span> <span data-ttu-id="93b58-105">Vous devez accéder à la collection à partir du contexte du propriétaire <xref:System.Windows.Controls.Panel>.</span><span class="sxs-lookup"><span data-stu-id="93b58-105">You must access the collection from the context of the owning <xref:System.Windows.Controls.Panel>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93b58-106">L’exemple suivant utilise le <xref:System.Windows.Controls.UIElementCollection.Add%2A> méthode pour ajouter du contenu enfant à un parent <xref:System.Windows.Controls.StackPanel>.</span><span class="sxs-lookup"><span data-stu-id="93b58-106">The following example uses the <xref:System.Windows.Controls.UIElementCollection.Add%2A> method to add child content to a parent <xref:System.Windows.Controls.StackPanel>.</span></span> <span data-ttu-id="93b58-107">Pour cela, vous devez utiliser le <xref:System.Windows.Controls.Panel.Children%2A> propriété, qui est de type <xref:System.Windows.Controls.UIElementCollection>.</span><span class="sxs-lookup"><span data-stu-id="93b58-107">You do this by using the <xref:System.Windows.Controls.Panel.Children%2A> property, which is of type <xref:System.Windows.Controls.UIElementCollection>.</span></span>  
  
 [!code-csharp[UIElementCollection#1](~/samples/snippets/csharp/VS_Snippets_Wpf/UIElementCollection/CSharp/Pane1.xaml.cs#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Controls.Panel.Children" />
    <altmember cref="T:System.Windows.Media.VisualCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIElementCollection (System.Windows.UIElement visualParent, System.Windows.FrameworkElement logicalParent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.UIElement visualParent, class System.Windows.FrameworkElement logicalParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UIElementCollection.#ctor(System.Windows.UIElement,System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (visualParent As UIElement, logicalParent As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UIElementCollection(System::Windows::UIElement ^ visualParent, System::Windows::FrameworkElement ^ logicalParent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="visualParent" Type="System.Windows.UIElement" />
        <Parameter Name="logicalParent" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="visualParent">
          <span data-ttu-id="93b58-108">Parent des <see cref="T:System.Windows.UIElement" /> de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-108">The <see cref="T:System.Windows.UIElement" /> parent of the collection.</span>
          </span>
        </param>
        <param name="logicalParent">
          <span data-ttu-id="93b58-109">Parent logique des éléments de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-109">The logical parent of the elements in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b58-110">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-110">Initializes a new instance of the <see cref="T:System.Windows.Controls.UIElementCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UIElementCollection.Add(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (element As UIElement) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="93b58-111">
            <see cref="T:System.Windows.UIElement" /> à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-111">The <see cref="T:System.Windows.UIElement" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b58-112">Ajoute l'élément spécifié à la <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-112">Adds the specified element to the <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93b58-113">Position d'index de l'élément ajouté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-113">The index position of the added element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93b58-114">L’exemple suivant utilise le <xref:System.Windows.Controls.UIElementCollection.Add%2A> méthode pour ajouter du contenu enfant à un parent <xref:System.Windows.Controls.StackPanel>.</span><span class="sxs-lookup"><span data-stu-id="93b58-114">The following example uses the <xref:System.Windows.Controls.UIElementCollection.Add%2A> method to add child content to a parent <xref:System.Windows.Controls.StackPanel>.</span></span> <span data-ttu-id="93b58-115">Pour cela, vous devez utiliser le <xref:System.Windows.Controls.Panel.Children%2A> propriété, qui est de type <xref:System.Windows.Controls.UIElementCollection>.</span><span class="sxs-lookup"><span data-stu-id="93b58-115">You do this by using the <xref:System.Windows.Controls.Panel.Children%2A> property, which is of type <xref:System.Windows.Controls.UIElementCollection>.</span></span>  
  
 [!code-csharp[UIElementCollection#1](~/samples/snippets/csharp/VS_Snippets_Wpf/UIElementCollection/CSharp/Pane1.xaml.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Panel.Children" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public virtual int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.UIElementCollection.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Capacity { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93b58-116">Obtient ou définit le nombre d'éléments que <see cref="T:System.Windows.Controls.UIElementCollection" /> peut contenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-116">Gets or sets the number of elements that the <see cref="T:System.Windows.Controls.UIElementCollection" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93b58-117">Nombre total d'éléments que la collection peut contenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-117">The total number of elements the collection can contain.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UIElementCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93b58-118">Supprime tous les éléments d'une <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-118">Removes all elements from a <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93b58-119">L’exemple suivant utilise le <xref:System.Windows.Controls.UIElementCollection.Clear%2A> méthode pour effacer le contenu enfant d’un parent <xref:System.Windows.Controls.StackPanel>.</span><span class="sxs-lookup"><span data-stu-id="93b58-119">The following example uses the <xref:System.Windows.Controls.UIElementCollection.Clear%2A> method to clear child content from a parent <xref:System.Windows.Controls.StackPanel>.</span></span> <span data-ttu-id="93b58-120">Pour cela, vous devez utiliser le <xref:System.Windows.Controls.Panel.Children%2A> propriété, qui est de type <xref:System.Windows.Controls.UIElementCollection>.</span><span class="sxs-lookup"><span data-stu-id="93b58-120">You do this by using the <xref:System.Windows.Controls.Panel.Children%2A> property, which is of type <xref:System.Windows.Controls.UIElementCollection>.</span></span>  
  
 [!code-csharp[UIElementCollection#1](~/samples/snippets/csharp/VS_Snippets_Wpf/UIElementCollection/CSharp/Pane1.xaml.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Panel.Children" />
      </Docs>
    </Member>
    <Member MemberName="ClearLogicalParent">
      <MemberSignature Language="C#" Value="protected void ClearLogicalParent (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearLogicalParent(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UIElementCollection.ClearLogicalParent(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearLogicalParent (element As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearLogicalParent(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="93b58-121">
            <see cref="T:System.Windows.UIElement" /> dont le parent logique est effacé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-121">The <see cref="T:System.Windows.UIElement" /> whose logical parent is being cleared.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b58-122">Efface le parent logique d'un élément lorsque l'élément quitte une <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-122">Clears the logical parent of an element when the element leaves a <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UIElementCollection.Contains(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (element As UIElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="93b58-123">Élément à trouver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-123">The element to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b58-124">Détermine si un élément spécifié est dans la <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-124">Determines whether a specified element is in the <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93b58-125">
            <see langword="true" /> si le <see cref="T:System.Windows.UIElement" /> se trouve dans la collection spécifiée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-125">
              <see langword="true" /> if the specified <see cref="T:System.Windows.UIElement" /> is found in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93b58-126">L’exemple suivant utilise le <xref:System.Windows.Controls.UIElementCollection.Contains%2A> pour déterminer si un spécifique <xref:System.Windows.UIElement> existe dans un <xref:System.Windows.Controls.UIElementCollection>.</span><span class="sxs-lookup"><span data-stu-id="93b58-126">The following example uses the <xref:System.Windows.Controls.UIElementCollection.Contains%2A> method to determine if a specific <xref:System.Windows.UIElement> exists within a <xref:System.Windows.Controls.UIElementCollection>.</span></span>  
  
 [!code-csharp[UIElementCollection#10](~/samples/snippets/csharp/VS_Snippets_Wpf/UIElementCollection/CSharp/Pane1.xaml.cs#10)]
 [!code-vb[UIElementCollection#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIElementCollection/VisualBasic/Pane1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93b58-127">Copie un <see cref="T:System.Windows.UIElement" /> d'une <see cref="T:System.Windows.Controls.UIElementCollection" /> à un tableau, en débutant à une position d'index spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-127">Copies a <see cref="T:System.Windows.UIElement" /> from a <see cref="T:System.Windows.Controls.UIElementCollection" /> to an array, starting at a specified index position.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UIElementCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="93b58-128">Tableau dans lequel la collection est copiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-128">An array into which the collection is copied.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="93b58-129">Position d'index de l'élément où la copie commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-129">The index position of the element where copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b58-130">Copie un <see cref="T:System.Windows.UIElement" /> d'une <see cref="T:System.Windows.Controls.UIElementCollection" /> à un tableau, en débutant à une position d'index spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-130">Copies a <see cref="T:System.Windows.UIElement" /> from a <see cref="T:System.Windows.Controls.UIElementCollection" /> to an array, starting at a specified index position.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (System.Windows.UIElement[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Windows.UIElement[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UIElementCollection.CopyTo(System.Windows.UIElement[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (array As UIElement(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Windows::UIElement ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.UIElement[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="93b58-131">Tableau d'objets <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-131">An array of <see cref="T:System.Windows.UIElement" /> objects.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="93b58-132">Position d'index de l'élément où la copie commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-132">The index position of the element where copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b58-133">Copie un <see cref="T:System.Windows.UIElement" /> d'une <see cref="T:System.Windows.Controls.UIElementCollection" /> à un tableau, en débutant à une position d'index spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-133">Copies a <see cref="T:System.Windows.UIElement" /> from a <see cref="T:System.Windows.Controls.UIElementCollection" /> to an array, starting at a specified index position.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.UIElementCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93b58-134">Obtient le nombre réel d'éléments dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-134">Gets the actual number of elements in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93b58-135">Nombre réel d'éléments dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-135">The actual number of elements in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93b58-136">L’exemple suivant utilise le <xref:System.Windows.Controls.UIElementCollection.Count%2A> propriété pour compter le nombre d’éléments enfants dans un <xref:System.Windows.Controls.UIElementCollection>.</span><span class="sxs-lookup"><span data-stu-id="93b58-136">The following example uses the <xref:System.Windows.Controls.UIElementCollection.Count%2A> property to count the number of child elements in a <xref:System.Windows.Controls.UIElementCollection>.</span></span>  
  
 [!code-csharp[UIElementCollection#12](~/samples/snippets/csharp/VS_Snippets_Wpf/UIElementCollection/CSharp/Pane1.xaml.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UIElementCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93b58-137">Retourne un énumérateur qui peut itérer la <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-137">Returns an enumerator that can iterate the <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93b58-138">
            <see cref="T:System.Collections.IEnumerator" /> qui peut répertorier les membres de cette collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-138">An <see cref="T:System.Collections.IEnumerator" /> that can list the members of this collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UIElementCollection.IndexOf(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (element As UIElement) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="93b58-139">L'élément dont la position d'index est requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-139">The element whose index position is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b58-140">Retourne la position d'index d'un élément spécifié dans une <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-140">Returns the index position of a specified element in a <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93b58-141">Position d'index d'un élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-141">The index position of the element.</span>
          </span>
          <span data-ttu-id="93b58-142">-1 si l'élément ne se trouve pas dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-142">-1 if the element is not in the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93b58-143">L’exemple suivant recherche la position d’index d’un <xref:System.Windows.UIElement> au sein d’un <xref:System.Windows.Controls.UIElementCollection>.</span><span class="sxs-lookup"><span data-stu-id="93b58-143">The following example finds the index position of a <xref:System.Windows.UIElement> within a <xref:System.Windows.Controls.UIElementCollection>.</span></span>  
  
 [!code-xaml[UIElementCollectionIndexOf#1](~/samples/snippets/csharp/VS_Snippets_Wpf/UIElementCollectionIndexOf/CSharp/Default.xaml#1)]  
  
 <span data-ttu-id="93b58-144">...</span><span class="sxs-lookup"><span data-stu-id="93b58-144">...</span></span>  
  
 [!code-csharp[UIElementCollectionIndexOf#2](~/samples/snippets/csharp/VS_Snippets_Wpf/UIElementCollectionIndexOf/CSharp/default.xaml.cs#2)]
 [!code-vb[UIElementCollectionIndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIElementCollectionIndexOf/VisualBasic/default.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UIElementCollection.Insert(System.Int32,System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, element As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="93b58-145">Position d'index où vous souhaitez insérer l'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-145">The index position where you want to insert the element.</span>
          </span>
        </param>
        <param name="element">
          <span data-ttu-id="93b58-146">Élément à insérer dans la <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-146">The element to insert into the <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b58-147">Insère un élément dans une <see cref="T:System.Windows.Controls.UIElementCollection" /> à la position d'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-147">Inserts an element into a <see cref="T:System.Windows.Controls.UIElementCollection" /> at the specified index position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93b58-148">L’exemple suivant utilise la <xref:System.Windows.Controls.UIElementCollection.Insert%2A> méthode pour insérer du contenu enfant à une position d’index spécifiée.</span><span class="sxs-lookup"><span data-stu-id="93b58-148">The following example uses the <xref:System.Windows.Controls.UIElementCollection.Insert%2A> method to insert child content at a specified index position.</span></span>  
  
 [!code-csharp[UIElementCollection#5](~/samples/snippets/csharp/VS_Snippets_Wpf/UIElementCollection/CSharp/Pane1.xaml.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.UIElementCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93b58-149">Obtient une valeur qui indique si l'accès à l'interface de la <see cref="T:System.Collections.ICollection" /> est synchronisée (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-149">Gets a value that indicates whether access to the <see cref="T:System.Collections.ICollection" /> interface is synchronized (thread-safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93b58-150">
            <see langword="true" /> si l'accès à la collection est synchronisé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-150">
              <see langword="true" /> if access to the collection is synchronized; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.UIElement this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.UIElementCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::UIElement ^ default[int] { System::Windows::UIElement ^ get(int index); void set(int index, System::Windows::UIElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="93b58-151">Position d'index du <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-151">The index position of the <see cref="T:System.Windows.UIElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b58-152">Obtient ou définit le <see cref="T:System.Windows.UIElement" /> stocké à la position d'index de base zéro de la <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-152">Gets or sets the <see cref="T:System.Windows.UIElement" /> stored at the zero-based index position of the <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93b58-153">
            <see cref="T:System.Windows.UIElement" /> à la position de <paramref name="index" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-153">A <see cref="T:System.Windows.UIElement" /> at the specified <paramref name="index" /> position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93b58-154">L’exemple suivant utilise le <xref:System.Windows.Controls.UIElementCollection.Item%2A> propriété pour identifier l’élément enfant à la position d’index spécifiée.</span><span class="sxs-lookup"><span data-stu-id="93b58-154">The following example uses the <xref:System.Windows.Controls.UIElementCollection.Item%2A> property to identify the child element at a specified index position.</span></span>  
  
 [!code-csharp[UIElementCollection#11](~/samples/snippets/csharp/VS_Snippets_Wpf/UIElementCollection/CSharp/Pane1.xaml.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UIElementCollection.Remove(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (element As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="93b58-155">Élément à supprimer de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-155">The element to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b58-156">Supprime l'élément spécifié d'un <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-156">Removes the specified element from a <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UIElementCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="93b58-157">L'index du <see cref="T:System.Windows.UIElement" /> que vous souhaitez supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-157">The index of the <see cref="T:System.Windows.UIElement" /> that you want to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b58-158">Supprime <see cref="T:System.Windows.UIElement" /> au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-158">Removes the <see cref="T:System.Windows.UIElement" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93b58-159">L’exemple suivant utilise la <xref:System.Windows.Controls.UIElementCollection.RemoveAt%2A> méthode pour supprimer le contenu enfant à une position d’index spécifiée.</span><span class="sxs-lookup"><span data-stu-id="93b58-159">The following example uses the <xref:System.Windows.Controls.UIElementCollection.RemoveAt%2A> method to remove child content at a specified index position.</span></span>  
  
 [!code-csharp[UIElementCollection#7](~/samples/snippets/csharp/VS_Snippets_Wpf/UIElementCollection/CSharp/Pane1.xaml.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public virtual void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UIElementCollection.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveRange(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="93b58-160">Position d'index de l'élément où la suppression commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-160">The index position of the element where removal begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="93b58-161">Nombre d'éléments à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-161">The number of elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b58-162">Supprime une plage d'éléments de la <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-162">Removes a range of elements from a <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLogicalParent">
      <MemberSignature Language="C#" Value="protected void SetLogicalParent (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetLogicalParent(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UIElementCollection.SetLogicalParent(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetLogicalParent (element As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetLogicalParent(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="93b58-163">Le <see cref="T:System.Windows.UIElement" /> dont le parent logique est défini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-163">The <see cref="T:System.Windows.UIElement" /> whose logical parent is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b58-164">Définit le parent logique d'un élément dans une <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-164">Sets the logical parent of an element in a <see cref="T:System.Windows.Controls.UIElementCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.UIElementCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93b58-165">Obtient un objet qui peut être utilisé pour synchroniser l'accès à une interface de <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-165">Gets an object that you can use to synchronize access to the <see cref="T:System.Collections.ICollection" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93b58-166">
            <see cref="T:System.Object" /> que vous pouvez utiliser pour synchroniser l'accès à l'interface de <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-166">
              <see cref="T:System.Object" /> that you can use to synchronize access to the <see cref="T:System.Collections.ICollection" /> interface.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93b58-167">Objet à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-167">The object to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b58-168">Ce type ou membre prend en charge l’infrastructure [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] et n’est pas destiné à être utilisé directement à partir de votre code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-168">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
          <span data-ttu-id="93b58-169">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Add(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-169">For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93b58-170">Position à laquelle le nouvel élément est inséré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-170">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.UIElementCollection.Add(System.Windows.UIElement)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93b58-171">Objet à localiser dans la liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-171">The object to locate in the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b58-172">Ce type ou membre prend en charge l’infrastructure [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] et n’est pas destiné à être utilisé directement à partir de votre code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-172">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
          <span data-ttu-id="93b58-173">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-173">For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93b58-174">
            <see langword="true" /> si l'objet se trouve dans la liste ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-174">
              <see langword="true" /> if the object was found in the list; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.UIElementCollection.Contains(System.Windows.UIElement)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93b58-175">Objet à localiser dans la liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-175">The object to locate in the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b58-176">Ce type ou membre prend en charge l’infrastructure [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] et n’est pas destiné à être utilisé directement à partir de votre code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-176">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
          <span data-ttu-id="93b58-177">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-177">For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93b58-178">Index de <paramref name="value" /> s'il figure dans la liste ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-178">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.UIElementCollection.IndexOf(System.Windows.UIElement)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="93b58-179">Index de base zéro auquel la <c>valeur</c> doit être insérée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-179">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="93b58-180">Objet à insérer dans la liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-180">The object to insert to the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b58-181">Ce type ou membre prend en charge l’infrastructure [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] et n’est pas destiné à être utilisé directement à partir de votre code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-181">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
          <span data-ttu-id="93b58-182">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-182">For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.UIElementCollection.Insert(System.Int32,System.Windows.UIElement)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93b58-183">Ce type ou membre prend en charge l’infrastructure [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] et n’est pas destiné à être utilisé directement à partir de votre code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-183">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
          <span data-ttu-id="93b58-184">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-184">For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93b58-185">
            <see langword="true" /> si la liste est de taille fixe ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-185">
              <see langword="true" /> if the list has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93b58-186">Ce type ou membre prend en charge l’infrastructure [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] et n’est pas destiné à être utilisé directement à partir de votre code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-186">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
          <span data-ttu-id="93b58-187">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsReadOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-187">For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93b58-188">
            <see langword="true" /> si la liste est en lecture seule ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-188">
              <see langword="true" /> if the list is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.UIElementCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="93b58-189">Index de base zéro de l'élément à obtenir ou à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-189">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b58-190">Ce type ou membre prend en charge l’infrastructure [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] et n’est pas destiné à être utilisé directement à partir de votre code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-190">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
          <span data-ttu-id="93b58-191">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-191">For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93b58-192">Élément au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-192">The element at the specified index.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93b58-193">Objet à supprimer de la liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-193">The object to remove from the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93b58-194">Ce type ou membre prend en charge l’infrastructure [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] et n’est pas destiné à être utilisé directement à partir de votre code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-194">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
          <span data-ttu-id="93b58-195">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93b58-195">For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.UIElementCollection.Remove(System.Windows.UIElement)" />
      </Docs>
    </Member>
  </Members>
</Type>