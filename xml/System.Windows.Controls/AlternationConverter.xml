<Type Name="AlternationConverter" FullName="System.Windows.Controls.AlternationConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8058bf9a0c6acafa49784b28cae631a34023ef84" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36367952" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AlternationConverter : System.Windows.Data.IValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AlternationConverter extends System.Object implements class System.Windows.Data.IValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.AlternationConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class AlternationConverter&#xA;Implements IValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class AlternationConverter : System::Windows::Data::IValueConverter" />
  <TypeSignature Language="F#" Value="type AlternationConverter = class&#xA;    interface IValueConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Data.IValueConverter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Values")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="82009-101">Convertit un entier vers et à partir d'un objet en appliquant l'entier en tant qu'index à une liste d'objets.</span>
      <span class="sxs-lookup">
        <span data-stu-id="82009-101">Converts an integer to and from an object by applying the integer as an index to a list of objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82009-102">Vous pouvez utiliser la <xref:System.Windows.Controls.AlternationConverter> pour lier une propriété à des valeurs de remplacement.</span><span class="sxs-lookup"><span data-stu-id="82009-102">You can use the <xref:System.Windows.Controls.AlternationConverter> to bind a property to alternating values.</span></span> <span data-ttu-id="82009-103">Par exemple, si vous souhaitez que les éléments un <xref:System.Windows.Controls.ListBox> pour alterner les arrière-plans bleus bleus et léger, vous procédez comme suit :</span><span class="sxs-lookup"><span data-stu-id="82009-103">For example, if you want items in a <xref:System.Windows.Controls.ListBox> to have alternating blue and light blue backgrounds, you do the following:</span></span>  
  
-   <span data-ttu-id="82009-104">Créer un <xref:System.Windows.Controls.AlternationConverter> et ajoutez un bleu <xref:System.Windows.Media.SolidColorBrush> et un bleu clair <xref:System.Windows.Media.SolidColorBrush> à son <xref:System.Windows.Controls.AlternationConverter.Values%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="82009-104">Create an <xref:System.Windows.Controls.AlternationConverter> and add a blue <xref:System.Windows.Media.SolidColorBrush> and a light blue <xref:System.Windows.Media.SolidColorBrush> to its <xref:System.Windows.Controls.AlternationConverter.Values%2A> property.</span></span>  
  
-   <span data-ttu-id="82009-105">Dans un <xref:System.Windows.Style> pour <xref:System.Windows.Controls.ListBoxItem>, lier le <xref:System.Windows.Controls.Control.Background%2A> propriété <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> et assignez le convertisseur que vous avez créé à le <xref:System.Windows.Data.Binding.Converter%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="82009-105">In a <xref:System.Windows.Style> for <xref:System.Windows.Controls.ListBoxItem>, bind the <xref:System.Windows.Controls.Control.Background%2A> property to <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> and assign the converter you created to the <xref:System.Windows.Data.Binding.Converter%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82009-106">L’exemple suivant crée un <xref:System.Windows.Controls.ListBox> et utilise deux <xref:System.Windows.Controls.AlternationConverter> objets à l’autre le <xref:System.Windows.Controls.Control.Background%2A> et <xref:System.Windows.Controls.Control.FontStyle%2A> des éléments.</span><span class="sxs-lookup"><span data-stu-id="82009-106">The following example creates a <xref:System.Windows.Controls.ListBox> and uses two <xref:System.Windows.Controls.AlternationConverter> objects to alternate the <xref:System.Windows.Controls.Control.Background%2A> and <xref:System.Windows.Controls.Control.FontStyle%2A> of the items.</span></span>  
  
 [!code-xaml[AlternationIndexSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AlternationConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.AlternationConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AlternationConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="82009-107">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Controls.AlternationConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82009-107">Initializes a new instance of the <see cref="T:System.Windows.Controls.AlternationConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object o, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (o As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Convert(System::Object ^ o, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj&#xA;override this.Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="alternationConverter.Convert (o, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="82009-108">Entier à utiliser pour rechercher un objet dans la propriété <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82009-108">The integer to use to find an object in the <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> property.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="82009-109">Type de la propriété de cible de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82009-109">The type of the binding target property.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="82009-110">Paramètre de convertisseur à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82009-110">The converter parameter to use.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="82009-111">Culture à utiliser dans le convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82009-111">The culture to use in the converter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82009-112">Convertit un entier en objet dans la liste <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82009-112">Converts an integer to an object in the <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82009-113">Objet en position de <paramref name="o" /> modulo le nombre d'éléments dans <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82009-113">The object that is in the position of <paramref name="o" /> modulo the number of items in <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object ConvertBack (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertBack(object o, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (o As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertBack(System::Object ^ o, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj&#xA;override this.ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="alternationConverter.ConvertBack (o, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="82009-114">Objet à rechercher dans la propriété <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82009-114">The object to find in the <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> property.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="82009-115">Type de la propriété de cible de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82009-115">The type of the binding target property.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="82009-116">Paramètre de convertisseur à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82009-116">The converter parameter to use.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="82009-117">Culture à utiliser dans le convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82009-117">The culture to use in the converter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82009-118">Convertit un objet dans la liste <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> en entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82009-118">Converts an object in the <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> list to an integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82009-119">Index de <paramref name="o" /> s'il figure dans <see cref="P:System.Windows.Controls.AlternationConverter.Values" />, ou -1 si o n'existe pas dans <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82009-119">The index of <paramref name="o" /> if it is in <see cref="P:System.Windows.Controls.AlternationConverter.Values" />, or –1 if o does not exist in <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.IList Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Values" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.AlternationConverter.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Values { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.IList" Usage="System.Windows.Controls.AlternationConverter.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82009-120">Obtient une liste d'objets retournée par <see cref="T:System.Windows.Controls.AlternationConverter" /> lorsqu'un entier est passé à la méthode <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82009-120">Gets a list of objects that the <see cref="T:System.Windows.Controls.AlternationConverter" /> returns when an integer is passed to the <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82009-121">Liste d'objets retournée par <see cref="T:System.Windows.Controls.AlternationConverter" /> lorsqu'un entier est passé à la méthode <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82009-121">A list of objects that the <see cref="T:System.Windows.Controls.AlternationConverter" /> returns when an integer is passed to the <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82009-122">Lorsque vous utilisez la <xref:System.Windows.Controls.AlternationConverter> pour lier une propriété à des valeurs de remplacement le <xref:System.Windows.Controls.AlternationConverter.Values%2A> propriété contient les objets qui sont affectés à la propriété.</span><span class="sxs-lookup"><span data-stu-id="82009-122">When you use the <xref:System.Windows.Controls.AlternationConverter> to bind a property to alternating values, the <xref:System.Windows.Controls.AlternationConverter.Values%2A> property contains the objects that are assigned to the property.</span></span>  <span data-ttu-id="82009-123">Par exemple, si vous souhaitez que les éléments un <xref:System.Windows.Controls.ListBox> pour alterner bleus et léger arrière-plans bleues, vous ajoutez un bleu <xref:System.Windows.Media.SolidColorBrush> et un bleu clair <xref:System.Windows.Media.SolidColorBrush> à <xref:System.Windows.Controls.AlternationConverter.Values%2A>.</span><span class="sxs-lookup"><span data-stu-id="82009-123">For example, if you want items in a <xref:System.Windows.Controls.ListBox> to have alternating blue and light blue backgrounds, you add a blue <xref:System.Windows.Media.SolidColorBrush> and a light blue <xref:System.Windows.Media.SolidColorBrush> to <xref:System.Windows.Controls.AlternationConverter.Values%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82009-124">L’exemple suivant crée un <xref:System.Windows.Controls.ListBox> et utilise deux <xref:System.Windows.Controls.AlternationConverter> objets à l’autre le <xref:System.Windows.Controls.Control.Background%2A> et <xref:System.Windows.Controls.Control.FontStyle%2A> des éléments.</span><span class="sxs-lookup"><span data-stu-id="82009-124">The following example creates a <xref:System.Windows.Controls.ListBox> and uses two <xref:System.Windows.Controls.AlternationConverter> objects to alternate the <xref:System.Windows.Controls.Control.Background%2A> and <xref:System.Windows.Controls.Control.FontStyle%2A> of the items.</span></span>  
  
 [!code-xaml[AlternationIndexSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>