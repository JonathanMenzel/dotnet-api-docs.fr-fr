<Type Name="ComboBox" FullName="System.Windows.Controls.ComboBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12e9d0b0e68d1f18a7262db439870c0b62e99094" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30620583" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComboBox : System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ComboBox extends System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ComboBox" />
  <TypeSignature Language="VB.NET" Value="Public Class ComboBox&#xA;Inherits Selector" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComboBox : System::Windows::Controls::Primitives::Selector" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.Selector</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.ComboBox)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.ComboBoxItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_EditableTextBox", Type=typeof(System.Windows.Controls.TextBox))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_Popup", Type=typeof(System.Windows.Controls.Primitives.Popup))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente un contrôle de sélection doté d’une liste déroulante qui peut être affichée ou masquée en cliquant sur la flèche située sur le contrôle.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Controls.ComboBox> permet à l’utilisateur de sélectionner un élément dans la liste déroulante ou, éventuellement, d’entrer du texte dans la zone de texte du contrôle. <xref:System.Windows.Controls.ComboBox> est un <xref:System.Windows.Controls.ItemsControl>, ce qui signifie qu’il peut contenir une collection d’objets de tout type (par exemple, chaîne, image ou panneau). Pour plus d'informations, consultez la classe <xref:System.Windows.Controls.ItemsControl>.  
  
 Le <xref:System.Windows.Controls.ComboBox.IsEditable%2A> et <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> propriétés spécifient comment le <xref:System.Windows.Controls.ComboBox> se comporte quand l’utilisateur effectue l’une des opérations suivantes :  
  
-   Entre une chaîne pour sélectionner un élément dans le <xref:System.Windows.Controls.ComboBox>.  
  
-   Entre une chaîne qui ne correspond pas à un élément dans le <xref:System.Windows.Controls.ComboBox>.  
  
-   Sélectionne une partie de la chaîne qui se trouve dans la zone de texte.  
  
-   Copie ou colle une valeur dans la zone de texte.  
  
 Le tableau suivant décrit les actions de l’utilisateur et ne peut pas prendre, selon les valeurs des <xref:System.Windows.Controls.ComboBox.IsEditable%2A> et <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>.  
  
||<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> a la valeur `true`.|<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> a la valeur `false`.|  
|-|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.Windows.Controls.ComboBox.IsEditable%2A> a la valeur `true`.|-Impossible de sélectionner un élément dans le <xref:System.Windows.Controls.ComboBox> en entrant une chaîne.<br />-Impossible d’entrer une chaîne qui ne correspond pas à un élément dans le <xref:System.Windows.Controls.ComboBox>.<br />-Permet de partie de la chaîne dans le <xref:System.Windows.Controls.ComboBox> zone de texte.<br />-Peut copier la chaîne dans le <xref:System.Windows.Controls.ComboBox> texte zone, mais ne pouvez pas coller une chaîne dans le <xref:System.Windows.Controls.ComboBox> zone de texte.|-Sélectionner un élément dans le <xref:System.Windows.Controls.ComboBox> en entrant une chaîne.<br />-Pouvez entrer une chaîne qui ne correspond pas à un élément dans le <xref:System.Windows.Controls.ComboBox>.<br />-Permet de partie de la chaîne dans le <xref:System.Windows.Controls.ComboBox> zone de texte.<br />-Copier ou coller la chaîne dans le <xref:System.Windows.Controls.ComboBox> zone de texte.|  
|<xref:System.Windows.Controls.ComboBox.IsEditable%2A> a la valeur `false`.|-Sélectionner un élément dans le <xref:System.Windows.Controls.ComboBox> en entrant une chaîne.<br />-Impossible d’entrer une chaîne qui ne correspond pas à un élément dans le <xref:System.Windows.Controls.ComboBox>.<br />-Ne peut pas sélectionner une partie de la chaîne dans le <xref:System.Windows.Controls.ComboBox>.<br />-Impossible de copier ou de coller la chaîne dans le <xref:System.Windows.Controls.ComboBox>.|-Sélectionner un élément dans le <xref:System.Windows.Controls.ComboBox> en entrant une chaîne.<br />-Impossible d’entrer une chaîne qui ne correspond pas à un élément dans le <xref:System.Windows.Controls.ComboBox>.<br />-Ne peut pas sélectionner une partie de la chaîne dans le <xref:System.Windows.Controls.ComboBox>.<br />-Impossible de copier ou de coller la chaîne dans le <xref:System.Windows.Controls.ComboBox>.|  
  
 Le <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> propriété a un effet uniquement si <xref:System.Windows.Controls.ComboBox.IsEditable%2A> est `true`.  
  
 Le <xref:System.Windows.Controls.ComboBox> est un <xref:System.Windows.Controls.ItemsControl>, afin d’afficher le contenu autre que de simples chaînes.  Par exemple, vous pouvez créer un <xref:System.Windows.Controls.ComboBox> qui contient une liste d’images. Lorsque vous avez contenu autre que des chaînes dans le <xref:System.Windows.Controls.ComboBox>, une chaîne absurde peut apparaître dans le <xref:System.Windows.Controls.ComboBox> lorsque la liste déroulante est masquée. Pour afficher une chaîne dans le <xref:System.Windows.Controls.ComboBox> lorsqu’elle contient des éléments autres que des chaînes, utilisez la <xref:System.Windows.Controls.TextSearch.Text%2A?displayProperty=nameWithType> ou <xref:System.Windows.Controls.TextSearch.TextPath%2A?displayProperty=nameWithType> propriété jointe.  
  
## <a name="customizing-the-combobox-control"></a>Personnalisation du contrôle ComboBox  
 Pour appliquer les mêmes paramètres de propriété à plusieurs <xref:System.Windows.Controls.ComboBox> contrôles, utilisez le <xref:System.Windows.FrameworkElement.Style%2A> propriété. Vous pouvez modifier la valeur par défaut <xref:System.Windows.Controls.ControlTemplate> pour donner une apparence unique au contrôle. Pour plus d’informations sur la création d’un <xref:System.Windows.Controls.ControlTemplate>, consultez [personnalisation de l’apparence d’un contrôle existant en créant un ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  Pour afficher les parties et les États qui sont spécifiques à la <xref:System.Windows.Controls.ComboBox>, consultez [ComboBox Styles et modèles](~/docs/framework/wpf/controls/combobox-styles-and-templates.md).  
  
 Propriétés de dépendance pour ce contrôle peuvent être définies par le style par défaut.  Si une propriété est définie par un style par défaut, la propriété peut changer sa valeur par défaut lorsque le contrôle s’affiche dans l’application. Le style par défaut est déterminé par le thème de bureau est utilisé lors de l’application est en cours d’exécution.  Pour plus d’informations, consultez [par défaut des thèmes WPF](http://go.microsoft.com/fwlink/?LinkID=158252).  
  
> [!NOTE]
>  Définition d’une propriété visuelle uniquement aura un effet si ces propriétés sont toutes deux présentes dans <xref:System.Windows.Controls.ComboBox> contrôle du modèle par défaut et est définie à l’aide d’un. Vous trouverez une liste de propriétés visual dans la section « Modification le Visual Structure d’un contrôle » [personnalisation de l’apparence d’un contrôle existant en créant un ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.Controls.ComboBox>. L’exemple remplit la <xref:System.Windows.Controls.ComboBox> en liant la <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> propriété à un objet de collection de type `VacationSpots`. L’exemple crée également un <xref:System.Windows.Controls.TextBlock> qui affiche l’élément sélectionné de la <xref:System.Windows.Controls.ComboBox>.  
  
 [!code-xaml[ComboBoxItems#ComboBoxClass](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#comboboxclass)]  
  
 L’exemple suivant définit l’objet de collection qui les <xref:System.Windows.Controls.ComboBox> dans l’exemple précédent est liée à.  
  
 [!code-csharp[ComboBoxItems#Data](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml.cs#data)]
 [!code-vb[ComboBoxItems#Data](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ComboBoxItems/VIsualBasic/Window1.xaml.vb#data)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ComboBoxItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComboBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComboBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Controls.ComboBox" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownClosed">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ComboBox.DropDownClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDownClosed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDownClosed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque la liste déroulante de la zone de liste déroulante se ferme.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment assigner des gestionnaires d’événements et comment gérer les <xref:System.Windows.Controls.ComboBox.DropDownOpened> et <xref:System.Windows.Controls.ComboBox.DropDownClosed> les événements.  
  
 [!code-xaml[ComboBoxSimple#ComboBoxEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml#comboboxevents1)]  
  
 [!code-csharp[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml.cs#comboboxevents2)]
 [!code-vb[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ComboBoxSimple/VisualBasic/Pane1.xaml.vb#comboboxevents2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownOpened">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ComboBox.DropDownOpened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDownOpened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDownOpened;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque la liste déroulante de la zone de liste déroulante s'ouvre.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment assigner des gestionnaires d’événements et gérer les <xref:System.Windows.Controls.ComboBox.DropDownOpened> et <xref:System.Windows.Controls.ComboBox.DropDownClosed> les événements.  
  
 [!code-xaml[ComboBoxSimple#ComboBoxEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml#comboboxevents1)]  
  
 [!code-csharp[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml.cs#comboboxevents2)]
 [!code-vb[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ComboBoxSimple/VisualBasic/Pane1.xaml.vb#comboboxevents2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée ou identifie l'élément (element) utilisé pour afficher l'élément (item) spécifié.</summary>
        <returns>Élément (element) utilisé pour afficher l'élément (item) spécifié.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si une zone de liste déroulante prend en charge le défilement.</summary>
        <value>
          <see langword="true" /> si le <see cref="T:System.Windows.Controls.ComboBox" /> prend en charge le défilement ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le contrôle a un <xref:System.Windows.Controls.ScrollViewer> dans son style et a un comportement de défilement clavier personnalisé <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> doit retourner `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEffectiveKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal override bool HasEffectiveKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEffectiveKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.HasEffectiveKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HasEffectiveKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasEffectiveKeyboardFocus { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Récupère une valeur qui indique si le <see cref="T:System.Windows.Controls.ComboBox" /> avait le focus.</summary>
        <value>
          <see langword="true" /> si le <see cref="T:System.Windows.Controls.ComboBox" /> a le focus ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpen">
      <MemberSignature Language="C#" Value="public bool IsDropDownOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDropDownOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsDropDownOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDropDownOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDropDownOpen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si la partie déroulante d’une zone de liste déroulante est actuellement ouverte.</summary>
        <value>
          <see langword="true" /> si la partie déroulante est ouverte ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsDropDownOpen"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Controls.ComboBox.IsDropDownOpenProperty>|  
|La valeur des propriétés de métadonnées `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> propriété pour créer une zone de liste déroulante avec le contrôle de liste déroulante ouverte lors de la zone de liste déroulante est lancée.  
  
 [!code-xaml[ComboBoxStyles#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxStyles/CS/app.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDropDownOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDropDownOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.IsDropDownOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDropDownOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDropDownOpenProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditable">
      <MemberSignature Language="C#" Value="public bool IsEditable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsEditable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEditable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui active ou désactive la modification du texte dans la zone de texte du <see cref="T:System.Windows.Controls.ComboBox" />.</summary>
        <value>
          <see langword="true" /> si le <see cref="T:System.Windows.Controls.ComboBox" /> peut être modifié ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Controls.ComboBox.IsEditable%2A> et <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> propriétés spécifient comment le <xref:System.Windows.Controls.ComboBox> se comporte quand l’utilisateur effectue l’une des opérations suivantes :  
  
-   Entre une chaîne pour sélectionner un élément dans le <xref:System.Windows.Controls.ComboBox>.  
  
-   Entre une chaîne qui ne correspond pas à un élément dans le <xref:System.Windows.Controls.ComboBox>.  
  
-   Sélectionne une partie de la chaîne qui se trouve dans la zone de texte.  
  
-   Copie ou colle une valeur dans la zone de texte.  
  
 Le tableau suivant décrit les actions de l’utilisateur et ne peut pas prendre, selon les valeurs des <xref:System.Windows.Controls.ComboBox.IsEditable%2A> et <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>.  
  
||<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> a la valeur `true`.|<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> a la valeur `false`.|  
|-|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.Windows.Controls.ComboBox.IsEditable%2A> a la valeur `true`.|-Impossible de sélectionner un élément dans le <xref:System.Windows.Controls.ComboBox> en entrant une chaîne.<br />-Impossible d’entrer une chaîne qui ne correspond pas à un élément dans le <xref:System.Windows.Controls.ComboBox>.<br />-Permet de partie de la chaîne dans le <xref:System.Windows.Controls.ComboBox> zone de texte.<br />-Peut copier la chaîne dans le <xref:System.Windows.Controls.ComboBox> texte zone, mais ne pouvez pas coller une chaîne dans le <xref:System.Windows.Controls.ComboBox> zone de texte.|-Sélectionner un élément dans le <xref:System.Windows.Controls.ComboBox> en entrant une chaîne.<br />-Pouvez entrer une chaîne qui ne correspond pas à un élément dans le <xref:System.Windows.Controls.ComboBox>.<br />-Permet de partie de la chaîne dans le <xref:System.Windows.Controls.ComboBox> zone de texte.<br />-Copier ou coller la chaîne dans le <xref:System.Windows.Controls.ComboBox> zone de texte.|  
|<xref:System.Windows.Controls.ComboBox.IsEditable%2A> a la valeur `false`.|-Sélectionner un élément dans le <xref:System.Windows.Controls.ComboBox> en entrant une chaîne.<br />-Impossible d’entrer une chaîne qui ne correspond pas à un élément dans le <xref:System.Windows.Controls.ComboBox>.<br />-Ne peut pas sélectionner une partie de la chaîne dans le <xref:System.Windows.Controls.ComboBox>.<br />-Impossible de copier ou de coller la chaîne dans le <xref:System.Windows.Controls.ComboBox>.|-Sélectionner un élément dans le <xref:System.Windows.Controls.ComboBox> en entrant une chaîne.<br />-Impossible d’entrer une chaîne qui ne correspond pas à un élément dans le <xref:System.Windows.Controls.ComboBox>.<br />-Ne peut pas sélectionner une partie de la chaîne dans le <xref:System.Windows.Controls.ComboBox>.<br />-Impossible de copier ou de coller la chaîne dans le <xref:System.Windows.Controls.ComboBox>.|  
  
 Lorsque <xref:System.Windows.Controls.ComboBox.IsEditable%2A> est égal à `false`, le <xref:System.Windows.Controls.ComboBox> utilise un <xref:System.Windows.Controls.ContentPresenter> à afficher actuellement sélectionné élément ; lorsque <xref:System.Windows.Controls.ComboBox.IsEditable%2A> est égal à `true`, un <xref:System.Windows.Controls.TextBox> est utilisé à la place à cet effet. Notez qu’un <xref:System.Windows.Controls.TextBox> affiche uniquement le texte brut et qui un <xref:System.Windows.Controls.ComboBoxItem> peut inclure du contenu non texte brut, tels que des images.  
  
<a name="dependencyPropertyInfo_IsEditable"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Controls.ComboBox.IsEditableProperty>|  
|La valeur des propriétés de métadonnées `true`|Aucun.|  
  
   
  
## Examples  
 Les exemples suivants créent <xref:System.Windows.Controls.ComboBox> les contrôles qui contiennent des images en tant qu’éléments au lieu de texte. Si le <xref:System.Windows.Controls.ComboBox.IsEditable%2A> est définie sur `true`, le <xref:System.Windows.Controls.TextBox> affiche la valeur retournée par l’image <xref:System.Object.ToString%2A> (méthode). Pour éviter un <xref:System.Windows.Controls.TextBox> contenant du texte inattendu, utilisez le <xref:System.Windows.Controls.TextSearch.Text%2A?displayProperty=nameWithType> et <xref:System.Windows.Controls.TextSearch.TextPath%2A?displayProperty=nameWithType> propriétés pour affecter le texte à afficher.  
  
 [!code-xaml[ComboBoxProps_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#1)]  
  
 [!code-xaml[ComboBoxProps_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#2)]  
  
 Une autre solution consiste à utiliser le <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A> propriété. Le contrôle de liste déroulante de la <xref:System.Windows.Controls.ComboBox> n’affichera pas les images, mais affichera le texte que vous avez attribué.  
  
 L'exemple suivant montre comment utiliser <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A>.  
  
 [!code-xaml[ComboBoxProps_snip#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEditableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEditableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.IsEditableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEditableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEditableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.ComboBox.IsEditable" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Élément spécifié.</param>
        <summary>Détermine si l’élément spécifié est (ou est susceptible d’être) son propre <c>ItemContainer</c>.</summary>
        <returns>
          <see langword="true" /> si l’élément est son propre <c>ItemContainer</c> ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui active le mode de sélection seule, dans lequel le contenu de la zone de liste déroulante peut être sélectionné, mais pas modifié.</summary>
        <value>
          <see langword="true" /> si <see cref="T:System.Windows.Controls.ComboBox" /> est en lecture seule ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Controls.ComboBox.IsEditable%2A> et <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> propriétés spécifient comment le <xref:System.Windows.Controls.ComboBox> se comporte quand l’utilisateur effectue l’une des opérations suivantes :  
  
-   Entre une chaîne pour sélectionner un élément dans le <xref:System.Windows.Controls.ComboBox>.  
  
-   Entre une chaîne qui ne correspond pas à un élément dans le <xref:System.Windows.Controls.ComboBox>.  
  
-   Sélectionne une partie de la chaîne qui se trouve dans la zone de texte.  
  
-   Copie ou colle une valeur dans la zone de texte.  
  
 Le tableau suivant décrit les actions de l’utilisateur et ne peut pas prendre, selon les valeurs des <xref:System.Windows.Controls.ComboBox.IsEditable%2A> et <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>.  
  
||<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> a la valeur `true`.|<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> a la valeur `false`.|  
|-|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.Windows.Controls.ComboBox.IsEditable%2A> a la valeur `true`.|-Impossible de sélectionner un élément dans le <xref:System.Windows.Controls.ComboBox> en entrant une chaîne.<br />-Impossible d’entrer une chaîne qui ne correspond pas à un élément dans le <xref:System.Windows.Controls.ComboBox>.<br />-Permet de partie de la chaîne dans le <xref:System.Windows.Controls.ComboBox> zone de texte.<br />-Peut copier la chaîne dans le <xref:System.Windows.Controls.ComboBox> texte zone, mais ne pouvez pas coller une chaîne dans le <xref:System.Windows.Controls.ComboBox> zone de texte.|-Sélectionner un élément dans le <xref:System.Windows.Controls.ComboBox> en entrant une chaîne.<br />-Pouvez entrer une chaîne qui ne correspond pas à un élément dans le <xref:System.Windows.Controls.ComboBox>.<br />-Permet de partie de la chaîne dans le <xref:System.Windows.Controls.ComboBox> zone de texte.<br />-Copier ou coller la chaîne dans le <xref:System.Windows.Controls.ComboBox> zone de texte.|  
|<xref:System.Windows.Controls.ComboBox.IsEditable%2A> a la valeur `false`.|-Sélectionner un élément dans le <xref:System.Windows.Controls.ComboBox> en entrant une chaîne.<br />-Impossible d’entrer une chaîne qui ne correspond pas à un élément dans le <xref:System.Windows.Controls.ComboBox>.<br />-Ne peut pas sélectionner une partie de la chaîne dans le <xref:System.Windows.Controls.ComboBox>.<br />-Impossible de copier ou de coller la chaîne dans le <xref:System.Windows.Controls.ComboBox>.|-Sélectionner un élément dans le <xref:System.Windows.Controls.ComboBox> en entrant une chaîne.<br />-Impossible d’entrer une chaîne qui ne correspond pas à un élément dans le <xref:System.Windows.Controls.ComboBox>.<br />-Ne peut pas sélectionner une partie de la chaîne dans le <xref:System.Windows.Controls.ComboBox>.<br />-Impossible de copier ou de coller la chaîne dans le <xref:System.Windows.Controls.ComboBox>.|  
  
 Lorsque <xref:System.Windows.Controls.ComboBox.IsEditable%2A> est égal à `false`, le <xref:System.Windows.Controls.ComboBox> utilise un <xref:System.Windows.Controls.ContentPresenter> à afficher actuellement sélectionné élément ; lorsque <xref:System.Windows.Controls.ComboBox.IsEditable%2A> est égal à `true`, un <xref:System.Windows.Controls.TextBox> est utilisé à la place à cet effet. Notez qu’un <xref:System.Windows.Controls.TextBox> affiche uniquement le texte brut et qui un <xref:System.Windows.Controls.ComboBoxItem> peut inclure du contenu non texte brut, tels que des images.  
  
<a name="dependencyPropertyInfo_IsReadOnly"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Controls.ComboBox.IsReadOnlyProperty>|  
|La valeur des propriétés de métadonnées `true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 L’exemple suivant montre un <xref:System.Windows.Controls.ComboBox> avec un texte modifiable <xref:System.Windows.Controls.TextBox>. Le <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> est définie sur `true`, de sorte que l’utilisateur ne peut pas entrer de texte dans le <xref:System.Windows.Controls.TextBox>.  
  
 [!code-xaml[ComboBoxItems#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.ComboBox.IsReadOnly" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionBoxHighlighted">
      <MemberSignature Language="C#" Value="public bool IsSelectionBoxHighlighted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionBoxHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelectionBoxHighlighted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionBoxHighlighted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'information indiquant si <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> est mis en surbrillance ou non.</summary>
        <value>
          <see langword="true" /> si <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> est mis en surbrillance ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est une propriété de dépendance. Toutefois, l’identificateur de propriété de dépendance champ pour <xref:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted%2A> n’est pas public. Par conséquent, vous ne pouvez pas utiliser la propriété de dépendance de sauvegarde pour les opérations de système de propriétés qui requièrent l’identificateur de propriété de dépendance, tels que les appels à <xref:System.Windows.DependencyObject.GetValue%2A>. Toutefois, vous pouvez toujours utiliser <xref:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted%2A> comme un déclencheur de propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDropDownHeight">
      <MemberSignature Language="C#" Value="public double MaxDropDownHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxDropDownHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDropDownHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxDropDownHeight { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la hauteur maximale de la partie déroulante d'une zone de liste déroulante.</summary>
        <value>Valeur double qui représente la hauteur récupérée ou la hauteur à définir. La valeur par défaut, telle que définie dans le système de propriétés, est une valeur calculée en prenant le tiers des plus grands paramètres de hauteur d'écran système, mais cette valeur par défaut peut être substituée par différents modèles de contrôle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le dimensionnement automatique n’est pas la valeur par défaut et se produit dans la liste déroulante de taille supérieure à la taille disponible dans l’élément parent. Cela n’est pas généralement souhaitable.  
  
<a name="dependencyPropertyInfo_MaxDropDownHeight"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty>|  
|La valeur des propriétés de métadonnées `true`|Aucun.|  
  
<a name="xamlAttributeUsage_MaxDropDownHeight"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object MaxDropDownHeight="double"/>  
- or –  
<object MaxDropDownHeight ="qualifiedDouble"/>  
- or -  
<object MaxDropDownHeight ="Auto"/>  
```  
  
<a name="xamlValues_MaxDropDownHeight"></a>   
## <a name="xaml-values"></a>Valeurs XAML  
 *double*  
 <xref:System.Double>  
  
 Représentation de chaîne d’un <xref:System.Double> valeur. Ceci est interprété comme un [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] mesure. Chaînes n’incluent pas explicitement les décimales. Par exemple, la valeur `1` est acceptable.  
  
 Le même <xref:System.Double> applique des restrictions comme indiqué dans la section de la valeur de la propriété.  
  
 *qualifiedDouble*  
 A *double* valeur telle que décrite ci-dessus, suivie d’une des chaînes de déclaration d’unité suivantes : `px`, `in`, `cm`, `pt`.  
  
 `px` (valeur par défaut) est [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` pouces ; in 1 == 96px  
  
 `cm` centimètres ; 1cm==(96/2.54) px  
  
 `pt` correspond à points ; 1pt==(96/72) px  
  
 `Auto`  
 Active le comportement de redimensionnement automatique. Consultez la section Notes.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Windows.Controls.ComboBox.MaxDropDownHeight%2A> propriété pour spécifier la hauteur de la <xref:System.Windows.Controls.ComboBox> contrôle de liste déroulante.  
  
 [!code-xaml[ComboBoxStyles#5](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxStyles/CS/app.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDropDownHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxDropDownHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxDropDownHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxDropDownHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxDropDownHeightProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Appelée lorsque <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> est appelé.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fournit une implémentation <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> appropriée pour ce contrôle, dans le cadre de l'infrastructure [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</summary>
        <returns>Implémentation de <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> spécifique au type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDropDownClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnDropDownClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDownClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDownClosed(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Données de l'événement <see cref="E:System.Windows.Controls.ComboBox.DropDownClosed" />.</param>
        <summary>Signale la fermeture du menu contextuel d'une zone de liste déroulante.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDropDownOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownOpened (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownOpened(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnDropDownOpened(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDownOpened (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDownOpened(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Données de l'événement <see cref="E:System.Windows.Controls.ComboBox.DropDownOpened" />.</param>
        <summary>Signale l'ouverture du menu contextuel d'une zone de liste déroulante.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Données de l'événement <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />.</param>
        <summary>Signale la modification de la propriété <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Données de l'événement <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" />.</param>
        <summary>Appelée lorsque la propriété <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> est modifiée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Donnée d’événement.</param>
        <summary>Appelée quand un événement routé attaché <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> se produit.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Données de l'événement <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" />.</param>
        <summary>Appelée pour signaler que le bouton gauche de la souris a été relâché.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Donnée d’événement.</param>
        <summary>Appelée quand un événement routé attaché <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> se produit.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectionChanged (System.Windows.Controls.SelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectionChanged(class System.Windows.Controls.SelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectionChanged (e As SelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectionChanged(System::Windows::Controls::SelectionChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.SelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Fournit des données pour <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" />.</param>
        <summary>Répond à une modification de sélection de <see cref="T:System.Windows.Controls.ComboBox" /> en déclenchant un événement <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">Élément utilisé pour afficher l’élément (item) spécifié.</param>
        <param name="item">Élément spécifié.</param>
        <summary>Prépare l’élément spécifié pour afficher l’élément (item) spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Préparation de l’élément peut impliquer l’application de styles, la définition de liaisons et ainsi de suite.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItem">
      <MemberSignature Language="C#" Value="public object SelectionBoxItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectionBoxItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.SelectionBoxItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionBoxItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectionBoxItem { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'élément affiché dans la zone de sélection.</summary>
        <value>Élément sélectionné.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Controls.ControlTemplate> de la <xref:System.Windows.Controls.ComboBox> utilise cette propriété pour afficher l’élément sélectionné dans le <xref:System.Windows.Controls.ComboBox>.  Pour obtenir l’élément sélectionné de la <xref:System.Windows.Controls.ComboBox> en dehors de la <xref:System.Windows.Controls.ControlTemplate>, utilisez le <xref:System.Windows.Controls.Primitives.Selector.SelectedItem%2A?displayProperty=nameWithType> propriété au lieu de cette propriété.  
  
<a name="xamlAttributeUsage_SelectionBoxItem"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="{TemplateBinding SelectionBoxItem}"/>  
```  
  
<a name="dependencyPropertyInfo_SelectionBoxItem"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Controls.ComboBox.SelectionBoxItemProperty>|  
|La valeur des propriétés de métadonnées `true`|Aucun.|  
  
   
  
## Examples  
 L’exemple suivant lie la <xref:System.Windows.Controls.ContentPresenter.Content%2A> propriété d’un <xref:System.Windows.Controls.ContentPresenter> à la <xref:System.Windows.Controls.ComboBox.SelectionBoxItem%2A> propriété. Le <xref:System.Windows.Controls.ContentPresenter> fait partie de la <xref:System.Windows.Controls.ControlTemplate> pour le <xref:System.Windows.Controls.ComboBox>. Pour voir l’exemple complet, consultez [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041) (Exemple de style avec ControlTemplates).  
  
 [!code-xaml[ControlTemplateExamples#ComboBoxSelectionBox](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/combobox.xaml#comboboxselectionbox)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.SelectionBoxItemProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxItemProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxItemProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemStringFormat">
      <MemberSignature Language="C#" Value="public string SelectionBoxItemStringFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectionBoxItemStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionBoxItemStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectionBoxItemStringFormat { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une chaîne composite qui spécifie la manière de mettre en forme l'élément sélectionné dans la zone de sélection si celui-ci s'affiche en tant que chaîne.</summary>
        <value>Chaîne composite qui spécifie la manière de mettre en forme l'élément sélectionné dans la zone de sélection si celui-ci s'affiche en tant que chaîne.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemStringFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormatProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxItemStringFormatProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxItemStringFormatProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate SelectionBoxItemTemplate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate SelectionBoxItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionBoxItemTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ SelectionBoxItemTemplate { System::Windows::DataTemplate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le modèle d'élément du contenu de zone de sélection.</summary>
        <value>Modèle d'élément.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SelectionBoxItemTemplate"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="{TemplateBinding SelectionBoxItemTemplate}"/>  
```  
  
<a name="dependencyPropertyInfo_SelectionBoxItemTemplate"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty>|  
|La valeur des propriétés de métadonnées `true`|Aucun.|  
  
   
  
## Examples  
 L’exemple suivant lie la <xref:System.Windows.Controls.ContentPresenter.Content%2A> propriété d’un <xref:System.Windows.Controls.ContentPresenter> à la <xref:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate%2A> propriété. Le <xref:System.Windows.Controls.ContentPresenter> fait partie de la <xref:System.Windows.Controls.ControlTemplate> pour le <xref:System.Windows.Controls.ComboBox>. Pour voir l’exemple complet, consultez [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041) (Exemple de style avec ControlTemplates).  
  
 [!code-xaml[ControlTemplateExamples#ComboBoxSelectionBox](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/combobox.xaml#comboboxselectionbox)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxItemTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxItemTemplateProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldPreserveUserEnteredPrefix">
      <MemberSignature Language="C#" Value="public bool ShouldPreserveUserEnteredPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldPreserveUserEnteredPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property ShouldPreserveUserEnteredPrefix As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldPreserveUserEnteredPrefix { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si <see cref="T:System.Windows.Controls.ComboBox" /> conserve l'entrée de l'utilisateur ou remplace l'entrée par un élément correspondant.</summary>
        <value>
          <see langword="true" /> si <see cref="T:System.Windows.Controls.ComboBox" /> conserve l'entrée de l'utilisateur ; <see langword="false" /> si <see cref="T:System.Windows.Controls.ComboBox" /> remplace l'entrée par un élément correspondant. La valeur par défaut enregistrée est <see langword="false" />. Pour plus d’informations sur ce qui peut influencer la valeur, consultez [valeur de propriété de dépendance](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, lorsque l’utilisateur tape une chaîne dans le <xref:System.Windows.Controls.ComboBox> qui correspond à un de ses éléments, l’élément est sélectionné et le texte saisi par l’utilisateur est remplacé.  Cela peut entraîner le texte entré par l’utilisateur pour modifier la casse. Si le <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> est définie sur `true`, le <xref:System.Windows.Controls.ComboBox> sélectionne l’élément correspondant, mais conserve le texte entré par l’utilisateur.   Par exemple, supposez qu’un <xref:System.Windows.Controls.ComboBox> contient la chaîne « Hello » (avec une majuscule H) et l’utilisateur entre « hello » (avec un h minuscule).  Si <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> est `false`, le <xref:System.Windows.Controls.ComboBox> sélectionne l’élément correspondant, « Hello », dans la collection et remplit la zone de texte avec cette chaîne.    Si <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> est `true`, « Hello » est sélectionné à partir de la collection, mais la zone de texte intitulée « hello ».  
  
<a name="dependencyPropertyInfo_ShouldPreserveUserEnteredPrefix"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefixProperty>|  
|La valeur des propriétés de métadonnées `true`|Aucun.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldPreserveUserEnteredPrefixProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShouldPreserveUserEnteredPrefixProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShouldPreserveUserEnteredPrefixProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefixProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShouldPreserveUserEnteredPrefixProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShouldPreserveUserEnteredPrefixProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnEdit">
      <MemberSignature Language="C#" Value="public bool StaysOpenOnEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpenOnEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpenOnEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpenOnEdit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'information indiquant si un <see cref="T:System.Windows.Controls.ComboBox" /> qui est ouvert et affiche un contrôle déroulant restera ouvert lorsqu'un utilisateur cliquera sur le <see cref="T:System.Windows.Controls.TextBox" />.</summary>
        <value>
          <see langword="true" /> pour garder le contrôle déroulant ouvert lorsque l'utilisateur clique dans la zone de texte ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpenOnEdit"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Controls.ComboBox.StaysOpenOnEditProperty>|  
|La valeur des propriétés de métadonnées `true`|Aucun.|  
  
   
  
## Examples  
 Cet exemple montre comment utiliser le <xref:System.Windows.Controls.ComboBox.StaysOpenOnEdit%2A> propriété pour créer une zone de liste déroulante dont contrôle déroulant reste ouverte lorsque l’utilisateur entre des informations dans la zone de texte.  
  
 [!code-xaml[ComboBoxItems#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnEditProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenOnEditProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenOnEditProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.StaysOpenOnEditProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenOnEditProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenOnEditProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le texte de l'élément actuellement sélectionné.</summary>
        <value>Chaîne de l'élément actuellement sélectionné. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Windows.Controls.ComboBox.IsEditable%2A> propriété `true`, cette propriété place texte initial entré dans la zone de texte. Lorsque <xref:System.Windows.Controls.ComboBox.IsEditable%2A> est `false`, ce paramètre n’a aucun effet.  
  
<a name="dependencyPropertyInfo_Text"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Controls.ComboBox.TextProperty>|  
|La valeur des propriétés de métadonnées `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A>|  
  
   
  
## Examples  
 Cet exemple montre comment la <xref:System.Windows.Controls.ComboBox.Text%2A> propriété peut être utilisée pour définir le texte dans le <xref:System.Windows.Controls.TextBox> avant que l’utilisateur effectue une sélection.  
  
 [!code-xaml[ComboBoxItems#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.TextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.ComboBox.Text" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>