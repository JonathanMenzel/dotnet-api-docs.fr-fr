<Type Name="DataTemplateSelector" FullName="System.Windows.Controls.DataTemplateSelector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7cf6ef824251b65f85296296a1a43a3ae2db5d26" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30618903" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataTemplateSelector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTemplateSelector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.DataTemplateSelector" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTemplateSelector" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTemplateSelector" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="bad14-101">Fournit un moyen de choisir un <see cref="T:System.Windows.DataTemplate" /> en fonction de l’objet de données et de l’élément lié aux données.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bad14-101">Provides a way to choose a <see cref="T:System.Windows.DataTemplate" /> based on the data object and the data-bound element.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bad14-102">En général, vous créez un <xref:System.Windows.Controls.DataTemplateSelector> lorsque vous avez plusieurs <xref:System.Windows.DataTemplate> pour le même type d’objets et que vous souhaitez fournir votre propre logique pour choisir un <xref:System.Windows.DataTemplate> à appliquer basée sur les propriétés de chaque objet de données.</span><span class="sxs-lookup"><span data-stu-id="bad14-102">Typically, you create a <xref:System.Windows.Controls.DataTemplateSelector> when you have more than one <xref:System.Windows.DataTemplate> for the same type of objects and you want to supply your own logic to choose a <xref:System.Windows.DataTemplate> to apply based on the properties of each data object.</span></span> <span data-ttu-id="bad14-103">Notez que si vous avez des objets de différents types que vous pouvez définir le <xref:System.Windows.DataTemplate.DataType%2A> propriété sur le <xref:System.Windows.DataTemplate>.</span><span class="sxs-lookup"><span data-stu-id="bad14-103">Note that if you have objects of different types you can set the <xref:System.Windows.DataTemplate.DataType%2A> property on the <xref:System.Windows.DataTemplate>.</span></span> <span data-ttu-id="bad14-104">Si vous le faire, il est inutile de créer un <xref:System.Windows.Controls.DataTemplateSelector>.</span><span class="sxs-lookup"><span data-stu-id="bad14-104">If you do that then there is no need to create a <xref:System.Windows.Controls.DataTemplateSelector>.</span></span> <span data-ttu-id="bad14-105">En outre, si vous avez des objets du même type, mais avec des propriétés différentes, vous pouvez également envisager d’utiliser un <xref:System.Windows.DataTrigger> ou un convertisseur de données.</span><span class="sxs-lookup"><span data-stu-id="bad14-105">Furthermore, if you have objects of the same type but with different properties, you can also consider using a <xref:System.Windows.DataTrigger> or a data converter.</span></span> <span data-ttu-id="bad14-106">Pour plus d’informations, consultez [Vue d’ensemble des modèles de données](~/docs/framework/wpf/data/data-templating-overview.md).</span><span class="sxs-lookup"><span data-stu-id="bad14-106">For more information, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
 <span data-ttu-id="bad14-107">Pour créer un sélecteur de modèle, créez une classe qui hérite de <xref:System.Windows.Controls.DataTemplateSelector> et remplacez le <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="bad14-107">To create a template selector, create a class that inherits from <xref:System.Windows.Controls.DataTemplateSelector> and override the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="bad14-108">Une fois que votre classe est définie, vous pouvez affecter une instance de la classe à la propriété de sélecteur de modèle de votre élément.</span><span class="sxs-lookup"><span data-stu-id="bad14-108">Once your class is defined you can assign an instance of the class to the template selector property of your element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bad14-109">Dans cet exemple, la source de liaison est une liste de `Task` objets.</span><span class="sxs-lookup"><span data-stu-id="bad14-109">In this example, the binding source is a list of `Task` objects.</span></span> <span data-ttu-id="bad14-110">Une des propriétés d’un `Task` objet est `Priority`.</span><span class="sxs-lookup"><span data-stu-id="bad14-110">One of the properties of a `Task` object is `Priority`.</span></span> <span data-ttu-id="bad14-111">Il existe deux modèles de données définies, `myTaskTemplate` et `importantTaskTemplate`.</span><span class="sxs-lookup"><span data-stu-id="bad14-111">There are two data templates defined, `myTaskTemplate` and `importantTaskTemplate`.</span></span>  
  
 <span data-ttu-id="bad14-112">Pour fournir une logique permettant de choisir le <xref:System.Windows.DataTemplate> à utiliser en fonction de la `Priority` valeur de l’objet de données, créez une sous-classe de <xref:System.Windows.Controls.DataTemplateSelector> et remplacez le <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="bad14-112">To supply logic to choose which <xref:System.Windows.DataTemplate> to use based on the `Priority` value of the data object, create a subclass of <xref:System.Windows.Controls.DataTemplateSelector> and override the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="bad14-113">Dans l’exemple suivant, la <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> méthode fournit la logique pour retourner le modèle approprié en fonction de la valeur de la `Priority` propriété.</span><span class="sxs-lookup"><span data-stu-id="bad14-113">In the following example, the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method provides logic to return the appropriate template based on the value of the `Priority` property.</span></span> <span data-ttu-id="bad14-114">Le modèle à retourner est recherché dans les ressources de l’enveloppe <xref:System.Windows.Window> élément.</span><span class="sxs-lookup"><span data-stu-id="bad14-114">The template to return is found in the resources of the enveloping <xref:System.Windows.Window> element.</span></span>  
  
 [!code-csharp[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/TaskListDataTemplateSelector.cs#dtsclass)]
 [!code-vb[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataTemplatingIntro_snip/visualbasic/tasklistdatatemplateselector.vb#dtsclass)]  
  
 <span data-ttu-id="bad14-115">On peut ensuite déclarer le `TaskListDataTemplateSelector` comme ressource :</span><span class="sxs-lookup"><span data-stu-id="bad14-115">We can then declare the `TaskListDataTemplateSelector` as a resource:</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#R1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r1)]  
[!code-xaml[DataTemplatingIntro_snip#DTS](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#dts)]  
[!code-xaml[DataTemplatingIntro_snip#R2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r2)]  
  
 <span data-ttu-id="bad14-116">Pour utiliser la ressource de sélecteur de modèle, affecter à la <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> propriété de la <xref:System.Windows.Controls.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="bad14-116">To use the template selector resource, assign it to the <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property of the <xref:System.Windows.Controls.ListBox>.</span></span> <span data-ttu-id="bad14-117">Le <xref:System.Windows.Controls.ListBox> appelle la <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> méthode de le `TaskListDataTemplateSelector` pour chacun des éléments dans la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="bad14-117">The <xref:System.Windows.Controls.ListBox> calls the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method of the `TaskListDataTemplateSelector` for each of the items in the underlying collection.</span></span> <span data-ttu-id="bad14-118">L’appel passe l’objet de données en paramètre d’élément.</span><span class="sxs-lookup"><span data-stu-id="bad14-118">The call passes the data object as the item parameter.</span></span> <span data-ttu-id="bad14-119">Le <xref:System.Windows.DataTemplate> qui est retourné par la méthode est ensuite appliquée à cet objet de données.</span><span class="sxs-lookup"><span data-stu-id="bad14-119">The <xref:System.Windows.DataTemplate> that is returned by the method is then applied to that data object.</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#ItemTemplateSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#itemtemplateselector)]  
  
 <span data-ttu-id="bad14-120">Vous trouverez l’exemple complet sur la page [Présentation d’un exemple de création de modèles de données](http://go.microsoft.com/fwlink/?LinkID=160009).</span><span class="sxs-lookup"><span data-stu-id="bad14-120">For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTemplateSelector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataTemplateSelector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTemplateSelector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bad14-121">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Controls.DataTemplateSelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bad14-121">Initializes a new instance of the <see cref="T:System.Windows.Controls.DataTemplateSelector" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DataTemplate SelectTemplate (object item, System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DataTemplate SelectTemplate(object item, class System.Windows.DependencyObject container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectTemplate (item As Object, container As DependencyObject) As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DataTemplate ^ SelectTemplate(System::Object ^ item, System::Windows::DependencyObject ^ container);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="bad14-122">Objet de données pour lequel sélectionner le modèle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bad14-122">The data object for which to select the template.</span>
          </span>
        </param>
        <param name="container">
          <span data-ttu-id="bad14-123">Objet lié aux données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bad14-123">The data-bound object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bad14-124">En cas de substitution dans une classe dérivée, retourne un <see cref="T:System.Windows.DataTemplate" /> en fonction d'une logique personnalisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bad14-124">When overridden in a derived class, returns a <see cref="T:System.Windows.DataTemplate" /> based on custom logic.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bad14-125">Renvoie un type <see cref="T:System.Windows.DataTemplate" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bad14-125">Returns a <see cref="T:System.Windows.DataTemplate" /> or <see langword="null" />.</span>
          </span>
          <span data-ttu-id="bad14-126">La valeur par défaut est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bad14-126">The default value is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bad14-127">En règle générale, vous utilisez un sélecteur de modèle lorsque vous disposez de plusieurs modèles de données définis pour le même type d’objets.</span><span class="sxs-lookup"><span data-stu-id="bad14-127">Typically, you use a template selector when you have more than one data template defined for the same type of objects.</span></span> <span data-ttu-id="bad14-128">Par exemple, si votre source de liaison est une liste d’objets student et que vous souhaitez appliquer un modèle particulier pour les étudiants à temps partiel.</span><span class="sxs-lookup"><span data-stu-id="bad14-128">For example, if your binding source is list a list of student objects and you want to apply a particular template to the part-time students.</span></span> <span data-ttu-id="bad14-129">Vous faire cela en créant une classe qui hérite de <xref:System.Windows.Controls.DataTemplateSelector> et en remplaçant le <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="bad14-129">You can do this by creating a class that inherits from <xref:System.Windows.Controls.DataTemplateSelector> and overriding the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="bad14-130">Une fois que votre classe est définie, vous pouvez affecter une instance de la classe à la propriété de sélecteur de modèle de votre élément.</span><span class="sxs-lookup"><span data-stu-id="bad14-130">Once your class is defined you can assign an instance of the class to the template selector property of your element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bad14-131">Dans cet exemple, la source de liaison est une liste de `Task` objets.</span><span class="sxs-lookup"><span data-stu-id="bad14-131">In this example, the binding source is a list of `Task` objects.</span></span> <span data-ttu-id="bad14-132">Une des propriétés d’un `Task` objet est `Priority`.</span><span class="sxs-lookup"><span data-stu-id="bad14-132">One of the properties of a `Task` object is `Priority`.</span></span> <span data-ttu-id="bad14-133">Il existe deux modèles de données définies, `myTaskTemplate` et `importantTaskTemplate`.</span><span class="sxs-lookup"><span data-stu-id="bad14-133">There are two data templates defined, `myTaskTemplate` and `importantTaskTemplate`.</span></span>  
  
 <span data-ttu-id="bad14-134">Pour fournir une logique permettant de choisir le <xref:System.Windows.DataTemplate> à utiliser en fonction de la `Priority` valeur de l’objet de données, créez une sous-classe de <xref:System.Windows.Controls.DataTemplateSelector> et remplacez le <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="bad14-134">To supply logic to choose which <xref:System.Windows.DataTemplate> to use based on the `Priority` value of the data object, create a subclass of <xref:System.Windows.Controls.DataTemplateSelector> and override the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="bad14-135">Dans l’exemple suivant, la <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> méthode fournit la logique pour retourner le modèle approprié en fonction de la valeur de la `Priority` propriété.</span><span class="sxs-lookup"><span data-stu-id="bad14-135">In the following example, the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method provides logic to return the appropriate template based on the value of the `Priority` property.</span></span> <span data-ttu-id="bad14-136">Le modèle à retourner est recherché dans les ressources de l’enveloppe <xref:System.Windows.Window> élément.</span><span class="sxs-lookup"><span data-stu-id="bad14-136">The template to return is found in the resources of the enveloping <xref:System.Windows.Window> element.</span></span>  
  
 [!code-csharp[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/TaskListDataTemplateSelector.cs#dtsclass)]
 [!code-vb[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataTemplatingIntro_snip/visualbasic/tasklistdatatemplateselector.vb#dtsclass)]  
  
 <span data-ttu-id="bad14-137">On peut ensuite déclarer le `TaskListDataTemplateSelector` comme ressource :</span><span class="sxs-lookup"><span data-stu-id="bad14-137">We can then declare the `TaskListDataTemplateSelector` as a resource:</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#R1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r1)]  
[!code-xaml[DataTemplatingIntro_snip#DTS](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#dts)]  
[!code-xaml[DataTemplatingIntro_snip#R2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r2)]  
  
 <span data-ttu-id="bad14-138">Pour utiliser la ressource de sélecteur de modèle, affecter à la <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> propriété de la <xref:System.Windows.Controls.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="bad14-138">To use the template selector resource, assign it to the <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property of the <xref:System.Windows.Controls.ListBox>.</span></span> <span data-ttu-id="bad14-139">Le <xref:System.Windows.Controls.ListBox> appelle la <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> méthode de le `TaskListDataTemplateSelector` pour chacun des éléments dans la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="bad14-139">The <xref:System.Windows.Controls.ListBox> calls the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method of the `TaskListDataTemplateSelector` for each of the items in the underlying collection.</span></span> <span data-ttu-id="bad14-140">L’appel passe l’objet de données en paramètre d’élément.</span><span class="sxs-lookup"><span data-stu-id="bad14-140">The call passes the data object as the item parameter.</span></span> <span data-ttu-id="bad14-141">Le <xref:System.Windows.DataTemplate> qui est retourné par la méthode est ensuite appliquée à cet objet de données.</span><span class="sxs-lookup"><span data-stu-id="bad14-141">The <xref:System.Windows.DataTemplate> that is returned by the method is then applied to that data object.</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#ItemTemplateSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#itemtemplateselector)]  
  
 <span data-ttu-id="bad14-142">Vous trouverez l’exemple complet sur la page [Présentation d’un exemple de création de modèles de données](http://go.microsoft.com/fwlink/?LinkID=160009).</span><span class="sxs-lookup"><span data-stu-id="bad14-142">For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>