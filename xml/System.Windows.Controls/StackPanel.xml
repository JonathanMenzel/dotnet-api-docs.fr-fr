<Type Name="StackPanel" FullName="System.Windows.Controls.StackPanel">
  <TypeSignature Language="C#" Value="public class StackPanel : System.Windows.Controls.Panel, System.Windows.Controls.Primitives.IScrollInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi StackPanel extends System.Windows.Controls.Panel implements class System.Windows.Controls.Primitives.IScrollInfo" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.StackPanel" />
  <TypeSignature Language="VB.NET" Value="Public Class StackPanel&#xA;Inherits Panel&#xA;Implements IScrollInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StackPanel : System::Windows::Controls::Panel, System::Windows::Controls::Primitives::IScrollInfo" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Panel</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Controls.Primitives.IScrollInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="587d3-101">Dispose des éléments enfants sur une seule ligne orientée horizontalement ou verticalement.</span><span class="sxs-lookup"><span data-stu-id="587d3-101">Arranges child elements into a single line that can be oriented horizontally or vertically.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-102">A <xref:System.Windows.Controls.StackPanel> contient une collection de <xref:System.Windows.UIElement> objets, qui se trouvent dans le <xref:System.Windows.Controls.Panel.Children%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="587d3-102">A <xref:System.Windows.Controls.StackPanel> contains a collection of <xref:System.Windows.UIElement> objects, which are in the <xref:System.Windows.Controls.Panel.Children%2A> property.</span></span>  
  
 <span data-ttu-id="587d3-103">La valeur par défaut est stretch pour les deux <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> et <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> du contenu qui est contenu dans un <xref:System.Windows.Controls.StackPanel>.</span><span class="sxs-lookup"><span data-stu-id="587d3-103">The default value is stretch for both <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> of content that is contained in a <xref:System.Windows.Controls.StackPanel>.</span></span>  
  
 <span data-ttu-id="587d3-104">Éléments du Panneau de configuration ne reçoivent pas le focus par défaut.</span><span class="sxs-lookup"><span data-stu-id="587d3-104">Panel elements do not receive focus by default.</span></span> <span data-ttu-id="587d3-105">Pour contraindre un élément du Panneau de configuration pour recevoir le focus, définissez la <xref:System.Windows.UIElement.Focusable%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="587d3-105">To compel a panel element to receive focus, set the <xref:System.Windows.UIElement.Focusable%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="587d3-106"><xref:System.Windows.Controls.StackPanel> implémente le <xref:System.Windows.Controls.Primitives.IScrollInfo> interface pour prendre en charge le défilement logique.</span><span class="sxs-lookup"><span data-stu-id="587d3-106"><xref:System.Windows.Controls.StackPanel> implements the <xref:System.Windows.Controls.Primitives.IScrollInfo> interface to support logical scrolling.</span></span> <span data-ttu-id="587d3-107">Défilement logique est utilisé pour accéder à l’élément suivant dans l’arborescence logique.</span><span class="sxs-lookup"><span data-stu-id="587d3-107">Logical scrolling is used to scroll to the next element in the logical tree.</span></span> <span data-ttu-id="587d3-108">Ce comportement diffère de défilement physique, ce qui fait défiler le contenu par un incrément physique défini dans une direction donnée.</span><span class="sxs-lookup"><span data-stu-id="587d3-108">This is in contrast to physical scrolling, which scrolls content by a defined physical increment in a given direction.</span></span> <span data-ttu-id="587d3-109">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez l’hôte <xref:System.Windows.Controls.StackPanel> élément dans une <xref:System.Windows.Controls.ScrollViewer> et définir son <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="587d3-109">If you require physical scrolling instead of logical scrolling, wrap the host <xref:System.Windows.Controls.StackPanel> element in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackPanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackPanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="587d3-110">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Controls.StackPanel" />.</span><span class="sxs-lookup"><span data-stu-id="587d3-110">Initializes a new instance of the <see cref="T:System.Windows.Controls.StackPanel" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeSize"><span data-ttu-id="587d3-111"><see cref="T:System.Windows.Size" /> que cet élément doit utiliser pour réorganiser ses éléments enfants.</span><span class="sxs-lookup"><span data-stu-id="587d3-111">The <see cref="T:System.Windows.Size" /> that this element should use to arrange its child elements.</span></span></param>
        <summary><span data-ttu-id="587d3-112">Réorganise le contenu d’un élément <see cref="T:System.Windows.Controls.StackPanel" />.</span><span class="sxs-lookup"><span data-stu-id="587d3-112">Arranges the content of a <see cref="T:System.Windows.Controls.StackPanel" /> element.</span></span></summary>
        <returns><span data-ttu-id="587d3-113"><see cref="T:System.Windows.Size" /> qui représente la taille réorganisée de l'élément <see cref="T:System.Windows.Controls.StackPanel" /> et de ses éléments enfants.</span><span class="sxs-lookup"><span data-stu-id="587d3-113">The <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.StackPanel" /> element and its child elements.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.StackPanel.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="CanHorizontallyScroll">
      <MemberSignature Language="C#" Value="public bool CanHorizontallyScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHorizontallyScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.CanHorizontallyScroll" />
      <MemberSignature Language="VB.NET" Value="Public Property CanHorizontallyScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanHorizontallyScroll { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.CanHorizontallyScroll</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="587d3-114">Obtient ou définit une valeur qui indique si un <see cref="T:System.Windows.Controls.StackPanel" /> peut défiler sur la dimension horizontale.</span><span class="sxs-lookup"><span data-stu-id="587d3-114">Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.StackPanel" /> can scroll in the horizontal dimension.</span></span></summary>
        <value>
          <span data-ttu-id="587d3-115"><see langword="true" /> si le contenu peut défiler sur la dimension horizontale ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="587d3-115"><see langword="true" /> if content can scroll in the horizontal dimension; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-116">Cette propriété n’est pas destinée à être utilisée dans votre code.</span><span class="sxs-lookup"><span data-stu-id="587d3-116">This property is not intended to be used in your code.</span></span> <span data-ttu-id="587d3-117">Elle est exposée publiquement pour réaliser un contrat d’interface (<xref:System.Windows.Controls.Primitives.IScrollInfo>).</span><span class="sxs-lookup"><span data-stu-id="587d3-117">It is exposed publicly to fulfill an interface contract (<xref:System.Windows.Controls.Primitives.IScrollInfo>).</span></span> <span data-ttu-id="587d3-118">Définition de cette propriété n’a aucun effet.</span><span class="sxs-lookup"><span data-stu-id="587d3-118">Setting this property has no effect.</span></span>  
  
 <span data-ttu-id="587d3-119">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez le <xref:System.Windows.Controls.StackPanel> dans un <xref:System.Windows.Controls.ScrollViewer> et définir son <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="587d3-119">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.IScrollInfo" />
      </Docs>
    </Member>
    <Member MemberName="CanVerticallyScroll">
      <MemberSignature Language="C#" Value="public bool CanVerticallyScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanVerticallyScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.CanVerticallyScroll" />
      <MemberSignature Language="VB.NET" Value="Public Property CanVerticallyScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanVerticallyScroll { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.CanVerticallyScroll</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="587d3-120">Obtient ou définit une valeur qui indique si le contenu peut défiler sur la dimension verticale.</span><span class="sxs-lookup"><span data-stu-id="587d3-120">Gets or sets a value that indicates whether content can scroll in the vertical dimension.</span></span></summary>
        <value>
          <span data-ttu-id="587d3-121"><see langword="true" /> si le contenu peut défiler sur la dimension verticale ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="587d3-121"><see langword="true" /> if content can scroll in the vertical dimension; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="587d3-122">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="587d3-122">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-123">Cette propriété n’est pas destinée à être utilisé dans votre code.</span><span class="sxs-lookup"><span data-stu-id="587d3-123">This property is not intended for use in your code.</span></span> <span data-ttu-id="587d3-124">Elle est exposée publiquement pour réaliser un contrat d’interface (<xref:System.Windows.Controls.Primitives.IScrollInfo>).</span><span class="sxs-lookup"><span data-stu-id="587d3-124">It is exposed publicly to fulfill an interface contract (<xref:System.Windows.Controls.Primitives.IScrollInfo>).</span></span> <span data-ttu-id="587d3-125">Définition de cette propriété n’a aucun effet.</span><span class="sxs-lookup"><span data-stu-id="587d3-125">Setting this property has no effect.</span></span>  
  
 <span data-ttu-id="587d3-126">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez le <xref:System.Windows.Controls.StackPanel> dans un <xref:System.Windows.Controls.ScrollViewer> et définir son <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="587d3-126">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.IScrollInfo" />
      </Docs>
    </Member>
    <Member MemberName="ExtentHeight">
      <MemberSignature Language="C#" Value="public double ExtentHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ExtentHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="587d3-127">Obtient une valeur qui contient la taille verticale de l’étendue.</span><span class="sxs-lookup"><span data-stu-id="587d3-127">Gets a value that contains the vertical size of the extent.</span></span></summary>
        <value><span data-ttu-id="587d3-128"><see cref="T:System.Double" /> qui représente la taille verticale de l’étendue.</span><span class="sxs-lookup"><span data-stu-id="587d3-128">The <see cref="T:System.Double" /> that represents the vertical size of the extent.</span></span> <span data-ttu-id="587d3-129">La valeur par défaut est 0,0.</span><span class="sxs-lookup"><span data-stu-id="587d3-129">The default value is 0.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-130">La valeur retournée est décrite en Pixels indépendants du périphérique.</span><span class="sxs-lookup"><span data-stu-id="587d3-130">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtentWidth">
      <MemberSignature Language="C#" Value="public double ExtentWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ExtentWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ExtentWidth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="587d3-131">Obtient une valeur qui contient la taille horizontale de l’étendue.</span><span class="sxs-lookup"><span data-stu-id="587d3-131">Gets a value that contains the horizontal size of the extent.</span></span></summary>
        <value>
          <span data-ttu-id="587d3-132"><see cref="T:System.Double" /> qui représente la taille horizontale de l’étendue.</span><span class="sxs-lookup"><span data-stu-id="587d3-132"><see cref="T:System.Double" /> that represents the horizontal size of the extent.</span></span> <span data-ttu-id="587d3-133">La valeur par défaut est 0,0.</span><span class="sxs-lookup"><span data-stu-id="587d3-133">The default value is 0.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-134">La valeur retournée est décrite en Pixels indépendants du périphérique.</span><span class="sxs-lookup"><span data-stu-id="587d3-134">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLogicalOrientation">
      <MemberSignature Language="C#" Value="protected internal override bool HasLogicalOrientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLogicalOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.HasLogicalOrientation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HasLogicalOrientation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasLogicalOrientation { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="587d3-135">Obtient une valeur qui indique si ce <see cref="T:System.Windows.Controls.StackPanel" /> a une orientation verticale ou horizontale.</span><span class="sxs-lookup"><span data-stu-id="587d3-135">Gets a value that indicates if this <see cref="T:System.Windows.Controls.StackPanel" /> has vertical or horizontal orientation.</span></span></summary>
        <value><span data-ttu-id="587d3-136">Cette propriété retourne toujours <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="587d3-136">This property always returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-137">Cette propriété retourne toujours `true` , car un <xref:System.Windows.Controls.StackPanel> doit avoir une orientation verticale ou horizontale.</span><span class="sxs-lookup"><span data-stu-id="587d3-137">This property always returns `true` because a <xref:System.Windows.Controls.StackPanel> must have either vertical or horizontal orientation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.HorizontalOffset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="587d3-138">Obtient une valeur qui contient le décalage horizontal du contenu parcouru.</span><span class="sxs-lookup"><span data-stu-id="587d3-138">Gets a value that contains the horizontal offset of the scrolled content.</span></span></summary>
        <value><span data-ttu-id="587d3-139"><see cref="T:System.Double" /> qui représente le décalage horizontal du contenu parcouru.</span><span class="sxs-lookup"><span data-stu-id="587d3-139">The <see cref="T:System.Double" /> that represents the horizontal offset of the scrolled content.</span></span> <span data-ttu-id="587d3-140">La valeur par défaut est 0,0.</span><span class="sxs-lookup"><span data-stu-id="587d3-140">The default value is 0.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-141">La valeur retournée est décrite en Pixels indépendants du périphérique.</span><span class="sxs-lookup"><span data-stu-id="587d3-141">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDown">
      <MemberSignature Language="C#" Value="public void LineDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.LineDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineDown();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="587d3-142">Fait défiler le contenu d'une unité logique vers le bas.</span><span class="sxs-lookup"><span data-stu-id="587d3-142">Scrolls content downward by one logical unit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-143">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez le <xref:System.Windows.Controls.StackPanel> dans un <xref:System.Windows.Controls.ScrollViewer> et définir son <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="587d3-143">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineLeft">
      <MemberSignature Language="C#" Value="public void LineLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.LineLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineLeft();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineLeft</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="587d3-144">Fait défiler le contenu d'une unité logique vers la gauche.</span><span class="sxs-lookup"><span data-stu-id="587d3-144">Scrolls content by one logical unit to the left.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-145">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez le <xref:System.Windows.Controls.StackPanel> dans un <xref:System.Windows.Controls.ScrollViewer> et définir son <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="587d3-145">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineRight">
      <MemberSignature Language="C#" Value="public void LineRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.LineRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineRight();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineRight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="587d3-146">Fait défiler le contenu d'une unité logique vers la droite.</span><span class="sxs-lookup"><span data-stu-id="587d3-146">Scrolls content by one logical unit to the right.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-147">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez le <xref:System.Windows.Controls.StackPanel> dans un <xref:System.Windows.Controls.ScrollViewer> et définir son <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="587d3-147">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineUp">
      <MemberSignature Language="C#" Value="public void LineUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.LineUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineUp();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="587d3-148">Fait défiler le contenu d'une unité logique vers le haut.</span><span class="sxs-lookup"><span data-stu-id="587d3-148">Scrolls content by one logical unit upward.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-149">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez le <xref:System.Windows.Controls.StackPanel> dans un <xref:System.Windows.Controls.ScrollViewer> et définir son <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="587d3-149">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalOrientation">
      <MemberSignature Language="C#" Value="protected internal override System.Windows.Controls.Orientation LogicalOrientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation LogicalOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.LogicalOrientation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalOrientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Windows::Controls::Orientation LogicalOrientation { System::Windows::Controls::Orientation get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="587d3-150">Obtient une valeur qui représente la <see cref="T:System.Windows.Controls.Orientation" /> du <see cref="T:System.Windows.Controls.StackPanel" />.</span><span class="sxs-lookup"><span data-stu-id="587d3-150">Gets a value that represents the <see cref="T:System.Windows.Controls.Orientation" /> of the <see cref="T:System.Windows.Controls.StackPanel" />.</span></span></summary>
        <value><span data-ttu-id="587d3-151">Valeur <see cref="T:System.Windows.Controls.Orientation" />.</span><span class="sxs-lookup"><span data-stu-id="587d3-151">An <see cref="T:System.Windows.Controls.Orientation" /> value.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="MakeVisible">
      <MemberSignature Language="C#" Value="public System.Windows.Rect MakeVisible (System.Windows.Media.Visual visual, System.Windows.Rect rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Rect MakeVisible(class System.Windows.Media.Visual visual, valuetype System.Windows.Rect rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Rect MakeVisible(System::Windows::Media::Visual ^ visual, System::Windows::Rect rectangle);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="rectangle" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="587d3-152"><see cref="T:System.Windows.Media.Visual" /> qui devient visible.</span><span class="sxs-lookup"><span data-stu-id="587d3-152">The <see cref="T:System.Windows.Media.Visual" /> that becomes visible.</span></span></param>
        <param name="rectangle"><span data-ttu-id="587d3-153">Le <see cref="T:System.Windows.Rect" /> qui représente un espace de coordonnées dans un visuel.</span><span class="sxs-lookup"><span data-stu-id="587d3-153">The <see cref="T:System.Windows.Rect" /> that represents coordinate space within a visual.</span></span></param>
        <summary><span data-ttu-id="587d3-154">Fait défiler vers les coordonnées spécifiées et rend visible cette partie de <see cref="T:System.Windows.Media.Visual" />.</span><span class="sxs-lookup"><span data-stu-id="587d3-154">Scrolls to the specified coordinates and makes that part of a <see cref="T:System.Windows.Media.Visual" /> visible.</span></span></summary>
        <returns><span data-ttu-id="587d3-155">Un <see cref="T:System.Windows.Rect" /> dans l'espace de coordonnées qui est rendu visible.</span><span class="sxs-lookup"><span data-stu-id="587d3-155">A <see cref="T:System.Windows.Rect" /> in the coordinate space that is made visible.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint"><span data-ttu-id="587d3-156"><see cref="T:System.Windows.Size" /> de limite supérieure à ne pas dépasser.</span><span class="sxs-lookup"><span data-stu-id="587d3-156">An upper limit <see cref="T:System.Windows.Size" /> that should not be exceeded.</span></span></param>
        <summary><span data-ttu-id="587d3-157">Mesure les éléments enfants d'un <see cref="T:System.Windows.Controls.StackPanel" /> en prévision de leur réorganisation pendant la passe <see cref="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" />.</span><span class="sxs-lookup"><span data-stu-id="587d3-157">Measures the child elements of a <see cref="T:System.Windows.Controls.StackPanel" /> in anticipation of arranging them during the <see cref="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" /> pass.</span></span></summary>
        <returns><span data-ttu-id="587d3-158"><see cref="T:System.Windows.Size" /> qui représente la taille souhaitée pour l'élément.</span><span class="sxs-lookup"><span data-stu-id="587d3-158">The <see cref="T:System.Windows.Size" /> that represents the desired size of the element.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="MouseWheelDown">
      <MemberSignature Language="C#" Value="public void MouseWheelDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MouseWheelDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub MouseWheelDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelDown();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="587d3-159">Fait défiler le contenu logiquement vers le bas en réponse à un clic du bouton roulette de la souris.</span><span class="sxs-lookup"><span data-stu-id="587d3-159">Scrolls content logically downward in response to a click of the mouse wheel button.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-160">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez le <xref:System.Windows.Controls.StackPanel> dans un <xref:System.Windows.Controls.ScrollViewer> et définir son <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="587d3-160">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelLeft">
      <MemberSignature Language="C#" Value="public void MouseWheelLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MouseWheelLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub MouseWheelLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelLeft();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelLeft</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="587d3-161">Fait défiler le contenu logiquement vers la gauche en réponse à un clic du bouton roulette de la souris.</span><span class="sxs-lookup"><span data-stu-id="587d3-161">Scrolls content logically to the left in response to a click of the mouse wheel button.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-162">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez le <xref:System.Windows.Controls.StackPanel> dans un <xref:System.Windows.Controls.ScrollViewer> et définir son <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="587d3-162">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelRight">
      <MemberSignature Language="C#" Value="public void MouseWheelRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MouseWheelRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub MouseWheelRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelRight();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelRight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="587d3-163">Fait défiler le contenu logiquement vers la droite en réponse à un clic du bouton roulette de la souris.</span><span class="sxs-lookup"><span data-stu-id="587d3-163">Scrolls content logically to the right in response to a click of the mouse wheel button.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-164">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez le <xref:System.Windows.Controls.StackPanel> dans un <xref:System.Windows.Controls.ScrollViewer> et définir son <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="587d3-164">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelUp">
      <MemberSignature Language="C#" Value="public void MouseWheelUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MouseWheelUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub MouseWheelUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelUp();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="587d3-165">Fait défiler le contenu logiquement vers le haut en réponse à un clic du bouton roulette de la souris.</span><span class="sxs-lookup"><span data-stu-id="587d3-165">Scrolls content logically upward in response to a click of the mouse wheel button.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-166">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez le <xref:System.Windows.Controls.StackPanel> dans un <xref:System.Windows.Controls.ScrollViewer> et définir son <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="587d3-166">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Orientation Orientation { System::Windows::Controls::Orientation get(); void set(System::Windows::Controls::Orientation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="587d3-167">Obtient ou définit une valeur qui indique la dimension selon laquelle les éléments enfants sont empilés.</span><span class="sxs-lookup"><span data-stu-id="587d3-167">Gets or sets a value that indicates the dimension by which child elements are stacked.</span></span></summary>
        <value><span data-ttu-id="587d3-168"><see cref="T:System.Windows.Controls.Orientation" /> du contenu enfant.</span><span class="sxs-lookup"><span data-stu-id="587d3-168">The <see cref="T:System.Windows.Controls.Orientation" /> of child content.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Orientation"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="587d3-169">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="587d3-169">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="587d3-170">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="587d3-170">Identifier field</span></span>|<xref:System.Windows.Controls.StackPanel.OrientationProperty>|  
|<span data-ttu-id="587d3-171">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="587d3-171">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="587d3-172">L’exemple suivant montre comment utiliser le <xref:System.Windows.Controls.StackPanel.Orientation%2A> propriété pour spécifier comment les éléments dans un <xref:System.Windows.Controls.StackPanel> sont empilés (un sur l’autre ou côte à côte).</span><span class="sxs-lookup"><span data-stu-id="587d3-172">The following example shows how to use the <xref:System.Windows.Controls.StackPanel.Orientation%2A> property to specify how elements within a <xref:System.Windows.Controls.StackPanel> are stacked (one on top of the other or side by side).</span></span>  
  
 [!code-xaml[StackPanel_snip#StackPanelOrientationExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StackPanel_snip/CS/OrientationExample.xaml#stackpanelorientationexamplewholepage)]   
  
 <span data-ttu-id="587d3-173">La capture d’écran ci-dessous illustre le rendu de cet exemple.</span><span class="sxs-lookup"><span data-stu-id="587d3-173">The screenshot below shows how this example renders.</span></span>  
  
 <span data-ttu-id="587d3-174">![Orientation StackPanel](~/add/media/layout-stackpanelorientationexample.gif "orientation StackPanel")</span><span class="sxs-lookup"><span data-stu-id="587d3-174">![StackPanel orientation](~/add/media/layout-stackpanelorientationexample.gif "StackPanel orientation")</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrientationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OrientationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OrientationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StackPanel.OrientationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OrientationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OrientationProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="587d3-175">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.StackPanel.Orientation" />.</span><span class="sxs-lookup"><span data-stu-id="587d3-175">Identifies the <see cref="P:System.Windows.Controls.StackPanel.Orientation" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.StackPanel.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="PageDown">
      <MemberSignature Language="C#" Value="public void PageDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.PageDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageDown();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="587d3-176">Fait défiler le contenu logiquement d'une page vers le bas.</span><span class="sxs-lookup"><span data-stu-id="587d3-176">Scrolls content logically downward by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-177">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez le <xref:System.Windows.Controls.StackPanel> dans un <xref:System.Windows.Controls.ScrollViewer> et définir son <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="587d3-177">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageLeft">
      <MemberSignature Language="C#" Value="public void PageLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.PageLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageLeft();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageLeft</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="587d3-178">Fait défiler le contenu logiquement d'une page vers la gauche.</span><span class="sxs-lookup"><span data-stu-id="587d3-178">Scrolls content logically to the left by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-179">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez le <xref:System.Windows.Controls.StackPanel> dans un <xref:System.Windows.Controls.ScrollViewer> et définir son <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="587d3-179">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageRight">
      <MemberSignature Language="C#" Value="public void PageRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.PageRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageRight();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageRight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="587d3-180">Fait défiler le contenu logiquement d'une page vers la droite.</span><span class="sxs-lookup"><span data-stu-id="587d3-180">Scrolls content logically to the right by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-181">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez le <xref:System.Windows.Controls.StackPanel> dans un <xref:System.Windows.Controls.ScrollViewer> et définir son <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="587d3-181">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageUp">
      <MemberSignature Language="C#" Value="public void PageUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.PageUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageUp();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="587d3-182">Fait défiler le contenu logiquement d'une page vers le haut.</span><span class="sxs-lookup"><span data-stu-id="587d3-182">Scrolls content logically upward by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-183">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez le <xref:System.Windows.Controls.StackPanel> dans un <xref:System.Windows.Controls.ScrollViewer> et définir son <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="587d3-183">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollOwner">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollViewer ScrollOwner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ScrollViewer ScrollOwner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ScrollOwner" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollOwner As ScrollViewer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollViewer ^ ScrollOwner { System::Windows::Controls::ScrollViewer ^ get(); void set(System::Windows::Controls::ScrollViewer ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ScrollOwner</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollViewer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="587d3-184">Obtient ou définit une valeur qui identifie le conteneur qui contrôle le comportement de défilement de ce <see cref="T:System.Windows.Controls.StackPanel" />.</span><span class="sxs-lookup"><span data-stu-id="587d3-184">Gets or sets a value that identifies the container that controls scrolling behavior in this <see cref="T:System.Windows.Controls.StackPanel" />.</span></span></summary>
        <value><span data-ttu-id="587d3-185"><see cref="T:System.Windows.Controls.ScrollViewer" /> qui détient le défilement de ce <see cref="T:System.Windows.Controls.StackPanel" />.</span><span class="sxs-lookup"><span data-stu-id="587d3-185">The <see cref="T:System.Windows.Controls.ScrollViewer" /> that owns scrolling for this <see cref="T:System.Windows.Controls.StackPanel" />.</span></span> <span data-ttu-id="587d3-186">Cette propriété n’a aucune valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="587d3-186">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-187">Si un <xref:System.Windows.Controls.ScrollViewer> contrôle est le <xref:System.Windows.Controls.StackPanel.ScrollOwner%2A>, le défilement physique est activé.</span><span class="sxs-lookup"><span data-stu-id="587d3-187">If a <xref:System.Windows.Controls.ScrollViewer> control is the <xref:System.Windows.Controls.StackPanel.ScrollOwner%2A>, physical scrolling is enabled.</span></span> <span data-ttu-id="587d3-188">Si un <xref:System.Windows.Controls.StackPanel> est le <xref:System.Windows.Controls.StackPanel.ScrollOwner%2A>, le défilement est logique par élément enfant.</span><span class="sxs-lookup"><span data-stu-id="587d3-188">If a <xref:System.Windows.Controls.StackPanel> is the <xref:System.Windows.Controls.StackPanel.ScrollOwner%2A>, scrolling is logical by child element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHorizontalOffset">
      <MemberSignature Language="C#" Value="public void SetHorizontalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHorizontalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.SetHorizontalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHorizontalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetHorizontalOffset(double offset);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.SetHorizontalOffset(System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="587d3-189">La valeur de la propriété <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" />.</span><span class="sxs-lookup"><span data-stu-id="587d3-189">The value of the <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" /> property.</span></span></param>
        <summary><span data-ttu-id="587d3-190">Définit la valeur de la propriété <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" />.</span><span class="sxs-lookup"><span data-stu-id="587d3-190">Sets the value of the <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" /> property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVerticalOffset">
      <MemberSignature Language="C#" Value="public void SetVerticalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVerticalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.SetVerticalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVerticalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetVerticalOffset(double offset);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.SetVerticalOffset(System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="587d3-191">La valeur de la propriété <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" />.</span><span class="sxs-lookup"><span data-stu-id="587d3-191">The value of the <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" /> property.</span></span></param>
        <summary><span data-ttu-id="587d3-192">Définit la valeur de la propriété <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" />.</span><span class="sxs-lookup"><span data-stu-id="587d3-192">Sets the value of the <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" /> property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.VerticalOffset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="587d3-193">Obtient une valeur qui contient le décalage vertical du contenu parcouru.</span><span class="sxs-lookup"><span data-stu-id="587d3-193">Gets a value that contains the vertical offset of the scrolled content.</span></span></summary>
        <value><span data-ttu-id="587d3-194">Le <see cref="T:System.Double" /> qui représente le décalage vertical du contenu parcouru.</span><span class="sxs-lookup"><span data-stu-id="587d3-194">The <see cref="T:System.Double" /> that represents the vertical offset of the scrolled content.</span></span> <span data-ttu-id="587d3-195">La valeur par défaut est 0,0.</span><span class="sxs-lookup"><span data-stu-id="587d3-195">The default value is 0.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-196">La valeur retournée est décrite en Pixels indépendants du périphérique.</span><span class="sxs-lookup"><span data-stu-id="587d3-196">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportHeight">
      <MemberSignature Language="C#" Value="public double ViewportHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ViewportHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="587d3-197">Obtient une valeur qui contient la taille verticale de la fenêtre d’affichage du contenu.</span><span class="sxs-lookup"><span data-stu-id="587d3-197">Gets a value that contains the vertical size of the content's viewport.</span></span></summary>
        <value><span data-ttu-id="587d3-198">Le <see cref="T:System.Double" /> qui représente la taille verticale de la fenêtre d’affichage du contenu.</span><span class="sxs-lookup"><span data-stu-id="587d3-198">The <see cref="T:System.Double" /> that represents the vertical size of the content's viewport.</span></span> <span data-ttu-id="587d3-199">La valeur par défaut est 0,0.</span><span class="sxs-lookup"><span data-stu-id="587d3-199">The default value is 0.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-200">La valeur retournée est décrite en Pixels indépendants du périphérique.</span><span class="sxs-lookup"><span data-stu-id="587d3-200">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportWidth">
      <MemberSignature Language="C#" Value="public double ViewportWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ViewportWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ViewportWidth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="587d3-201">Obtient une valeur qui contient la taille horizontale de la fenêtre d’affichage du contenu.</span><span class="sxs-lookup"><span data-stu-id="587d3-201">Gets a value that contains the horizontal size of the content's viewport.</span></span></summary>
        <value><span data-ttu-id="587d3-202">Le <see cref="T:System.Double" /> qui représente la taille verticale de la fenêtre d’affichage du contenu.</span><span class="sxs-lookup"><span data-stu-id="587d3-202">The <see cref="T:System.Double" /> that represents the vertical size of the content's viewport.</span></span> <span data-ttu-id="587d3-203">La valeur par défaut est 0,0.</span><span class="sxs-lookup"><span data-stu-id="587d3-203">The default value is 0.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="587d3-204">La valeur retournée est décrite en Pixels indépendants du périphérique.</span><span class="sxs-lookup"><span data-stu-id="587d3-204">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>