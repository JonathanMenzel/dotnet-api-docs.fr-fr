<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ScrollViewer.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5036b415e8c005b477274d00cab422907bbe840d0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">036b415e8c005b477274d00cab422907bbe840d0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.ScrollViewer">
          <source>Represents a scrollable area that can contain other visible elements.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> enables content to be displayed in a smaller area than its actual size.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> permet le contenu devant être affiché dans une zone moins étendue que sa taille réelle.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>When the content of the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> is not entirely visible, the <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> displays scrollbars that the user can use to move the content areas that is visible.</source>
          <target state="translated">Lorsque le contenu de la <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> n’est pas entièrement visible, la <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> affiche des barres de défilement que l’utilisateur peut utiliser pour déplacer les zones de contenu qui est visible.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>The area that includes all of the content of the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> is the extent.</source>
          <target state="translated">La zone qui inclut tout le contenu de la <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> est l’étendue.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>The visible area of the content is the viewport.</source>
          <target state="translated">La zone visible du contenu est la fenêtre d’affichage.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>Physical scrolling is used to scroll content by a predetermined physical increment, typically by a value that is declared in pixels.</source>
          <target state="translated">Le défilement physique est utilisé pour faire défiler le contenu selon un incrément physique prédéterminé, généralement une valeur déclarée en pixels.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>Logical scrolling is used to scroll to the next item in the logical tree.</source>
          <target state="translated">Le défilement logique est utilisé pour faire défiler l’écran jusqu’à l’élément suivant dans l’arborescence logique.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>If you require physical scrolling instead of logical scrolling, wrap the host <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez l’hôte <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> élément dans une <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> et définir son <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> propriété <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>Physical scrolling is the default scroll behavior for most <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> elements.</source>
          <target state="translated">Le défilement physique est le comportement de défilement par défaut pour la plupart des <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> éléments.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>If your <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> contains a large number of items, the scrolling performance may be affected.</source>
          <target state="translated">Si votre <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> contient un grand nombre d’éléments, les performances de défilement peuvent être affectées.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>In this case, set <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled%2A&gt;</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Dans ce cas, définissez <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled%2A&gt;</ph> à <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>This causes the content view to remain static while dragging the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph> and to update only when the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph> is released.</source>
          <target state="translated">Cela entraîne l’affichage de contenu reste statique tout en faisant glisser le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph> et mettre à jour uniquement lorsque le <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph> est libérée.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>Because the scroll bars for a <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> element are defined in the default style of the element, scroll bars will no longer appear if you apply a custom style to a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph>.</source>
          <target state="translated">Étant donné que les barres de défilement pour une <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> élément sont définis dans le style par défaut de l’élément, de barres de défilement n’apparaît plus si vous appliquez un style personnalisé à un <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>Scroll bars must be defined in the custom style for them to appear.</source>
          <target state="translated">Barres de défilement doivent être définis dans le style personnalisé pour qu’ils apparaissent.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>Customizing the ScrollViewer Control</source>
          <target state="translated">Personnalisation du contrôle ScrollViewer</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>To apply the same property settings to multiple <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> controls, use the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> property.</source>
          <target state="translated">Pour appliquer les mêmes paramètres de propriété à plusieurs <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> contrôles, utilisez le <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>You can modify the default <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> to give the control a unique appearance.</source>
          <target state="translated">Vous pouvez modifier la valeur par défaut <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> pour donner une apparence unique au contrôle.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>For more information about creating a <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, see <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la création d’un <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, consultez <bpt id="p1">[</bpt>personnalisation de l’apparence d’un contrôle existant en créant un ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>To see the parts and states that are specific to the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph>, see <bpt id="p1">[</bpt>ScrollViewer Styles and Templates<ept id="p1">](~/docs/framework/wpf/controls/scrollviewer-styles-and-templates.md)</ept>.</source>
          <target state="translated">Pour afficher les parties et les États qui sont spécifiques à la <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph>, consultez <bpt id="p1">[</bpt>ScrollViewer Styles et modèles<ept id="p1">](~/docs/framework/wpf/controls/scrollviewer-styles-and-templates.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>Dependency properties for this control might be set by the control’s default style.</source>
          <target state="translated">Propriétés de dépendance pour ce contrôle peuvent être définies par le style par défaut.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>If a property is set by a default style, the property might change from its default value when the control appears in the application.</source>
          <target state="translated">Si une propriété est définie par un style par défaut, la propriété peut changer sa valeur par défaut lorsque le contrôle s’affiche dans l’application.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>The default style is determined by which desktop theme is used when the application is running.</source>
          <target state="translated">Le style par défaut est déterminé par le thème de bureau est utilisé lors de l’application est en cours d’exécution.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>For more information, see <bpt id="p1">[</bpt>Default WPF Themes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>par défaut des thèmes WPF<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>Setting a visual property will only have an effect if that property is both present in <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> control's default template and is set by using a .</source>
          <target state="translated">Définition d’une propriété visuelle uniquement aura un effet si ces propriétés sont toutes deux présentes dans <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> contrôle du modèle par défaut et est définie à l’aide d’un.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">Vous trouverez une liste de propriétés visual dans la section « Modification le Visual Structure d’un contrôle » <bpt id="p1">[</bpt>personnalisation de l’apparence d’un contrôle existant en créant un ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> that contains some text and a rectangle.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> qui contient du texte et un rectangle.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>The scroll bars appear only when they are needed.</source>
          <target state="translated">Les barres de défilement s’affichent uniquement lorsqu’elles sont nécessaires.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ScrollViewer">
          <source>When you resize the window, the scroll bars appear and disappear.</source>
          <target state="translated">Lorsque vous redimensionnez la fenêtre, les barres de défilement apparaissent et disparaissent.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.ArrangeOverride(System.Windows.Size)">
          <source>The final area within the parent that this element should use to arrange itself and its children.</source>
          
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.ArrangeOverride(System.Windows.Size)">
          <source>Arranges the content of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ArrangeOverride(System.Windows.Size)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Controls.ScrollViewer.ArrangeOverride(System.Windows.Size)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Controls.ScrollViewer.ArrangeOverride(System.Windows.Size)" /&gt;</ph> method</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see cref="M:System.Windows.Controls.ScrollViewer.ArrangeOverride(System.Windows.Size)" /&gt;</ph> dans une classe dérivée, veillez à appeler la classe de base <ph id="ph2">&lt;see cref="M:System.Windows.Controls.ScrollViewer.ArrangeOverride(System.Windows.Size)" /&gt;</ph> (méthode)</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
          <source>Gets or sets a value that indicates whether elements that support the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.IScrollInfo" /&gt;</ph> interface are allowed to scroll.</source>
          
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> scrolls in terms of logical units; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> scrolls in terms of physical units.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Si le <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> défile en unités logiques ; <ph id="ph3">&lt;see langword="false" /&gt;</ph> si le <ph id="ph4">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> défile en unités physiques.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
          <source>Content in a <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> can be scrolled in terms of physical units or logical units.</source>
          <target state="translated">Contenu dans un <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> peut défiler en termes d’unités physiques ou d’unités logiques.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
          <source>Physical units are device independent pixels.</source>
          <target state="translated">Unités physiques sont des pixels indépendants du périphérique.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
          <source>Logical units are used for scrolling items within an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.</source>
          <target state="translated">Unités logiques sont utilisées pour le défilement des éléments dans un <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
          <source>The default behavior of the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> is to use physical units to scroll its content.</source>
          <target state="translated">Le comportement par défaut de la <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> consiste à utiliser des unités physiques pour faire défiler son contenu.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
          <source>However, in cases where the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, the content could use logical units to scroll.</source>
          <target state="translated">Toutefois, dans le cas où la <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> a la valeur <ph id="ph2">`true`</ph>, le contenu peut utiliser des unités logiques pour faire défiler.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
          <source>For example, <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, and other controls that inherit from <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> use logical units to scroll.</source>
          <target state="translated">Par exemple, <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.ListView&gt;</ph>et d’autres contrôles qui héritent de <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> utiliser des unités logiques pour faire défiler.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the values of the <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.ExtentHeight%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollableHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ScrollViewer.ViewportHeight%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph> properties are number of items, instead of physical units.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> est <ph id="ph2">`true`</ph>, les valeurs de la <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.ExtentHeight%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollableHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ScrollViewer.ViewportHeight%2A&gt;</ph>, et <ph id="ph6">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph> propriétés sont un nombres d’éléments, au lieu d’unités physiques.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
          <source>If you require physical scrolling instead of logical scrolling, wrap the host <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez l’hôte <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> élément dans une <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> et définir son <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> propriété <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
          <source>Physical scrolling is the default scroll behavior for most <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> elements.</source>
          <target state="translated">Le défilement physique est le comportement de défilement par défaut pour la plupart des <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> éléments.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
          <source>None</source>
          <target state="translated">Aucun</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
          <source>The following example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property by using code.</source>
          <target state="translated">L’exemple suivant montre comment définir le <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> propriété à l’aide de code.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.CanContentScrollProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility">
          <source>Gets a value that indicates whether the horizontal <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.ScrollBar" /&gt;</ph> is visible.</source>
          
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Visibility" /&gt;</ph> that indicates whether the horizontal scroll bar is visible.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Windows.Visibility" /&gt;</ph> qui indique si la barre de défilement horizontale est visible.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility">
          <source>None</source>
          <target state="translated">Aucun</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibilityProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility">
          <source>Gets a value that indicates whether the vertical <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.ScrollBar" /&gt;</ph> is visible.</source>
          
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Visibility" /&gt;</ph> that indicates whether the vertical scroll bar is visible.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Windows.Visibility" /&gt;</ph> qui indique si la barre de défilement verticale est visible.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility">
          <source>None</source>
          <target state="translated">Aucun</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibilityProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset">
          <source>Gets the horizontal offset of the visible content.</source>
          
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset">
          <source>The horizontal offset of the visible content.</source>
          <target state="translated">Le décalage horizontal du contenu visible.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the content is scrolled when the user releases the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.ScrollBar&gt;</ph>.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled%2A&gt;</ph> est <ph id="ph2">`true`</ph>, le contenu défile lorsque l’utilisateur relâche le <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph> de la <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.ScrollBar&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset">
          <source>When the user drags the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset%2A&gt;</ph> value does not change.</source>
          <target state="translated">Lorsque l’utilisateur fait glisser le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph>, le <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset%2A&gt;</ph> valeur ne change pas.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset">
          <source>When the user releases the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset%2A&gt;</ph> updates to the current <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.HorizontalOffset%2A&gt;</ph> value.</source>
          <target state="translated">Lorsque l’utilisateur relâche le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset%2A&gt;</ph> mises à jour en cours <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.HorizontalOffset%2A&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the content is scrolled when the user drags the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph>.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled%2A&gt;</ph> est <ph id="ph2">`false`</ph>, le contenu défile lorsque l’utilisateur fait glisser le <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset">
          <source>In this case, <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ContentVerticalOffset%2A&gt;</ph> is always equal to <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.HorizontalOffset%2A&gt;</ph>.</source>
          <target state="translated">Dans ce cas, <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ContentVerticalOffset%2A&gt;</ph> est toujours égale à <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.HorizontalOffset%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.ContentHorizontalOffsetProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.ContentVerticalOffset">
          <source>Gets the vertical offset of the visible content.</source>
          
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ContentVerticalOffset">
          <source>The vertical offset of the visible content.</source>
          <target state="translated">Le décalage vertical du contenu visible.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ContentVerticalOffset">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the content is scrolled when the user releases the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.ScrollBar&gt;</ph>.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled%2A&gt;</ph> est <ph id="ph2">`true`</ph>, le contenu défile lorsque l’utilisateur relâche le <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph> de la <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.ScrollBar&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ContentVerticalOffset">
          <source>When the user drags the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.ContentVerticalOffset%2A&gt;</ph> does not change.</source>
          <target state="translated">Lorsque l’utilisateur fait glisser le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph>, le <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.ContentVerticalOffset%2A&gt;</ph> ne change pas.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ContentVerticalOffset">
          <source>When the user releases the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.ContentVerticalOffset%2A&gt;</ph> updates to the current <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph> value.</source>
          <target state="translated">Lorsque l’utilisateur relâche le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.ContentVerticalOffset%2A&gt;</ph> mises à jour en cours <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ContentVerticalOffset">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the content is scrolled when the user drags the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph>.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled%2A&gt;</ph> est <ph id="ph2">`false`</ph>, le contenu défile lorsque l’utilisateur fait glisser le <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ContentVerticalOffset">
          <source>In this case, <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ContentVerticalOffset%2A&gt;</ph> is always equal to <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph>.</source>
          <target state="translated">Dans ce cas, <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ContentVerticalOffset%2A&gt;</ph> est toujours égale à <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.ContentVerticalOffsetProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.ContentVerticalOffset" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.ExtentHeight">
          <source>Gets a value that contains the vertical size of the extent.</source>
          
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ExtentHeight">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the vertical size of the extent.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente la taille verticale de l’étendue.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ExtentHeight">
          <source>The default is 0.0.</source>
          <target state="translated">La valeur par défaut est 0.0.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ExtentHeight">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ExtentHeight%2A&gt;</ph> is only an output property; it can effectively be set by specifying the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> of the content element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ExtentHeight%2A&gt;</ph> est uniquement une propriété de sortie ; elle peut être définie efficacement en spécifiant la <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> de l’élément de contenu.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ExtentHeight">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the values of the <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.ExtentHeight%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollableHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ScrollViewer.ViewportHeight%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph> properties are number of items.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> est <ph id="ph2">`true`</ph>, les valeurs de la <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.ExtentHeight%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollableHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ScrollViewer.ViewportHeight%2A&gt;</ph>, et <ph id="ph6">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph> propriétés sont un nombres d’éléments.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ExtentHeight">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the values of these properties are Device Independent Pixels.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> est <ph id="ph2">`false`</ph>, les valeurs de ces propriétés sont les Pixels indépendants du périphérique.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ExtentHeight">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ExtentHeight">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ExtentHeight">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ExtentHeight">
          <source>None</source>
          <target state="translated">Aucun</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.ExtentHeightProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.ExtentHeight" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.ExtentWidth">
          <source>Gets a value that contains the horizontal size of the extent.</source>
          
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ExtentWidth">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the horizontal size of the extent.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente la taille horizontale de l’étendue.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ExtentWidth">
          <source>The default is 0.0.</source>
          <target state="translated">La valeur par défaut est 0.0.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ExtentWidth">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ExtentWidth%2A&gt;</ph> is only an output property; it can effectively be set by specifying the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> of the content element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ExtentWidth%2A&gt;</ph> est uniquement une propriété de sortie ; elle peut être définie efficacement en spécifiant la <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> de l’élément de contenu.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ExtentWidth">
          <source>The returned value is described in Device Independent Pixels.</source>
          <target state="translated">La valeur retournée est décrite en Pixels indépendants du périphérique.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ExtentWidth">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ExtentWidth">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ExtentWidth">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ExtentWidth">
          <source>None</source>
          <target state="translated">Aucun</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.ExtentWidthProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.ExtentWidth" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetCanContentScroll(System.Windows.DependencyObject)">
          <source>The element from which the property value is read.</source>
          
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetCanContentScroll(System.Windows.DependencyObject)">
          <source>Gets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll" /&gt;</ph> dependency property from a given element.</source>
          
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetCanContentScroll(System.Windows.DependencyObject)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this element can scroll; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetHorizontalScrollBarVisibility(System.Windows.DependencyObject)">
          <source>The element from which the property value is read.</source>
          
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetHorizontalScrollBarVisibility(System.Windows.DependencyObject)">
          <source>Gets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /&gt;</ph> dependency property from a given element.</source>
          
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetHorizontalScrollBarVisibility(System.Windows.DependencyObject)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetIsDeferredScrollingEnabled(System.Windows.DependencyObject)">
          <source>The object from which to get <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetIsDeferredScrollingEnabled(System.Windows.DependencyObject)">
          <source>Returns the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /&gt;</ph> property for the specified object.</source>
          
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetIsDeferredScrollingEnabled(System.Windows.DependencyObject)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the content is stationary when the user drags the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Thumb" /&gt;</ph> of a <ph id="ph3">&lt;see cref="T:System.Windows.Controls.Primitives.ScrollBar" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetPanningDeceleration(System.Windows.DependencyObject)">
          <source>The element from which the property value is read.</source>
          
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetPanningDeceleration(System.Windows.DependencyObject)">
          <source>Returns the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /&gt;</ph> property for the specified object.</source>
          
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetPanningDeceleration(System.Windows.DependencyObject)">
          <source>The rate <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> slows in <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph> per squared millisecond.</source>
          
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetPanningMode(System.Windows.DependencyObject)">
          <source>The element from which the property value is read.</source>
          
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetPanningMode(System.Windows.DependencyObject)">
          <source>Returns the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /&gt;</ph> property for the specified object.</source>
          
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetPanningMode(System.Windows.DependencyObject)">
          <source>A value that specifies how <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> reacts to touch manipulation.</source>
          
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetPanningRatio(System.Windows.DependencyObject)">
          <source>The element from which the property value is read.</source>
          
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetPanningRatio(System.Windows.DependencyObject)">
          <source>Returns the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /&gt;</ph> property for the specified object.</source>
          
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetPanningRatio(System.Windows.DependencyObject)">
          <source>The ratio of scrolling offset to translate manipulation offset.</source>
          
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetVerticalScrollBarVisibility(System.Windows.DependencyObject)">
          <source>The element from which the property value is read.</source>
          
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetVerticalScrollBarVisibility(System.Windows.DependencyObject)">
          <source>Gets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /&gt;</ph> dependency property from a given element.</source>
          
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.GetVerticalScrollBarVisibility(System.Windows.DependencyObject)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.HandlesScrolling">
          <source>Gets a value that indicates that a control has a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> defined in its style that defines custom keyboard scrolling behavior.</source>
          
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.HandlesScrolling">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this control defines custom keyboard scrolling behavior; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Si ce contrôle définit un comportement ; de défilement clavier personnalisé dans le cas contraire, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.HandlesScrolling">
          <source>If this property returns <ph id="ph1">`true`</ph>, keyboard input is not handled by the <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph>.</source>
          <target state="translated">Si cette propriété retourne <ph id="ph1">`true`</ph>, entrée au clavier n’est pas gérée par le <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <source>The parameters for hit testing within a visual object.</source>
          
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <source>Performs a hit test to determine whether the specified points are within the bounds of this <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <source>The result of the hit test.</source>
          
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
          <source>Gets a value that contains the horizontal offset of the scrolled content.</source>
          
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the horizontal offset of the scrolled content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente le décalage horizontal du contenu parcouru.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
          <source>The default is 0.0.</source>
          <target state="translated">La valeur par défaut est 0.0.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
          <source>A positive <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.HorizontalOffset%2A&gt;</ph> value corresponds to the content being offset to the left.</source>
          <target state="translated">Un nombre positif <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.HorizontalOffset%2A&gt;</ph> valeur correspond au contenu décalé vers la gauche.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
          <source>Valid values are between zero and the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ExtentWidth%2A&gt;</ph> minus the <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.ViewportWidth%2A&gt;</ph>.</source>
          <target state="translated">Les valeurs valides sont comprises entre zéro et le <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ExtentWidth%2A&gt;</ph> moins le <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.ViewportWidth%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
          <source>The returned value is described in Device Independent Pixels.</source>
          <target state="translated">La valeur retournée est décrite en Pixels indépendants du périphérique.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
          <source>Beginning in the .NET Framework version 3.5 SP1, when <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.HorizontalOffset%2A&gt;</ph> continues to change as the user drags the <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph>, but the content view doesn't change until the <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph> is released.</source>
          <target state="translated">À compter de .NET Framework version 3.5 SP1, lorsque <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled%2A&gt;</ph> est <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.HorizontalOffset%2A&gt;</ph> continue d’être modifié en tant que l’utilisateur fait glisser le <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph>, mais ne modifie pas l’affichage du contenu jusqu'à ce que le <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph> est libérée.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
          <source>In this case, <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset%2A&gt;</ph> represents the visible content offset and <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.HorizontalOffset%2A&gt;</ph> represents the content offset based on the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph> position.</source>
          <target state="translated">Dans ce cas, <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset%2A&gt;</ph> représente le décalage de contenu visible et <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.HorizontalOffset%2A&gt;</ph> représente le décalage de contenu basé sur le <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph> position.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
          <source>None</source>
          <target state="translated">Aucun</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.HorizontalOffsetProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.HorizontalOffset" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility">
          <source>Gets or sets a value that indicates whether a horizontal <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.ScrollBar" /&gt;</ph> should be displayed.</source>
          
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollBarVisibility" /&gt;</ph> value that indicates whether a horizontal <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.ScrollBar" /&gt;</ph> should be displayed.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollBarVisibility" /&gt;</ph> valeur qui indique si une horizontale <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.ScrollBar" /&gt;</ph> doit être affiché.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility">
          <source>This property also has an attached property usage.</source>
          <target state="translated">Cette propriété a également une utilisation de la propriété jointe.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.InvalidateScrollInfo">
          <source>Called by an <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.IScrollInfo" /&gt;</ph> interface that is attached to a <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> when the value of any scrolling property size changes.</source>
          
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.InvalidateScrollInfo">
          <source>Scrolling properties include offset, extent, or viewport.</source>
          
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.InvalidateScrollInfo">
          <source>This method handles invalidation of other elements, such as scroll bars, that depend on the scrolling properties of this <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph>.</source>
          <target state="translated">Cette méthode gère l’invalidation d’autres éléments, tels que des barres de défilement, qui dépendent des propriétés de défilement de ce <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled">
          <source>Gets or sets a value that indicates whether the content is stationary when the user drags the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Thumb" /&gt;</ph> of a <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.ScrollBar" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the content is stationary when the user drags the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Thumb" /&gt;</ph> of a <ph id="ph3">&lt;see cref="T:System.Windows.Controls.Primitives.ScrollBar" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Si le contenu est stationnaire lorsque l’utilisateur fait glisser le <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Thumb" /&gt;</ph> d’un <ph id="ph3">&lt;see cref="T:System.Windows.Controls.Primitives.ScrollBar" /&gt;</ph>; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled">
          <source>Displaying a large number of items may cause performance issues.</source>
          <target state="translated">Affichage d’un grand nombre d’éléments peut entraîner des problèmes de performances.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled">
          <source>In this case, it might be useful to use deferred scrolling.</source>
          <target state="translated">Dans ce cas, il peut être utile d’utiliser le défilement différé.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled">
          <source>For more information, see <bpt id="p1">[</bpt>Optimizing Performance: Controls<ept id="p1">](~/docs/framework/wpf/advanced/optimizing-performance-controls.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>optimisation des performances : contrôles<ept id="p1">](~/docs/framework/wpf/advanced/optimizing-performance-controls.md)</ept>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled">
          <source>This property can be used as an instance property and an attached property.</source>
          <target state="translated">Cette propriété peut être utilisée comme une propriété d’instance et une propriété jointe.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> with the <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled%2A&gt;</ph> property set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">L’exemple suivant montre un <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> avec la <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled%2A&gt;</ph> propriété <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabledProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.LineDown">
          <source>Scrolls the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> content downward by one line.</source>
          
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.LineDown">
          <source>This method does not induce any scrolling behavior if <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Cette méthode n’induit pas de comportement de défilement si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> est <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.LineDown">
          <source>Logical scrolling is used to scroll to the next element in the logical tree.</source>
          <target state="translated">Défilement logique est utilisé pour accéder à l’élément suivant dans l’arborescence logique.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.LineDown">
          <source>This differs from physical scrolling, which scrolls content by a defined physical increment in a given direction.</source>
          <target state="translated">Cela diffère du défilement physique, qui fait défiler le contenu par un incrément physique défini dans une direction donnée.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.LineDown">
          <source>If you require physical scrolling instead of logical scrolling, wrap the host <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez l’hôte <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> élément dans une <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> et définir son <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> propriété <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.LineLeft">
          <source>Scrolls the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> content to the left by a predetermined amount.</source>
          
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.LineLeft">
          <source>This method does not induce any scrolling behavior if <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Cette méthode n’induit pas de comportement de défilement si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> est <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.LineLeft">
          <source>Logical scrolling is used to scroll to the next element in the logical tree.</source>
          <target state="translated">Défilement logique est utilisé pour accéder à l’élément suivant dans l’arborescence logique.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.LineLeft">
          <source>This differs from physical scrolling, which scrolls content by a defined physical increment in a given direction.</source>
          <target state="translated">Cela diffère du défilement physique, qui fait défiler le contenu par un incrément physique défini dans une direction donnée.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.LineLeft">
          <source>If you require physical scrolling instead of logical scrolling, wrap the host <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez l’hôte <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> élément dans une <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> et définir son <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> propriété <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.LineRight">
          <source>Scrolls the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> content to the right by a predetermined amount.</source>
          
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.LineRight">
          <source>This method does not induce any scrolling behavior if <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Cette méthode n’induit pas de comportement de défilement si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> est <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.LineRight">
          <source>Logical scrolling is used to scroll to the next element in the logical tree.</source>
          <target state="translated">Défilement logique est utilisé pour accéder à l’élément suivant dans l’arborescence logique.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.LineRight">
          <source>This differs from physical scrolling, which scrolls content by a defined physical increment in a given direction.</source>
          <target state="translated">Cela diffère du défilement physique, qui fait défiler le contenu par un incrément physique défini dans une direction donnée.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.LineRight">
          <source>If you require physical scrolling instead of logical scrolling, wrap the host <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez l’hôte <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> élément dans une <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> et définir son <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> propriété <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.LineUp">
          <source>Scrolls the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> content upward by one line.</source>
          
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.LineUp">
          <source>This method does not induce any scrolling behavior if <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Cette méthode n’induit pas de comportement de défilement si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> est <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.LineUp">
          <source>Logical scrolling is used to scroll to the next element in the logical tree.</source>
          <target state="translated">Défilement logique est utilisé pour accéder à l’élément suivant dans l’arborescence logique.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.LineUp">
          <source>This differs from physical scrolling, which scrolls content by a defined physical increment in a given direction.</source>
          <target state="translated">Cela diffère du défilement physique, qui fait défiler le contenu par un incrément physique défini dans une direction donnée.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.LineUp">
          <source>If you require physical scrolling instead of logical scrolling, wrap the host <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez l’hôte <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> élément dans une <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> et définir son <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> propriété <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.MeasureOverride(System.Windows.Size)">
          <source>The upper limit <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> that should not be exceeded.</source>
          
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.MeasureOverride(System.Windows.Size)">
          <source>Measures the content of a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> element.</source>
          
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.MeasureOverride(System.Windows.Size)">
          <source>The computed desired limit <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> element.</source>
          
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnApplyTemplate">
          <source>Called when an internal process or application calls <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /&gt;</ph>, which is used to build the current template's visual tree.</source>
          
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnCreateAutomationPeer">
          <source>Provides an appropriate <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> implementation for this control, as part of the <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> automation infrastructure.</source>
          
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnCreateAutomationPeer">
          <source>The appropriate <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> implementation for this control.</source>
          
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>Required arguments for this event.</source>
          
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>Responds to specific keyboard input and invokes associated scrolling behavior.</source>
          
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>The following keyboard input is recognized:</source>
          <target state="translated">L’entrée au clavier suivantes est reconnue :</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>The LEFT ARROW key: Scrolls content one line to the left.</source>
          <target state="translated">La touche gauche : fait défiler le contenu une seule ligne à gauche.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>The RIGHT ARROW key: Scrolls content one line to the right.</source>
          <target state="translated">La touche flèche droite : fait défiler le contenu une ligne vers la droite.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>The UP ARROW key: Scrolls content upward by one line.</source>
          <target state="translated">La touche haut : fait défiler le contenu d’une ligne vers le haut.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>The DOWN ARROW key: Scrolls content downward by one line.</source>
          <target state="translated">La touche bas : fait défiler le contenu vers le bas d’une ligne.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>PAGE UP: Scrolls content to the top of the current page.</source>
          <target state="translated">PAGE précédente : Fait défiler le contenu vers le haut de la page actuelle.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>PAGE DOWN: Scrolls content to the bottom of the current page.</source>
          <target state="translated">PAGE suivante : Fait défiler le contenu vers le bas de la page actuelle.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>HOME: Scrolls content to the top of the first page.</source>
          <target state="translated">Page d’accueil : Fait défiler le contenu vers le haut de la première page.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>END: Scrolls content to the bottom of the last page.</source>
          <target state="translated">FIN : Fait défiler le contenu vers le bas de la dernière page.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
          <source>The event data.</source>
          
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
          <source>Called when the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.ManipulationCompleted" /&gt;</ph> event occurs.</source>
          
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.OnManipulationCompleted%2A&gt;</ph> method sets the <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.OnManipulationCompleted%2A&gt;</ph> méthode définit la <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> propriété <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
          <source>The event data.</source>
          
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
          <source>Called when the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.ManipulationDelta" /&gt;</ph> event occurs.</source>
          
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.OnManipulationDelta%2A&gt;</ph> method sets the <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.OnManipulationDelta%2A&gt;</ph> méthode définit la <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> propriété <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)">
          <source>The event data.</source>
          
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)">
          <source>Called when the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /&gt;</ph> event occurs.</source>
          
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.OnManipulationInertiaStarting%2A&gt;</ph> method sets the <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.OnManipulationInertiaStarting%2A&gt;</ph> méthode définit la <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> propriété <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)">
          <source>The event data.</source>
          
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)">
          <source>Called when the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.ManipulationStarting" /&gt;</ph> event occurs.</source>
          
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.OnManipulationInertiaStarting%2A&gt;</ph> method sets the <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.OnManipulationInertiaStarting%2A&gt;</ph> méthode définit la <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> propriété <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>Required arguments that describe this event.</source>
          
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>Responds to a click of the left mouse button.</source>
          
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
          <source>Required arguments that describe this event.</source>
          
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
          <source>Responds to a click of the mouse wheel.</source>
          
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnScrollChanged(System.Windows.Controls.ScrollChangedEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollChangedEventArgs" /&gt;</ph> that contain information about the change in the scrolling state.</source>
          
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnScrollChanged(System.Windows.Controls.ScrollChangedEventArgs)">
          <source>Called when a change in scrolling state is detected, such as a change in scroll position, extent, or viewport size.</source>
          
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.OnScrollChanged(System.Windows.Controls.ScrollChangedEventArgs)">
          <source>If you override this method, call <ph id="ph1">`base.OnScrollChanged(ScrollChangedEventArgs)`</ph> to ensure that this event is raised.</source>
          <target state="translated">Si vous substituez cette méthode, appelez <ph id="ph1">`base.OnScrollChanged(ScrollChangedEventArgs)`</ph> pour vous assurer que cet événement est déclenché.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /&gt;</ph> that contains information about the gesture.</source>
          
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
          <source>Called when a tap gesture initiated by a stylus is detected.</source>
          
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
          <source>Used internally to make decisions about panning.</source>
          <target state="translated">Utilisé en interne pour prendre des décisions concernant le panoramique.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.PageDown">
          <source>Scrolls the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> content downward by one page.</source>
          
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.PageDown">
          <source>This method does not induce any scrolling behavior if <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Cette méthode n’induit pas de comportement de défilement si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> est <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.PageDown">
          <source>Logical scrolling is used to scroll to the next element in the logical tree.</source>
          <target state="translated">Défilement logique est utilisé pour accéder à l’élément suivant dans l’arborescence logique.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.PageDown">
          <source>This differs from physical scrolling, which scrolls content by a defined physical increment in a given direction.</source>
          <target state="translated">Cela diffère du défilement physique, qui fait défiler le contenu par un incrément physique défini dans une direction donnée.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.PageDown">
          <source>If you require physical scrolling instead of logical scrolling, wrap the host <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez l’hôte <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> élément dans une <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> et définir son <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> propriété <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.PageLeft">
          <source>Scrolls the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> content to the left by one page.</source>
          
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.PageLeft">
          <source>This method does not induce any scrolling behavior if <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Cette méthode n’induit pas de comportement de défilement si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> est <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.PageLeft">
          <source>Logical scrolling is used to scroll to the next element in the logical tree.</source>
          <target state="translated">Défilement logique est utilisé pour accéder à l’élément suivant dans l’arborescence logique.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.PageLeft">
          <source>This differs from physical scrolling, which scrolls content by a defined physical increment in a given direction.</source>
          <target state="translated">Cela diffère du défilement physique, qui fait défiler le contenu par un incrément physique défini dans une direction donnée.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.PageLeft">
          <source>If you require physical scrolling instead of logical scrolling, wrap the host <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez l’hôte <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> élément dans une <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> et définir son <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> propriété <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.PageRight">
          <source>Scrolls the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> content to the right by one page.</source>
          
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.PageRight">
          <source>This method does not induce any scrolling behavior if <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Cette méthode n’induit pas de comportement de défilement si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> est <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.PageRight">
          <source>Logical scrolling is used to scroll to the next element in the logical tree.</source>
          <target state="translated">Défilement logique est utilisé pour accéder à l’élément suivant dans l’arborescence logique.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.PageRight">
          <source>This differs from physical scrolling, which scrolls content by a defined physical increment in a given direction.</source>
          <target state="translated">Cela diffère du défilement physique, qui fait défiler le contenu par un incrément physique défini dans une direction donnée.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.PageRight">
          <source>If you require physical scrolling instead of logical scrolling, wrap the host <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez l’hôte <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> élément dans une <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> et définir son <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> propriété <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.PageUp">
          <source>Scrolls the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> content upward by one page.</source>
          
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.PageUp">
          <source>This method does not induce any scrolling behavior if <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Cette méthode n’induit pas de comportement de défilement si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> est <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.PanningDeceleration">
          <source>Gets or sets the rate <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> slows in <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph> per squared millisecond when in inertia.</source>
          
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningDeceleration">
          <source>The rate <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> slows in <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph> per squared millisecond.</source>
          <target state="translated">Le taux <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> ralentit dans <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph> par milliseconde au carré.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningDeceleration">
          <source>When a user scrolls the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> by using touch, the user puts a finger on the <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph>, moves the finger across the screen for a short distance, and then lifts the finger while it is moving.</source>
          <target state="translated">Lorsqu’un utilisateur fait défiler le <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> à l’aide des fonctions tactiles, l’utilisateur place un doigt sur le <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph>, déplace le doigt sur l’écran sur une courte distance, puis élévations le doigt pendant qu’il se déplace.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningDeceleration">
          <source>The result of this is that the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> will continue to move after the user lifts the finger.</source>
          <target state="translated">La conséquence de cela est que le <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> continuera à se déplacer une fois que l’utilisateur lève le doigt.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningDeceleration">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.PanningDeceleration%2A&gt;</ph> property specifies the rate the scrolling slows after the user lifts the finger.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.PanningDeceleration%2A&gt;</ph> propriété spécifie le taux de ralentissement du défilement après que l’utilisateur a soulevé le doigt.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.PanningDecelerationProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.PanningMode">
          <source>Gets or sets the way <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> reacts to touch manipulation.</source>
          
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningMode">
          <source>A value that specifies how <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> reacts to touch manipulation.</source>
          <target state="translated">Une valeur qui spécifie comment <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> réagit à la manipulation tactile.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningMode">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Controls.PanningMode.None" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see cref="F:System.Windows.Controls.PanningMode.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.PanningMode%2A&gt;</ph> property specifies whether the <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> scroll horizontally, vertically, or both.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.PanningMode%2A&gt;</ph> propriété spécifie si le <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> défile horizontalement, verticalement, ou les deux.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> will scroll when a user drags a finger on the control on a touch device that supports Windows Touch.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> défile lorsqu’un utilisateur fait glisser un doigt sur le contrôle sur un périphérique tactile qui prend en charge l’interface tactile Windows.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningMode">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.PanningMode%2A&gt;</ph> can be either set directly on a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> or used as an attached property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.PanningMode%2A&gt;</ph> peut être défini directement sur un <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> ou utilisé comme une propriété jointe.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningMode">
          <source>When a control contains a <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> in its <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, use <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.PanningMode%2A?displayProperty=nameWithType&gt;</ph> as an attached property to specify the behavior of the <ph id="ph4">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> in the <ph id="ph5">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</source>
          <target state="translated">Lorsqu’un contrôle contient un <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> dans son <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, utilisez <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.PanningMode%2A?displayProperty=nameWithType&gt;</ph> comme une propriété jointe pour spécifier le comportement de la <ph id="ph4">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> dans le <ph id="ph5">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningMode">
          <source>When you use a <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> outside of a <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, set <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.PanningMode%2A&gt;</ph> directly on the <ph id="ph4">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph>.</source>
          <target state="translated">Lorsque vous utilisez un <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> en dehors d’un <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, définissez <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.PanningMode%2A&gt;</ph> directement sur le <ph id="ph4">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningMode">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and adds several elements to it.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> et lui ajoute plusieurs éléments.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningMode">
          <source>In this example, when the size of the window changes, the size of <ph id="ph1">`textblock1`</ph> also changes.</source>
          <target state="translated">Dans cet exemple, lorsque la taille de la fenêtre change, la taille de <ph id="ph1">`textblock1`</ph> change également.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningMode">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> is too small to display all of the content, the <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> becomes scrollable.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> est trop petite pour afficher tout le contenu, le <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> devient permettant le défilement.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningMode">
          <source>The example sets <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.PanningMode%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Controls.PanningMode.Both&gt;</ph> so that the user can scroll the <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> horizontally and vertically by using a finger.</source>
          <target state="translated">L’exemple définit <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.PanningMode%2A&gt;</ph> à <ph id="ph2">&lt;xref:System.Windows.Controls.PanningMode.Both&gt;</ph> afin que l’utilisateur peut faire défiler vers le <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> horizontalement et verticalement en utilisant un doigt.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningMode">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and uses <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.PanningMode%2A?displayProperty=nameWithType&gt;</ph> as an attached property.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> et utilise <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.PanningMode%2A?displayProperty=nameWithType&gt;</ph> comme une propriété jointe.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningMode">
          <source>By default the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> in the <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> of a <ph id="ph3">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> has its <ph id="ph4">&lt;xref:System.Windows.Controls.PanningMode&gt;</ph> to <ph id="ph5">&lt;xref:System.Windows.Controls.PanningMode.VerticalFirst&gt;</ph>.</source>
          <target state="translated">Par défaut le <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> dans les <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> d’un <ph id="ph3">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> a son <ph id="ph4">&lt;xref:System.Windows.Controls.PanningMode&gt;</ph> à <ph id="ph5">&lt;xref:System.Windows.Controls.PanningMode.VerticalFirst&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningMode">
          <source>This is so that when the user moves a finger horizontally before moving it vertically, the user highlights text.</source>
          <target state="translated">Il s’agit afin que lorsque l’utilisateur déplace horizontalement un doigt avant de le déplacer verticalement, l’utilisateur met en surbrillance le texte.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningMode">
          <source>The example sets <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.PanningMode%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Controls.PanningMode.VerticalOnly&gt;</ph> so that the user cannot select text by using a finger.</source>
          <target state="translated">L’exemple définit <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.PanningMode%2A&gt;</ph> à <ph id="ph2">&lt;xref:System.Windows.Controls.PanningMode.VerticalOnly&gt;</ph> afin que l’utilisateur ne peut pas sélectionner le texte à l’aide d’un doigt.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningMode">
          <source>Note that setting <ph id="ph1">&lt;xref:System.Windows.Controls.PanningMode&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Controls.PanningMode.Both&gt;</ph> also prevents the user from selecting text.</source>
          <target state="translated">Notez que la définition <ph id="ph1">&lt;xref:System.Windows.Controls.PanningMode&gt;</ph> à <ph id="ph2">&lt;xref:System.Windows.Controls.PanningMode.Both&gt;</ph> empêche également l’utilisateur à partir de la sélection de texte.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningMode">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.TextWrapping&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.TextWrapping.Wrap&gt;</ph>, so horizontal scrolling is not necessary.</source>
          <target state="translated">L’exemple définit le <ph id="ph1">&lt;xref:System.Windows.TextWrapping&gt;</ph> propriété <ph id="ph2">&lt;xref:System.Windows.TextWrapping.Wrap&gt;</ph>, n’est pas nécessaire de défilement horizontal.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.PanningModeProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.PanningRatio">
          <source>Gets or sets the ratio of scrolling offset to translate manipulation offset.</source>
          
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningRatio">
          <source>The ratio of scrolling offset to translate manipulation offset.</source>
          <target state="translated">Le rapport de décalage pour traduire le décalage de manipulation de défilement.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningRatio">
          <source>The default is 1.</source>
          <target state="translated">La valeur par défaut est 1.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningRatio">
          <source>When a user drags a finger across an object, it is considered a translate manipulation.</source>
          <target state="translated">Lorsqu’un utilisateur fait glisser un doigt sur un objet, il est considéré comme une manipulation de translation.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningRatio">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> uses that manipulation to scroll.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> utilise cette manipulation pour faire défiler.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningRatio">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.PanningRatio%2A&gt;</ph> property specifies how much the <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> scrolls for each unit of translation.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.PanningRatio%2A&gt;</ph> propriété spécifie de combien le <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> fait défiler pour chaque unité de traduction.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.PanningRatio">
          <source>For example, if <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.PanningRatio%2A&gt;</ph> is 2, the <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> will scroll 2 <ph id="ph3">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph> for every <ph id="ph4">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> of the translate manipulation.</source>
          <target state="translated">Par exemple, si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.PanningRatio%2A&gt;</ph> est 2, le <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> défilera 2 <ph id="ph3">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph> pour chaque <ph id="ph4">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> de la translation.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.PanningRatioProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.ScrollableHeight">
          <source>Gets a value that represents the vertical size of the content element that can be scrolled.</source>
          
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ScrollableHeight">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the vertical size of the content element that can be scrolled.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente la taille verticale de l’élément de contenu pouvant défiler.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ScrollableHeight">
          <source>This property has no default value.</source>
          <target state="translated">Cette propriété n’a aucune valeur par défaut.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ScrollableHeight">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the values of the <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.ExtentHeight%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollableHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ScrollViewer.ViewportHeight%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph> properties are number of items.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> est <ph id="ph2">`true`</ph>, les valeurs de la <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.ExtentHeight%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollableHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ScrollViewer.ViewportHeight%2A&gt;</ph>, et <ph id="ph6">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph> propriétés sont un nombres d’éléments.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ScrollableHeight">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the values of these properties are Device Independent Pixels.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> est <ph id="ph2">`false`</ph>, les valeurs de ces propriétés sont les Pixels indépendants du périphérique.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ScrollableHeight">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ScrollableHeight">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ScrollableHeight">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ScrollableHeight">
          <source>None</source>
          <target state="translated">Aucun</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.ScrollableHeightProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.ScrollableHeight" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.ScrollableWidth">
          <source>Gets a value that represents the horizontal size of the content element that can be scrolled.</source>
          
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ScrollableWidth">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the horizontal size of the content element that can be scrolled.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente la taille horizontale de l’élément de contenu pouvant défiler.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ScrollableWidth">
          <source>This property has no default value.</source>
          <target state="translated">Cette propriété n’a aucune valeur par défaut.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ScrollableWidth">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ScrollableWidth">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ScrollableWidth">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ScrollableWidth">
          <source>None</source>
          <target state="translated">Aucun</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.ScrollableWidthProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.ScrollableWidth" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.ScrollViewer.ScrollChanged">
          <source>Occurs when changes are detected to the scroll position, extent, or viewport size.</source>
          
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.ScrollViewer.ScrollChanged">
          <source>Routed Event Information</source>
          <target state="translated">Informations sur les événements acheminés</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.ScrollViewer.ScrollChanged">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.ScrollViewer.ScrollChanged">
          <source>Routing strategy</source>
          <target state="translated">Stratégie de routage</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.ScrollViewer.ScrollChanged">
          <source>Bubbling</source>
          <target state="translated">Propagation</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.ScrollViewer.ScrollChanged">
          <source>Delegate</source>
          <target state="translated">délégué</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.ScrollChangedEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.ScrollViewer.ScrollChanged" /&gt;</ph> routed event.</source>
          
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.ScrollInfo">
          <source>Gets or sets the element that implements the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.IScrollInfo" /&gt;</ph> interface and provides values for scrolling properties of this <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ScrollInfo">
          <source>The element that controls scrolling properties, such as extent, offset, or viewport size.</source>
          <target state="translated">Élément qui contrôle les propriétés de défilement, telles que l’étendue, le décalage ou la taille de fenêtre d’affichage.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ScrollInfo">
          <source>This property has no default value.</source>
          <target state="translated">Cette propriété n’a aucune valeur par défaut.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.ScrollToBottom">
          <source>Scrolls vertically to the end of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> content.</source>
          
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToBottom">
          <source>This method does not induce any scrolling behavior if <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Cette méthode n’induit pas de comportement de défilement si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> est <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToBottom">
          <source>Logical scrolling is used to scroll to the next element in the logical tree.</source>
          <target state="translated">Défilement logique est utilisé pour accéder à l’élément suivant dans l’arborescence logique.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToBottom">
          <source>This differs from physical scrolling, which scrolls content by a defined physical increment in a given direction.</source>
          <target state="translated">Cela diffère du défilement physique, qui fait défiler le contenu par un incrément physique défini dans une direction donnée.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToBottom">
          <source>If you require physical scrolling instead of logical scrolling, wrap the host <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez l’hôte <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> élément dans une <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> et définir son <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> propriété <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.ScrollToEnd">
          <source>Scrolls vertically to the end of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> content.</source>
          
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToEnd">
          <source>This method scrolls to both the vertical and horizontal end points of the content.</source>
          <target state="translated">Cette méthode fait défiler pour les deux points de terminaison verticales et horizontales du contenu.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToEnd">
          <source>This method does not induce any scrolling behavior if <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Cette méthode n’induit pas de comportement de défilement si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> est <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToEnd">
          <source>Logical scrolling is used to scroll to the next element in the logical tree.</source>
          <target state="translated">Défilement logique est utilisé pour accéder à l’élément suivant dans l’arborescence logique.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToEnd">
          <source>This differs from physical scrolling, which scrolls content by a defined physical increment in a given direction.</source>
          <target state="translated">Cela diffère du défilement physique, qui fait défiler le contenu par un incrément physique défini dans une direction donnée.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToEnd">
          <source>If you require physical scrolling instead of logical scrolling, wrap the host <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez l’hôte <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> élément dans une <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> et définir son <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> propriété <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.ScrollToHome">
          <source>Scrolls vertically to the beginning of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> content.</source>
          
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToHome">
          <source>This method does not induce any scrolling behavior if <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Cette méthode n’induit pas de comportement de défilement si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> est <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToHome">
          <source>Logical scrolling is used to scroll to the next element in the logical tree.</source>
          <target state="translated">Défilement logique est utilisé pour accéder à l’élément suivant dans l’arborescence logique.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToHome">
          <source>This differs from physical scrolling, which scrolls content by a defined physical increment in a given direction.</source>
          <target state="translated">Cela diffère du défilement physique, qui fait défiler le contenu par un incrément physique défini dans une direction donnée.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToHome">
          <source>If you require physical scrolling instead of logical scrolling, wrap the host <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez l’hôte <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> élément dans une <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> et définir son <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> propriété <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.ScrollToHorizontalOffset(System.Double)">
          <source>The position that the content scrolls to.</source>
          
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.ScrollToHorizontalOffset(System.Double)">
          <source>Scrolls the content within the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> to the specified horizontal offset position.</source>
          
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.ScrollToLeftEnd">
          <source>Scrolls horizontally to the beginning of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> content.</source>
          
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToLeftEnd">
          <source>This method does not induce any scrolling behavior if <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Cette méthode n’induit pas de comportement de défilement si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> est <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToLeftEnd">
          <source>Logical scrolling is used to scroll to the next element in the logical tree.</source>
          <target state="translated">Défilement logique est utilisé pour accéder à l’élément suivant dans l’arborescence logique.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToLeftEnd">
          <source>This differs from physical scrolling, which scrolls content by a defined physical increment in a given direction.</source>
          <target state="translated">Cela diffère du défilement physique, qui fait défiler le contenu par un incrément physique défini dans une direction donnée.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToLeftEnd">
          <source>If you require physical scrolling instead of logical scrolling, wrap the host <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez l’hôte <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> élément dans une <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> et définir son <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> propriété <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.ScrollToRightEnd">
          <source>Scrolls horizontally to the end of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> content.</source>
          
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToRightEnd">
          <source>This method does not induce any scrolling behavior if <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Cette méthode n’induit pas de comportement de défilement si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> est <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToRightEnd">
          <source>Logical scrolling is used to scroll to the next element in the logical tree.</source>
          <target state="translated">Défilement logique est utilisé pour accéder à l’élément suivant dans l’arborescence logique.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToRightEnd">
          <source>This differs from physical scrolling, which scrolls content by a defined physical increment in a given direction.</source>
          <target state="translated">Cela diffère du défilement physique, qui fait défiler le contenu par un incrément physique défini dans une direction donnée.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToRightEnd">
          <source>If you require physical scrolling instead of logical scrolling, wrap the host <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez l’hôte <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> élément dans une <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> et définir son <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> propriété <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.ScrollToTop">
          <source>Scrolls vertically to the beginning of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> content.</source>
          
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToTop">
          <source>This method does not induce any scrolling behavior if <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Cette méthode n’induit pas de comportement de défilement si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollInfo%2A&gt;</ph> est <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToTop">
          <source>Logical scrolling is used to scroll to the next element in the logical tree.</source>
          <target state="translated">Défilement logique est utilisé pour accéder à l’élément suivant dans l’arborescence logique.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToTop">
          <source>This differs from physical scrolling, which scrolls content by a defined physical increment in a given direction.</source>
          <target state="translated">Cela diffère du défilement physique, qui fait défiler le contenu par un incrément physique défini dans une direction donnée.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.ScrollToTop">
          <source>If you require physical scrolling instead of logical scrolling, wrap the host <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> element in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Si vous avez besoin de défilement physique au lieu de défilement logique, encapsulez l’hôte <ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> élément dans une <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> et définir son <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> propriété <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.ScrollToVerticalOffset(System.Double)">
          <source>The position that the content scrolls to.</source>
          
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.ScrollToVerticalOffset(System.Double)">
          <source>Scrolls the content within the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> to the specified vertical offset position.</source>
          
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetCanContentScroll(System.Windows.DependencyObject,System.Boolean)">
          <source>The element on which to set the property value.</source>
          
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetCanContentScroll(System.Windows.DependencyObject,System.Boolean)">
          <source>The property value to set.</source>
          
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetCanContentScroll(System.Windows.DependencyObject,System.Boolean)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll" /&gt;</ph> dependency property to a given element.</source>
          
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetHorizontalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
          <source>The element on which to set the property value.</source>
          
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetHorizontalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
          <source>The property value to set.</source>
          
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetHorizontalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /&gt;</ph> dependency property to a given element.</source>
          
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetIsDeferredScrollingEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>The object on which to set the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /&gt;</ph> property.</source>
          
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetIsDeferredScrollingEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to have the content remain stationary when the user drags the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Thumb" /&gt;</ph> of a <ph id="ph3">&lt;see cref="T:System.Windows.Controls.Primitives.ScrollBar" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetIsDeferredScrollingEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /&gt;</ph> property for the specified object.</source>
          
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.SetIsDeferredScrollingEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>Displaying a large number of items may cause performance issues.</source>
          <target state="translated">Affichage d’un grand nombre d’éléments peut entraîner des problèmes de performances.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.SetIsDeferredScrollingEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>In this case, it might be useful to use deferred scrolling.</source>
          <target state="translated">Dans ce cas, il peut être utile d’utiliser le défilement différé.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ScrollViewer.SetIsDeferredScrollingEnabled(System.Windows.DependencyObject,System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Optimizing Performance: Controls<ept id="p1">](~/docs/framework/wpf/advanced/optimizing-performance-controls.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>optimisation des performances : contrôles<ept id="p1">](~/docs/framework/wpf/advanced/optimizing-performance-controls.md)</ept>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetPanningDeceleration(System.Windows.DependencyObject,System.Double)">
          <source>The object on which to set the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /&gt;</ph> property.</source>
          
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetPanningDeceleration(System.Windows.DependencyObject,System.Double)">
          <source>The rate <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> slows in <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph> per squared millisecond.</source>
          
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetPanningDeceleration(System.Windows.DependencyObject,System.Double)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /&gt;</ph> property for the specified object.</source>
          
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetPanningMode(System.Windows.DependencyObject,System.Windows.Controls.PanningMode)">
          <source>The object on which to set the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /&gt;</ph> property.</source>
          
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetPanningMode(System.Windows.DependencyObject,System.Windows.Controls.PanningMode)">
          <source>A value that specifies how <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> reacts to touch manipulation.</source>
          
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetPanningMode(System.Windows.DependencyObject,System.Windows.Controls.PanningMode)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /&gt;</ph> property for the specified object.</source>
          
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetPanningRatio(System.Windows.DependencyObject,System.Double)">
          <source>The object on which to set the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /&gt;</ph> property.</source>
          
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetPanningRatio(System.Windows.DependencyObject,System.Double)">
          <source>The ratio of scrolling offset to translate manipulation offset.</source>
          
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetPanningRatio(System.Windows.DependencyObject,System.Double)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /&gt;</ph> property for the specified object.</source>
          
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetVerticalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
          <source>The element on which to set the property value.</source>
          
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetVerticalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
          <source>The property value to set.</source>
          
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ScrollViewer.SetVerticalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /&gt;</ph> dependency property to a given element.</source>
          
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
          <source>Gets a value that contains the vertical offset of the scrolled content.</source>
          
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the vertical offset of the scrolled content.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente le décalage vertical du contenu parcouru.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
          <source>The default is 0.0.</source>
          <target state="translated">La valeur par défaut est 0.0.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
          <source>A positive <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph> value corresponds to the content being offset to the top.</source>
          <target state="translated">Un nombre positif <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph> valeur correspond au contenu décalé vers le haut.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
          <source>Valid values are between zero and the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ExtentHeight%2A&gt;</ph> minus the <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.ViewportHeight%2A&gt;</ph>.</source>
          <target state="translated">Les valeurs valides sont comprises entre zéro et le <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ExtentHeight%2A&gt;</ph> moins le <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.ViewportHeight%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the values of the <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.ExtentHeight%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollableHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ScrollViewer.ViewportHeight%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph> properties are number of items.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> est <ph id="ph2">`true`</ph>, les valeurs de la <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.ExtentHeight%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollableHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ScrollViewer.ViewportHeight%2A&gt;</ph>, et <ph id="ph6">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph> propriétés sont un nombres d’éléments.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the values of these properties are Device Independent Pixels.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> est <ph id="ph2">`false`</ph>, les valeurs de ces propriétés sont les Pixels indépendants du périphérique.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
          <source>Beginning in the .NET Framework version 3.5 SP1, when <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph> continues to change as the user drags the <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph>, but the content view doesn't change until the <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph> is released.</source>
          <target state="translated">À compter de .NET Framework version 3.5 SP1, lorsque <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled%2A&gt;</ph> est <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph> continue d’être modifié en tant que l’utilisateur fait glisser le <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph>, mais ne modifie pas l’affichage du contenu jusqu'à ce que le <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph> est libérée.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
          <source>In this case, <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ContentVerticalOffset%2A&gt;</ph> represents the visible content offset and <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph> represents the content offset based on the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph> position.</source>
          <target state="translated">Dans ce cas, <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ContentVerticalOffset%2A&gt;</ph> représente le décalage de contenu visible et <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph> représente le décalage de contenu basé sur le <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Thumb&gt;</ph> position.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
          <source>None</source>
          <target state="translated">Aucun</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.VerticalOffsetProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.VerticalOffset" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility">
          <source>Gets or sets a value that indicates whether a vertical <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.ScrollBar" /&gt;</ph> should be displayed.</source>
          
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollBarVisibility" /&gt;</ph> value that indicates whether a vertical <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.ScrollBar" /&gt;</ph> should be displayed.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollBarVisibility" /&gt;</ph> valeur qui indique si une verticale <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.ScrollBar" /&gt;</ph> doit être affiché.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.ViewportHeight">
          <source>Gets a value that contains the vertical size of the content's viewport.</source>
          
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ViewportHeight">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the vertical size of the content's viewport.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente la taille verticale de la fenêtre d’affichage du contenu.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ViewportHeight">
          <source>This property has no default value.</source>
          <target state="translated">Cette propriété n’a aucune valeur par défaut.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ViewportHeight">
          <source>The viewport is the visible area of the content.</source>
          <target state="translated">La fenêtre d’affichage est la zone visible du contenu.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ViewportHeight">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ViewportHeight%2A&gt;</ph> is only an output property; it can effectively be set by specifying the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> of the content element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.ViewportHeight%2A&gt;</ph> est uniquement une propriété de sortie ; elle peut être définie efficacement en spécifiant la <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> de l’élément de contenu.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ViewportHeight">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the values of the <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.ExtentHeight%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollableHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ScrollViewer.ViewportHeight%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph> properties are number of items.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> est <ph id="ph2">`true`</ph>, les valeurs de la <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.ExtentHeight%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.ScrollViewer.ScrollableHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ScrollViewer.ViewportHeight%2A&gt;</ph>, et <ph id="ph6">&lt;xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A&gt;</ph> propriétés sont un nombres d’éléments.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ViewportHeight">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the values of these properties are Device Independent Pixels.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> est <ph id="ph2">`false`</ph>, les valeurs de ces propriétés sont les Pixels indépendants du périphérique.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ViewportHeight">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ViewportHeight">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ViewportHeight">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ViewportHeight">
          <source>None</source>
          <target state="translated">Aucun</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.ViewportHeightProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ScrollViewer.ViewportWidth">
          <source>Gets a value that contains the horizontal size of the content's viewport.</source>
          
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ViewportWidth">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the horizontal size of the content's viewport.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente la taille horizontale de la fenêtre d’affichage du contenu.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ViewportWidth">
          <source>The default is 0.0.</source>
          <target state="translated">La valeur par défaut est 0.0.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ViewportWidth">
          <source>The viewport is the visible area of the content.</source>
          <target state="translated">La fenêtre d’affichage est la zone visible du contenu.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ViewportWidth">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ViewportWidth">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ViewportWidth">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ScrollViewer.ViewportWidth">
          <source>None</source>
          <target state="translated">Aucun</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ScrollViewer.ViewportWidthProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /&gt;</ph> dependency property.</source>
          
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>