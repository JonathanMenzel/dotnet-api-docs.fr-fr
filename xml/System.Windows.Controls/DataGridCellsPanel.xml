<Type Name="DataGridCellsPanel" FullName="System.Windows.Controls.DataGridCellsPanel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e3b019ff213ee98801cc54eb7ba1af4563cf1c1" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52610808" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataGridCellsPanel : System.Windows.Controls.VirtualizingPanel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DataGridCellsPanel extends System.Windows.Controls.VirtualizingPanel" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.DataGridCellsPanel" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridCellsPanel&#xA;Inherits VirtualizingPanel" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridCellsPanel : System::Windows::Controls::VirtualizingPanel" />
  <TypeSignature Language="F#" Value="type DataGridCellsPanel = class&#xA;    inherit VirtualizingPanel" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.VirtualizingPanel</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ebe29-101">Représente un panneau qui présente des cellules et des en-têtes de colonnes dans une grille de données.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ebe29-101">Represents a panel that lays out cells and column headers in a data grid.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebe29-102">Le <xref:System.Windows.Controls.DataGridCellsPanel> est utilisé comme le <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> de la <xref:System.Windows.Controls.Primitives.DataGridCellsPresenter> pour disposer les cellules d’une ligne.</span><span class="sxs-lookup"><span data-stu-id="ebe29-102">The <xref:System.Windows.Controls.DataGridCellsPanel> is used as the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> of the <xref:System.Windows.Controls.Primitives.DataGridCellsPresenter> to lay out cells in a row.</span></span> <span data-ttu-id="ebe29-103">Il est utilisé comme le <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> de la <xref:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter> pour agencer les en-têtes de colonne.</span><span class="sxs-lookup"><span data-stu-id="ebe29-103">It is used as the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> of the <xref:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter> to lay out column headers.</span></span> <span data-ttu-id="ebe29-104">Le panneau réorganise les cellules horizontalement et utilise des informations sur les colonnes de chaque cellule pour déterminer la taille appropriée pour chaque cellule.</span><span class="sxs-lookup"><span data-stu-id="ebe29-104">The panel arranges cells horizontally and uses each cell's column information to determine the correct size for each cell.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridCellsPanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGridCellsPanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridCellsPanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ebe29-105">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Controls.DataGridCellsPanel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebe29-105">Initializes a new instance of the <see cref="T:System.Windows.Controls.DataGridCellsPanel" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGridCellsPanel.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeSize);" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="dataGridCellsPanel.ArrangeOverride arrangeSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeSize">
          <span data-ttu-id="ebe29-106">Espace maximal que le panneau peut occuper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebe29-106">The maximum size that the panel can occupy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebe29-107">Détermine la taille et le positionnement finals du panneau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebe29-107">Determines the final size and placement of the panel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ebe29-108">La taille et le positionnement finals du panneau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebe29-108">The final size and placement of the panel.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebe29-109">Le <xref:System.Windows.Controls.DataGridCellsPanel> classe utilise le <xref:System.Windows.Controls.DataGridCellsPanel.ArrangeOverride%2A> méthode pour disposer les cellules qui sont visibles.</span><span class="sxs-lookup"><span data-stu-id="ebe29-109">The <xref:System.Windows.Controls.DataGridCellsPanel> class uses the <xref:System.Windows.Controls.DataGridCellsPanel.ArrangeOverride%2A> method to lay out the cells that are visible.</span></span> <span data-ttu-id="ebe29-110">Cellules qui ne sont pas visibles sont virtualisées.</span><span class="sxs-lookup"><span data-stu-id="ebe29-110">Cells that are not visible are virtualized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BringIndexIntoView">
      <MemberSignature Language="C#" Value="protected internal override void BringIndexIntoView (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void BringIndexIntoView(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGridCellsPanel.BringIndexIntoView(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub BringIndexIntoView (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void BringIndexIntoView(int index);" />
      <MemberSignature Language="F#" Value="override this.BringIndexIntoView : int -&gt; unit" Usage="dataGridCellsPanel.BringIndexIntoView index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ebe29-111">Index de l'élément qui doit devenir visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebe29-111">The index of the item that should become visible.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebe29-112">Fait défiler la fenêtre d'affichage jusqu'à l'élément situé au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebe29-112">Scrolls the viewport to the item at the specified index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ebe29-113">L'index est hors limites.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebe29-113">The index is out of range.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ebe29-114">Lors de la substitution <see cref="M:System.Windows.Controls.DataGridCellsPanel.BringIndexIntoView(System.Int32)" /> dans une classe dérivée, assurez-vous que vous appelez la classe de base <see cref="M:System.Windows.Controls.DataGridCellsPanel.BringIndexIntoView(System.Int32)" /> méthode ; sinon, importantes fonctionnalités sont désactivé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ebe29-114">When overriding <see cref="M:System.Windows.Controls.DataGridCellsPanel.BringIndexIntoView(System.Int32)" /> in a derived class, make sure that you call the base class' <see cref="M:System.Windows.Controls.DataGridCellsPanel.BringIndexIntoView(System.Int32)" /> method; otherwise, important functionality will be disabled.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGridCellsPanel.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="dataGridCellsPanel.MeasureOverride constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">
          <span data-ttu-id="ebe29-115">Espace maximal que le panneau peut occuper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebe29-115">The maximum size that the panel can occupy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebe29-116">Détermine la taille souhaitée pour le panneau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebe29-116">Determines the desired size of the panel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ebe29-117">Taille désirée du panneau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebe29-117">The desired size of the panel.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebe29-118">Le <xref:System.Windows.Controls.DataGridCellsPanel> classe utilise le <xref:System.Windows.Controls.DataGridCellsPanel.MeasureOverride%2A> méthode pour déterminer les cellules qui sont visibles et celles qui sont virtualisées.</span><span class="sxs-lookup"><span data-stu-id="ebe29-118">The <xref:System.Windows.Controls.DataGridCellsPanel> class uses the <xref:System.Windows.Controls.DataGridCellsPanel.MeasureOverride%2A> method to determine which cells are visible and which cells are virtualized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClearChildren">
      <MemberSignature Language="C#" Value="protected override void OnClearChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClearChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGridCellsPanel.OnClearChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClearChildren ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClearChildren();" />
      <MemberSignature Language="F#" Value="override this.OnClearChildren : unit -&gt; unit" Usage="dataGridCellsPanel.OnClearChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ebe29-119">Méthode appelée lorsque la collection d'enfants présente dans <see cref="T:System.Windows.Controls.DataGrid" /> est effacée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebe29-119">Called when the collection of children in the <see cref="T:System.Windows.Controls.DataGrid" /> is cleared.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ebe29-120">Lors de la substitution <see cref="M:System.Windows.Controls.DataGridCellsPanel.OnClearChildren" /> dans une classe dérivée, assurez-vous que vous appelez la classe de base <see cref="M:System.Windows.Controls.DataGridCellsPanel.OnClearChildren" /> méthode ; sinon, importantes fonctionnalités sont désactivé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ebe29-120">When overriding <see cref="M:System.Windows.Controls.DataGridCellsPanel.OnClearChildren" /> in a derived class, make sure that you call the base class' <see cref="M:System.Windows.Controls.DataGridCellsPanel.OnClearChildren" /> method; otherwise, important functionality will be disabled.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsItemsHostChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsItemsHostChanged (bool oldIsItemsHost, bool newIsItemsHost);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsItemsHostChanged(bool oldIsItemsHost, bool newIsItemsHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGridCellsPanel.OnIsItemsHostChanged(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsItemsHostChanged (oldIsItemsHost As Boolean, newIsItemsHost As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsItemsHostChanged(bool oldIsItemsHost, bool newIsItemsHost);" />
      <MemberSignature Language="F#" Value="override this.OnIsItemsHostChanged : bool * bool -&gt; unit" Usage="dataGridCellsPanel.OnIsItemsHostChanged (oldIsItemsHost, newIsItemsHost)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldIsItemsHost" Type="System.Boolean" />
        <Parameter Name="newIsItemsHost" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="oldIsItemsHost">
          <span data-ttu-id="ebe29-121">Ancienne valeur de la propriété <see cref="P:System.Windows.Controls.Panel.IsItemsHost" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebe29-121">The old value of the <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> property.</span>
          </span>
        </param>
        <param name="newIsItemsHost">
          <span data-ttu-id="ebe29-122">Nouvelle valeur de la propriété <see cref="P:System.Windows.Controls.Panel.IsItemsHost" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebe29-122">The new value of the <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebe29-123">Indique que la valeur de propriété <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> a changé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebe29-123">Indicates that the <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> property value has changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ebe29-124">Vous pouvez substituer cette méthode et l’utiliser en tant que notification qui la <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> propriété a été modifiée.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ebe29-124">You can override this method and use it as a notification that the <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> property has changed.</span>
            </span>
            <span data-ttu-id="ebe29-125">Puis effectuer votre propre logique basée sur les valeurs anciennes et nouvelles.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ebe29-125">Then perform your own logic based on the old and new values.</span>
            </span>
            <span data-ttu-id="ebe29-126">Veillez à appeler la classe de base <see cref="M:System.Windows.Controls.DataGridCellsPanel.OnIsItemsHostChanged(System.Boolean,System.Boolean)" /> méthode ; sinon, importantes fonctionnalités sont désactivé.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ebe29-126">Be sure to call the base class' <see cref="M:System.Windows.Controls.DataGridCellsPanel.OnIsItemsHostChanged(System.Boolean,System.Boolean)" /> method; otherwise, important functionality will be disabled.</span>
            </span>
            <span data-ttu-id="ebe29-127">L’implémentation de base synchronise le <see cref="T:System.Windows.Controls.DataGridCellsPanel" /> avec la <see cref="T:System.Windows.Controls.Primitives.DataGridCellsPresenter" /> ou <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> qui lui est associée.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ebe29-127">The base implementation synchronizes the <see cref="T:System.Windows.Controls.DataGridCellsPanel" /> with the <see cref="T:System.Windows.Controls.Primitives.DataGridCellsPresenter" /> or <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> that it is associated with.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected override void OnItemsChanged (object sender, System.Windows.Controls.Primitives.ItemsChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnItemsChanged(object sender, class System.Windows.Controls.Primitives.ItemsChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnItemsChanged (sender As Object, args As ItemsChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnItemsChanged(System::Object ^ sender, System::Windows::Controls::Primitives::ItemsChangedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="override this.OnItemsChanged : obj * System.Windows.Controls.Primitives.ItemsChangedEventArgs -&gt; unit" Usage="dataGridCellsPanel.OnItemsChanged (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.Windows.Controls.Primitives.ItemsChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="ebe29-128">Objet qui a déclenché l'événement <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebe29-128">The object that raised the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ebe29-129">Données de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebe29-129">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebe29-130">Met à jour les cellules visibles lorsqu'un élément dans la collection <see cref="P:System.Windows.Controls.ItemsControl.Items" /> a changé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebe29-130">Updates the visible cells when an item in the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebe29-131">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="ebe29-131">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ebe29-132">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ebe29-132">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="ebe29-133">La méthode <xref:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="ebe29-133">The <xref:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="ebe29-134">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="ebe29-134">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ebe29-135">Lors de la substitution <see cref="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)" /> dans une classe dérivée, assurez-vous que vous appelez la classe de base <see cref="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ebe29-135">When overriding <see cref="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)" /> in a derived class, make sure that you call the base class' <see cref="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>