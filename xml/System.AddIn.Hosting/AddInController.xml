<Type Name="AddInController" FullName="System.AddIn.Hosting.AddInController">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2e850f00fad28da6ae4a4fb1944f1b130392327a" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48706049" /></Metadata><TypeSignature Language="C#" Value="public sealed class AddInController" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AddInController extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.AddInController" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AddInController" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddInController sealed" />
  <TypeSignature Language="F#" Value="type AddInController = class" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit l'accès à un complément pour différentes tâches.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette classe pour effectuer les tâches suivantes :  
  
-   Utilisez le <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> propriété pour obtenir un <xref:System.AddIn.Hosting.AddInEnvironment> objet pour un complément. Utilisez ensuite cet objet pour activer d’autres compléments dans le même domaine d’application et le même processus que le complément d’origine.  
  
-   Utilisez le <xref:System.AddIn.Hosting.AddInController.AppDomain%2A> propriété pour obtenir un <xref:System.AppDomain> objet pour un complément. Utilisez ensuite cet objet pour activer d’autres compléments dans le même domaine d’application en tant que le complément d’origine. Notez qu’en raison des limitations de la communication à distance interprocessus, ce scénario ne fonctionne pas avec des compléments qui sont activés dans un processus séparé.  
  
-   Utilisez le <xref:System.AddIn.Hosting.AddInController.Token%2A> propriété pour obtenir un <xref:System.AddIn.Hosting.AddInToken> objet qui représente un complément.  
  
-   Arrêtez un complément avec la <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> (méthode).  
  
 Pour obtenir le contrôleur pour un complément, appelez le <xref:System.AddIn.Hosting.AddInController.GetAddInController%2A> (méthode) et passez une instance du complément en tant que paramètre.  
  
   
  
## Examples  
 L’exemple suivant active un complément dans le même environnement qu’un complément activé précédemment en utilisant un <xref:System.AddIn.Hosting.AddInController> objet.  
  
 [!code-csharp[AddInP3Host#8](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#8)]
 [!code-vb[AddInP3Host#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddInEnvironment">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.AddInEnvironment AddInEnvironment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Hosting.AddInEnvironment AddInEnvironment" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInController.AddInEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddInEnvironment As AddInEnvironment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::AddInEnvironment ^ AddInEnvironment { System::AddIn::Hosting::AddInEnvironment ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AddInEnvironment : System.AddIn.Hosting.AddInEnvironment" Usage="System.AddIn.Hosting.AddInController.AddInEnvironment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet <see cref="T:System.AddIn.Hosting.AddInEnvironment" />.</summary>
        <value>Objet qui peut être utilisé pour activer d'autres compléments dans le même environnement que le complément d'origine.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété permet d’obtenir le <xref:System.AddIn.Hosting.AddInEnvironment> objet pour un complément. Utilisez ensuite cet objet pour activer d’autres compléments dans le même domaine d’application et le même processus que le complément d’origine.  
  
   
  
## Examples  
 L’exemple suivant active un deuxième complément dans le même environnement que le premier complément.  
  
 [!code-csharp[AddInP3Host#8](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#8)]
 [!code-vb[AddInP3Host#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppDomain">
      <MemberSignature Language="C#" Value="public AppDomain AppDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AppDomain AppDomain" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInController.AppDomain" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppDomain As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomain ^ AppDomain { AppDomain ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppDomain : AppDomain" Usage="System.AddIn.Hosting.AddInController.AppDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le domaine d'application qui contient un complément.</summary>
        <value>Domaine d'application du complément.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette propriété pour obtenir un complément <xref:System.AppDomain> objet et activer d’autres compléments dans le même domaine d’application.  
  
   
  
## Examples  
 L’exemple suivant active un deuxième complément dans le même domaine d’application en tant que le premier complément.  
  
 [!code-csharp[AddInP3Host#9](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#9)]
 [!code-vb[AddInP3Host#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAddInController">
      <MemberSignature Language="C#" Value="public static System.AddIn.Hosting.AddInController GetAddInController (object addIn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Hosting.AddInController GetAddInController(object addIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInController.GetAddInController(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAddInController (addIn As Object) As AddInController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Hosting::AddInController ^ GetAddInController(System::Object ^ addIn);" />
      <MemberSignature Language="F#" Value="static member GetAddInController : obj -&gt; System.AddIn.Hosting.AddInController" Usage="System.AddIn.Hosting.AddInController.GetAddInController addIn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addIn" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="addIn">Vue de l'hôte du complément.</param>
        <summary>Obtient le contrôleur pour un complément.</summary>
        <returns>Contrôleur pour le complément.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.AddIn.Hosting.AddInToken.Activate%2A> méthodes retournent un objet qui représente la vue de l’hôte de la macro complémentaire.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInController.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberSignature Language="F#" Value="member this.Shutdown : unit -&gt; unit" Usage="addInController.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Désactive un complément.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode arrête le pipeline de communication entre un complément et son hôte. Si le complément a été activé dans un domaine d’application généré automatiquement à l’aide de la <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> ou <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> méthodes, le <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> méthode décharge également le domaine d’application.  
  
 Si le complément a été chargé dans son propre domaine d’application, le <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> méthode décharge également le domaine d’application.  
  
 Si le complément a été chargé dans un domaine d’application existant, les segments de l’hôte et le pipeline n’auront plus toutes les références à ce complément. Dans ce cas, le module additionnel seront éligible pour être récupéré par le garbage collection.  
  
 Vous pouvez également utiliser cette classe pour arrêter un complément est activé dans un processus externe.  
  
   
  
## Examples  
 L’exemple suivant obtient le <xref:System.AddIn.Hosting.AddInController> objet pour une vue d’hôte nommée `manager` , puis arrête le complément.  
  
 [!code-csharp[AddInCollectionPipelineHost#6](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineHost/cs/Program.cs#6)]
 [!code-vb[AddInCollectionPipelineHost#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineHost/vb/Program.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.AddInToken Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Hosting.AddInToken Token" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInController.Token" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Token As AddInToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::AddInToken ^ Token { System::AddIn::Hosting::AddInToken ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Token : System.AddIn.Hosting.AddInToken" Usage="System.AddIn.Hosting.AddInController.Token" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le jeton qui représente le complément.</summary>
        <value>Objet qui représente le complément.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En général, vous utilisez cette propriété pour obtenir un jeton pour activer un complément à une date ultérieure.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>