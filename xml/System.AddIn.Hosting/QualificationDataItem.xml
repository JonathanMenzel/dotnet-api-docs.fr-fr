<Type Name="QualificationDataItem" FullName="System.AddIn.Hosting.QualificationDataItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f1d66d0271cf2645ad9234541243065f0b539f6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36647686" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct QualificationDataItem" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit QualificationDataItem extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.QualificationDataItem" />
  <TypeSignature Language="VB.NET" Value="Public Structure QualificationDataItem" />
  <TypeSignature Language="C++ CLI" Value="public value class QualificationDataItem" />
  <TypeSignature Language="F#" Value="type QualificationDataItem = struct" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente des informations fournies par le développeur d'un segment de pipeline, en vue de leur utilisation par l'hôte.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque élément de données de qualification se compose d’une paire nom/valeur qui a été appliquée à un segment de pipeline à l’aide de la <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribut, pour fournir des informations qui incluent l’utilisation du segment (par exemple, le niveau d’isolement recommandé pour le segment). Le <xref:System.AddIn.Hosting.QualificationDataItem> structure contient la paire nom/un valeur et le type de segment de pipeline il a été appliqué à.  
  
 Utilisez le <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A?displayProperty=nameWithType> propriété à obtenir un jeu imbriqué des dictionnaires contenant <xref:System.AddIn.Hosting.QualificationDataItem> structures pour les segments de pipeline associés un <xref:System.AddIn.Hosting.AddInToken>.  
  
 Vous pouvez également utiliser le <xref:System.AddIn.Hosting.AddInToken.GetEnumerator%2A?displayProperty=nameWithType> méthode pour obtenir un énumérateur pour les <xref:System.AddIn.Hosting.QualificationDataItem> structures des segments de pipeline associé à un jeton, ou simplement utiliser un `foreach` instruction (`For Each` en Visual Basic, `for each` dans Visual C++) pour traiter le jeton comme s’il s’agissait d’une collection de <xref:System.AddIn.Hosting.QualificationDataItem> structures.  
  
   
  
## Examples  
 L’exemple suivant répertorie les données de qualification pour les segments de pipeline associés à chaque <xref:System.AddIn.Hosting.AddInToken> dans une collection de jetons.  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.QualificationDataItem.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="qualificationDataItem.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Objet à comparer.</param>
        <summary>Détermine si un objet spécifié est égal à l'élément de données de qualification actuel.</summary>
        <returns>
          <see langword="true" /> si l’objet <paramref name="obj" /> est égal à l’instance actuelle ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.QualificationDataItem.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="qualificationDataItem.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient le code de hachage pour cet élément de données de qualification.</summary>
        <returns>Code de hachage.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.QualificationDataItem.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.AddIn.Hosting.QualificationDataItem.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de l'élément de données de qualification.</summary>
        <value>Nom de l'élément de données de qualification.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque élément de données de qualification se compose d’une paire nom/valeur qui a été appliquée à un segment de pipeline à l’aide de la <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribut, pour fournir des informations aux consommateurs du complément. Le <xref:System.AddIn.Hosting.QualificationDataItem.Name%2A> propriété obtient le nom. Utilisez le <xref:System.AddIn.Hosting.QualificationDataItem.Value%2A> pour obtenir la valeur de propriété.  
  
   
  
## Examples  
 L’exemple suivant répertorie les données de qualification pour les segments de pipeline associés à chaque <xref:System.AddIn.Hosting.AddInToken> dans une collection de jetons. Le <xref:System.AddIn.Hosting.QualificationDataItem.Name%2A> propriété est utilisée pour afficher le nom de chaque élément.  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.AddIn.Hosting.QualificationDataItem item1, System.AddIn.Hosting.QualificationDataItem item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.AddIn.Hosting.QualificationDataItem item1, valuetype System.AddIn.Hosting.QualificationDataItem item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.QualificationDataItem.op_Equality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (item1 As QualificationDataItem, item2 As QualificationDataItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::AddIn::Hosting::QualificationDataItem item1, System::AddIn::Hosting::QualificationDataItem item2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.AddIn.Hosting.QualificationDataItem * System.AddIn.Hosting.QualificationDataItem -&gt; bool" Usage="item1 = item2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item1" Type="System.AddIn.Hosting.QualificationDataItem" />
        <Parameter Name="item2" Type="System.AddIn.Hosting.QualificationDataItem" />
      </Parameters>
      <Docs>
        <param name="item1">Premier <see cref="T:System.AddIn.Hosting.QualificationDataItem" /> à comparer.</param>
        <param name="item2">Deuxième <see cref="T:System.AddIn.Hosting.QualificationDataItem" /> à comparer.</param>
        <summary>Détermine si deux structures <see cref="T:System.AddIn.Hosting.QualificationDataItem" /> sont égales.</summary>
        <returns>
          <see langword="true" /> si <paramref name="item1" /> et <paramref name="item2" /> sont égales ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.AddIn.Hosting.QualificationDataItem item1, System.AddIn.Hosting.QualificationDataItem item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.AddIn.Hosting.QualificationDataItem item1, valuetype System.AddIn.Hosting.QualificationDataItem item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.QualificationDataItem.op_Inequality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (item1 As QualificationDataItem, item2 As QualificationDataItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::AddIn::Hosting::QualificationDataItem item1, System::AddIn::Hosting::QualificationDataItem item2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.AddIn.Hosting.QualificationDataItem * System.AddIn.Hosting.QualificationDataItem -&gt; bool" Usage="System.AddIn.Hosting.QualificationDataItem.op_Inequality (item1, item2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item1" Type="System.AddIn.Hosting.QualificationDataItem" />
        <Parameter Name="item2" Type="System.AddIn.Hosting.QualificationDataItem" />
      </Parameters>
      <Docs>
        <param name="item1">Premier <see cref="T:System.AddIn.Hosting.QualificationDataItem" /> à comparer.</param>
        <param name="item2">Deuxième <see cref="T:System.AddIn.Hosting.QualificationDataItem" /> à comparer.</param>
        <summary>Détermine si deux structures <see cref="T:System.AddIn.Hosting.QualificationDataItem" /> sont différentes.</summary>
        <returns>
          <see langword="true" /> si <paramref name="item1" /> et <paramref name="item2" /> ne sont pas égales ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Segment">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.AddInSegmentType Segment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AddIn.Hosting.AddInSegmentType Segment" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.QualificationDataItem.Segment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Segment As AddInSegmentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::AddInSegmentType Segment { System::AddIn::Hosting::AddInSegmentType get(); };" />
      <MemberSignature Language="F#" Value="member this.Segment : System.AddIn.Hosting.AddInSegmentType" Usage="System.AddIn.Hosting.QualificationDataItem.Segment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInSegmentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui identifie le segment de pipeline auquel l'élément de données de qualification a été appliqué.</summary>
        <value>Type de segment de pipeline auquel l'élément de données a été appliqué.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous énumérez les données de qualification, utilisez cette propriété pour identifier les données de qualification qui appartient à un segment particulier du pipeline.  
  
> [!NOTE]
>  Le modèle de complément n’utilise pas les données de qualification qui sont appliquées à la vue hôte du complément. Par conséquent, lorsque vous énumérez les données de qualification vous ne trouverez pas tous les éléments dont <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> propriété est <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn>.  
  
   
  
## Examples  
 L’exemple suivant répertorie les données de qualification pour les segments de pipeline associés à chaque <xref:System.AddIn.Hosting.AddInToken> dans une collection de jetons. Le <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> propriété est utilisée pour afficher le type de segment.  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.QualificationDataItem.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.AddIn.Hosting.QualificationDataItem.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur de l'élément de données de qualification.</summary>
        <value>Valeur de l'élément.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque élément de données de qualification se compose d’une paire nom/valeur qui a été appliquée à un segment de pipeline à l’aide de la <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribut, pour fournir des informations aux consommateurs du complément. Le <xref:System.AddIn.Hosting.QualificationDataItem.Value%2A> propriété obtient la valeur. Utilisez le <xref:System.AddIn.Hosting.QualificationDataItem.Name%2A> pour obtenir le nom de propriété.  
  
   
  
## Examples  
 L’exemple suivant répertorie les données de qualification pour les segments de pipeline associés à chaque <xref:System.AddIn.Hosting.AddInToken> dans une collection de jetons. Le <xref:System.AddIn.Hosting.QualificationDataItem.Value%2A> propriété est utilisée pour afficher la valeur de l’élément.  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>