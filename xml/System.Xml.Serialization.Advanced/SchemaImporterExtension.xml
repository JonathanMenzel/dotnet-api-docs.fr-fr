<Type Name="SchemaImporterExtension" FullName="System.Xml.Serialization.Advanced.SchemaImporterExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37b5d4fa3551ef95c32afb509f1e03ae3525a360" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51876616" /></Metadata><TypeSignature Language="C#" Value="public abstract class SchemaImporterExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SchemaImporterExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SchemaImporterExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class SchemaImporterExtension abstract" />
  <TypeSignature Language="F#" Value="type SchemaImporterExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Vous permet de personnaliser le code généré dans un document WSDL (Web Services Description Language) pendant l'utilisation d'outils de recherche automatisés.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’importation de schéma se produit chaque fois qu’un proxy de service Web est généré via un outil tel que la boîte de dialogue Ajouter une référence Web zone trouvé dans Visual Studio, ou en utilisant le [outil Web Services Description Language Tool (Wsdl.exe)](https://msdn.microsoft.com/library/b9210348-8bc2-4367-8c91-d1a04b403e88). L’importation de schéma se produit également lorsque vous utilisez le [outil XML Schema Definition (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) pour générer le code à partir d’un document XSD spécifique.  
  
 Le <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> classe vous permet de modifier le code généré lors de l’utilisation de ces outils. Par exemple, vous pouvez avoir une classe existante que traiter des ordres sur un système et que vous avez un document XSD qui fournit des commandes. À l’aide de la <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> (classe), vous pouvez activer un des outils pour générer le code qui utilise votre classe.  
  
 Pour contrôler la génération du code, vous devez utiliser les classes figurant dans le <xref:System.CodeDom> espace de noms. Pour plus d’informations, consultez [à l’aide de CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md) et [aide-mémoire de CodeDOM](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx).  
  
 Les étapes de l’activation de l’outil WSDL.exe (qui à son tour est utilisée par d’autres outils tels que la boîte de dialogue Ajouter une référence Web) à utiliser votre extension sont :  
  
1.  Créer une implémentation de la <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> classe.  
  
2.  Utilisez le <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%2A> méthode pour écrire du code pour le Générateur de code. La méthode contient des paramètres qui vous permettent d’examiner le type XSD intercepté et créer des objets CodeDOM qui sont utilisées pour générer le nouveau code CLR.  
  
3.  Si nécessaire, utilisez le <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportAnyElement%2A> méthode pour gérer \<xsd : n’importe quel > éléments trouvés dans le document XSD.  
  
4.  Si nécessaire, utilisez le <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportDefaultValue%2A> méthode pour examiner les valeurs par défaut trouvées dans le document XSD et retourner une valeur par défaut différente.  
  
5.  Compilez votre extension dans une bibliothèque.  
  
6.  Signer l’assembly.  
  
7.  Installer l’assembly dans le Global Assembly Cache (GAC).  
  
8.  Modifier le fichier machine.config pour inclure l’extension.  
  
   
  
## Examples  
 Consultez le [exemple de technologie de SchemaImporterExtension](~/docs/standard/serialization/schemaimporterextension-technology-sample.md). Notez que cet exemple n’inclut pas un assembly signé. Au lieu de cela, il montre comment utiliser le <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> avec une fenêtre de commande.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SchemaImporterExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SchemaImporterExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportAnyElement">
      <MemberSignature Language="C#" Value="public virtual string ImportAnyElement (System.Xml.Schema.XmlSchemaAny any, bool mixed, System.Xml.Serialization.XmlSchemas schemas, System.Xml.Serialization.XmlSchemaImporter importer, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.Xml.Serialization.CodeGenerationOptions options, System.CodeDom.Compiler.CodeDomProvider codeProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImportAnyElement(class System.Xml.Schema.XmlSchemaAny any, bool mixed, class System.Xml.Serialization.XmlSchemas schemas, class System.Xml.Serialization.XmlSchemaImporter importer, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.CodeDom.Compiler.CodeDomProvider codeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportAnyElement(System.Xml.Schema.XmlSchemaAny,System.Boolean,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportAnyElement (any As XmlSchemaAny, mixed As Boolean, schemas As XmlSchemas, importer As XmlSchemaImporter, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, options As CodeGenerationOptions, codeProvider As CodeDomProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ImportAnyElement(System::Xml::Schema::XmlSchemaAny ^ any, bool mixed, System::Xml::Serialization::XmlSchemas ^ schemas, System::Xml::Serialization::XmlSchemaImporter ^ importer, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::Xml::Serialization::CodeGenerationOptions options, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider);" />
      <MemberSignature Language="F#" Value="abstract member ImportAnyElement : System.Xml.Schema.XmlSchemaAny * bool * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string&#xA;override this.ImportAnyElement : System.Xml.Schema.XmlSchemaAny * bool * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string" Usage="schemaImporterExtension.ImportAnyElement (any, mixed, schemas, importer, compileUnit, mainNamespace, options, codeProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="any" Type="System.Xml.Schema.XmlSchemaAny" />
        <Parameter Name="mixed" Type="System.Boolean" />
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
        <Parameter Name="importer" Type="System.Xml.Serialization.XmlSchemaImporter" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
      </Parameters>
      <Docs>
        <param name="any"><see cref="T:System.Xml.Schema.XmlSchemaAny" /> qui représente l'élément <see langword="xsd:any" /> trouvé dans le XSD.</param>
        <param name="mixed"><see cref="T:System.Boolean" /> qui indique si l'attribut <see langword="complex" /> XSD a la valeur "mixed". <see langword="true" />, si l'attribut a une valeur mixte, sinon <see langword="false" />.</param>
        <param name="schemas"><see cref="T:System.Xml.Serialization.XmlSchemas" /> qui contient la collection de schémas trouvée dans le document XSD.</param>
        <param name="importer"><see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> qui est l'importateur en cours d'utilisation.</param>
        <param name="compileUnit"><see cref="T:System.CodeDom.CodeCompileUnit" /> auquel vous pouvez ajouter des structures CodeDOM pour générer un code alternatif pour XSD.</param>
        <param name="mainNamespace"><see cref="T:System.CodeDom.CodeNamespace" /> qui représente l'espace de noms actuel de l'élément.</param>
        <param name="options"><see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> pour les options du compilateur de code.</param>
        <param name="codeProvider"><see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> qui est le fournisseur CodeDOM utilisé pour générer le nouveau code.</param>
        <summary>Gère l’importation des éléments &lt;xsd:any&gt; dans le schéma.</summary>
        <returns>Nom du type CLR à qui l'élément est mappé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour contrôler la génération du code, vous devez utiliser les classes figurant dans le <xref:System.CodeDom> espace de noms. Pour plus d’informations, consultez [à l’aide de CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md) et [aide-mémoire de CodeDOM](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportDefaultValue">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeExpression ImportDefaultValue (string value, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeExpression ImportDefaultValue(string value, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportDefaultValue(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportDefaultValue (value As String, type As String) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeExpression ^ ImportDefaultValue(System::String ^ value, System::String ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ImportDefaultValue : string * string -&gt; System.CodeDom.CodeExpression&#xA;override this.ImportDefaultValue : string * string -&gt; System.CodeDom.CodeExpression" Usage="schemaImporterExtension.ImportDefaultValue (value, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Valeur trouvée dans le XSD d'origine.</param>
        <param name="type">Nom du type XSD.</param>
        <summary>Vous permet de spécifier la valeur par défaut pour le type XSD qui est importé.</summary>
        <returns><see cref="T:System.CodeDom.CodeExpression" /> qui définit la nouvelle valeur par défaut.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour contrôler la génération du code, vous devez utiliser les classes figurant dans le <xref:System.CodeDom> espace de noms. Pour plus d’informations, consultez [à l’aide de CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md) et [aide-mémoire de CodeDOM](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportSchemaType">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Permet de manipuler le code généré en examinant le schéma importé et en spécifiant le type CLR auquel il correspond.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple ci-dessous montre une implémentation simple du <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%28System.String%2CSystem.String%2CSystem.Xml.Schema.XmlSchemaObject%2CSystem.Xml.Serialization.XmlSchemas%2CSystem.Xml.Serialization.XmlSchemaImporter%2CSystem.CodeDom.CodeCompileUnit%2CSystem.CodeDom.CodeNamespace%2CSystem.Xml.Serialization.CodeGenerationOptions%2CSystem.CodeDom.Compiler.CodeDomProvider%29> (méthode). Le code vérifie l’espace de noms et le nom. Lorsque les valeurs appropriées sont détectées, il ajoute le nom d’un assembly personnalisé (« Order.dll ») qui doit être référencé dans le code généré. Il ajoute ensuite un nouvel espace de noms (« Microsoft.Samples ») qui est généré dans le code.  
  
 [!code-csharp[SchemaImporterExtensionExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SchemaImporterExtensionExample/CS/SchemaImporterExtensionExample.cs#1)]
 [!code-vb[SchemaImporterExtensionExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SchemaImporterExtensionExample/VB/SchemaImporterExtensionExample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportSchemaType">
      <MemberSignature Language="C#" Value="public virtual string ImportSchemaType (System.Xml.Schema.XmlSchemaType type, System.Xml.Schema.XmlSchemaObject context, System.Xml.Serialization.XmlSchemas schemas, System.Xml.Serialization.XmlSchemaImporter importer, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.Xml.Serialization.CodeGenerationOptions options, System.CodeDom.Compiler.CodeDomProvider codeProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImportSchemaType(class System.Xml.Schema.XmlSchemaType type, class System.Xml.Schema.XmlSchemaObject context, class System.Xml.Serialization.XmlSchemas schemas, class System.Xml.Serialization.XmlSchemaImporter importer, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.CodeDom.Compiler.CodeDomProvider codeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportSchemaType (type As XmlSchemaType, context As XmlSchemaObject, schemas As XmlSchemas, importer As XmlSchemaImporter, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, options As CodeGenerationOptions, codeProvider As CodeDomProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ImportSchemaType(System::Xml::Schema::XmlSchemaType ^ type, System::Xml::Schema::XmlSchemaObject ^ context, System::Xml::Serialization::XmlSchemas ^ schemas, System::Xml::Serialization::XmlSchemaImporter ^ importer, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::Xml::Serialization::CodeGenerationOptions options, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider);" />
      <MemberSignature Language="F#" Value="abstract member ImportSchemaType : System.Xml.Schema.XmlSchemaType * System.Xml.Schema.XmlSchemaObject * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string&#xA;override this.ImportSchemaType : System.Xml.Schema.XmlSchemaType * System.Xml.Schema.XmlSchemaObject * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string" Usage="schemaImporterExtension.ImportSchemaType (type, context, schemas, importer, compileUnit, mainNamespace, options, codeProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.Schema.XmlSchemaType" />
        <Parameter Name="context" Type="System.Xml.Schema.XmlSchemaObject" />
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
        <Parameter Name="importer" Type="System.Xml.Serialization.XmlSchemaImporter" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Xml.Schema.XmlSchemaType" /> qui représente le type XSD.</param>
        <param name="context"><see cref="T:System.Xml.Schema.XmlSchemaObject" /> qui représente des informations de schéma, telles que le numéro de ligne de l'élément XML.</param>
        <param name="schemas"><see cref="T:System.Xml.Serialization.XmlSchemas" /> qui contient la collection de schémas du document.</param>
        <param name="importer"><see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> qui est l'importateur en cours d'utilisation.</param>
        <param name="compileUnit"><see cref="T:System.CodeDom.CodeCompileUnit" /> auquel vous pouvez ajouter des structures CodeDOM pour générer un code alternatif pour XSD.</param>
        <param name="mainNamespace"><see cref="T:System.CodeDom.CodeNamespace" /> qui représente l'espace de noms actuel de l'élément.</param>
        <param name="options"><see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> pour les options du compilateur de code.</param>
        <param name="codeProvider"><see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> qui est utilisé pour générer le nouveau code.</param>
        <summary>Permet de manipuler le code généré en examinant le schéma importé et en spécifiant le type CLR auquel il correspond.</summary>
        <returns>Nom du type CLR à qui cela est mappé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple ci-dessous montre une implémentation simple du <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%28System.String%2CSystem.String%2CSystem.Xml.Schema.XmlSchemaObject%2CSystem.Xml.Serialization.XmlSchemas%2CSystem.Xml.Serialization.XmlSchemaImporter%2CSystem.CodeDom.CodeCompileUnit%2CSystem.CodeDom.CodeNamespace%2CSystem.Xml.Serialization.CodeGenerationOptions%2CSystem.CodeDom.Compiler.CodeDomProvider%29> (méthode). Le code vérifie l’espace de noms et le nom. Lorsque les valeurs appropriées sont détectées, il ajoute le nom d’un assembly personnalisé (« Order.dll ») qui doit être référencé dans le code généré. Il ajoute ensuite un nouvel espace de noms (« Microsoft.Samples ») qui est généré dans le code.  
  
 [!code-csharp[SchemaImporterExtensionExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SchemaImporterExtensionExample/CS/SchemaImporterExtensionExample.cs#1)]
 [!code-vb[SchemaImporterExtensionExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SchemaImporterExtensionExample/VB/SchemaImporterExtensionExample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportSchemaType">
      <MemberSignature Language="C#" Value="public virtual string ImportSchemaType (string name, string ns, System.Xml.Schema.XmlSchemaObject context, System.Xml.Serialization.XmlSchemas schemas, System.Xml.Serialization.XmlSchemaImporter importer, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.Xml.Serialization.CodeGenerationOptions options, System.CodeDom.Compiler.CodeDomProvider codeProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImportSchemaType(string name, string ns, class System.Xml.Schema.XmlSchemaObject context, class System.Xml.Serialization.XmlSchemas schemas, class System.Xml.Serialization.XmlSchemaImporter importer, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.CodeDom.Compiler.CodeDomProvider codeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportSchemaType (name As String, ns As String, context As XmlSchemaObject, schemas As XmlSchemas, importer As XmlSchemaImporter, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, options As CodeGenerationOptions, codeProvider As CodeDomProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ImportSchemaType(System::String ^ name, System::String ^ ns, System::Xml::Schema::XmlSchemaObject ^ context, System::Xml::Serialization::XmlSchemas ^ schemas, System::Xml::Serialization::XmlSchemaImporter ^ importer, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::Xml::Serialization::CodeGenerationOptions options, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider);" />
      <MemberSignature Language="F#" Value="abstract member ImportSchemaType : string * string * System.Xml.Schema.XmlSchemaObject * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string&#xA;override this.ImportSchemaType : string * string * System.Xml.Schema.XmlSchemaObject * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string" Usage="schemaImporterExtension.ImportSchemaType (name, ns, context, schemas, importer, compileUnit, mainNamespace, options, codeProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="context" Type="System.Xml.Schema.XmlSchemaObject" />
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
        <Parameter Name="importer" Type="System.Xml.Serialization.XmlSchemaImporter" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
      </Parameters>
      <Docs>
        <param name="name">Nom de l'élément.</param>
        <param name="ns">Espace de noms de l'élément.</param>
        <param name="context"><see cref="T:System.Xml.Schema.XmlSchemaObject" /> qui représente des informations de schéma, telles que le numéro de ligne de l'élément XML.</param>
        <param name="schemas"><see cref="T:System.Xml.Serialization.XmlSchemas" /> qui contient la collection de schémas du document.</param>
        <param name="importer"><see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> qui est l'importateur en cours d'utilisation.</param>
        <param name="compileUnit"><see cref="T:System.CodeDom.CodeCompileUnit" /> auquel vous pouvez ajouter des structures CodeDOM pour générer un code alternatif pour XSD.</param>
        <param name="mainNamespace"><see cref="T:System.CodeDom.CodeNamespace" /> qui représente l'espace de noms actuel de l'élément.</param>
        <param name="options"><see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> pour les options du compilateur de code.</param>
        <param name="codeProvider"><see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> qui est utilisé pour générer le nouveau code.</param>
        <summary>Permet de manipuler le code généré en examinant le schéma importé et en spécifiant le type CLR auquel il correspond.</summary>
        <returns>Nom du type CLR à qui cela est mappé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour contrôler la génération du code, vous devez utiliser les classes figurant dans le <xref:System.CodeDom> espace de noms. Pour plus d’informations, consultez [à l’aide de CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md) et [aide-mémoire de CodeDOM](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx).  
  
   
  
## Examples  
 L’exemple ci-dessous montre une implémentation simple du <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%28System.String%2CSystem.String%2CSystem.Xml.Schema.XmlSchemaObject%2CSystem.Xml.Serialization.XmlSchemas%2CSystem.Xml.Serialization.XmlSchemaImporter%2CSystem.CodeDom.CodeCompileUnit%2CSystem.CodeDom.CodeNamespace%2CSystem.Xml.Serialization.CodeGenerationOptions%2CSystem.CodeDom.Compiler.CodeDomProvider%29> (méthode). Le code vérifie l’espace de noms et le nom. Lorsque les valeurs appropriées sont détectées, il ajoute le nom d’un assembly personnalisé (« Order.dll ») qui doit être référencé dans le code généré. Il ajoute ensuite un nouvel espace de noms (« Microsoft.Samples ») qui est généré dans le code.  
  
 [!code-csharp[SchemaImporterExtensionExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SchemaImporterExtensionExample/CS/SchemaImporterExtensionExample.cs#1)]
 [!code-vb[SchemaImporterExtensionExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SchemaImporterExtensionExample/VB/SchemaImporterExtensionExample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>