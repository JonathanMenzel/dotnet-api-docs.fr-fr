<Type Name="WorkflowServiceHostFactory" FullName="System.ServiceModel.Activation.WorkflowServiceHostFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="47860724e57413951724f3e7cd8331dd36091c7a" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49141181" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactoryBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowServiceHostFactory extends System.ServiceModel.Activation.ServiceHostFactoryBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activation.WorkflowServiceHostFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowServiceHostFactory&#xA;Inherits ServiceHostFactoryBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowServiceHostFactory : System::ServiceModel::Activation::ServiceHostFactoryBase" />
  <TypeSignature Language="F#" Value="type WorkflowServiceHostFactory = class&#xA;    inherit ServiceHostFactoryBase" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Activation.ServiceHostFactoryBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1a0dd-101">Fabrique fournissant des instances de <see cref="T:System.ServiceModel.WorkflowServiceHost" /> dans les environnements d'hébergement gérés dans lesquels l'instance hôte est créée dynamiquement en réponse aux messages entrants.</span><span class="sxs-lookup"><span data-stu-id="1a0dd-101">Factory that provides instances of <see cref="T:System.ServiceModel.WorkflowServiceHost" /> in managed hosting environments where the host instance is created dynamically in response to incoming messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a0dd-102">Les environnements d'hébergement gérés qui prennent en charge l'activation dynamique sont les services IIS (Internet Information Services) et WAS (Windows Process Activation Service).</span><span class="sxs-lookup"><span data-stu-id="1a0dd-102">The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).</span></span>  
  
 <span data-ttu-id="1a0dd-103">Si vous avez implémenté un dérivé personnalisé de <xref:System.ServiceModel.WorkflowServiceHost>, envisagez d'implémenter également une fabrique dérivant de la classe <xref:System.ServiceModel.Activation.WorkflowServiceHostFactory>.</span><span class="sxs-lookup"><span data-stu-id="1a0dd-103">If you have implemented a custom derivative of <xref:System.ServiceModel.WorkflowServiceHost>, consider also implementing a factory that derives from the <xref:System.ServiceModel.Activation.WorkflowServiceHostFactory> class.</span></span>  
  
 <span data-ttu-id="1a0dd-104">Si, à la place, vous avez implémenté un dérivé personnalisé de la classe <xref:System.ServiceModel.ServiceHostBase>, envisagez également d'implémenter une fabrique dérivant directement votre fabrique de la classe <xref:System.ServiceModel.Activation.ServiceHostFactoryBase>.</span><span class="sxs-lookup"><span data-stu-id="1a0dd-104">If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHostBase> instead, then consider also implementing a factory that derives your factory from <xref:System.ServiceModel.Activation.ServiceHostFactoryBase> directly.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHostFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHostFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a0dd-105">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Activation.WorkflowServiceHostFactory" />.</span><span class="sxs-lookup"><span data-stu-id="1a0dd-105">Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.WorkflowServiceHostFactory" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceHost">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.ServiceHostBase CreateServiceHost (string constructorString, Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.ServiceHostBase CreateServiceHost(string constructorString, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateServiceHost (constructorString As String, baseAddresses As Uri()) As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::ServiceHostBase ^ CreateServiceHost(System::String ^ constructorString, cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="abstract member CreateServiceHost : string * Uri[] -&gt; System.ServiceModel.ServiceHostBase&#xA;override this.CreateServiceHost : string * Uri[] -&gt; System.ServiceModel.ServiceHostBase" Usage="workflowServiceHostFactory.CreateServiceHost (constructorString, baseAddresses)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructorString" Type="System.String" />
        <Parameter Name="baseAddresses" Type="System.Uri[]" />
      </Parameters>
      <Docs>
        <param name="constructorString"><span data-ttu-id="1a0dd-106">Nom du fichier de balisage du flux de travail définissant le service de flux de travail, ou nom du type de service de flux de travail.</span><span class="sxs-lookup"><span data-stu-id="1a0dd-106">The file name of the workflow markup file that defines the workflow service or the type name of the workflow service type.</span></span></param>
        <param name="baseAddresses"><span data-ttu-id="1a0dd-107">Tableau de type <see cref="T:System.Uri" /> qui contient les adresses de base pour le service hébergé.</span><span class="sxs-lookup"><span data-stu-id="1a0dd-107">An array of type <see cref="T:System.Uri" /> that contains the base addresses for the hosted service.</span></span></param>
        <summary><span data-ttu-id="1a0dd-108">Crée un <see cref="T:System.ServiceModel.WorkflowServiceHost" /> à partir d'une chaîne contenant soit le nom du fichier de balisage du flux de travail, soit celui du type de service de flux de travail ainsi que l'adresse de base du service spécifié.</span><span class="sxs-lookup"><span data-stu-id="1a0dd-108">Creates a <see cref="T:System.ServiceModel.WorkflowServiceHost" /> from a string that contains either the file name of the workflow markup file or the type name of the workflow service type and the base address of the service specified.</span></span></summary>
        <returns><span data-ttu-id="1a0dd-109">Objet <see cref="T:System.ServiceModel.ServiceHostBase" /> associé au service de flux de travail.</span><span class="sxs-lookup"><span data-stu-id="1a0dd-109">A <see cref="T:System.ServiceModel.ServiceHostBase" /> object associated with the workflow service.</span></span> <span data-ttu-id="1a0dd-110">L'implémentation par défaut renvoie un objet <see cref="T:System.ServiceModel.WorkflowServiceHost" /> avec les adresses de base spécifiées.</span><span class="sxs-lookup"><span data-stu-id="1a0dd-110">The default implementation returns a <see cref="T:System.ServiceModel.WorkflowServiceHost" /> object with the specified base addresses.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a0dd-111">L'argument `constructorString` peut être soit un nom qualifié complet de type de flux de travail, soit le chemin d'accès relatif du fichier de définition de flux de travail déclaré dans le fichier .svc et dans lequel se trouvent les directives <xref:System.ServiceModel.Activation.ServiceHostFactory>.</span><span class="sxs-lookup"><span data-stu-id="1a0dd-111">The `constructorString` argument could be either a fully qualified workflow type name or it could be the relative file path of the workflow definition file declared in the .svc file in which <xref:System.ServiceModel.Activation.ServiceHostFactory> directives are placed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1a0dd-112">Pour associer une définition de règle à une définition de flux de travail, attribuez au fichier de définition de règle le même nom que celui du fichier de définition de flux de travail en ajoutant l'extension .rules, puis placez-le dans même répertoire que le fichier de définition de flux de travail.</span><span class="sxs-lookup"><span data-stu-id="1a0dd-112">To associate a rule definition with a workflow definition, name the rule definition file the same name as the workflow definition file with a .rules extension and place it in same directory as the workflow definition file.</span></span> <span data-ttu-id="1a0dd-113">Par exemple, le fichier de définition de règle CalculatorServiceWorkflow.rules doit être placé dans le même répertoire que le fichier CalculatorServiceWorkflow.xoml.</span><span class="sxs-lookup"><span data-stu-id="1a0dd-113">For example, the rules definition file CalculatorServiceWorkflow.rules must be in the same directory as CalculatorServiceWorkflow.xoml.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a0dd-114">L'exemple suivant présente une référence de base type au service de flux de travail CalculatorServiceWorkflow.</span><span class="sxs-lookup"><span data-stu-id="1a0dd-114">The following is an example of a type-based reference to the workflow service CalculatorServiceWorkflow.</span></span>  
  
```  
<%@ServiceHost language=c# Debug="true" Factory="System.ServiceModel.Activation.WorkflowServiceHostFactory" Service="CalculatorServiceWorkflow" %>  
```  
  
 <span data-ttu-id="1a0dd-115">L'exemple suivant présente un fichier de définition de flux de travail faisant référence au service de flux de travail CalculatorServiceWorkflow.</span><span class="sxs-lookup"><span data-stu-id="1a0dd-115">The following is an example of a workflow definition file reference to the workflow service CalculatorServiceWorkflow.</span></span>  
  
```  
<%@ServiceHost language=c# Debug="true" Factory="System.ServiceModel.Activation.WorkflowServiceHostFactory" Service="CalculatorServiceWorkflow.xoml" %>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>