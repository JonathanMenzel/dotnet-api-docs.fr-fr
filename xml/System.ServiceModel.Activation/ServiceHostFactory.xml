<Type Name="ServiceHostFactory" FullName="System.ServiceModel.Activation.ServiceHostFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="abd8b5474fdf15962131041c789dc60bf6064a90" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39943740" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactoryBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceHostFactory extends System.ServiceModel.Activation.ServiceHostFactoryBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activation.ServiceHostFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceHostFactory&#xA;Inherits ServiceHostFactoryBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceHostFactory : System::ServiceModel::Activation::ServiceHostFactoryBase" />
  <TypeSignature Language="F#" Value="type ServiceHostFactory = class&#xA;    inherit ServiceHostFactoryBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Activation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Activation.ServiceHostFactoryBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="efb0f-101">Fabrique fournissant des instances de <see cref="T:System.ServiceModel.ServiceHost" /> dans les environnements d'hébergement gérés dans lesquels l'instance hôte est créée dynamiquement en réponse aux messages entrants.</span>
      <span class="sxs-lookup">
        <span data-stu-id="efb0f-101">Factory that provides instances of <see cref="T:System.ServiceModel.ServiceHost" /> in managed hosting environments where the host instance is created dynamically in response to incoming messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efb0f-102">Les environnements d'hébergement gérés qui prennent en charge l'activation dynamique sont les services IIS (Internet Information Services) et WAS (Windows Process Activation Service).</span><span class="sxs-lookup"><span data-stu-id="efb0f-102">The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).</span></span>  
  
 <span data-ttu-id="efb0f-103">Si vous avez implémenté un dérivé personnalisé de <xref:System.ServiceModel.ServiceHost>, envisagez d'implémenter également une fabrique dérivant de la classe <xref:System.ServiceModel.Activation.ServiceHostFactory>.</span><span class="sxs-lookup"><span data-stu-id="efb0f-103">If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHost>, consider also implementing a factory that derives from the <xref:System.ServiceModel.Activation.ServiceHostFactory> class.</span></span>  
  
 <span data-ttu-id="efb0f-104">Si, à la place, vous avez implémenté un dérivé personnalisé de la classe <xref:System.ServiceModel.ServiceHostBase>, envisagez également d'implémenter une fabrique dérivant directement votre fabrique de la classe <xref:System.ServiceModel.Activation.ServiceHostFactoryBase>.</span><span class="sxs-lookup"><span data-stu-id="efb0f-104">If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHostBase> instead, then consider also implementing a factory that derives your factory from <xref:System.ServiceModel.Activation.ServiceHostFactoryBase> directly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efb0f-105">Cet exemple indique comme utiliser la classe <xref:System.ServiceModel.Activation.ServiceHostFactory> :</span><span class="sxs-lookup"><span data-stu-id="efb0f-105">This examples show how to use the <xref:System.ServiceModel.Activation.ServiceHostFactory> class:</span></span>  
  
 [!code-csharp[ServiceHostFactory#0](~/samples/snippets/csharp/VS_Snippets_CFX/servicehostfactory/cs/program.cs#0)]
 [!code-vb[ServiceHostFactory#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicehostfactory/vb/program.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceHostFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.ServiceHostFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceHostFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="efb0f-106">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Activation.ServiceHostFactory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efb0f-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.ServiceHostFactory" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="efb0f-107">Cet exemple indique comme utiliser la classe <xref:System.ServiceModel.Activation.ServiceHostFactory.%23ctor%2A> :</span><span class="sxs-lookup"><span data-stu-id="efb0f-107">This examples show how to use the <xref:System.ServiceModel.Activation.ServiceHostFactory.%23ctor%2A>:</span></span>  
  
 [!code-csharp[ServiceHostFactory#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicehostfactory/cs/program.cs#1)]
 [!code-vb[ServiceHostFactory#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicehostfactory/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateServiceHost">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="efb0f-108">Crée un <see cref="T:System.ServiceModel.ServiceHost" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efb0f-108">Creates a <see cref="T:System.ServiceModel.ServiceHost" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateServiceHost">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.ServiceHostBase CreateServiceHost (string constructorString, Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.ServiceHostBase CreateServiceHost(string constructorString, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateServiceHost (constructorString As String, baseAddresses As Uri()) As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::ServiceHostBase ^ CreateServiceHost(System::String ^ constructorString, cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="override this.CreateServiceHost : string * Uri[] -&gt; System.ServiceModel.ServiceHostBase" Usage="serviceHostFactory.CreateServiceHost (constructorString, baseAddresses)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructorString" Type="System.String" />
        <Parameter Name="baseAddresses" Type="System.Uri[]" />
      </Parameters>
      <Docs>
        <param name="constructorString">
          <span data-ttu-id="efb0f-109">Les données d'initialisation qui sont passées à l'instance <see cref="T:System.ServiceModel.ServiceHostBase" /> qui est construite par la fabrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efb0f-109">The initialization data passed to the <see cref="T:System.ServiceModel.ServiceHostBase" /> instance being constructed by the factory.</span>
          </span>
        </param>
        <param name="baseAddresses">
          <span data-ttu-id="efb0f-110">
            <see cref="T:System.Array" /> de type <see cref="T:System.Uri" /> qui contient les adresses de base pour le service hébergé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efb0f-110">The <see cref="T:System.Array" /> of type <see cref="T:System.Uri" /> that contains the base addresses for the service hosted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efb0f-111">Crée une classe <see cref="T:System.ServiceModel.ServiceHost" /> avec les adresses de base spécifiques et l'initialise avec les données spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efb0f-111">Creates a <see cref="T:System.ServiceModel.ServiceHost" /> with specific base addresses and initializes it with specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efb0f-112">Classe <see cref="T:System.ServiceModel.ServiceHost" /> avec des adresses de base spécifiques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efb0f-112">A <see cref="T:System.ServiceModel.ServiceHost" /> with specific base addresses.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="efb0f-113">Cet exemple montre comment utiliser la méthode <xref:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost%28System.String%2CSystem.Uri%5B%5D%29> :</span><span class="sxs-lookup"><span data-stu-id="efb0f-113">This example shows how to use the <xref:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost%28System.String%2CSystem.Uri%5B%5D%29> method:</span></span>  
  
 [!code-csharp[ServiceHostFactory#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicehostfactory/cs/program.cs#3)]
 [!code-vb[ServiceHostFactory#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicehostfactory/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efb0f-114">
            <paramref name="baseAddress" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efb0f-114">
              <paramref name="baseAddress" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="efb0f-115">Il n'y a aucun contexte d'hébergement fourni ou <paramref name="constructorString" /> est <see langword="null" /> ou vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efb0f-115">There is no hosting context provided or <paramref name="constructorString" /> is <see langword="null" /> or empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceHost">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.ServiceHost CreateServiceHost (Type serviceType, Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.ServiceHost CreateServiceHost(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateServiceHost (serviceType As Type, baseAddresses As Uri()) As ServiceHost" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::ServiceHost ^ CreateServiceHost(Type ^ serviceType, cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="override this.CreateServiceHost : Type * Uri[] -&gt; System.ServiceModel.ServiceHost" Usage="serviceHostFactory.CreateServiceHost (serviceType, baseAddresses)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="efb0f-116">Spécifie le type de service à héberger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efb0f-116">Specifies the type of service to host.</span>
          </span>
        </param>
        <param name="baseAddresses">
          <span data-ttu-id="efb0f-117">
            <see cref="T:System.Array" /> de type <see cref="T:System.Uri" /> qui contient les adresses de base pour le service hébergé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efb0f-117">The <see cref="T:System.Array" /> of type <see cref="T:System.Uri" /> that contains the base addresses for the service hosted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efb0f-118">Crée une classe <see cref="T:System.ServiceModel.ServiceHost" /> pour un type de service spécifié avec une adresse de base spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efb0f-118">Creates a <see cref="T:System.ServiceModel.ServiceHost" /> for a specified type of service with a specific base address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efb0f-119">
            <see cref="T:System.ServiceModel.ServiceHost" /> pour le type de service spécifié avec une adresse de base spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efb0f-119">A <see cref="T:System.ServiceModel.ServiceHost" /> for the type of service specified with a specific base address.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="efb0f-120">Cet exemple montre comment créer une implémentation de substitution de la méthode <xref:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost%28System.Type%2CSystem.Uri%5B%5D%29>:</span><span class="sxs-lookup"><span data-stu-id="efb0f-120">This example shows how to create an override implementation of the <xref:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost%28System.Type%2CSystem.Uri%5B%5D%29> method:</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>