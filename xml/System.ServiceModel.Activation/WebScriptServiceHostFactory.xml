<Type Name="WebScriptServiceHostFactory" FullName="System.ServiceModel.Activation.WebScriptServiceHostFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6ecfa901a91795ceace62b7adc30a81ee3cef5f3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36527088" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebScriptServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebScriptServiceHostFactory extends System.ServiceModel.Activation.ServiceHostFactory" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activation.WebScriptServiceHostFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class WebScriptServiceHostFactory&#xA;Inherits ServiceHostFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebScriptServiceHostFactory : System::ServiceModel::Activation::ServiceHostFactory" />
  <TypeSignature Language="F#" Value="type WebScriptServiceHostFactory = class&#xA;    inherit ServiceHostFactory" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Activation.ServiceHostFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ajoute automatiquement un point de terminaison ASP.NET AJAX à un service, sans nécessiter de configuration, dans un environnement d'hébergement managé qui active dynamiquement des instances hôtes pour le service en réponse à des messages entrants.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette fabrique permet d'ajouter un point de terminaison ASP.NET AJAX à un service sans nécessiter de configuration. Le point de terminaison est ajouté à tous les autres points de terminaison définis dans la configuration (le cas échéant). Les environnements d'hébergement managés qui prennent en charge ce type d'activation d'hôte dynamique sont les services IIS (Internet Information Services) et WAS (Windows Process Activation Services).  
  
 Pour utiliser cette fabrique, spécifiez la <xref:System.ServiceModel.Activation.WebScriptServiceHostFactory> dans les `Factory` attribut de la [ @ServiceHost ](~/docs/framework/configure-apps/file-schema/wcf-directive/servicehost.md) la directive.  
  
 Le point de terminaison ASP.NET AJAX créé par cette fabrique est configuré avec <xref:System.ServiceModel.WebHttpBinding> et <xref:System.ServiceModel.Description.WebScriptEnablingBehavior>, avec tous les paramètres par défaut. Le point de terminaison est créé à une adresse vide relative au fichier .svc. Si la configuration du service définit déjà un point de terminaison à cette adresse, une exception <xref:System.InvalidOperationException> est levée et le service ne peut pas démarrer.  
  
   
  
## Examples  
 Spécifiez le <xref:System.ServiceModel.Activation.WebScriptServiceHostFactory> pour la valeur de la `Factory` d’attribut dans le [ @ServiceHost ](~/docs/framework/configure-apps/file-schema/wcf-directive/servicehost.md) directive pour activer un point de terminaison ASP.NET AJAX pour le `MyService` service comme indiqué dans l’exemple suivant.  
  
```  
<% @ServiceHost   
Service="MyService"  
Language="C#"  
Debug="true"  
Factory="WebScriptServiceHostFactory"  
%>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebScriptServiceHostFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WebScriptServiceHostFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebScriptServiceHostFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Activation.WebScriptServiceHostFactory" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En règle générale, ce constructeur est appelé automatiquement par Windows Communication Foundation (WCF) dans le cadre de l’activation du service : il n’est pas nécessaire d’appeler cette méthode manuellement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceHost">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.ServiceHost CreateServiceHost (Type serviceType, Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.ServiceHost CreateServiceHost(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WebScriptServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateServiceHost (serviceType As Type, baseAddresses As Uri()) As ServiceHost" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::ServiceHost ^ CreateServiceHost(Type ^ serviceType, cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="override this.CreateServiceHost : Type * Uri[] -&gt; System.ServiceModel.ServiceHost" Usage="webScriptServiceHostFactory.CreateServiceHost (serviceType, baseAddresses)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]" />
      </Parameters>
      <Docs>
        <param name="serviceType">Type de service à héberger.</param>
        <param name="baseAddresses">
          <see cref="T:System.Array" /> de type <see cref="T:System.Uri" /> qui contient les adresses de base pour le service hébergé.</param>
        <summary>Crée une classe dérivée de <see cref="T:System.ServiceModel.ServiceHost" /> pour un type spécifié de service avec une adresse de base spécifique qui peut être utilisée pour activer automatiquement des points de terminaison ASP.NET AJAX dans certains scénarios.</summary>
        <returns>
          <see cref="T:System.ServiceModel.ServiceHost" /> pour le type de service spécifié avec l'adresse de base spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalement, cette méthode est appelée automatiquement par Windows Communication Foundation (WCF) dans le cadre de l’activation du service : il n’est pas nécessaire d’appeler cette méthode manuellement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Un autre service utilise la même adresse de base ou un autre point de terminaison utilise la même adresse que le point de terminaison ASP.NET AJAX que cette fabrique tente de créer.</exception>
      </Docs>
    </Member>
  </Members>
</Type>