<Type Name="VirtualPathExtension" FullName="System.ServiceModel.Activation.VirtualPathExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="849520180afaf69a49e55c6d943eb1f32cb8fe4a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39864404" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class VirtualPathExtension : System.ServiceModel.IExtension&lt;System.ServiceModel.ServiceHostBase&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VirtualPathExtension extends System.Object implements class System.ServiceModel.IExtension`1&lt;class System.ServiceModel.ServiceHostBase&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activation.VirtualPathExtension" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VirtualPathExtension&#xA;Implements IExtension(Of ServiceHostBase)" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualPathExtension sealed : System::ServiceModel::IExtension&lt;System::ServiceModel::ServiceHostBase ^&gt;" />
  <TypeSignature Language="F#" Value="type VirtualPathExtension = class&#xA;    interface IExtension&lt;ServiceHostBase&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.IExtension&lt;System.ServiceModel.ServiceHostBase&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="8f73b-101">Contient le chemin d’accès virtuel du service lorsque ce dernier est hébergé dans les Services Internet (IIS) ou dans le service d’activation de processus de Windows (WAS).</span>
      <span class="sxs-lookup">
        <span data-stu-id="8f73b-101">Contains the service's virtual path when the service is hosted in Internet Information Services (IIS) or Windows Process Activation Service (WAS).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f73b-102">Cette extension n’est présente que pour les services hébergés dans les services IIS ou WAS.</span><span class="sxs-lookup"><span data-stu-id="8f73b-102">This extension is present only for services hosted in IIS or WAS.</span></span> <span data-ttu-id="8f73b-103">Les services peuvent déterminer s'ils sont hébergés dans les services IIS ou WAS en récupérant cette extension de leur <xref:System.ServiceModel.ServiceHostBase>, comme illustré dans l'exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="8f73b-103">Services can determine whether they are hosted in IIS or WAS by retrieving this extension from their <xref:System.ServiceModel.ServiceHostBase>, as shown in the following example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f73b-104">L'exemple suivant indique comment récupérer le <xref:System.ServiceModel.Activation.VirtualPathExtension> à partir de l'hôte de service et comment retourner une valeur qui est hébergée dans les services IIS ou WAS.</span><span class="sxs-lookup"><span data-stu-id="8f73b-104">The following example shows how to recover the <xref:System.ServiceModel.Activation.VirtualPathExtension> from the service host and return a value that it is hosted in IIS or WAS.</span></span>  
  
```csharp  
bool isHosted = false;  
ServiceHostBase host = OperationContext.Current.Host;  
VirtualPathExtension vpe = host.Extentions.Find<VirtualPathExtension>();  
  
if( vpe != null )  
Console.WriteLine("The virtualPath of the hosted Service is  {0}", vpe.VirtualPath);  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationVirtualPath">
      <MemberSignature Language="C#" Value="public string ApplicationVirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Activation.VirtualPathExtension.ApplicationVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationVirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationVirtualPath : string" Usage="System.ServiceModel.Activation.VirtualPathExtension.ApplicationVirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f73b-105">Obtient le chemin virtuel de l’application IIS ou WAS qui héberge le service WCF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f73b-105">Gets the virtual path of the IIS or WAS application that hosts the WCF service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f73b-106">Chemin d’accès virtuel de l’application IIS ou WAS qui héberge le service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f73b-106">The virtual path of the IIS or WAS application that hosts the service.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (System.ServiceModel.ServiceHostBase owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(class System.ServiceModel.ServiceHostBase owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.VirtualPathExtension.Attach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (owner As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Attach(System::ServiceModel::ServiceHostBase ^ owner);" />
      <MemberSignature Language="F#" Value="abstract member Attach : System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.Attach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="virtualPathExtension.Attach owner" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.IExtension`1.Attach(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="8f73b-107">
            <see cref="T:System.ServiceModel.ServiceHostBase" /> utilisant le chemin d'accès virtuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f73b-107">The <see cref="T:System.ServiceModel.ServiceHostBase" /> using the virtual path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f73b-108">Cette méthode est fournie pour prendre en charge l’infrastructure Windows Communication Foundation (WCF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f73b-108">This method is provided to support the Windows Communication Foundation (WCF) infrastructure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f73b-109">Cette méthode prend en charge l’infrastructure WCF et n’est pas destinée à être appelée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="8f73b-109">This method supports the WCF infrastructure and is not intended to be called directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach (System.ServiceModel.ServiceHostBase owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Detach(class System.ServiceModel.ServiceHostBase owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.VirtualPathExtension.Detach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach (owner As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Detach(System::ServiceModel::ServiceHostBase ^ owner);" />
      <MemberSignature Language="F#" Value="abstract member Detach : System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.Detach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="virtualPathExtension.Detach owner" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.IExtension`1.Detach(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="8f73b-110">
            <see cref="T:System.ServiceModel.ServiceHostBase" /> utilisant le chemin d'accès virtuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f73b-110">The <see cref="T:System.ServiceModel.ServiceHostBase" /> using the virtual path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f73b-111">Cette méthode est fournie pour prendre en charge l’infrastructure WCF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f73b-111">This method is provided to support the WCF infrastructure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f73b-112">Cette méthode prend en charge l’infrastructure WCF et n’est pas destinée à être appelée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="8f73b-112">This method supports the WCF infrastructure and is not intended to be called directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SiteName">
      <MemberSignature Language="C#" Value="public string SiteName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SiteName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Activation.VirtualPathExtension.SiteName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SiteName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SiteName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SiteName : string" Usage="System.ServiceModel.Activation.VirtualPathExtension.SiteName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f73b-113">Obtient le nom de site de l’application IIS ou WAS qui héberge le service WCF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f73b-113">Gets the site name of the IIS or WAS application that hosts the WCF service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f73b-114">Nom de site de l'application IIS ou WAS qui héberge le service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f73b-114">The site name of the IIS or WAS application that hosts the service.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Activation.VirtualPathExtension.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.ServiceModel.Activation.VirtualPathExtension.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f73b-115">Obtient le chemin d’accès virtuel utilisé par un service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f73b-115">Gets the virtual path used by a service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f73b-116">Chemin d’accès virtuel utilisé par un service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f73b-116">The virtual path used by a service.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>