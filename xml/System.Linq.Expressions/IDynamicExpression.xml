<Type Name="IDynamicExpression" FullName="System.Linq.Expressions.IDynamicExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f3866f932b5bf18cffeb83d472b4a674b6aa3ba" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52594558" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDynamicExpression : System.Linq.Expressions.IArgumentProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDynamicExpression implements class System.Linq.Expressions.IArgumentProvider" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Expressions.IDynamicExpression" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDynamicExpression&#xA;Implements IArgumentProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDynamicExpression : System::Linq::Expressions::IArgumentProvider" />
  <TypeSignature Language="F#" Value="type IDynamicExpression = interface&#xA;    interface IArgumentProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Linq.Expressions.IArgumentProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="d6799-101">Fournit une interface interne pour accéder aux arguments des nœuds d’arborescence DynamicExpression, ainsi qu’aux fonctionnalités CallSite et Rewriting.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d6799-101">Provides an internal interface for accessing the arguments of DynamicExpression tree nodes as well as CallSite and Rewriting functionality.</span>
      </span>
      <span data-ttu-id="d6799-102">Vous ne devez pas utiliser cette API.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d6799-102">You should not use this API.</span>
      </span>
      <span data-ttu-id="d6799-103">Elle est publique uniquement en raison de la refactorisation de la DLL et existe seulement pour optimiser les performances internes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d6799-103">It is only public due to DLL refactoring and exists only for internal performance optimizations.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateCallSite">
      <MemberSignature Language="C#" Value="public object CreateCallSite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateCallSite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.IDynamicExpression.CreateCallSite" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCallSite () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateCallSite();" />
      <MemberSignature Language="F#" Value="abstract member CreateCallSite : unit -&gt; obj" Usage="iDynamicExpression.CreateCallSite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d6799-104">Crée éventuellement CallSite et retourne CallSite pour le cache inline polymorphe de DynamicExpression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6799-104">Optionally creates the CallSite and returns the CallSite for the DynamicExpression's polymorphic inline cache.</span>
          </span>
          <span data-ttu-id="d6799-105">Vous ne devez pas utiliser ce type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6799-105">You should not use this type.</span>
          </span>
          <span data-ttu-id="d6799-106">Il est public uniquement en raison de la refactorisation de l’assembly, et il est utilisé en interne pour optimiser les performances.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6799-106">It is only public due to assembly refactoring, and it is used internally for performance optimizations.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6799-107">CallSite du cache inline polymorphe de DynamicExpression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6799-107">The CallSite for the DynamicExpression's polymorphic inline cache.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegateType">
      <MemberSignature Language="C#" Value="public Type DelegateType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DelegateType" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.IDynamicExpression.DelegateType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DelegateType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DelegateType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DelegateType : Type" Usage="System.Linq.Expressions.IDynamicExpression.DelegateType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6799-108">Obtient le type délégué utilisé par CallSite, qui représente le type des règles utilisées dans le cache inline polymorphe de l’expression dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6799-108">Gets the delegate type used by the CallSite, which is the type of the rules used in the dynamic expression's polymorhphic inline cache.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d6799-109">Le type de délégué utilisé par le CallSite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6799-109">The delegate type used by the CallSite.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rewrite">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Rewrite (System.Linq.Expressions.Expression[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression Rewrite(class System.Linq.Expressions.Expression[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Rewrite (args As Expression()) As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ Rewrite(cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member Rewrite : System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.Expression" Usage="iDynamicExpression.Rewrite args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Linq.Expressions.Expression[]" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="d6799-110">Arguments utilisés pour remplacer ce nœud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6799-110">The arguments used to replace this node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d6799-111">Réécrit ce nœud en remplaçant les arguments de l’expression dynamique par les valeurs fournies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6799-111">Rewrites this node replacing the dynamic expression's arguments with the provided values.</span>
          </span>
          <span data-ttu-id="d6799-112">Le nombre de <paramref name="args" /> doit correspondre au nombre de l’expression actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6799-112">The number of <paramref name="args" /> needs to match the number of the current expression.</span>
          </span>
          <span data-ttu-id="d6799-113">Vous ne devez pas utiliser ce type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6799-113">You should not use this type.</span>
          </span>
          <span data-ttu-id="d6799-114">Il est uniquement public, en raison de la refactorisation de l’assembly, et il est utilisé en interne pour optimiser les performances.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6799-114">It is only public due to assembly refactoring, and it is used internally for performance optimizations.</span>
          </span>
          <span data-ttu-id="d6799-115">Cette méthode d’assistance permet la réécriture de nœuds pour qu’ils soient indépendants de la classe d’implémentation spécifique dérivant de l’expression dynamique qui est utilisée sur le site d’appel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6799-115">This helper method allows re-writing of nodes to be independent of the specific implementation class deriving from DynamicExpression that is being used at the call site.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6799-116">Nœud réécrit, mais retourne le même nœud si aucune modification n’a été apportée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6799-116">The rewritten node, but if no changes were made, then returns the same node.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>