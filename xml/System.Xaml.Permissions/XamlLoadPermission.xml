<Type Name="XamlLoadPermission" FullName="System.Xaml.Permissions.XamlLoadPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7a76b027fa00ee1420eb0706f04f35374598cc39" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720093" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XamlLoadPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit XamlLoadPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Permissions.XamlLoadPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XamlLoadPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlLoadPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Déclare des autorisations pour le chargement de types à partir des assemblys utilisés par un lecteur ou un writer XAML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.Permissions.XamlLoadPermission> s’applique à des scénarios tels que si les types internes sont autorisés à charger en confiance partielle.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlLoadPermission (System.Collections.Generic.IEnumerable&lt;System.Xaml.Permissions.XamlAccessLevel&gt; allowedAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.Permissions.XamlAccessLevel&gt; allowedAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (allowedAccess As IEnumerable(Of XamlAccessLevel))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlLoadPermission(System::Collections::Generic::IEnumerable&lt;System::Xaml::Permissions::XamlAccessLevel ^&gt; ^ allowedAccess);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowedAccess" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.Permissions.XamlAccessLevel&gt;" />
      </Parameters>
      <Docs>
        <param name="allowedAccess">Jeu énumérable de valeurs <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> spécifiques.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, à l'aide d'un jeu énumérable de valeurs <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> spécifiques.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un appel à ce constructeur initialise la <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> collection avec chaque `allowedAccess` entrée sous la forme d’un élément et affecte au retour de <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> à `false` dans l’instance créée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="allowedAccess" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="allowedAccess" /> contient des informations non valides, telles qu'un élément null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlLoadPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlLoadPermission(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Valeur d'énumération <see cref="T:System.Security.Permissions.PermissionState" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> à l'aide des autorisations existantes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Permissions.PermissionState.Unrestricted> affecte au retour de <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> à `true` dans l’instance créée. Tout appel à ce constructeur définit la <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> collection `null` , car il ne s’applique pas si les autorisations sont signalées au lieu de <xref:System.Xaml.Permissions.XamlAccessLevel>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlLoadPermission (System.Xaml.Permissions.XamlAccessLevel allowedAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.Permissions.XamlAccessLevel allowedAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (allowedAccess As XamlAccessLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlLoadPermission(System::Xaml::Permissions::XamlAccessLevel ^ allowedAccess);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowedAccess" Type="System.Xaml.Permissions.XamlAccessLevel" />
      </Parameters>
      <Docs>
        <param name="allowedAccess">Valeur <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> de définition.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> avec une seule valeur <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un appel à ce constructeur initialise la <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> collection avec `allowedAccess` en tant que le seul élément et affecte au retour de <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> à `false` dans l’instance créée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="allowedAccess" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedAccess">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.Permissions.XamlAccessLevel&gt; AllowedAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.Permissions.XamlAccessLevel&gt; AllowedAccess" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedAccess As IList(Of XamlAccessLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::Permissions::XamlAccessLevel ^&gt; ^ AllowedAccess { System::Collections::Generic::IList&lt;System::Xaml::Permissions::XamlAccessLevel ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.Permissions.XamlAccessLevel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la liste de toutes les valeurs <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> que ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> représente.</summary>
        <value>Liste de valeurs <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> en lecture seule, ou <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le courant <xref:System.Xaml.Permissions.XamlLoadPermission> est initialisé telles que <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> est `true`, <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> peut être `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée et retourne une copie identique de l'objet <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> en cours.</summary>
        <returns>Une copie de l'élément <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par le contrat d’interface de <xref:System.Security.IPermission> cette valeur est <xref:System.Security.IPermission> dans la signature mais peut être converti en <xref:System.Xaml.Permissions.XamlLoadPermission>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (elem As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ elem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elem" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="elem">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</param>
        <summary>Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="elem" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="elem" /> ne contient pas l'encodage XML pour un <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.  
  
 - ou -  
  
 L'attribut de version dans <paramref name="elem" /> n'est pas pris en charge.</exception>
      </Docs>
    </Member>
    <Member MemberName="Includes">
      <MemberSignature Language="C#" Value="public bool Includes (System.Xaml.Permissions.XamlAccessLevel requestedAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Includes(class System.Xaml.Permissions.XamlAccessLevel requestedAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Includes (requestedAccess As XamlAccessLevel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Includes(System::Xaml::Permissions::XamlAccessLevel ^ requestedAccess);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedAccess" Type="System.Xaml.Permissions.XamlAccessLevel" />
      </Parameters>
      <Docs>
        <param name="requestedAccess">
          <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> spécifique à rechercher.</param>
        <summary>Retourne si ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> inclut un <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> spécifié dans sa liste <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />.</summary>
        <returns>
          <see langword="true" /> si <paramref name="requestedAccess" /> existe comme élément dans la liste <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> du <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel. Sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestedAccess" /> a la valeur null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> qui fera une intersection avec le <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel. Peut être <see langword="null" />.</param>
        <summary>Crée et retourne un <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> qui représente l'intersection entre le <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel et l'autorisation spécifiée.</summary>
        <returns>Nouvelle autorisation qui représente l'intersection entre le <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel et le <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> spécifié. Cette nouvelle autorisation est <see langword="null" /> si l'intersection est vide.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour une union, intersect et la logique de sous-ensemble, <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> est vérifié en premier et peut retourner un résultat basé uniquement sur ce contrôle. Ensuite, <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> est activée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> n'est pas <see langword="null" /> ou n'est pas un <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Autorisation qui doit être testée pour la relation de sous-ensemble. Peut être <see langword="null" />.</param>
        <summary>Détermine si le <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel est un sous-ensemble de l'autorisation spécifiée.</summary>
        <returns>
          <see langword="true" /> si l'autorisation <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> en cours est un sous-ensemble de l'autorisation spécifiée ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour une union, intersect et la logique de sous-ensemble, <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> est vérifié en premier et peut retourner un résultat basé uniquement sur ce contrôle. Ensuite, <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> est activée.  
  
 Si `target` est `null` et actuel <xref:System.Xaml.Permissions.XamlLoadPermission> est à la fois <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> `false` et est vide <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> liste, cette méthode retourne `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> n'est pas <see langword="null" /> ou n'est pas un <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne si ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> dénote des autorisations illimitées.</summary>
        <returns>
          <see langword="true" /> si ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> dénote des autorisations illimitées. <see langword="false" /> si ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> a des restrictions de niveau d'accès spécifiques dans <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />, ou n'a pas d'autorisations.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée un encodage XML de ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> et de son état actuel.</summary>
        <returns>Encodage XML de ce <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, y compris des informations d'état.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (other As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other">
          <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> à combiner au <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel. Peut être <see langword="null" />.</param>
        <summary>Crée une autorisation qui est l'union entre le <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel et l'autorisation spécifiée.</summary>
        <returns>Nouveau <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> qui représente l'union du <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actuel et du <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour une union, intersect et la logique de sous-ensemble, <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> est vérifié en premier et peut retourner un résultat basé uniquement sur ce contrôle. Ensuite, <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> est activée.  
  
 Si `other` est `null`, actuel <xref:System.Xaml.Permissions.XamlLoadPermission> est retourné.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="other" /> n'est pas <see langword="null" /> ou n'est pas un <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>