<Type Name="CustomPeerResolverService" FullName="System.ServiceModel.PeerResolvers.CustomPeerResolverService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="20dc1f364336422f0de2363544e35a3c06c71895" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55354102" /></Metadata><TypeSignature Language="C#" Value="public class CustomPeerResolverService : System.ServiceModel.PeerResolvers.IPeerResolverContract" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomPeerResolverService extends System.Object implements class System.ServiceModel.PeerResolvers.IPeerResolverContract" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomPeerResolverService&#xA;Implements IPeerResolverContract" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomPeerResolverService : System::ServiceModel::PeerResolvers::IPeerResolverContract" />
  <TypeSignature Language="F#" Value="type CustomPeerResolverService = class&#xA;    interface IPeerResolverContract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.PeerResolvers.IPeerResolverContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("PeerChannel feature is obsolete and will be removed in the future.", false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, UseSynchronizationContext=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit une implémentation de base d'un service de programme de résolution d'homologue personnalisé.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe <xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService> définit l’implémentation de base d’un service de programme de résolution d’homologue personnalisé et fournit la recherche pour la résolution des ID d’inscription à des adresses de point de terminaison homologue dans le maillage maintenu par ce programme de résolution.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Les implémenteurs de programmes de résolution d'homologue personnalisés doivent dériver de cette classe et substituer ces fonctions spécifiques pour lesquelles ils fournissent des implémentations personnalisées. Tout programme de résolution d'homologue personnalisé doit au moins implémenter l'interface <see cref="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" />.  
  
Les clients utilisant un programme de résolution personnalisé doivent également avoir une limite supérieure sur la latence client-serveur pour actualiser avec succès leur inscription avec le service de programme de résolution d'homologue.</para></block>
    <altmember cref="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomPeerResolverService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomPeerResolverService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance par défaut de la classe <see cref="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanupInterval">
      <MemberSignature Language="C#" Value="public TimeSpan CleanupInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CleanupInterval" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property CleanupInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CleanupInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.CleanupInterval : TimeSpan with get, set" Usage="System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la durée récurrente après laquelle les entrées périmées sont supprimées de la table de recherche d'inscription du service de programme de résolution d'homologue.</summary>
        <value><see cref="T:System.TimeSpan" /> qui spécifie l'intervalle de temps après lequel les entrées périmées sont supprimées de la table de recherche d'inscription du service de programme de résolution d'homologue.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété doit être définie avant le service de programme de résolution d'homologue et ne doit pas être nulle. L'intervalle par défaut est de 1 minute.  
  
 Cette valeur doit être inférieure à la valeur de <xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval%2A> pour éviter l'occurrence d'entrées périmées dans la table de recherche d'inscription du service de programme de résolution d'homologue.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'intervalle est soit nul, soit supérieur à <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une tentative de définition de la propriété a été effectuée après un appel à <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="customPeerResolverService.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ferme le service de programme de résolution d'homologue.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Le service a été fermé par un appel précédent à cette méthode.</exception>
      </Docs>
    </Member>
    <Member MemberName="ControlShape">
      <MemberSignature Language="C#" Value="public bool ControlShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlShape" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.ControlShape" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlShape As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlShape { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ControlShape : bool with get, set" Usage="System.ServiceModel.PeerResolvers.CustomPeerResolverService.ControlShape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit si les références sont partagées par le service de programme de résolution d'homologue.</summary>
        <value>True si les références sont partagées par le service de programme de résolution d'homologue ; false si elles ne le sont pas.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceSettings">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo GetServiceSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo GetServiceSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.GetServiceSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceSettings () As ServiceSettingsResponseInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::ServiceSettingsResponseInfo ^ GetServiceSettings();" />
      <MemberSignature Language="F#" Value="abstract member GetServiceSettings : unit -&gt; System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo&#xA;override this.GetServiceSettings : unit -&gt; System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" Usage="customPeerResolverService.GetServiceSettings " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.GetServiceSettings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient les paramètres de réponse spécifiques pour le service de programme de résolution d'homologue.</summary>
        <returns><see cref="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" /> qui contient les paramètres de réponse spécifiques pour le service de programme de résolution d'homologue personnalisé, y compris les paramètres de nettoyage et d'intervalle d'actualisation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public virtual void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Open();" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; unit&#xA;override this.Open : unit -&gt; unit" Usage="customPeerResolverService.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ouvre le service de programme de résolution d'homologue.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque cette méthode est appelée, elle planifie le premier nettoyage de la table de recherche d'inscription basé sur la valeur affectée à la propriété <xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval" /> ou <see cref="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval" /> ont pour valeur un intervalle de temps de 0.</exception>
        <exception cref="T:System.InvalidOperationException">Le service a été démarré par un appel précédent à cette méthode.</exception>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RefreshResponseInfo Refresh (System.ServiceModel.PeerResolvers.RefreshInfo refreshInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RefreshResponseInfo Refresh(class System.ServiceModel.PeerResolvers.RefreshInfo refreshInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Refresh(System.ServiceModel.PeerResolvers.RefreshInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::RefreshResponseInfo ^ Refresh(System::ServiceModel::PeerResolvers::RefreshInfo ^ refreshInfo);" />
      <MemberSignature Language="F#" Value="abstract member Refresh : System.ServiceModel.PeerResolvers.RefreshInfo -&gt; System.ServiceModel.PeerResolvers.RefreshResponseInfo&#xA;override this.Refresh : System.ServiceModel.PeerResolvers.RefreshInfo -&gt; System.ServiceModel.PeerResolvers.RefreshResponseInfo" Usage="customPeerResolverService.Refresh refreshInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Refresh(System.ServiceModel.PeerResolvers.RefreshInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RefreshResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refreshInfo" Type="System.ServiceModel.PeerResolvers.RefreshInfo" />
      </Parameters>
      <Docs>
        <param name="refreshInfo">Objet <see cref="T:System.ServiceModel.PeerResolvers.RefreshInfo" /> qui contient l'ID de maillage et l'ID d'inscription de l'entrée à actualiser dans la table de correspondance d'inscription du service de programme de résolution d'homologue.</param>
        <summary>Actualise l'expiration d'une entrée dans la table de correspondance d'inscription du service de programme de résolution d'homologue.</summary>
        <returns><see cref="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" /> qui contient l'entrée d'inscription récemment actualisée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'actualisation d'une entrée étend la durée pendant laquelle elle reste valide. Toutes les informations utilisées pour identifier uniquement l'entrée doivent être fournies dans l'objet <xref:System.ServiceModel.PeerResolvers.RefreshInfo> fourni à cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="refreshInfo" /> a la valeur Null.</exception>
        <exception cref="T:System.InvalidOperationException">Le service personnalisé de programme de résolution d'homologue n'a pas été démarré avec un appel précédent à <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RefreshInterval">
      <MemberSignature Language="C#" Value="public TimeSpan RefreshInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RefreshInterval" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property RefreshInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RefreshInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.RefreshInterval : TimeSpan with get, set" Usage="System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la durée pendant laquelle les entrées restent valides dans la table de recherche d'inscription d'un service de programme de résolution d'homologue.</summary>
        <value><see cref="T:System.TimeSpan" /> qui définit la durée pendant laquelle les entrées restent valides dans la table de recherche d'inscription d'un service de programme de résolution d'homologue.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété doit être définie avant le service de programme de résolution d'homologue et ne doit pas être nulle. L'intervalle par défaut est de 2 minutes.  
  
 Lorsque la durée fournie à cette propriété s'est écoulée pour une entrée donnée dans la table de recherche d'inscription d'un service de programme de résolution d'homologue, cette entrée est marquée pour suppression. La suppression se produit lorsque l'intervalle spécifié dans la propriété <xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval%2A> se produit.  Par exemple, si cette propriété a la valeur d'un intervalle de temps de 10 minutes, les entrées dans la table de recherche d'inscription deviennent périmées et marquées pour suppression une fois que l'intervalle s'est écoulé. En conséquence, le client du programme de résolution d'homologue doit effectuer une mise à jour toutes les dix minutes pour éviter la suppression de leur entrée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'intervalle est soit nul, soit supérieur à <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une tentative de définition de la propriété a été effectuée après un appel à <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Register">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inscrit un homologue avec le service de programme de résolution d'homologue personnalisé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour enregistrer un nœud homologue dans un maillage spécifique, un objet <xref:System.ServiceModel.PeerResolvers.RegisterInfo> correct doit être fourni à l'une des surcharges pour cette méthode. Cet objet contient les détails spécifiques nécessaires à l'inscription de l'entrée d'inscription demandant l'inscription, y compris un GUID qui identifie l'entrée d'inscription de façon unique, l'ID de maillage et une adresse de point de terminaison.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RegisterResponseInfo Register (System.ServiceModel.PeerResolvers.RegisterInfo registerInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RegisterResponseInfo Register(class System.ServiceModel.PeerResolvers.RegisterInfo registerInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.ServiceModel.PeerResolvers.RegisterInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::RegisterResponseInfo ^ Register(System::ServiceModel::PeerResolvers::RegisterInfo ^ registerInfo);" />
      <MemberSignature Language="F#" Value="abstract member Register : System.ServiceModel.PeerResolvers.RegisterInfo -&gt; System.ServiceModel.PeerResolvers.RegisterResponseInfo&#xA;override this.Register : System.ServiceModel.PeerResolvers.RegisterInfo -&gt; System.ServiceModel.PeerResolvers.RegisterResponseInfo" Usage="customPeerResolverService.Register registerInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Register(System.ServiceModel.PeerResolvers.RegisterInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RegisterResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registerInfo" Type="System.ServiceModel.PeerResolvers.RegisterInfo" />
      </Parameters>
      <Docs>
        <param name="registerInfo"><see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" /> qui contient des informations sur l'entrée d'inscription à inscrire avec le service de programme de résolution d'homologue.</param>
        <summary>Ajoute une nouvelle entrée à la table de recherche d'inscription du service de programme de résolution d'homologue.</summary>
        <returns><see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" /> qui contient une copie de l'entrée ajoutée à la table de correspondance d'inscription du service de programme de résolution d'homologue.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ajoute une nouvelle entrée à la table de recherche d'inscription du service de programme de résolution d'homologue. Notez que les inscriptions effectuées après la fermeture du service n'ont aucun effet. Ces entrées ne sont pas retournées par les demandes de résolution.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Une entrée d'inscription avec le même GUID existe déjà dans la table de recherche, ou le service personnalisé de programme de résolution homologue n'a pas été démarré avec un appel précédent à <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
        <exception cref="T:System.ArgumentException">L'objet <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" /> fourni à cette méthode avait la valeur Null ou était incorrect.</exception>
        <exception cref="T:System.NullReferenceException">La propriété AddressInfo de l'objet fournie au paramètre <paramref name="registerInfo" /> avait la valeur Null.</exception>
        <exception cref="T:System.ArgumentNullException">La valeur <paramref name="meshId" /> fournie à cette méthode est Null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RegisterResponseInfo Register (Guid clientId, string meshId, System.ServiceModel.PeerNodeAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RegisterResponseInfo Register(valuetype System.Guid clientId, string meshId, class System.ServiceModel.PeerNodeAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.Guid,System.String,System.ServiceModel.PeerNodeAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Register (clientId As Guid, meshId As String, address As PeerNodeAddress) As RegisterResponseInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::RegisterResponseInfo ^ Register(Guid clientId, System::String ^ meshId, System::ServiceModel::PeerNodeAddress ^ address);" />
      <MemberSignature Language="F#" Value="abstract member Register : Guid * string * System.ServiceModel.PeerNodeAddress -&gt; System.ServiceModel.PeerResolvers.RegisterResponseInfo&#xA;override this.Register : Guid * string * System.ServiceModel.PeerNodeAddress -&gt; System.ServiceModel.PeerResolvers.RegisterResponseInfo" Usage="customPeerResolverService.Register (clientId, meshId, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RegisterResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.Guid" />
        <Parameter Name="meshId" Type="System.String" />
        <Parameter Name="address" Type="System.ServiceModel.PeerNodeAddress" />
      </Parameters>
      <Docs>
        <param name="clientId"><see cref="T:System.Guid" /> qui spécifie un identificateur unique pour l'entrée à inscrire relative au service de résolution.</param>
        <param name="meshId"><see cref="T:System.String" /> qui indique l'ID de maillage du maillage d'homologue dans lequel l'entrée d'inscription participe.</param>
        <param name="address"><see cref="T:System.ServiceModel.PeerNodeAddress" /> qui contient l'adresse de point de terminaison de l'entrée d'inscription.</param>
        <summary>Ajoute une nouvelle entrée à la table de recherche d'inscription du service de programme de résolution d'homologue.</summary>
        <returns><see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" /> qui contient une copie de l'entrée ajoutée à la table de recherche d'inscription relative au service de programme de résolution d'homologue.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Une entrée d'inscription avec le même GUID existe déjà dans la table de recherche, ou le service personnalisé de programme de résolution homologue n'a pas été démarré avec un appel précédent à <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
        <exception cref="T:System.ArgumentException">L'objet <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" /> fourni à cette méthode avait la valeur Null ou était incorrect.</exception>
        <exception cref="T:System.ArgumentNullException">La propriété MeshId et/ou RegistrationId de l'objet fourni au paramètre <paramref name="refreshInfo" /> avait la valeur Null.</exception>
        <exception cref="T:System.NullReferenceException">La propriété MeshId de l'objet fourni au paramètre <paramref name="refreshInfo" /> est inconnue.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.ResolveResponseInfo Resolve (System.ServiceModel.PeerResolvers.ResolveInfo resolveInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.ResolveResponseInfo Resolve(class System.ServiceModel.PeerResolvers.ResolveInfo resolveInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Resolve(System.ServiceModel.PeerResolvers.ResolveInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::ResolveResponseInfo ^ Resolve(System::ServiceModel::PeerResolvers::ResolveInfo ^ resolveInfo);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : System.ServiceModel.PeerResolvers.ResolveInfo -&gt; System.ServiceModel.PeerResolvers.ResolveResponseInfo&#xA;override this.Resolve : System.ServiceModel.PeerResolvers.ResolveInfo -&gt; System.ServiceModel.PeerResolvers.ResolveResponseInfo" Usage="customPeerResolverService.Resolve resolveInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Resolve(System.ServiceModel.PeerResolvers.ResolveInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.ResolveResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolveInfo" Type="System.ServiceModel.PeerResolvers.ResolveInfo" />
      </Parameters>
      <Docs>
        <param name="resolveInfo"><see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" /> qui contient des informations sur l'entrée d'inscription pour laquelle des points de terminaison, s'ils sont connus, vont être recherchés par le service de programme de résolution d'homologue.</param>
        <summary>Retourne une liste de points de terminaison connus pour une entrée d'inscription.</summary>
        <returns><see cref="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" /> qui contient les points de terminaison pour l'entrée d'inscription dans la table de correspondance qui associe les informations fournies dans le paramètre <paramref name="resolveInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode recherche une entrée d'inscription basée sur les données fournies dans un objet <xref:System.ServiceModel.PeerResolvers.ResolveInfo> et retourne toutes les adresses de point de terminaison correspondantes trouvées dans la table de recherche d'inscription du service de programme de résolution d'homologue. Le nombre d'adresses de point de terminaison retourné est égal ou inférieur à la valeur de la propriété <xref:System.ServiceModel.PeerResolvers.ResolveInfo.MaxAddresses%2A> définie sur l'objet <xref:System.ServiceModel.PeerResolvers.ResolveInfo>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L'objet <see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" /> avait la valeur Null ou était incorrect.</exception>
        <exception cref="T:System.InvalidOperationException">Une entrée d'inscription avec le même GUID existe déjà dans la table de recherche, ou le service personnalisé de programme de résolution homologue n'a pas été démarré avec un appel précédent à <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public virtual void Unregister (System.ServiceModel.PeerResolvers.UnregisterInfo unregisterInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister(class System.ServiceModel.PeerResolvers.UnregisterInfo unregisterInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Unregister(System.ServiceModel.PeerResolvers.UnregisterInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Unregister(System::ServiceModel::PeerResolvers::UnregisterInfo ^ unregisterInfo);" />
      <MemberSignature Language="F#" Value="abstract member Unregister : System.ServiceModel.PeerResolvers.UnregisterInfo -&gt; unit&#xA;override this.Unregister : System.ServiceModel.PeerResolvers.UnregisterInfo -&gt; unit" Usage="customPeerResolverService.Unregister unregisterInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Unregister(System.ServiceModel.PeerResolvers.UnregisterInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unregisterInfo" Type="System.ServiceModel.PeerResolvers.UnregisterInfo" />
      </Parameters>
      <Docs>
        <param name="unregisterInfo"><see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" /> qui contient les informations utilisées pour identifier de façon unique l'entrée d'inscription à supprimer de la table de recherche d'inscription.</param>
        <summary>Supprime une entrée spécifique de la table de recherche d'inscription du service de programme de résolution d'homologue.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Une entrée pour l'entrée d'inscription spécifiée n'a pas pu être trouvée, ou l'objet <see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" /> fourni a la valeur Null ou est incorrect.</exception>
        <exception cref="T:System.InvalidOperationException">Une entrée d'inscription avec le même GUID existe déjà dans la table de recherche, ou le service personnalisé de programme de résolution homologue n'a pas été démarré avec un appel précédent à <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RegisterResponseInfo Update (System.ServiceModel.PeerResolvers.UpdateInfo updateInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RegisterResponseInfo Update(class System.ServiceModel.PeerResolvers.UpdateInfo updateInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Update(System.ServiceModel.PeerResolvers.UpdateInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::RegisterResponseInfo ^ Update(System::ServiceModel::PeerResolvers::UpdateInfo ^ updateInfo);" />
      <MemberSignature Language="F#" Value="abstract member Update : System.ServiceModel.PeerResolvers.UpdateInfo -&gt; System.ServiceModel.PeerResolvers.RegisterResponseInfo&#xA;override this.Update : System.ServiceModel.PeerResolvers.UpdateInfo -&gt; System.ServiceModel.PeerResolvers.RegisterResponseInfo" Usage="customPeerResolverService.Update updateInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Update(System.ServiceModel.PeerResolvers.UpdateInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RegisterResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateInfo" Type="System.ServiceModel.PeerResolvers.UpdateInfo" />
      </Parameters>
      <Docs>
        <param name="updateInfo"><see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> qui identifie de façon unique une entrée d'inscription spécifique et fournit des informations mises à jour pour celle-ci.</param>
        <summary>Actualise une entrée d'inscription existante dans la table de recherche d'inscription du service de programme de résolution d'homologue.</summary>
        <returns><see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> qui contient une copie de l'entrée pour l'entrée d'inscription mise à jour.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Une entrée pour l'entrée d'inscription spécifiée n'a pas pu être trouvée, ou l'objet <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> fourni est incorrect.</exception>
        <exception cref="T:System.InvalidOperationException">Une entrée d'inscription avec le même GUID existe déjà dans la table de recherche, ou le service personnalisé de programme de résolution homologue n'a pas été démarré avec un appel précédent à <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>