<Type Name="PageSettings" FullName="System.Drawing.Printing.PageSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cabf0a9ffce3d3a3d4ef51c61199c925c6b47553" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36670771" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PageSettings : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PageSettings extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Printing.PageSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class PageSettings&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageSettings : ICloneable" />
  <TypeSignature Language="F#" Value="type PageSettings = class&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Spécifie des paramètres ne s'appliquant qu'à une page imprimée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Drawing.Printing.PageSettings> classe est utilisée pour spécifier les paramètres qui modifient la façon dont une page imprimée. En règle générale, vous définissez les paramètres par défaut pour toutes les pages à imprimer par le biais du <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A?displayProperty=nameWithType> propriété. Pour spécifier les paramètres sur une base de page par page, gérer la <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> ou <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings?displayProperty=nameWithType> événement et de modifier le <xref:System.Drawing.Printing.PageSettings> argument inclus dans le <xref:System.Drawing.Printing.PrintPageEventArgs> ou <xref:System.Drawing.Printing.QueryPageSettingsEventArgs>, respectivement.  
  
 Pour plus d’informations sur la gestion des <xref:System.Drawing.Printing.PrintDocument> les événements, consultez le <xref:System.Drawing.Printing.PrintDocument> vue d’ensemble de la classe. Pour plus d’informations sur l’impression, consultez la <xref:System.Drawing.Printing> vue d’ensemble de l’espace de noms.  
  
   
  
## Examples  
 L’exemple suivant illustre la gestion du <xref:System.Drawing.Printing.PrintDocument.PrintPage> événement et en vérifiant la <xref:System.Drawing.Printing.PageSettings> argument de <xref:System.Drawing.Printing.PrintPageEventArgs>. Pour utiliser ce code, ajoutez un <xref:System.Drawing.Printing.PrintDocument> composant nommé `PrintDocument1` à un Windows Form et les associer son <xref:System.Drawing.Printing.PrintDocument.PrintPage> événement avec le `printDocument1_PrintPage` méthode dans l’exemple.  
  
 [!code-csharp[System.Windows.Forms.MiscBugDriven#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.MiscBugDriven#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Printing.PrintDocument" />
    <altmember cref="T:System.Drawing.Printing.PrinterSettings" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Printing.PageSettings" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Printing.PageSettings" /> en utilisant l'imprimante par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le constructeur par défaut initialise tous les champs à leurs valeurs par défaut.  
  
 En règle générale, vous ne créez pas une instance de <xref:System.Drawing.Printing.PageSettings>, mais utilisez plutôt le <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A?displayProperty=nameWithType> pour définir les paramètres pour toutes les pages.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageSettings (System.Drawing.Printing.PrinterSettings printerSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Printing.PrinterSettings printerSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.#ctor(System.Drawing.Printing.PrinterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageSettings(System::Drawing::Printing::PrinterSettings ^ printerSettings);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Printing.PageSettings : System.Drawing.Printing.PrinterSettings -&gt; System.Drawing.Printing.PageSettings" Usage="new System.Drawing.Printing.PageSettings printerSettings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="printerSettings" Type="System.Drawing.Printing.PrinterSettings" />
      </Parameters>
      <Docs>
        <param name="printerSettings">
          <see cref="T:System.Drawing.Printing.PrinterSettings" /> décrivant l'imprimante à utiliser.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Printing.PageSettings" /> en utilisant une imprimante spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Drawing.Printing.PageSettings.%23ctor%2A> constructeur est similaire à l’initialisation d’une nouvelle instance de <xref:System.Drawing.Printing.PageSettings> et en définissant le <xref:System.Drawing.Printing.PageSettings.PrinterSettings%2A> propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Drawing.Printing.PageSettings.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la taille de la page en tenant compte de l'orientation de page spécifiée par la propriété <see cref="P:System.Drawing.Printing.PageSettings.Landscape" />.</summary>
        <value>
          <see cref="T:System.Drawing.Rectangle" /> qui représente la longueur et la largeur (en centièmes de pouce) de la page.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Drawing.Printing.PageSettings.Bounds%2A> propriété avec le <xref:System.Drawing.Printing.PageSettings.Margins%2A> propriété pour calculer la zone d’impression de la page.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">L'imprimante désignée dans la propriété <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> n'existe pas.</exception>
        <altmember cref="P:System.Drawing.Printing.PageSettings.Margins" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="pageSettings.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une copie de ce <see cref="T:System.Drawing.Printing.PageSettings" />.</summary>
        <returns>Copie de cet objet.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public bool Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Color" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Color { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Color : bool with get, set" Usage="System.Drawing.Printing.PageSettings.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si la page doit être imprimée en couleur.</summary>
        <value>
          <see langword="true" /> si la page doit être imprimée en couleur, sinon, <see langword="false" />. La valeur par défaut de cette propriété est déterminée par l'imprimante.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser le <xref:System.Drawing.Printing.PrinterSettings.SupportsColor%2A?displayProperty=nameWithType> propriété pour déterminer si l’imprimante prend en charge l’impression couleur. Si l’imprimante prend en charge les couleurs, mais vous ne souhaitez pas imprimer en couleur, définissez la <xref:System.Drawing.Printing.PageSettings.Color%2A> propriété `false`. La valeur par défaut sera `true`.  
  
   
  
## Examples  
 L’exemple de code suivant imprime un document avec la première page de couleur, si l’imprimante prend en charge. L’exemple requiert qu’un <xref:System.Drawing.Printing.PrintDocument> variable nommée `printDoc` a été créé et le <xref:System.Drawing.Printing.PrintDocument.PrintPage> et <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> les événements sont gérés.  
  
 Utilisez le <xref:System.Drawing> et <xref:System.Drawing.Printing> espaces de noms pour cet exemple.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#6)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#6)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">L'imprimante désignée dans la propriété <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> n'existe pas.</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.SupportsColor" />
      </Docs>
    </Member>
    <Member MemberName="CopyToHdevmode">
      <MemberSignature Language="C#" Value="public void CopyToHdevmode (IntPtr hdevmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyToHdevmode(native int hdevmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.CopyToHdevmode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyToHdevmode (hdevmode As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyToHdevmode(IntPtr hdevmode);" />
      <MemberSignature Language="F#" Value="member this.CopyToHdevmode : nativeint -&gt; unit" Usage="pageSettings.CopyToHdevmode hdevmode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdevmode" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdevmode">Handle d'une structure <see langword="DEVMODE" /> Win32.</param>
        <summary>Copie les informations appropriées de <see cref="T:System.Drawing.Printing.PageSettings" /> dans la structure <see langword="DEVMODE" /> spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez le <xref:System.Drawing.Printing.PageSettings.CopyToHdevmode%2A> méthode pour copier les informations appropriées pour un `DEVMODE` à partir de la structure un <xref:System.Drawing.Printing.PageSettings>. Cette méthode est utile lorsque vous souhaitez effectuer des appels Win32 non managées qui requièrent un `DEVMODE`.  
  
 Pour copier des informations à partir d’un `DEVMODE` structure le <xref:System.Drawing.Printing.PageSettings>, appelez <xref:System.Drawing.Printing.PageSettings.SetHdevmode%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">L'imprimante désignée dans la propriété <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> est introuvable ou aucune imprimante par défaut n'est installée.</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">pour l’impression et l’accès à toutes les imprimantes sur le réseau. Énumération associée : <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
        <altmember cref="M:System.Drawing.Printing.PageSettings.SetHdevmode(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="HardMarginX">
      <MemberSignature Language="C#" Value="public float HardMarginX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 HardMarginX" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.HardMarginX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HardMarginX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float HardMarginX { float get(); };" />
      <MemberSignature Language="F#" Value="member this.HardMarginX : single" Usage="System.Drawing.Printing.PageSettings.HardMarginX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la coordonnée x (en centièmes de pouce) de la marge dure sur la gauche de la page.</summary>
        <value>Coordonnée x (en centièmes de pouce) de la marge dure gauche.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La marge dure représente la marge physique définie par l’imprimante.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour accéder au code non managé. Énumération connexe : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">pour un accès complet à toutes les imprimantes. Énumération associée : <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="HardMarginY">
      <MemberSignature Language="C#" Value="public float HardMarginY { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 HardMarginY" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.HardMarginY" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HardMarginY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float HardMarginY { float get(); };" />
      <MemberSignature Language="F#" Value="member this.HardMarginY : single" Usage="System.Drawing.Printing.PageSettings.HardMarginY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la coordonnée y (en centièmes de pouce) de la marge dure en haut de la page.</summary>
        <value>Coordonnée y (en centièmes de pouce) de la marge dure en haut de la page.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La marge dure représente la marge physique définie par l’imprimante.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour accéder au code non managé. Énumération connexe : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">pour un accès complet à toutes les imprimantes. Énumération associée : <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Landscape">
      <MemberSignature Language="C#" Value="public bool Landscape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Landscape" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.Landscape" />
      <MemberSignature Language="VB.NET" Value="Public Property Landscape As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Landscape { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Landscape : bool with get, set" Usage="System.Drawing.Printing.PageSettings.Landscape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si la page doit être imprimée dans l'orientation paysage ou portrait.</summary>
        <value>
          <see langword="true" /> si la page doit être imprimée en paysage ; sinon, <see langword="false" />. La valeur par défaut de cette propriété est déterminée par l'imprimante.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser le <xref:System.Drawing.Printing.PrinterSettings.LandscapeAngle%2A?displayProperty=nameWithType> propriété pour déterminer l’angle, en degrés, de rotation qui permet l’orientation portrait paysage.  
  
   
  
## Examples  
 L’exemple de code suivant définit l’orientation de la page par défaut d’un document en paysage par le <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A?displayProperty=nameWithType> propriété et imprime le document. L’exemple comporte trois composants requis :  
  
-   Une variable nommée `filePath` a été défini sur le chemin d’accès du fichier à imprimer.  
  
-   Une méthode nommée `pd_PrintPage`, qui gère le <xref:System.Drawing.Printing.PrintDocument.PrintPage> événement, a été défini.  
  
-   Une variable nommée `printer` a été défini sur le nom de l’imprimante.  
  
 Utilisez le <xref:System.Drawing>, <xref:System.Drawing.Printing>, et <xref:System.IO> espaces de noms pour cet exemple.  
  
 [!code-cpp[Classic PageSettings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PageSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PageSettings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PageSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PageSettings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PageSettings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">L'imprimante désignée dans la propriété <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> n'existe pas.</exception>
        <altmember cref="T:System.Drawing.Printing.PrintDocument" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle" />
      </Docs>
    </Member>
    <Member MemberName="Margins">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.Margins Margins { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.Margins Margins" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.Margins" />
      <MemberSignature Language="VB.NET" Value="Public Property Margins As Margins" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::Margins ^ Margins { System::Drawing::Printing::Margins ^ get(); void set(System::Drawing::Printing::Margins ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Margins : System.Drawing.Printing.Margins with get, set" Usage="System.Drawing.Printing.PageSettings.Margins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.Margins</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les marges de cette page.</summary>
        <value>
          <see cref="T:System.Drawing.Printing.Margins" /> qui représente les marges (en centièmes de pouce) de la page. La valeur par défaut est 1 pouce pour toutes les marges.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lors du traitement de la <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> événement, vous pouvez utiliser cette propriété avec le <xref:System.Drawing.Printing.PageSettings.Bounds%2A> propriété pour calculer la zone d’impression de la page.  
  
   
  
## Examples  
 L’exemple de code suivant définit la valeur par défaut des paramètres de la page pour un document marges de 1 pouce de chaque côté. L’exemple comporte trois composants requis :  
  
-   Une variable nommée `filePath` a été défini sur le chemin d’accès du fichier à imprimer.  
  
-   Une méthode nommée `pd_PrintPage`, qui gère le <xref:System.Drawing.Printing.PrintDocument.PrintPage> événement, a été défini.  
  
-   Une variable nommée `printer` a été défini sur le nom de l’imprimante.  
  
 Utilisez le <xref:System.Drawing>, <xref:System.Drawing.Printing>, et <xref:System.IO> espaces de noms pour cet exemple.  
  
 [!code-cpp[Classic PageSettings.Margins Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PageSettings.Margins Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PageSettings.Margins Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PageSettings.Margins Example/CS/source.cs#1)]
 [!code-vb[Classic PageSettings.Margins Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PageSettings.Margins Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">L'imprimante désignée dans la propriété <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> n'existe pas.</exception>
        <altmember cref="T:System.Drawing.Printing.Margins" />
      </Docs>
    </Member>
    <Member MemberName="PaperSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PaperSize PaperSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PaperSize PaperSize" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PaperSize" />
      <MemberSignature Language="VB.NET" Value="Public Property PaperSize As PaperSize" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PaperSize ^ PaperSize { System::Drawing::Printing::PaperSize ^ get(); void set(System::Drawing::Printing::PaperSize ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PaperSize : System.Drawing.Printing.PaperSize with get, set" Usage="System.Drawing.Printing.PageSettings.PaperSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PaperSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la taille du papier pour la page.</summary>
        <value>Objet <see cref="T:System.Drawing.Printing.PaperSize" /> représentant la taille du papier. Par défaut, il s'agit du format de papier par défaut de l'imprimante.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Drawing.Printing.PaperSize> représente la taille du papier via la <xref:System.Drawing.Printing.PaperSize.Kind%2A?displayProperty=nameWithType> propriété, qui contient l’un de la <xref:System.Drawing.Printing.PaperKind> valeurs.  
  
 Définir le <xref:System.Drawing.Printing.PageSettings.PaperSize%2A> propriété de la page valide <xref:System.Drawing.Printing.PaperSize>, disponible via le <xref:System.Drawing.Printing.PrinterSettings.PaperSizes%2A?displayProperty=nameWithType> collection.  
  
 Pour plus d’informations sur la façon dont vous pouvez spécifier un format de papier personnalisé, consultez la <xref:System.Drawing.Printing.PaperSize.%23ctor%2A> constructeur.  
  
   
  
## Examples  
 L’exemple de code suivant définit trois propriétés pour la page du document par défaut, y compris la taille du papier en fonction de la taille sélectionnée à la `comboPaperSize` zone de liste déroulante, puis imprime le document à l’aide de la <xref:System.Drawing.Printing.PrintDocument.Print%2A> (méthode). L’exemple requiert qu’un <xref:System.Drawing.Printing.PrintDocument> variable nommée `printDoc` existe et que les zones de liste déroulante spécifique existent.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#1)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#1)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#1)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#2)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#2)]
[!code-vb[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#2)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#3)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#3)]
[!code-vb[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#3)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#4)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#4)]
[!code-vb[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">L'imprimante désignée dans la propriété <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> est introuvable ou aucune imprimante par défaut n'est installée.</exception>
        <altmember cref="T:System.Drawing.Printing.PaperSize" />
        <altmember cref="P:System.Drawing.Printing.PaperSize.Height" />
        <altmember cref="P:System.Drawing.Printing.PaperSize.Kind" />
        <altmember cref="P:System.Drawing.Printing.PaperSize.Width" />
      </Docs>
    </Member>
    <Member MemberName="PaperSource">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PaperSource PaperSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PaperSource PaperSource" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PaperSource" />
      <MemberSignature Language="VB.NET" Value="Public Property PaperSource As PaperSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PaperSource ^ PaperSource { System::Drawing::Printing::PaperSource ^ get(); void set(System::Drawing::Printing::PaperSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PaperSource : System.Drawing.Printing.PaperSource with get, set" Usage="System.Drawing.Printing.PageSettings.PaperSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PaperSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'alimentation papier pour la page (le bac supérieur de l'imprimante, par exemple).</summary>
        <value>Objet <see cref="T:System.Drawing.Printing.PaperSource" /> spécifiant l'alimentation papier. Par défaut, il s'agit de la source de papier par défaut de l'imprimante.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Drawing.Printing.PaperSource> représente la source de papier par l’intermédiaire du <xref:System.Drawing.Printing.PaperSource.Kind%2A?displayProperty=nameWithType> propriété, qui contient l’un de la <xref:System.Drawing.Printing.PaperSourceKind> valeurs.  
  
 Définir le <xref:System.Drawing.Printing.PageSettings.PaperSource%2A> propriété de la page valide <xref:System.Drawing.Printing.PaperSource>, disponible via le <xref:System.Drawing.Printing.PrinterSettings.PaperSources%2A?displayProperty=nameWithType> collection.  
  
   
  
## Examples  
 L’exemple de code suivant définit trois propriétés pour la page du document par défaut, y compris la source du papier basée sur la source sélectionnée dans le `comboPaperSource` zone de liste déroulante, puis imprime le document à l’aide de la <xref:System.Drawing.Printing.PrintDocument.Print%2A> (méthode). L’exemple requiert qu’un <xref:System.Drawing.Printing.PrintDocument> variable nommée `printDoc` existe et que les zones de liste déroulante spécifique existent.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#1)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#1)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#1)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#2)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#2)]
[!code-vb[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#2)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#3)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#3)]
[!code-vb[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#3)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#4)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#4)]
[!code-vb[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">L'imprimante désignée dans la propriété <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> est introuvable ou aucune imprimante par défaut n'est installée.</exception>
        <altmember cref="T:System.Drawing.Printing.PaperSource" />
        <altmember cref="P:System.Drawing.Printing.PaperSource.Kind" />
        <altmember cref="T:System.Drawing.Printing.PaperSourceKind" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSources" />
      </Docs>
    </Member>
    <Member MemberName="PrintableArea">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF PrintableArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF PrintableArea" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PrintableArea" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintableArea As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::RectangleF PrintableArea { System::Drawing::RectangleF get(); };" />
      <MemberSignature Language="F#" Value="member this.PrintableArea : System.Drawing.RectangleF" Usage="System.Drawing.Printing.PageSettings.PrintableArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les limites de la zone imprimable de la page pour l'imprimante.</summary>
        <value>
          <see cref="T:System.Drawing.RectangleF" /> qui représente la longueur et la largeur (en centièmes de pouce) de la zone dans laquelle l'imprimante est capable d'imprimer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Drawing.Printing.PageSettings.PrintableArea%2A> propriété retourne la valeur correcte, si l’orientation est portrait ou paysage.  
  
 Vous pouvez utiliser cette propriété pour imprimer à l’extérieur les marges de la page, mais dans la zone imprimable.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrinterResolution">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterResolution PrinterResolution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterResolution PrinterResolution" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PrinterResolution" />
      <MemberSignature Language="VB.NET" Value="Public Property PrinterResolution As PrinterResolution" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrinterResolution ^ PrinterResolution { System::Drawing::Printing::PrinterResolution ^ get(); void set(System::Drawing::Printing::PrinterResolution ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrinterResolution : System.Drawing.Printing.PrinterResolution with get, set" Usage="System.Drawing.Printing.PageSettings.PrinterResolution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterResolution</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la résolution d'impression pour la page.</summary>
        <value>
          <see cref="T:System.Drawing.Printing.PrinterResolution" /> spécifiant la résolution d'impression pour la page. La valeur par défaut est la résolution par défaut de l'imprimante.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Drawing.Printing.PrinterResolution> représente la résolution de l’imprimante de via le <xref:System.Drawing.Printing.PrinterResolution.Kind%2A?displayProperty=nameWithType> propriété, qui contient l’un de la <xref:System.Drawing.Printing.PrinterResolutionKind> valeurs.  
  
 Définir le <xref:System.Drawing.Printing.PageSettings.PrinterResolution%2A> propriété de la page valide <xref:System.Drawing.Printing.PrinterResolution>, disponible via le <xref:System.Drawing.Printing.PrinterSettings.PrinterResolutions%2A?displayProperty=nameWithType> collection.  
  
   
  
## Examples  
 L’exemple de code suivant définit trois propriétés pour la page du document par défaut, y compris la résolution de l’imprimante basée sur la résolution sélectionnée dans la `comboPrintResolution` zone de liste déroulante, puis imprime le document à l’aide de la <xref:System.Drawing.Printing.PrintDocument.Print%2A> (méthode). L’exemple requiert qu’un <xref:System.Drawing.Printing.PrintDocument> variable nommée `printDoc` existe et que les zones de liste déroulante spécifique existent.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#4)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#4)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">L'imprimante désignée dans la propriété <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> est introuvable ou aucune imprimante par défaut n'est installée.</exception>
        <altmember cref="T:System.Drawing.Printing.PrinterResolution" />
        <altmember cref="P:System.Drawing.Printing.PrinterResolution.Kind" />
        <altmember cref="T:System.Drawing.Printing.PrinterResolutionKind" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions" />
      </Docs>
    </Member>
    <Member MemberName="PrinterSettings">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings PrinterSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings PrinterSettings" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PrinterSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PrinterSettings As PrinterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrinterSettings ^ PrinterSettings { System::Drawing::Printing::PrinterSettings ^ get(); void set(System::Drawing::Printing::PrinterSettings ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrinterSettings : System.Drawing.Printing.PrinterSettings with get, set" Usage="System.Drawing.Printing.PageSettings.PrinterSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les paramètres d'impression pour la page.</summary>
        <value>Objet <see cref="T:System.Drawing.Printing.PrinterSettings" /> représentant les paramètres d'impression pour la page.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser les paramètres d’imprimante pour rechercher les valeurs par défaut pour les propriétés de la page qui ne sont pas définies.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrinterSettings" />
      </Docs>
    </Member>
    <Member MemberName="SetHdevmode">
      <MemberSignature Language="C#" Value="public void SetHdevmode (IntPtr hdevmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHdevmode(native int hdevmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.SetHdevmode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHdevmode (hdevmode As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetHdevmode(IntPtr hdevmode);" />
      <MemberSignature Language="F#" Value="member this.SetHdevmode : nativeint -&gt; unit" Usage="pageSettings.SetHdevmode hdevmode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdevmode" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdevmode">Handle d'une structure <see langword="DEVMODE" /> Win32.</param>
        <summary>Copie les informations appropriées vers <see cref="T:System.Drawing.Printing.PageSettings" /> à partir de la structure <see langword="DEVMODE" /> spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour copier les informations appropriées dans un `DEVMODE` structure le <xref:System.Drawing.Printing.PageSettings>.  
  
 Pour copier des informations à partir de la <xref:System.Drawing.Printing.PageSettings> à un `DEVMODE`, appelez <xref:System.Drawing.Printing.PageSettings.CopyToHdevmode%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le handle de l'imprimante n'est pas valide.</exception>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">L'imprimante désignée dans la propriété <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> est introuvable ou aucune imprimante par défaut n'est installée.</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">pour l’impression et l’accès à toutes les imprimantes sur le réseau. Énumération associée : <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
        <altmember cref="M:System.Drawing.Printing.PageSettings.CopyToHdevmode(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="pageSettings.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Convertit <see cref="T:System.Drawing.Printing.PageSettings" /> sous forme de chaîne.</summary>
        <returns>Chaîne indiquant les différents paramètres de propriété de <see cref="T:System.Drawing.Printing.PageSettings" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>