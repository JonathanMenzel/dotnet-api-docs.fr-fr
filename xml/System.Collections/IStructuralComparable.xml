<Type Name="IStructuralComparable" FullName="System.Collections.IStructuralComparable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b076be1b16d28e1970639f6c9d747547a754fdba" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36712624" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStructuralComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralComparable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralComparable" />
  <TypeSignature Language="F#" Value="type IStructuralComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fa26b-101">Prend en charge la comparaison structurelle d’objets de collection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fa26b-101">Supports the structural comparison of collection objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa26b-102">Le <xref:System.Collections.IStructuralComparable> interface vous permet d’implémenter des comparaisons personnalisées pour les membres de la collection.</span><span class="sxs-lookup"><span data-stu-id="fa26b-102">The <xref:System.Collections.IStructuralComparable> interface enables you to implement customized comparisons for collection members.</span></span> <span data-ttu-id="fa26b-103">Autrement dit, vous pouvez définir précisément ce que cela signifie pour un objet collection de précéder, suivre ou se produisent dans la même position dans l’ordre de tri qu’un deuxième objet de collection.</span><span class="sxs-lookup"><span data-stu-id="fa26b-103">That is, you can define precisely what it means for one collection object to precede, follow, or occur in the same position in the sort order as a second collection object.</span></span> <span data-ttu-id="fa26b-104">Vous pouvez ensuite spécifier que cette définition soit utilisée avec un type de collection qui accepte le <xref:System.Collections.IStructuralComparable> interface.</span><span class="sxs-lookup"><span data-stu-id="fa26b-104">You can then specify that this definition be used with a collection type that accepts the <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="fa26b-105">L’interface a un seul membre, <xref:System.Collections.IStructuralComparable.CompareTo%2A>, qui détermine si l’objet collection actuel est inférieure, égale ou supérieure à un deuxième objet dans l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="fa26b-105">The interface has a single member, <xref:System.Collections.IStructuralComparable.CompareTo%2A>, which determines whether the current collection object is less than, equal to, or greater than a second object in the sort order.</span></span> <span data-ttu-id="fa26b-106">La comparaison réelle des membres ou éléments de l’instance actuelle avec ceux d’un deuxième objet est effectuée par un <xref:System.Collections.IComparer> implémentation d’interface, qui contient la définition de votre comparaison personnalisée.</span><span class="sxs-lookup"><span data-stu-id="fa26b-106">The actual comparison of the members or elements in the current instance with those in a second object is performed by an <xref:System.Collections.IComparer> interface implementation, which contains the definition of your custom comparison.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa26b-107">Le <xref:System.Collections.IStructuralComparable> interface prend en charge uniquement des comparaisons structurelles de tri.</span><span class="sxs-lookup"><span data-stu-id="fa26b-107">The <xref:System.Collections.IStructuralComparable> interface supports only structural comparisons for sorting or ordering.</span></span> <span data-ttu-id="fa26b-108">Le <xref:System.Collections.IStructuralEquatable> interface prend en charge les comparaisons personnalisées pour l’égalité structurelle.</span><span class="sxs-lookup"><span data-stu-id="fa26b-108">The <xref:System.Collections.IStructuralEquatable> interface supports custom comparisons for structural equality.</span></span>  
  
 <span data-ttu-id="fa26b-109">Le .NET Framework fournit deux comparateurs par défaut.</span><span class="sxs-lookup"><span data-stu-id="fa26b-109">The .NET Framework provides two default comparers.</span></span> <span data-ttu-id="fa26b-110">Une seule est retournée par le <xref:System.Collections.StructuralComparisons.StructuralComparer%2A?displayProperty=nameWithType> propriété ; l’autre est retourné par la <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="fa26b-110">One is returned by the <xref:System.Collections.StructuralComparisons.StructuralComparer%2A?displayProperty=nameWithType> property; the other is returned by the <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="fa26b-111">Les classes de tuple génériques (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>, et ainsi de suite) et le <xref:System.Array> classe fournissent des implémentations explicites de le <xref:System.Collections.IStructuralComparable> interface.</span><span class="sxs-lookup"><span data-stu-id="fa26b-111">The generic tuple classes (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>, and so on) and the <xref:System.Array> class provide explicit implementations of the <xref:System.Collections.IStructuralComparable> interface.</span></span> <span data-ttu-id="fa26b-112">En effectuer un cast (en c#) ou en convertissant (en Visual Basic) de l’instance actuelle d’un tableau ou d’un tuple à un <xref:System.Collections.IStructuralComparable> valeur de l’interface et en fournissant votre <xref:System.Collections.IComparer> mise en œuvre en tant qu’argument à la <xref:System.Collections.IStructuralComparable.CompareTo%2A> (méthode), vous pouvez définir un ordre de tri personnalisé pour le tableau ou collection.</span><span class="sxs-lookup"><span data-stu-id="fa26b-112">By casting (in C#) or converting (in Visual Basic) the current instance of an array or tuple to an <xref:System.Collections.IStructuralComparable> interface value and providing your <xref:System.Collections.IComparer> implementation as an argument to the <xref:System.Collections.IStructuralComparable.CompareTo%2A> method, you can define a custom sort order for the array or collection.</span></span> <span data-ttu-id="fa26b-113">Toutefois, vous n’appelez pas la <xref:System.Collections.IStructuralComparable.CompareTo%2A> (méthode) directement dans la plupart des cas.</span><span class="sxs-lookup"><span data-stu-id="fa26b-113">However, you do not call the <xref:System.Collections.IStructuralComparable.CompareTo%2A> method directly in most cases.</span></span> <span data-ttu-id="fa26b-114">Au lieu de cela, le <xref:System.Collections.IStructuralComparable.CompareTo%2A> méthode est appelée par les méthodes de tri telles que <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29>.</span><span class="sxs-lookup"><span data-stu-id="fa26b-114">Instead, the <xref:System.Collections.IStructuralComparable.CompareTo%2A> method is called by sorting methods such as <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29>.</span></span> <span data-ttu-id="fa26b-115">Dans ce cas, vous définissez votre <xref:System.Collections.IComparer> implémentation et passez-le en tant qu’argument au constructeur de classe de tri (méthode) ou une collection d’un objet.</span><span class="sxs-lookup"><span data-stu-id="fa26b-115">In this case, you define your <xref:System.Collections.IComparer> implementation and pass it as an argument to a sorting method or collection object's class constructor.</span></span> <span data-ttu-id="fa26b-116">Le <xref:System.Collections.IStructuralComparable.CompareTo%2A> méthode avec votre comparateur personnalisé est ensuite appelée automatiquement chaque fois que la collection est triée.</span><span class="sxs-lookup"><span data-stu-id="fa26b-116">The <xref:System.Collections.IStructuralComparable.CompareTo%2A> method with your custom comparer is then called automatically whenever the collection is sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa26b-117">L’exemple suivant crée un tableau de <xref:System.Tuple%606> objets qui contient les données de la population pour trois des villes américaines de 1960 à 2000.</span><span class="sxs-lookup"><span data-stu-id="fa26b-117">The following example creates an array of <xref:System.Tuple%606> objects that contains population data for three U.S. cities from 1960 to 2000.</span></span> <span data-ttu-id="fa26b-118">Premier composant du sextuple est le nom de ville.</span><span class="sxs-lookup"><span data-stu-id="fa26b-118">The sextuple's first component is the city name.</span></span> <span data-ttu-id="fa26b-119">Les cinq composants restants représentent le population à des intervalles de 10 ans de 1960 à 2000.</span><span class="sxs-lookup"><span data-stu-id="fa26b-119">The remaining five components represent the population at ten-year intervals from 1960 to 2000.</span></span>  
  
 <span data-ttu-id="fa26b-120">Le `PopulationComparer` classe fournit un <xref:System.Collections.IComparer> implémentation qui autorise le tableau de sextuples à être trié par l’un de ses composants.</span><span class="sxs-lookup"><span data-stu-id="fa26b-120">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of sextuples to be sorted by any one of its components.</span></span> <span data-ttu-id="fa26b-121">Deux valeurs sont fournies à la `PopulationComparer` classe dans son constructeur : la position du composant qui définit l’ordre de tri et une valeur booléenne qui indique si les objets tuples doivent être triés dans l’ordre croissant ou décroissant.</span><span class="sxs-lookup"><span data-stu-id="fa26b-121">Two values are provided to the `PopulationComparer` class in its constructor: the position of the component that defines the sort order, and a Boolean value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="fa26b-122">L’exemple puis affiche les éléments du tableau dans un ordre non trié, les trie par le troisième composant (population en 1970) et les affiche, les trie par le sixième composant (population en 2000) et les affiche.</span><span class="sxs-lookup"><span data-stu-id="fa26b-122">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1970) and displays them, and then sorts them by the sixth component (the population in 2000) and displays them.</span></span> <span data-ttu-id="fa26b-123">Notez que l’exemple n’appelle pas directement la <xref:System.Collections.IStructuralComparable.CompareTo%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="fa26b-123">Note that the example does not directly call the <xref:System.Collections.IStructuralComparable.CompareTo%2A> method.</span></span> <span data-ttu-id="fa26b-124">La méthode est appelée implicitement par la <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29> méthode pour chaque objet tuple dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="fa26b-124">The method is called implicitly by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29> method for each tuple object in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.IStructuralEquatable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralComparer" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj * System.Collections.IComparer -&gt; int" Usage="iStructuralComparable.CompareTo (other, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="fa26b-125">Objet à comparer à l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa26b-125">The object to compare with the current instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="fa26b-126">Objet qui compare des membres de l’objet de collection actif avec les membres correspondants de <c>other</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa26b-126">An object that compares members of the current collection object with the corresponding members of <c>other</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa26b-127">Détermine si l’objet collection actuel précède, se situe à la même position que, ou suit un autre objet dans l’ordre de tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa26b-127">Determines whether the current collection object precedes, occurs in the same position as, or follows another object in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa26b-128">Entier qui indique la relation de l'objet collection actuel par rapport au paramètre <paramref name="other" />, comme indiqué dans le tableau suivant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa26b-128">An integer that indicates the relationship of the current collection object to <paramref name="other" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="fa26b-129">
            <list type="table">
              <listheader>
                <term> Valeur renvoyée  </term>
                <description> Description  </description>
              </listheader>
              <item>
                <term> -1  </term>
                <description> L’instance actuelle précède <paramref name="other" />.  </description>
              </item>
              <item>
                <term> 0  </term>
                <description> L’instance actuelle et <paramref name="other" /> sont égaux.  </description>
              </item>
              <item>
                <term> 1  </term>
                <description> L’instance actuelle suit <paramref name="other" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fa26b-129">
              <list type="table">
                <listheader>
                  <term> Return value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> -1  </term>
                  <description> The current instance precedes <paramref name="other" />.  </description>
                </item>
                <item>
                  <term> 0  </term>
                  <description> The current instance and <paramref name="other" /> are equal.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description> The current instance follows <paramref name="other" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa26b-130">Le <xref:System.Collections.IStructuralComparable.CompareTo%2A> méthode prend en charge la comparaison structurelle personnalisée et le tri des objets tableau et tuple.</span><span class="sxs-lookup"><span data-stu-id="fa26b-130">The <xref:System.Collections.IStructuralComparable.CompareTo%2A> method supports custom structural comparison and sorting of array and tuple objects.</span></span> <span data-ttu-id="fa26b-131">Le <xref:System.Collections.IStructuralComparable.CompareTo%2A> les appels de méthode le `comparer` l’objet <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> méthode pour comparer des éléments de tableau individuels ou des composants tuple, en commençant par le premier élément ou d’un composant.</span><span class="sxs-lookup"><span data-stu-id="fa26b-131">The <xref:System.Collections.IStructuralComparable.CompareTo%2A> method calls the `comparer` object's <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> method to compare individual array elements or tuple components, starting with the first element or component.</span></span> <span data-ttu-id="fa26b-132">Les appels individuels à <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> fin et le <xref:System.Collections.IStructuralComparable.CompareTo%2A> méthode retourne une valeur lorsqu’une des conditions suivantes est true :</span><span class="sxs-lookup"><span data-stu-id="fa26b-132">The individual calls to <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> end and the <xref:System.Collections.IStructuralComparable.CompareTo%2A> method returns a value when one of the following conditions becomes true:</span></span>  
  
-   <span data-ttu-id="fa26b-133">Le <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> méthode retourne -1.</span><span class="sxs-lookup"><span data-stu-id="fa26b-133">The <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> method returns -1.</span></span>  
  
-   <span data-ttu-id="fa26b-134">Le <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> méthode retourne 1.</span><span class="sxs-lookup"><span data-stu-id="fa26b-134">The <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> method returns 1.</span></span>  
  
-   <span data-ttu-id="fa26b-135">Le <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> méthode est appelée pour le dernier élément ou composant dans l’objet de collection.</span><span class="sxs-lookup"><span data-stu-id="fa26b-135">The <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> method is called for the last element or component in the collection object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa26b-136">L’exemple suivant crée un tableau de <xref:System.Tuple%606> objets qui contient les données de la population pour trois des villes américaines de 1960 à 2000.</span><span class="sxs-lookup"><span data-stu-id="fa26b-136">The following example creates an array of <xref:System.Tuple%606> objects that contains population data for three U.S. cities from 1960 to 2000.</span></span> <span data-ttu-id="fa26b-137">Premier composant du sextuple est le nom de ville.</span><span class="sxs-lookup"><span data-stu-id="fa26b-137">The sextuple's first component is the city name.</span></span> <span data-ttu-id="fa26b-138">Les cinq composants restants représentent le population à des intervalles de 10 ans de 1960 à 2000.</span><span class="sxs-lookup"><span data-stu-id="fa26b-138">The remaining five components represent the population at ten-year intervals from 1960 to 2000.</span></span>  
  
 <span data-ttu-id="fa26b-139">Le `PopulationComparer` classe fournit un <xref:System.Collections.IComparer> implémentation qui autorise le tableau de sextuples à être trié par l’un de ses composants.</span><span class="sxs-lookup"><span data-stu-id="fa26b-139">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of sextuples to be sorted by any one of its components.</span></span> <span data-ttu-id="fa26b-140">Deux valeurs sont fournies à la `PopulationComparer` classe dans son constructeur : la position du composant qui définit l’ordre de tri et un <xref:System.Boolean> valeur qui indique si les objets tuples doivent être triés dans l’ordre croissant ou décroissant.</span><span class="sxs-lookup"><span data-stu-id="fa26b-140">Two values are provided to the `PopulationComparer` class in its constructor: the position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="fa26b-141">L’exemple puis affiche les éléments du tableau dans un ordre non trié, les trie par le troisième composant (population en 1970) et les affiche, les trie par le sixième composant (population en 2000) et les affiche.</span><span class="sxs-lookup"><span data-stu-id="fa26b-141">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1970) and displays them, and then sorts them by the sixth component (the population in 2000) and displays them.</span></span> <span data-ttu-id="fa26b-142">Notez que l’exemple n’appelle pas directement la <xref:System.Collections.IStructuralComparable.CompareTo%2A?displayProperty=nameWithType> implémentation.</span><span class="sxs-lookup"><span data-stu-id="fa26b-142">Note that the example does not directly call the <xref:System.Collections.IStructuralComparable.CompareTo%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="fa26b-143">La méthode est appelée implicitement par la <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29> méthode pour chaque objet tuple dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="fa26b-143">The method is called implicitly by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29> method for each tuple object in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fa26b-144">Cette instance et <paramref name="other" /> ne sont pas du même type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa26b-144">This instance and <paramref name="other" /> are not the same type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
  </Members>
</Type>