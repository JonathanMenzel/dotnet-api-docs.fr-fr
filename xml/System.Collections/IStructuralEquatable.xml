<Type Name="IStructuralEquatable" FullName="System.Collections.IStructuralEquatable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b984d179b3cd1e666e2dbdd92fc92cc72cb6a55" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36644069" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralEquatable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralEquatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type IStructuralEquatable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3edce-101">Définit des méthodes pour prendre en charge la comparaison de la structure d'objets.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3edce-101">Defines methods to support the comparison of objects for structural equality.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3edce-102">L’égalité structurelle signifie que deux objets sont égaux, car ils ont des valeurs égales.</span><span class="sxs-lookup"><span data-stu-id="3edce-102">Structural equality means that two objects are equal because they have equal values.</span></span> <span data-ttu-id="3edce-103">Il diffère d’une égalité de référence, ce qui indique que deux références d’objet sont égales, car elles référencent le même objet physique.</span><span class="sxs-lookup"><span data-stu-id="3edce-103">It differs from reference equality, which indicates that two object references are equal because they reference the same physical object.</span></span> <span data-ttu-id="3edce-104">Le <xref:System.Collections.IStructuralEquatable> interface vous permet d’implémenter des comparaisons personnalisées pour vérifier l’égalité structurelle d’objets de collection.</span><span class="sxs-lookup"><span data-stu-id="3edce-104">The <xref:System.Collections.IStructuralEquatable> interface enables you to implement customized comparisons to check for the structural equality of collection objects.</span></span> <span data-ttu-id="3edce-105">Autrement dit, vous pouvez créer votre propre définition de l’égalité structurelle et spécifier que cette définition soit utilisée avec un type de collection qui accepte le <xref:System.Collections.IStructuralEquatable> interface.</span><span class="sxs-lookup"><span data-stu-id="3edce-105">That is, you can create your own definition of structural equality and specify that this definition be used with a collection type that accepts the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="3edce-106">L’interface a deux membres : <xref:System.Collections.IStructuralEquatable.Equals%2A>, qui teste l’égalité en utilisant un <xref:System.Collections.IEqualityComparer> implémentation, et <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>, qui retourne des codes de hachage identiques pour les objets qui sont égaux.</span><span class="sxs-lookup"><span data-stu-id="3edce-106">The interface has two members: <xref:System.Collections.IStructuralEquatable.Equals%2A>, which tests for equality by using a specified <xref:System.Collections.IEqualityComparer> implementation, and <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>, which returns identical hash codes for objects that are equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3edce-107">Le <xref:System.Collections.IStructuralEquatable> interface prend en charge uniquement les comparaisons personnalisées pour l’égalité structurelle.</span><span class="sxs-lookup"><span data-stu-id="3edce-107">The <xref:System.Collections.IStructuralEquatable> interface supports only custom comparisons for structural equality.</span></span> <span data-ttu-id="3edce-108">Le <xref:System.Collections.IStructuralComparable> interface prend en charge les comparaisons structurelles personnalisées de tri.</span><span class="sxs-lookup"><span data-stu-id="3edce-108">The <xref:System.Collections.IStructuralComparable> interface supports custom structural comparisons for sorting and ordering.</span></span>  
  
 <span data-ttu-id="3edce-109">Le .NET Framework fournit également par défaut des comparateurs d’égalité, qui sont retournées par la <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> et <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> propriétés.</span><span class="sxs-lookup"><span data-stu-id="3edce-109">The .NET Framework also provides default equality comparers, which are returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> and <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="3edce-110">Pour plus d’informations, consultez l’exemple.</span><span class="sxs-lookup"><span data-stu-id="3edce-110">For more information, see the example.</span></span>  
  
 <span data-ttu-id="3edce-111">Les classes de tuple génériques (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>, et ainsi de suite) et le <xref:System.Array> classe fournissent des implémentations explicites de le <xref:System.Collections.IStructuralEquatable> interface.</span><span class="sxs-lookup"><span data-stu-id="3edce-111">The generic tuple classes (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>, and so on) and the <xref:System.Array> class provide explicit implementations of the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="3edce-112">En castant (en c#) ou en convertissant (en Visual Basic) de l’instance actuelle d’un tableau ou un tuple à un <xref:System.Collections.IStructuralEquatable> valeur de l’interface et en fournissant votre <xref:System.Collections.IEqualityComparer> mise en œuvre en tant qu’argument à la <xref:System.Collections.IStructuralEquatable.Equals%2A> (méthode), vous pouvez définir une égalité personnalisée comparaison de la matrice ou de la collection.</span><span class="sxs-lookup"><span data-stu-id="3edce-112">By casting (in C#) or converting (in Visual Basic) the current instance of an array or tuple to an <xref:System.Collections.IStructuralEquatable> interface value and providing your <xref:System.Collections.IEqualityComparer> implementation as an argument to the <xref:System.Collections.IStructuralEquatable.Equals%2A> method, you can define a custom equality comparison for the array or collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3edce-113">Le comparateur d’égalité par défaut, `EqualityComparer<Object>.Default.Equals`, considère deux `NaN` valeurs sont égales.</span><span class="sxs-lookup"><span data-stu-id="3edce-113">The default equality comparer, `EqualityComparer<Object>.Default.Equals`, considers two `NaN` values to be equal.</span></span> <span data-ttu-id="3edce-114">Toutefois, dans certains cas, vous souhaiterez peut-être la comparaison de `NaN` valeurs pour l’égalité retourne `false`, ce qui indique que les valeurs ne peuvent pas être comparées.</span><span class="sxs-lookup"><span data-stu-id="3edce-114">However, in some cases, you may want the comparison of `NaN` values for equality to return `false`, which indicates that the values cannot be compared.</span></span> <span data-ttu-id="3edce-115">L'exemple suivant définit une classe `NanComparer` qui implémente l'interface <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="3edce-115">The following example defines a `NanComparer` class that implements the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="3edce-116">Il compare deux <xref:System.Double> ou deux <xref:System.Single> valeurs à l’aide de l’opérateur d’égalité.</span><span class="sxs-lookup"><span data-stu-id="3edce-116">It compares two <xref:System.Double> or two <xref:System.Single> values by using the equality operator.</span></span> <span data-ttu-id="3edce-117">Il transmet les valeurs d’un autre type au comparateur d’égalité par défaut.</span><span class="sxs-lookup"><span data-stu-id="3edce-117">It passes values of any other type to the default equality comparer.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 <span data-ttu-id="3edce-118">L’exemple suivant crée deux objets identiques à 3 tuples dont les composants se composent de trois <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="3edce-118">The following example creates two identical 3-tuple objects whose components consist of three <xref:System.Double> values.</span></span> <span data-ttu-id="3edce-119">La valeur du second composant est <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3edce-119">The value of the second component is <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3edce-120">L’exemple appelle ensuite la <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> méthode et qu’elle appelle le <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> méthode trois fois.</span><span class="sxs-lookup"><span data-stu-id="3edce-120">The example then calls the <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> method, and it calls the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method three times.</span></span> <span data-ttu-id="3edce-121">La première fois, elle passe le comparateur d’égalité par défaut qui est retourné par la <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="3edce-121">The first time, it passes the default equality comparer that is returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="3edce-122">La deuxième fois, elle passe le comparateur d’égalité par défaut qui est retourné par la <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="3edce-122">The second time, it passes the default equality comparer that is returned by the <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="3edce-123">La troisième fois, elle passe personnalisé `NanComparer` objet.</span><span class="sxs-lookup"><span data-stu-id="3edce-123">The third time, it passes the custom `NanComparer` object.</span></span> <span data-ttu-id="3edce-124">Comme le montre la sortie de l’exemple, les trois premiers appels de méthodes renvoient `true`, tandis que le quatrième appel retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="3edce-124">As the output from the example shows, the first three method calls return `true`, whereas the fourth call returns `false`.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.IStructuralComparable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object, comparer As IEqualityComparer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj * System.Collections.IEqualityComparer -&gt; bool" Usage="iStructuralEquatable.Equals (other, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="3edce-125">Objet à comparer à l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3edce-125">The object to compare with the current instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="3edce-126">Objet qui détermine si l’instance active et <c>other</c> sont égaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3edce-126">An object that determines whether the current instance and <c>other</c> are equal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3edce-127">Détermine si un objet est structurellement identique à l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3edce-127">Determines whether an object is structurally equal to the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3edce-128">
            <see langword="true" /> si les deux objets sont égaux ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3edce-128">
              <see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3edce-129">Le <xref:System.Collections.IStructuralEquatable.Equals%2A> méthode prend en charge la comparaison structurelle personnalisée des objets tableau et tuple.</span><span class="sxs-lookup"><span data-stu-id="3edce-129">The <xref:System.Collections.IStructuralEquatable.Equals%2A> method supports custom structural comparison of array and tuple objects.</span></span> <span data-ttu-id="3edce-130">Cette méthode appelle à son tour le `comparer` l’objet <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> méthode pour comparer des éléments de tableau ou des composants de tuple, en commençant par le premier élément ou d’un composant.</span><span class="sxs-lookup"><span data-stu-id="3edce-130">This method in turn calls the `comparer` object's <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> method to compare individual array elements or tuple components, starting with the first element or component.</span></span> <span data-ttu-id="3edce-131">Les appels individuels à <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> fin et le <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> méthode retourne une valeur lorsqu’un appel de méthode retourne `false` ou une fois que tous les éléments de tableau ou de composants du tuple ont été comparés.</span><span class="sxs-lookup"><span data-stu-id="3edce-131">The individual calls to <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> end and the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method returns a value either when a method call returns `false` or after all array elements or tuple components have been compared.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3edce-132">Le comparateur d’égalité par défaut, `EqualityComparer<Object>.Default.Equals`, considère deux `NaN` valeurs sont égales.</span><span class="sxs-lookup"><span data-stu-id="3edce-132">The default equality comparer, `EqualityComparer<Object>.Default.Equals`, considers two `NaN` values to be equal.</span></span> <span data-ttu-id="3edce-133">Toutefois, dans certains cas, vous souhaiterez peut-être la comparaison de `NaN` valeurs pour l’égalité retourne `false`, ce qui indique que les valeurs ne peuvent pas être comparées.</span><span class="sxs-lookup"><span data-stu-id="3edce-133">However, in some cases, you may want the comparison of `NaN` values for equality to return `false`, which indicates that the values cannot be compared.</span></span> <span data-ttu-id="3edce-134">L'exemple suivant définit une classe `NanComparer` qui implémente l'interface <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="3edce-134">The following example defines a `NanComparer` class that implements the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="3edce-135">Il compare deux <xref:System.Double> ou deux <xref:System.Single> valeurs à l’aide de l’opérateur d’égalité.</span><span class="sxs-lookup"><span data-stu-id="3edce-135">It compares two <xref:System.Double> or two <xref:System.Single> values by using the equality operator.</span></span> <span data-ttu-id="3edce-136">Il transmet les valeurs d’un autre type au comparateur d’égalité par défaut.</span><span class="sxs-lookup"><span data-stu-id="3edce-136">It passes values of any other type to the default equality comparer.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 <span data-ttu-id="3edce-137">L’exemple suivant crée deux objets identiques à 3 tuples dont les composants se composent de trois <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="3edce-137">The following example creates two identical 3-tuple objects whose components consist of three <xref:System.Double> values.</span></span> <span data-ttu-id="3edce-138">La valeur du second composant est <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3edce-138">The value of the second component is <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3edce-139">L’exemple appelle ensuite la <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> méthode et qu’elle appelle le <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> méthode trois fois.</span><span class="sxs-lookup"><span data-stu-id="3edce-139">The example then calls the <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> method, and it calls the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method three times.</span></span> <span data-ttu-id="3edce-140">La première fois, elle passe le comparateur d’égalité par défaut qui est retourné par la <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="3edce-140">The first time, it passes the default equality comparer that is returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="3edce-141">La deuxième fois, elle passe le comparateur d’égalité par défaut qui est retourné par la <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="3edce-141">The second time, it passes the default equality comparer that is returned by the <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="3edce-142">La troisième fois, elle passe personnalisé `NanComparer` objet.</span><span class="sxs-lookup"><span data-stu-id="3edce-142">The third time, it passes the custom `NanComparer` object.</span></span> <span data-ttu-id="3edce-143">Comme le montre la sortie de l’exemple, les trois premiers appels de méthodes renvoient `true`, tandis que le quatrième appel retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="3edce-143">As the output from the example shows, the first three method calls return `true`, whereas the fourth call returns `false`.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparer As IEqualityComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : System.Collections.IEqualityComparer -&gt; int" Usage="iStructuralEquatable.GetHashCode comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="3edce-144">Objet qui calcule le code de hachage de l'objet actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3edce-144">An object that computes the hash code of the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3edce-145">Retourne un code de hachage pour l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3edce-145">Returns a hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3edce-146">Code de hachage de l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3edce-146">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3edce-147">Implémentez cette méthode pour retourner des codes de hachage personnalisés pour les objets de collection qui correspondent à la comparaison personnalisée pour l’égalité structurelle fournie par le <xref:System.Collections.IStructuralEquatable.Equals%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="3edce-147">Implement this method to return customized hash codes for collection objects that correspond to the customized comparison for structural equality provided by the <xref:System.Collections.IStructuralEquatable.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="3edce-148">
            <para>Si le <see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /> retourne de la méthode <see langword="true" /> pour deux objets, les valeurs retournées par la <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> méthode pour les deux objets doit également être égale.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3edce-148">
              <para>If the <see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /> method returns <see langword="true" /> for two objects, the values returned by the <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> method for the two objects must also be equal.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>