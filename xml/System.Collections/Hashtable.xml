<Type Name="Hashtable" FullName="System.Collections.Hashtable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1d017df520d24fc88f4ec3e923b82b87f684b89e" /><Meta Name="ms.sourcegitcommit" Value="954560a1b131dce1872e29ce5c01cd9f2c927f11" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/11/2019" /><Meta Name="ms.locfileid" Value="54235071" /></Metadata><TypeSignature Language="C#" Value="public class Hashtable : ICloneable, System.Collections.IDictionary, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Hashtable extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable, class System.ICloneable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Hashtable" />
  <TypeSignature Language="VB.NET" Value="Public Class Hashtable&#xA;Implements ICloneable, IDeserializationCallback, IDictionary, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Hashtable : ICloneable, System::Collections::IDictionary, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Hashtable = class&#xA;    interface IDictionary&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Hashtable/HashtableDebugView))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="191bb-101">Représente une collection de paires clé/valeur qui sont organisées en fonction du code de hachage de la clé.</span><span class="sxs-lookup"><span data-stu-id="191bb-101">Represents a collection of key/value pairs that are organized based on the hash code of the key.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="191bb-102">Chaque élément est une paire clé/valeur stockée dans un <xref:System.Collections.DictionaryEntry> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-102">Each element is a key/value pair stored in a <xref:System.Collections.DictionaryEntry> object.</span></span> <span data-ttu-id="191bb-103">Une clé ne peut pas être `null`, mais une valeur peut être.</span><span class="sxs-lookup"><span data-stu-id="191bb-103">A key cannot be `null`, but a value can be.</span></span>  

> [!IMPORTANT]
>  <span data-ttu-id="191bb-104">Nous ne vous recommandons d’utiliser la `Hashtable` classe pour tout nouveau développement.</span><span class="sxs-lookup"><span data-stu-id="191bb-104">We don't recommend that you use the `Hashtable` class for new development.</span></span> <span data-ttu-id="191bb-105">Au lieu de cela, nous vous recommandons d’utiliser le modèle générique <xref:System.Collections.Generic.HashSet%601> classe.</span><span class="sxs-lookup"><span data-stu-id="191bb-105">Instead, we recommend that you use the generic <xref:System.Collections.Generic.HashSet%601> class.</span></span> <span data-ttu-id="191bb-106">Pour plus d’informations, consultez [les collections Non génériques ne doit pas être utilisées](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) sur GitHub.</span><span class="sxs-lookup"><span data-stu-id="191bb-106">For more information, see [Non-generic collections shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) on GitHub.</span></span>
  
 <span data-ttu-id="191bb-107">Les objets utilisés en tant que clés par un <xref:System.Collections.Hashtable> requises pour substituer le <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> (méthode) (ou le <xref:System.Collections.IHashCodeProvider> interface) et le <xref:System.Object.Equals%2A?displayProperty=nameWithType> (méthode) (ou le <xref:System.Collections.IComparer> interface).</span><span class="sxs-lookup"><span data-stu-id="191bb-107">The objects used as keys by a <xref:System.Collections.Hashtable> are required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method (or the <xref:System.Collections.IHashCodeProvider> interface) and the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method (or the <xref:System.Collections.IComparer> interface).</span></span> <span data-ttu-id="191bb-108">L’implémentation des méthodes et interfaces doit gérer respecte la casse de la même façon ; Sinon, le <xref:System.Collections.Hashtable> peut ne pas fonctionner correctement.</span><span class="sxs-lookup"><span data-stu-id="191bb-108">The implementation of both methods and interfaces must handle case sensitivity the same way; otherwise, the <xref:System.Collections.Hashtable> might behave incorrectly.</span></span> <span data-ttu-id="191bb-109">Par exemple, lorsque vous créez un <xref:System.Collections.Hashtable>, vous devez utiliser le <xref:System.Collections.CaseInsensitiveHashCodeProvider> classe (ou toute non-respect de la casse <xref:System.Collections.IHashCodeProvider> implémentation) avec le <xref:System.Collections.CaseInsensitiveComparer> classe (ou toute non-respect de la casse <xref:System.Collections.IComparer> implémentation).</span><span class="sxs-lookup"><span data-stu-id="191bb-109">For example, when creating a <xref:System.Collections.Hashtable>, you must use the <xref:System.Collections.CaseInsensitiveHashCodeProvider> class (or any case-insensitive <xref:System.Collections.IHashCodeProvider> implementation) with the <xref:System.Collections.CaseInsensitiveComparer> class (or any case-insensitive <xref:System.Collections.IComparer> implementation).</span></span>  
  
 <span data-ttu-id="191bb-110">En outre, ces méthodes doivent donner les mêmes résultats lorsqu’elle est appelée avec les mêmes paramètres, tandis que la clé existe dans le <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-110">Furthermore, these methods must produce the same results when called with the same parameters while the key exists in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="191bb-111">Une alternative consiste à utiliser un <xref:System.Collections.Hashtable> constructeur avec un <xref:System.Collections.IEqualityComparer> paramètre.</span><span class="sxs-lookup"><span data-stu-id="191bb-111">An alternative is to use a <xref:System.Collections.Hashtable> constructor with an <xref:System.Collections.IEqualityComparer> parameter.</span></span> <span data-ttu-id="191bb-112">Si l’égalité des clés ont été simplement l’égalité des références, l’implémentation héritée de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> et <xref:System.Object.Equals%2A?displayProperty=nameWithType> suffirait.</span><span class="sxs-lookup"><span data-stu-id="191bb-112">If key equality were simply reference equality, the inherited implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> would suffice.</span></span>  
  
 <span data-ttu-id="191bb-113">Les objets de clé doivent être immuables tant qu’ils sont utilisés comme clés dans le <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-113">Key objects must be immutable as long as they are used as keys in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="191bb-114">Lorsqu’un élément est ajouté à la <xref:System.Collections.Hashtable>, l’élément est placé dans un compartiment en fonction du code de hachage de la clé.</span><span class="sxs-lookup"><span data-stu-id="191bb-114">When an element is added to the <xref:System.Collections.Hashtable>, the element is placed into a bucket based on the hash code of the key.</span></span> <span data-ttu-id="191bb-115">Les recherches suivantes de la clé d’utilisent le code de hachage de la clé à rechercher dans le compartiment particulier qu’une seule, ce qui réduit considérablement le nombre de comparaisons de clés requises pour rechercher un élément.</span><span class="sxs-lookup"><span data-stu-id="191bb-115">Subsequent lookups of the key use the hash code of the key to search in only one particular bucket, thus substantially reducing the number of key comparisons required to find an element.</span></span>  
  
 <span data-ttu-id="191bb-116">Le facteur de charge d’un <xref:System.Collections.Hashtable> détermine le taux maximal d’éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-116">The load factor of a <xref:System.Collections.Hashtable> determines the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="191bb-117">Plus petits facteurs de charge à l’origine les temps moyens de recherche au détriment de la consommation de mémoire accrue.</span><span class="sxs-lookup"><span data-stu-id="191bb-117">Smaller load factors cause faster average lookup times at the cost of increased memory consumption.</span></span> <span data-ttu-id="191bb-118">Le facteur de charge par défaut de 1.0 fournit généralement le meilleur compromis entre vitesse et la taille.</span><span class="sxs-lookup"><span data-stu-id="191bb-118">The default load factor of 1.0 generally provides the best balance between speed and size.</span></span> <span data-ttu-id="191bb-119">Un facteur de charge différents peut également être spécifié lorsque le <xref:System.Collections.Hashtable> est créé.</span><span class="sxs-lookup"><span data-stu-id="191bb-119">A different load factor can also be specified when the <xref:System.Collections.Hashtable> is created.</span></span>  
  
 <span data-ttu-id="191bb-120">Comme les éléments sont ajoutés à un <xref:System.Collections.Hashtable>, le facteur de charge réel de la <xref:System.Collections.Hashtable> augmente.</span><span class="sxs-lookup"><span data-stu-id="191bb-120">As elements are added to a <xref:System.Collections.Hashtable>, the actual load factor of the <xref:System.Collections.Hashtable> increases.</span></span> <span data-ttu-id="191bb-121">Lorsque le facteur de charge réel atteint le facteur de charge spécifié, le nombre de compartiments dans la <xref:System.Collections.Hashtable> est automatiquement augmentée au plus petit nombre premier est supérieur à deux fois le nombre actuel de <xref:System.Collections.Hashtable> compartiments.</span><span class="sxs-lookup"><span data-stu-id="191bb-121">When the actual load factor reaches the specified load factor, the number of buckets in the <xref:System.Collections.Hashtable> is automatically increased to the smallest prime number that is larger than twice the current number of <xref:System.Collections.Hashtable> buckets.</span></span>  
  
 <span data-ttu-id="191bb-122">Chaque objet de clé dans le <xref:System.Collections.Hashtable> doit fournir sa propre fonction de hachage, qui est accessible en appelant <xref:System.Collections.Hashtable.GetHash%2A>.</span><span class="sxs-lookup"><span data-stu-id="191bb-122">Each key object in the <xref:System.Collections.Hashtable> must provide its own hash function, which can be accessed by calling <xref:System.Collections.Hashtable.GetHash%2A>.</span></span> <span data-ttu-id="191bb-123">Toutefois, tout objet implémentant <xref:System.Collections.IHashCodeProvider> peut être passé à un <xref:System.Collections.Hashtable> constructeur, et que la fonction de hachage est utilisée pour tous les objets dans la table.</span><span class="sxs-lookup"><span data-stu-id="191bb-123">However, any object implementing <xref:System.Collections.IHashCodeProvider> can be passed to a <xref:System.Collections.Hashtable> constructor, and that hash function is used for all objects in the table.</span></span>  
  
 <span data-ttu-id="191bb-124">La capacité d’un <xref:System.Collections.Hashtable> est le nombre d’éléments du <xref:System.Collections.Hashtable> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="191bb-124">The capacity of a <xref:System.Collections.Hashtable> is the number of elements the <xref:System.Collections.Hashtable> can hold.</span></span> <span data-ttu-id="191bb-125">Comme les éléments sont ajoutés à un <xref:System.Collections.Hashtable>, la capacité est automatiquement augmentée par réallocation.</span><span class="sxs-lookup"><span data-stu-id="191bb-125">As elements are added to a <xref:System.Collections.Hashtable>, the capacity is automatically increased as required through reallocation.</span></span>  
  
 <span data-ttu-id="191bb-126">**.NET framework :** Pour très volumineux <xref:System.Collections.Hashtable> objets, vous pouvez augmenter la capacité maximale à 2 milliards des éléments sur un système 64 bits en définissant le `enabled` attribut de la [ `<gcAllowVeryLargeObjects>` ](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) élément de configuration `true` dans le environnement d’exécution.</span><span class="sxs-lookup"><span data-stu-id="191bb-126">**.NET Framework only:** For very large <xref:System.Collections.Hashtable> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="191bb-127">Le `foreach` instruction du langage c# (`For Each` en Visual Basic) retourne un objet du type des éléments dans la collection.</span><span class="sxs-lookup"><span data-stu-id="191bb-127">The `foreach` statement of the C# language (`For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="191bb-128">Étant donné que chaque élément de la <xref:System.Collections.Hashtable> est une paire clé/valeur, le type d’élément n’est pas le type de la clé ou le type de la valeur.</span><span class="sxs-lookup"><span data-stu-id="191bb-128">Since each element of the <xref:System.Collections.Hashtable> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="191bb-129">Au lieu de cela, le type d’élément est <xref:System.Collections.DictionaryEntry>.</span><span class="sxs-lookup"><span data-stu-id="191bb-129">Instead, the element type is <xref:System.Collections.DictionaryEntry>.</span></span> <span data-ttu-id="191bb-130">Par exemple :</span><span class="sxs-lookup"><span data-stu-id="191bb-130">For example:</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ClassExample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cpp/remarks.cpp#01)]
 [!code-csharp[System.Collections.Hashtable_ClassExample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cs/remarks.cs#01)]
 [!code-vb[System.Collections.Hashtable_ClassExample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/vb/remarks.vb#01)]  
  
 <span data-ttu-id="191bb-131">La `foreach` instruction est un wrapper autour de l’énumérateur, qui permet la lecture à partir n’écrit ne pas à la collection.</span><span class="sxs-lookup"><span data-stu-id="191bb-131">The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</span></span>  
  
 <span data-ttu-id="191bb-132">Étant donné que la sérialisation et la désérialisation d’un énumérateur pour un <xref:System.Collections.Hashtable> peut provoquer les réorganisation des éléments, il n’est pas possible de continuer l’énumération sans appeler le <xref:System.Collections.IEnumerator.Reset%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="191bb-132">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="191bb-133">Étant donné que les clés peuvent être héritées et leur comportement modifié, leur unicité absolue ne peut pas être garantie par des comparaisons à l’aide de la <xref:System.Type.Equals%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="191bb-133">Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <xref:System.Type.Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-134">L’exemple suivant montre comment créer, initialiser et effectuer diverses fonctions à un <xref:System.Collections.Hashtable> et comment imprimer ses clés et valeurs.</span><span class="sxs-lookup"><span data-stu-id="191bb-134">The following example shows how to create, initialize and perform various functions to a <xref:System.Collections.Hashtable> and how to print out its keys and values.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cpp/hashtable_example.cpp#00)]
 [!code-csharp[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cs/hashtable_example.cs#00)]
 [!code-vb[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/vb/hashtable_example.vb#00)]
 [!code-powershell[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/powershell/VS_Snippets_CLR_System/system.collections.hashtable.class/ps/hashtable.ps1#00)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="191bb-135"><see cref="T:System.Collections.Hashtable" /> est thread-safe pour une utilisation par plusieurs threads de lecture et d’un seul thread d’écriture.</span><span class="sxs-lookup"><span data-stu-id="191bb-135"><see cref="T:System.Collections.Hashtable" /> is thread safe for use by multiple reader threads and a single writing thread.</span></span> <span data-ttu-id="191bb-136">Il est thread-safe pour une utilisation multithread lorsque seul un des threads effectuer des opérations d’écriture (mise à jour), ce qui permet des lectures sans verrouillage condition que les enregistreurs sont sérialisés à le <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-136">It is thread safe for multi-thread use when only one of the threads perform write (update) operations, which allows for lock-free reads provided that the writers are serialized to the <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="191bb-137">Pour prendre en charge plusieurs writers toutes les opérations sur le <see cref="T:System.Collections.Hashtable" /> doit être effectuée via le wrapper retourné par la <see cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" /> méthode, ne pourvu qu’aucun thread de lecture la <see cref="T:System.Collections.Hashtable" /> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-137">To support multiple writers all operations on the <see cref="T:System.Collections.Hashtable" /> must be done through the wrapper returned by the <see cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" /> method, provided that there are no threads reading the <see cref="T:System.Collections.Hashtable" /> object.</span></span>  
  
<span data-ttu-id="191bb-138">L’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="191bb-138">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="191bb-139">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="191bb-139">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="191bb-140">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="191bb-140">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.IHashCodeProvider" />
    <altmember cref="M:System.Object.GetHashCode" />
    <altmember cref="M:System.Object.Equals(System.Object)" />
    <altmember cref="T:System.Collections.DictionaryEntry" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="T:System.Collections.IEqualityComparer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="191bb-141">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-141">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="191bb-142">Initialise une nouvelle instance vide de la classe <see cref="T:System.Collections.Hashtable" /> à l'aide de la capacité initiale, du facteur de charge, du fournisseur de codes de hachage et du comparateur par défaut.</span><span class="sxs-lookup"><span data-stu-id="191bb-142">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity, load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-143">Capacité d’une table de hachage est utilisée pour calculer le nombre optimal de compartiments de table de hachage en fonction du facteur de charge.</span><span class="sxs-lookup"><span data-stu-id="191bb-143">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="191bb-144">Capacité est automatiquement augmentée en fonction des besoins.</span><span class="sxs-lookup"><span data-stu-id="191bb-144">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="191bb-145">Le facteur de charge est le ratio maximal d’éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-145">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="191bb-146">Un facteur de charge plus petit signifie une recherche plus rapide au détriment de la consommation de mémoire accrue.</span><span class="sxs-lookup"><span data-stu-id="191bb-146">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="191bb-147">Lorsque le facteur de charge réel atteint le facteur de charge spécifié, le nombre de compartiments est automatiquement augmenté au plus petit nombre premier qui est supérieure à deux fois le nombre actuel de compartiments.</span><span class="sxs-lookup"><span data-stu-id="191bb-147">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="191bb-148">Le fournisseur de code de hachage fournit les codes de hachage des clés dans le <xref:System.Collections.Hashtable> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-148">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="191bb-149">Le fournisseur de code de hachage par défaut est l’implémentation de clé de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-149">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-150">Le comparateur détermine si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-150">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="191bb-151">Chaque clé dans un <xref:System.Collections.Hashtable> doit être unique.</span><span class="sxs-lookup"><span data-stu-id="191bb-151">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="191bb-152">Le comparateur par défaut est l’implémentation de clé de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-152">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-153">Ce constructeur est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="191bb-153">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-154">L’exemple de code suivant crée des tables de hachage à l’aide de différents <xref:System.Collections.Hashtable> constructeurs et montre les différences de comportement entre les tables de hachage, même si chacune d’elles contient les mêmes éléments.</span><span class="sxs-lookup"><span data-stu-id="191bb-154">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable d" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="191bb-155">Objet <see cref="T:System.Collections.IDictionary" /> à copier vers un nouvel objet <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-155">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <summary><span data-ttu-id="191bb-156">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Hashtable" /> en copiant les éléments du dictionnaire spécifié vers le nouvel objet <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-156">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="191bb-157">Le nouvel objet <see cref="T:System.Collections.Hashtable" /> a une capacité initiale égale au nombre d'éléments copiés et utilise le facteur de charge, le fournisseur de codes de hachage et le comparateur par défaut.</span><span class="sxs-lookup"><span data-stu-id="191bb-157">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-158">La capacité initiale est définie sur le nombre d’éléments dans le dictionnaire source.</span><span class="sxs-lookup"><span data-stu-id="191bb-158">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="191bb-159">La capacité est automatiquement augmentée en fonction des besoins selon le facteur de charge.</span><span class="sxs-lookup"><span data-stu-id="191bb-159">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="191bb-160">Le facteur de charge est le ratio maximal d’éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-160">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="191bb-161">Un facteur de charge plus petit signifie une recherche plus rapide au détriment de la consommation de mémoire accrue.</span><span class="sxs-lookup"><span data-stu-id="191bb-161">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="191bb-162">Lorsque le facteur de charge réel atteint le facteur de charge spécifié, le nombre de compartiments est automatiquement augmenté au plus petit nombre premier qui est supérieure à deux fois le nombre actuel de compartiments.</span><span class="sxs-lookup"><span data-stu-id="191bb-162">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="191bb-163">Le fournisseur de code de hachage fournit les codes de hachage des clés dans le <xref:System.Collections.Hashtable> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-163">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="191bb-164">Le fournisseur de code de hachage par défaut est l’implémentation de clé de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-164">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-165">Le comparateur détermine si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-165">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="191bb-166">Chaque clé dans un <xref:System.Collections.Hashtable> doit être unique.</span><span class="sxs-lookup"><span data-stu-id="191bb-166">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="191bb-167">Le comparateur par défaut est l’implémentation de clé de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-167">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-168">Les éléments de la nouvelle <xref:System.Collections.Hashtable> sont triés dans le même ordre que celui dans lequel l’énumérateur itère au sein du <xref:System.Collections.IDictionary> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-168">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="191bb-169">Ce constructeur est un O (`n`) opération, où `n` est le nombre d’éléments dans le `d` paramètre.</span><span class="sxs-lookup"><span data-stu-id="191bb-169">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-170">L’exemple de code suivant crée des tables de hachage à l’aide de différents <xref:System.Collections.Hashtable> constructeurs et montre les différences de comportement entre les tables de hachage, même si chacune d’elles contient les mêmes éléments.</span><span class="sxs-lookup"><span data-stu-id="191bb-170">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CPP/hashtable_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CS/hashtable_ctordictionary.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/VB/hashtable_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="191bb-171"><paramref name="d" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-171"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable equalityComparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="equalityComparer"><span data-ttu-id="191bb-172">Objet <see cref="T:System.Collections.IEqualityComparer" /> qui définit le fournisseur de code de hachage et le comparateur à utiliser avec l'objet <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-172">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" /> object.</span></span>  
  
<span data-ttu-id="191bb-173">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-173">-or-</span></span> 
 <span data-ttu-id="191bb-174"><see langword="null" /> pour utiliser le fournisseur de code de hachage par défaut et le comparateur par défaut.</span><span class="sxs-lookup"><span data-stu-id="191bb-174"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="191bb-175">Le fournisseur de code de hachage par défaut est l'implémentation de <see cref="M:System.Object.GetHashCode" /> de chaque clé et le comparateur par défaut est l'implémentation de <see cref="M:System.Object.Equals(System.Object)" /> de chaque clé.</span><span class="sxs-lookup"><span data-stu-id="191bb-175">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="191bb-176">Initialise une nouvelle instance vide de la classe <see cref="T:System.Collections.Hashtable" /> à l'aide de la capacité initiale et du facteur de charge par défaut, et de l'objet <see cref="T:System.Collections.IEqualityComparer" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="191bb-176">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity and load factor, and the specified <see cref="T:System.Collections.IEqualityComparer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-177">Capacité d’une table de hachage est utilisée pour calculer le nombre optimal de compartiments de table de hachage en fonction du facteur de charge.</span><span class="sxs-lookup"><span data-stu-id="191bb-177">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="191bb-178">Capacité est automatiquement augmentée en fonction des besoins.</span><span class="sxs-lookup"><span data-stu-id="191bb-178">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="191bb-179">Le facteur de charge est le ratio maximal d’éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-179">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="191bb-180">Un facteur de charge plus petit signifie une recherche plus rapide au détriment de la consommation de mémoire accrue.</span><span class="sxs-lookup"><span data-stu-id="191bb-180">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="191bb-181">Lorsque le facteur de charge réel atteint le facteur de charge spécifié, le nombre de compartiments est automatiquement augmenté au plus petit nombre premier qui est supérieure à deux fois le nombre actuel de compartiments.</span><span class="sxs-lookup"><span data-stu-id="191bb-181">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="191bb-182">Le <xref:System.Collections.IEqualityComparer> objet inclut le fournisseur de code de hachage et le comparateur.</span><span class="sxs-lookup"><span data-stu-id="191bb-182">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="191bb-183">Si un <xref:System.Collections.IEqualityComparer> est utilisé dans le <xref:System.Collections.Hashtable> constructeur, les objets utilisés en tant que clés dans le <xref:System.Collections.Hashtable> objet n’est pas nécessaire de substituer le <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> et <xref:System.Object.Equals%2A?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="191bb-183">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> object are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="191bb-184">Le fournisseur de code de hachage fournit les codes de hachage des clés dans le <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-184">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="191bb-185">Le fournisseur de code de hachage par défaut est l’implémentation de clé de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-185">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-186">Le comparateur détermine si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-186">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="191bb-187">Chaque clé dans un <xref:System.Collections.Hashtable> doit être unique.</span><span class="sxs-lookup"><span data-stu-id="191bb-187">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="191bb-188">Le comparateur par défaut est l’implémentation de clé de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-188">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-189">Le <xref:System.Collections.IEqualityComparer> permet des scénarios tels qu’effectuant des recherches avec des chaînes de non-respect de la casse.</span><span class="sxs-lookup"><span data-stu-id="191bb-189">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="191bb-190">Ce constructeur est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="191bb-190">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-191">L’exemple de code suivant crée des tables de hachage à l’aide de différents <xref:System.Collections.Hashtable> constructeurs et montre les différences de comportement entre les tables de hachage, même si chacune d’elles contient les mêmes éléments.</span><span class="sxs-lookup"><span data-stu-id="191bb-191">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="191bb-192">Nombre approximatif d'éléments que l'objet <see cref="T:System.Collections.Hashtable" /> peut contenir initialement.</span><span class="sxs-lookup"><span data-stu-id="191bb-192">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <summary><span data-ttu-id="191bb-193">Initialise une nouvelle instance vide de la classe <see cref="T:System.Collections.Hashtable" /> à l'aide de la capacité initiale spécifiée et du facteur de charge, du fournisseur de codes de hachage et du comparateur par défaut.</span><span class="sxs-lookup"><span data-stu-id="191bb-193">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, and the default load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-194">Spécification de la capacité initiale vous évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.Hashtable> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-194">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="191bb-195">La capacité est automatiquement augmentée en fonction des besoins selon le facteur de charge.</span><span class="sxs-lookup"><span data-stu-id="191bb-195">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="191bb-196">Le facteur de charge est le ratio maximal d’éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-196">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="191bb-197">Un facteur de charge plus petit signifie une recherche plus rapide au détriment de la consommation de mémoire accrue.</span><span class="sxs-lookup"><span data-stu-id="191bb-197">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="191bb-198">Lorsque le facteur de charge réel atteint le facteur de charge spécifié, le nombre de compartiments est automatiquement augmenté au plus petit nombre premier qui est supérieure à deux fois le nombre actuel de compartiments.</span><span class="sxs-lookup"><span data-stu-id="191bb-198">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="191bb-199">Le fournisseur de code de hachage fournit les codes de hachage des clés dans le <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-199">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="191bb-200">Le fournisseur de code de hachage par défaut est l’implémentation de clé de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-200">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-201">Le comparateur détermine si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-201">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="191bb-202">Chaque clé dans un <xref:System.Collections.Hashtable> doit être unique.</span><span class="sxs-lookup"><span data-stu-id="191bb-202">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="191bb-203">Le comparateur par défaut est l’implémentation de clé de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-203">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-204">Ce constructeur est un O (`n`) opération, où `n` est `capacity`.</span><span class="sxs-lookup"><span data-stu-id="191bb-204">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-205">L’exemple de code suivant crée des tables de hachage à l’aide de différents <xref:System.Collections.Hashtable> constructeurs et montre les différences de comportement entre les tables de hachage, même si chacune d’elles contient les mêmes éléments.</span><span class="sxs-lookup"><span data-stu-id="191bb-205">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CPP/hashtable_ctorint.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CS/hashtable_ctorint.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/VB/hashtable_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="191bb-206"><paramref name="capacity" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="191bb-206"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="191bb-207">Objet <see cref="T:System.Collections.IDictionary" /> à copier vers un nouvel objet <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-207">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="191bb-208">Objet <see cref="T:System.Collections.IEqualityComparer" /> qui définit le fournisseur de code de hachage et le comparateur à utiliser avec <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-208">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="191bb-209">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-209">-or-</span></span> 
 <span data-ttu-id="191bb-210"><see langword="null" /> pour utiliser le fournisseur de code de hachage par défaut et le comparateur par défaut.</span><span class="sxs-lookup"><span data-stu-id="191bb-210"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="191bb-211">Le fournisseur de code de hachage par défaut est l'implémentation de <see cref="M:System.Object.GetHashCode" /> de chaque clé et le comparateur par défaut est l'implémentation de <see cref="M:System.Object.Equals(System.Object)" /> de chaque clé.</span><span class="sxs-lookup"><span data-stu-id="191bb-211">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="191bb-212">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Hashtable" /> en copiant les éléments du dictionnaire spécifié vers un nouvel objet <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-212">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="191bb-213">Le nouvel objet <see cref="T:System.Collections.Hashtable" /> a une capacité initiale égale au nombre d'éléments copiés et utilise le facteur de charge par défaut et l'objet <see cref="T:System.Collections.IEqualityComparer" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="191bb-213">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor and the specified <see cref="T:System.Collections.IEqualityComparer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-214">La capacité initiale est définie sur le nombre d’éléments dans le dictionnaire source.</span><span class="sxs-lookup"><span data-stu-id="191bb-214">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="191bb-215">La capacité est automatiquement augmentée en fonction des besoins selon le facteur de charge.</span><span class="sxs-lookup"><span data-stu-id="191bb-215">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="191bb-216">Le facteur de charge est le ratio maximal d’éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-216">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="191bb-217">Un facteur de charge plus petit signifie une recherche plus rapide au détriment de la consommation de mémoire accrue.</span><span class="sxs-lookup"><span data-stu-id="191bb-217">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="191bb-218">Lorsque le facteur de charge réel atteint le facteur de charge spécifié, le nombre de compartiments est automatiquement augmenté au plus petit nombre premier qui est supérieure à deux fois le nombre actuel de compartiments.</span><span class="sxs-lookup"><span data-stu-id="191bb-218">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="191bb-219">Le <xref:System.Collections.IEqualityComparer> objet inclut le fournisseur de code de hachage et le comparateur.</span><span class="sxs-lookup"><span data-stu-id="191bb-219">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="191bb-220">Si un <xref:System.Collections.IEqualityComparer> est utilisé dans le <xref:System.Collections.Hashtable> constructeur, les objets utilisés en tant que clés dans le <xref:System.Collections.Hashtable> objet n’est pas nécessaire de substituer le <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> et <xref:System.Object.Equals%2A?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="191bb-220">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> object are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="191bb-221">Le fournisseur de code de hachage fournit les codes de hachage des clés dans le <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-221">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="191bb-222">Le fournisseur de code de hachage par défaut est l’implémentation de clé de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-222">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-223">Le comparateur détermine si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-223">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="191bb-224">Chaque clé dans un <xref:System.Collections.Hashtable> doit être unique.</span><span class="sxs-lookup"><span data-stu-id="191bb-224">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="191bb-225">Le comparateur par défaut est l’implémentation de clé de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-225">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-226">Le <xref:System.Collections.IEqualityComparer> permet des scénarios tels qu’effectuant des recherches avec des chaînes de non-respect de la casse.</span><span class="sxs-lookup"><span data-stu-id="191bb-226">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="191bb-227">Les éléments de la nouvelle <xref:System.Collections.Hashtable> sont triés dans le même ordre que celui dans lequel l’énumérateur itère au sein du <xref:System.Collections.IDictionary> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-227">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="191bb-228">Ce constructeur est un O (`n`) opération, où `n` est le nombre d’éléments dans le `d` paramètre.</span><span class="sxs-lookup"><span data-stu-id="191bb-228">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-229">L’exemple de code suivant crée des tables de hachage à l’aide de différents <xref:System.Collections.Hashtable> constructeurs et montre les différences de comportement entre les tables de hachage, même si chacune d’elles contient les mêmes éléments.</span><span class="sxs-lookup"><span data-stu-id="191bb-229">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CPP/hashtable_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CS/hashtable_ctordictionary.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/VB/hashtable_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="191bb-230"><paramref name="d" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-230"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, float loadFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, float32 loadFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, loadFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, float loadFactor);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * single -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, loadFactor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="loadFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="191bb-231">Objet <see cref="T:System.Collections.IDictionary" /> à copier vers un nouvel objet <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-231">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="191bb-232">Nombre dans la plage comprise entre 0,1 et 1,0 qui est multiplié par la valeur par défaut qui fournit les meilleures performances.</span><span class="sxs-lookup"><span data-stu-id="191bb-232">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="191bb-233">Le résultat est le ratio maximal d'éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-233">The result is the maximum ratio of elements to buckets.</span></span></param>
        <summary><span data-ttu-id="191bb-234">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Hashtable" /> en copiant les éléments du dictionnaire spécifié vers le nouvel objet <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-234">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="191bb-235">Le nouvel objet <see cref="T:System.Collections.Hashtable" /> a une capacité initiale égale au nombre d'éléments copiés et utilise le facteur de charge spécifié et le fournisseur de codes de hachage et le comparateur par défaut.</span><span class="sxs-lookup"><span data-stu-id="191bb-235">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor, and the default hash code provider and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-236">La capacité initiale est définie sur le nombre d’éléments dans le dictionnaire source.</span><span class="sxs-lookup"><span data-stu-id="191bb-236">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="191bb-237">La capacité est automatiquement augmentée en fonction des besoins selon le facteur de charge.</span><span class="sxs-lookup"><span data-stu-id="191bb-237">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="191bb-238">Le facteur de charge est le ratio maximal d’éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-238">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="191bb-239">Un facteur de charge plus petit signifie une recherche plus rapide au détriment de la consommation de mémoire accrue.</span><span class="sxs-lookup"><span data-stu-id="191bb-239">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="191bb-240">Un facteur de charge de 1,0 est le meilleur compromis entre vitesse et la taille.</span><span class="sxs-lookup"><span data-stu-id="191bb-240">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="191bb-241">Lorsque le facteur de charge réel atteint le facteur de charge spécifié, le nombre de compartiments est automatiquement augmenté au plus petit nombre premier qui est supérieure à deux fois le nombre actuel de compartiments.</span><span class="sxs-lookup"><span data-stu-id="191bb-241">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="191bb-242">Le fournisseur de code de hachage fournit les codes de hachage des clés dans le <xref:System.Collections.Hashtable> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-242">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="191bb-243">Le fournisseur de code de hachage par défaut est l’implémentation de clé de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-243">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-244">Le comparateur détermine si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-244">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="191bb-245">Chaque clé dans un <xref:System.Collections.Hashtable> doit être unique.</span><span class="sxs-lookup"><span data-stu-id="191bb-245">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="191bb-246">Le comparateur par défaut est l’implémentation de clé de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-246">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-247">Les éléments de la nouvelle <xref:System.Collections.Hashtable> sont triés dans le même ordre que celui dans lequel l’énumérateur itère au sein du <xref:System.Collections.IDictionary> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-247">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="191bb-248">Ce constructeur est un O (`n`) opération, où `n` est le nombre d’éléments dans le `d` paramètre.</span><span class="sxs-lookup"><span data-stu-id="191bb-248">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-249">L’exemple de code suivant crée des tables de hachage à l’aide de différents <xref:System.Collections.Hashtable> constructeurs et montre les différences de comportement entre les tables de hachage, même si chacune d’elles contient les mêmes éléments.</span><span class="sxs-lookup"><span data-stu-id="191bb-249">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CPP/hashtable_ctordictionaryfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CS/hashtable_ctordictionaryfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/VB/hashtable_ctordictionaryfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="191bb-250"><paramref name="d" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-250"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="191bb-251"><paramref name="loadFactor" /> est inférieur à 0,1.</span><span class="sxs-lookup"><span data-stu-id="191bb-251"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
<span data-ttu-id="191bb-252">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-252">-or-</span></span> 
 <span data-ttu-id="191bb-253"><paramref name="loadFactor" /> est supérieur à 1,0.</span><span class="sxs-lookup"><span data-stu-id="191bb-253"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Please use Hashtable(IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="hcp"><span data-ttu-id="191bb-254">Objet <see cref="T:System.Collections.IHashCodeProvider" /> qui fournit les codes de hachage pour toutes les clés dans l'objet <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-254">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" /> object.</span></span>  
  
<span data-ttu-id="191bb-255">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-255">-or-</span></span> 
 <span data-ttu-id="191bb-256"><see langword="null" /> pour utiliser le fournisseur de code de hachage par défaut, qui est l'implémentation de chaque clé de <see cref="M:System.Object.GetHashCode" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-256"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="191bb-257">Objet <see cref="T:System.Collections.IComparer" /> à utiliser pour déterminer si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-257">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
<span data-ttu-id="191bb-258">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-258">-or-</span></span> 
 <span data-ttu-id="191bb-259"><see langword="null" /> pour utiliser le comparateur par défaut, qui est l'implémentation de chaque clé de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-259"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="191bb-260">Initialise une nouvelle instance vide de la classe <see cref="T:System.Collections.Hashtable" /> à l'aide de la capacité initiale et du facteur de charge par défaut, et du fournisseur de codes de hachage et du comparateur spécifiés.</span><span class="sxs-lookup"><span data-stu-id="191bb-260">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity and load factor, and the specified hash code provider and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-261">Capacité d’une table de hachage est utilisée pour calculer le nombre optimal de compartiments de table de hachage en fonction du facteur de charge.</span><span class="sxs-lookup"><span data-stu-id="191bb-261">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="191bb-262">Capacité est automatiquement augmentée en fonction des besoins.</span><span class="sxs-lookup"><span data-stu-id="191bb-262">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="191bb-263">Le facteur de charge est le ratio maximal d’éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-263">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="191bb-264">Un facteur de charge plus petit signifie une recherche plus rapide au détriment de la consommation de mémoire accrue.</span><span class="sxs-lookup"><span data-stu-id="191bb-264">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="191bb-265">Lorsque le facteur de charge réel atteint le facteur de charge spécifié, le nombre de compartiments est automatiquement augmenté au plus petit nombre premier qui est supérieure à deux fois le nombre actuel de compartiments.</span><span class="sxs-lookup"><span data-stu-id="191bb-265">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="191bb-266">Le fournisseur de code de hachage fournit les codes de hachage des clés dans le <xref:System.Collections.Hashtable> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-266">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="191bb-267">Le fournisseur de code de hachage par défaut est l’implémentation de clé de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-267">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-268">Le comparateur détermine si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-268">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="191bb-269">Chaque clé dans un <xref:System.Collections.Hashtable> doit être unique.</span><span class="sxs-lookup"><span data-stu-id="191bb-269">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="191bb-270">Le comparateur par défaut est l’implémentation de clé de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-270">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-271">Le fournisseur de code de hachage personnalisé et le comparateur personnalisé permettent des scénarios tels qu’effectuant des recherches avec des chaînes de non-respect de la casse.</span><span class="sxs-lookup"><span data-stu-id="191bb-271">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="191bb-272">Ce constructeur est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="191bb-272">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-273">L’exemple de code suivant crée des tables de hachage à l’aide de différents <xref:System.Collections.Hashtable> constructeurs et montre les différences de comportement entre les tables de hachage, même si chacune d’elles contient les mêmes éléments.</span><span class="sxs-lookup"><span data-stu-id="191bb-273">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="191bb-274">Nombre approximatif d'éléments que l'objet <see cref="T:System.Collections.Hashtable" /> peut contenir initialement.</span><span class="sxs-lookup"><span data-stu-id="191bb-274">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="191bb-275">Objet <see cref="T:System.Collections.IEqualityComparer" /> qui définit le fournisseur de code de hachage et le comparateur à utiliser avec <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-275">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="191bb-276">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-276">-or-</span></span> 
 <span data-ttu-id="191bb-277"><see langword="null" /> pour utiliser le fournisseur de code de hachage par défaut et le comparateur par défaut.</span><span class="sxs-lookup"><span data-stu-id="191bb-277"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="191bb-278">Le fournisseur de code de hachage par défaut est l'implémentation de <see cref="M:System.Object.GetHashCode" /> de chaque clé et le comparateur par défaut est l'implémentation de <see cref="M:System.Object.Equals(System.Object)" /> de chaque clé.</span><span class="sxs-lookup"><span data-stu-id="191bb-278">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="191bb-279">Initialise une nouvelle instance vide de la classe <see cref="T:System.Collections.Hashtable" /> à l'aide de l'objet <see cref="T:System.Collections.IEqualityComparer" /> et de la capacité initiale spécifiés et du facteur de charge par défaut.</span><span class="sxs-lookup"><span data-stu-id="191bb-279">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity and <see cref="T:System.Collections.IEqualityComparer" />, and the default load factor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-280">Spécification de la capacité initiale vous évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.Hashtable> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-280">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="191bb-281">La capacité est automatiquement augmentée en fonction des besoins selon le facteur de charge.</span><span class="sxs-lookup"><span data-stu-id="191bb-281">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="191bb-282">Le facteur de charge est le ratio maximal d’éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-282">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="191bb-283">Un facteur de charge plus petit signifie une recherche plus rapide au détriment de la consommation de mémoire accrue.</span><span class="sxs-lookup"><span data-stu-id="191bb-283">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="191bb-284">Lorsque le facteur de charge réel atteint le facteur de charge spécifié, le nombre de compartiments est automatiquement augmenté au plus petit nombre premier qui est supérieure à deux fois le nombre actuel de compartiments.</span><span class="sxs-lookup"><span data-stu-id="191bb-284">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="191bb-285">Le <xref:System.Collections.IEqualityComparer> objet inclut le fournisseur de code de hachage et le comparateur.</span><span class="sxs-lookup"><span data-stu-id="191bb-285">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="191bb-286">Si un <xref:System.Collections.IEqualityComparer> est utilisé dans le <xref:System.Collections.Hashtable> constructeur, les objets utilisés en tant que clés dans le <xref:System.Collections.Hashtable> n’est pas nécessaire de substituer le <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> et <xref:System.Object.Equals%2A?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="191bb-286">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="191bb-287">Le fournisseur de code de hachage fournit les codes de hachage des clés dans le <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-287">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="191bb-288">Le fournisseur de code de hachage par défaut est l’implémentation de clé de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-288">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-289">Le comparateur détermine si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-289">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="191bb-290">Chaque clé dans un <xref:System.Collections.Hashtable> doit être unique.</span><span class="sxs-lookup"><span data-stu-id="191bb-290">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="191bb-291">Le comparateur par défaut est l’implémentation de clé de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-291">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-292">Le <xref:System.Collections.IEqualityComparer> permet des scénarios tels qu’effectuant des recherches avec des chaînes de non-respect de la casse.</span><span class="sxs-lookup"><span data-stu-id="191bb-292">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="191bb-293">Ce constructeur est un O (`n`) opération, où `n` est le `capacity` paramètre.</span><span class="sxs-lookup"><span data-stu-id="191bb-293">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-294">L’exemple de code suivant crée des tables de hachage à l’aide de différents <xref:System.Collections.Hashtable> constructeurs et montre les différences de comportement entre les tables de hachage, même si chacune d’elles contient les mêmes éléments.</span><span class="sxs-lookup"><span data-stu-id="191bb-294">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CPP/hashtable_ctorint.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CS/hashtable_ctorint.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/VB/hashtable_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="191bb-295"><paramref name="capacity" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="191bb-295"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, float loadFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 loadFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, loadFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, float loadFactor);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * single -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, loadFactor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="191bb-296">Nombre approximatif d'éléments que l'objet <see cref="T:System.Collections.Hashtable" /> peut contenir initialement.</span><span class="sxs-lookup"><span data-stu-id="191bb-296">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="191bb-297">Nombre dans la plage comprise entre 0,1 et 1,0 qui est multiplié par la valeur par défaut qui fournit les meilleures performances.</span><span class="sxs-lookup"><span data-stu-id="191bb-297">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="191bb-298">Le résultat est le ratio maximal d'éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-298">The result is the maximum ratio of elements to buckets.</span></span></param>
        <summary><span data-ttu-id="191bb-299">Initialise une nouvelle instance vide de la classe <see cref="T:System.Collections.Hashtable" /> à l'aide de la capacité initiale et du facteur de charge spécifiés, et du fournisseur de codes de hachage et du comparateur par défaut.</span><span class="sxs-lookup"><span data-stu-id="191bb-299">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity and load factor, and the default hash code provider and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-300">Spécification de la capacité initiale vous évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.Hashtable> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-300">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="191bb-301">La capacité est automatiquement augmentée en fonction des besoins selon le facteur de charge.</span><span class="sxs-lookup"><span data-stu-id="191bb-301">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="191bb-302">Le facteur de charge est le ratio maximal d’éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-302">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="191bb-303">Un facteur de charge plus petit signifie une recherche plus rapide au détriment de la consommation de mémoire accrue.</span><span class="sxs-lookup"><span data-stu-id="191bb-303">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="191bb-304">Un facteur de charge de 1,0 est le meilleur compromis entre vitesse et la taille.</span><span class="sxs-lookup"><span data-stu-id="191bb-304">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="191bb-305">Lorsque le facteur de charge réel atteint le facteur de charge spécifié, le nombre de compartiments est automatiquement augmenté au plus petit nombre premier qui est supérieure à deux fois le nombre actuel de compartiments.</span><span class="sxs-lookup"><span data-stu-id="191bb-305">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="191bb-306">Le fournisseur de code de hachage fournit les codes de hachage des clés dans le <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-306">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="191bb-307">Le fournisseur de code de hachage par défaut est l’implémentation de clé de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-307">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-308">Le comparateur détermine si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-308">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="191bb-309">Chaque clé dans un <xref:System.Collections.Hashtable> doit être unique.</span><span class="sxs-lookup"><span data-stu-id="191bb-309">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="191bb-310">Le comparateur par défaut est l’implémentation de clé de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-310">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-311">Ce constructeur est un O (`n`) opération, où `n` est le `capacity` paramètre.</span><span class="sxs-lookup"><span data-stu-id="191bb-311">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-312">L’exemple de code suivant crée des tables de hachage à l’aide de différents <xref:System.Collections.Hashtable> constructeurs et montre les différences de comportement entre les tables de hachage, même si chacune d’elles contient les mêmes éléments.</span><span class="sxs-lookup"><span data-stu-id="191bb-312">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CPP/hashtable_ctorintfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CS/hashtable_ctorintfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/VB/hashtable_ctorintfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="191bb-313"><paramref name="capacity" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="191bb-313"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="191bb-314">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-314">-or-</span></span> 
 <span data-ttu-id="191bb-315"><paramref name="loadFactor" /> est inférieur à 0,1.</span><span class="sxs-lookup"><span data-stu-id="191bb-315"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
<span data-ttu-id="191bb-316">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-316">-or-</span></span> 
 <span data-ttu-id="191bb-317"><paramref name="loadFactor" /> est supérieur à 1,0.</span><span class="sxs-lookup"><span data-stu-id="191bb-317"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="191bb-318"><paramref name="capacity" /> provoque un dépassement de capacité.</span><span class="sxs-lookup"><span data-stu-id="191bb-318"><paramref name="capacity" /> is causing an overflow.</span></span></exception>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Hashtable (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Hashtable(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="191bb-319">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenant les informations nécessaires pour sérialiser <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-319">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="191bb-320">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenant la source et la destination du flux sérialisé associé à <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-320">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="191bb-321">Initialise une nouvelle instance vide de la classe <see cref="T:System.Collections.Hashtable" /> qui est sérialisable à l’aide des objets<see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" /> spécifiés.</span><span class="sxs-lookup"><span data-stu-id="191bb-321">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class that is serializable using the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-322">Capacité d’une table de hachage est utilisée pour calculer le nombre optimal de compartiments de table de hachage en fonction du facteur de charge.</span><span class="sxs-lookup"><span data-stu-id="191bb-322">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="191bb-323">Capacité est automatiquement augmentée en fonction des besoins.</span><span class="sxs-lookup"><span data-stu-id="191bb-323">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="191bb-324">Le facteur de charge est le ratio maximal d’éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-324">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="191bb-325">Un facteur de charge plus petit signifie une recherche plus rapide au détriment de la consommation de mémoire accrue.</span><span class="sxs-lookup"><span data-stu-id="191bb-325">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="191bb-326">Lorsque le facteur de charge réel atteint le facteur de charge spécifié, le nombre de compartiments est automatiquement augmenté au plus petit nombre premier qui est supérieure à deux fois le nombre actuel de compartiments.</span><span class="sxs-lookup"><span data-stu-id="191bb-326">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="191bb-327">Le fournisseur de code de hachage fournit les codes de hachage des clés dans le <xref:System.Collections.Hashtable> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-327">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="191bb-328">Le fournisseur de code de hachage par défaut est l’implémentation de clé de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-328">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-329">Le comparateur détermine si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-329">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="191bb-330">Chaque clé dans un <xref:System.Collections.Hashtable> doit être unique.</span><span class="sxs-lookup"><span data-stu-id="191bb-330">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="191bb-331">Le comparateur par défaut est l’implémentation de clé de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-331">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-332">Ce constructeur est un O (`n`) opération, où `n` est <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="191bb-332">This constructor is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 <span data-ttu-id="191bb-333">Étant donné que la sérialisation et la désérialisation d’un énumérateur pour un <xref:System.Collections.Hashtable> peut provoquer les réorganisation des éléments, il n’est pas possible de continuer l’énumération sans appeler le <xref:System.Collections.IEnumerator.Reset%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="191bb-333">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="191bb-334"><paramref name="info" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-334"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Please use Hashtable(IDictionary, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="191bb-335">Objet <see cref="T:System.Collections.IDictionary" /> à copier vers un nouvel objet <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-335">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="hcp"><span data-ttu-id="191bb-336">Objet <see cref="T:System.Collections.IHashCodeProvider" /> qui fournit les codes de hachage pour toutes les clés dans <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-336">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="191bb-337">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-337">-or-</span></span> 
 <span data-ttu-id="191bb-338"><see langword="null" /> pour utiliser le fournisseur de code de hachage par défaut, qui est l'implémentation de chaque clé de <see cref="M:System.Object.GetHashCode" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-338"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="191bb-339">Objet <see cref="T:System.Collections.IComparer" /> à utiliser pour déterminer si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-339">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
<span data-ttu-id="191bb-340">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-340">-or-</span></span> 
 <span data-ttu-id="191bb-341"><see langword="null" /> pour utiliser le comparateur par défaut, qui est l'implémentation de chaque clé de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-341"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="191bb-342">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Hashtable" /> en copiant les éléments du dictionnaire spécifié vers le nouvel objet <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-342">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="191bb-343">Le nouvel objet <see cref="T:System.Collections.Hashtable" /> a une capacité initiale égale au nombre d'éléments copiés et utilise le facteur de charge par défaut et le fournisseur de codes de hachage et le comparateur spécifiés.</span><span class="sxs-lookup"><span data-stu-id="191bb-343">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor, and the specified hash code provider and comparer.</span></span> <span data-ttu-id="191bb-344">Cette API est obsolète.</span><span class="sxs-lookup"><span data-stu-id="191bb-344">This API is obsolete.</span></span> <span data-ttu-id="191bb-345">Pour obtenir une alternative, consultez <see cref="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-345">For an alternative, see <see cref="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-346">La capacité initiale est définie sur le nombre d’éléments dans le dictionnaire source.</span><span class="sxs-lookup"><span data-stu-id="191bb-346">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="191bb-347">La capacité est automatiquement augmentée en fonction des besoins selon le facteur de charge.</span><span class="sxs-lookup"><span data-stu-id="191bb-347">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="191bb-348">Le facteur de charge est le ratio maximal d’éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-348">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="191bb-349">Un facteur de charge plus petit signifie une recherche plus rapide au détriment de la consommation de mémoire accrue.</span><span class="sxs-lookup"><span data-stu-id="191bb-349">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="191bb-350">Lorsque le facteur de charge réel atteint le facteur de charge spécifié, le nombre de compartiments est automatiquement augmenté au plus petit nombre premier qui est supérieure à deux fois le nombre actuel de compartiments.</span><span class="sxs-lookup"><span data-stu-id="191bb-350">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="191bb-351">Le fournisseur de code de hachage fournit les codes de hachage des clés dans le <xref:System.Collections.Hashtable> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-351">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="191bb-352">Le fournisseur de code de hachage par défaut est l’implémentation de clé de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-352">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-353">Le comparateur détermine si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-353">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="191bb-354">Chaque clé dans un <xref:System.Collections.Hashtable> doit être unique.</span><span class="sxs-lookup"><span data-stu-id="191bb-354">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="191bb-355">Le comparateur par défaut est l’implémentation de clé de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-355">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-356">Le fournisseur de code de hachage personnalisé et le comparateur personnalisé permettent des scénarios tels qu’effectuant des recherches avec des chaînes de non-respect de la casse.</span><span class="sxs-lookup"><span data-stu-id="191bb-356">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="191bb-357">Les éléments de la nouvelle <xref:System.Collections.Hashtable> sont triés dans le même ordre que celui dans lequel l’énumérateur itère au sein du <xref:System.Collections.IDictionary> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-357">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="191bb-358">Ce constructeur est un O (`n`) opération, où `n` est le nombre d’éléments dans le `d` paramètre.</span><span class="sxs-lookup"><span data-stu-id="191bb-358">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-359">L’exemple de code suivant crée des tables de hachage à l’aide de différents <xref:System.Collections.Hashtable> constructeurs et montre les différences de comportement entre les tables de hachage, même si chacune d’elles contient les mêmes éléments.</span><span class="sxs-lookup"><span data-stu-id="191bb-359">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CPP/hashtable_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CS/hashtable_ctordictionary.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/VB/hashtable_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="191bb-360"><paramref name="d" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-360"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, float loadFactor, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, float32 loadFactor, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, loadFactor As Single, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, float loadFactor, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * single * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, loadFactor, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="191bb-361">Objet <see cref="T:System.Collections.IDictionary" /> à copier vers un nouvel objet <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-361">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="191bb-362">Nombre dans la plage comprise entre 0,1 et 1,0 qui est multiplié par la valeur par défaut qui fournit les meilleures performances.</span><span class="sxs-lookup"><span data-stu-id="191bb-362">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="191bb-363">Le résultat est le ratio maximal d'éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-363">The result is the maximum ratio of elements to buckets.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="191bb-364">Objet <see cref="T:System.Collections.IEqualityComparer" /> qui définit le fournisseur de code de hachage et le comparateur à utiliser avec <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-364">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="191bb-365">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-365">-or-</span></span> 
 <span data-ttu-id="191bb-366"><see langword="null" /> pour utiliser le fournisseur de code de hachage par défaut et le comparateur par défaut.</span><span class="sxs-lookup"><span data-stu-id="191bb-366"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="191bb-367">Le fournisseur de code de hachage par défaut est l'implémentation de <see cref="M:System.Object.GetHashCode" /> de chaque clé et le comparateur par défaut est l'implémentation de <see cref="M:System.Object.Equals(System.Object)" /> de chaque clé.</span><span class="sxs-lookup"><span data-stu-id="191bb-367">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="191bb-368">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Hashtable" /> en copiant les éléments du dictionnaire spécifié vers le nouvel objet <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-368">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="191bb-369">Le nouvel objet <see cref="T:System.Collections.Hashtable" /> a une capacité initiale égale au nombre d'éléments copiés et utilise le facteur de charge et l'objet <see cref="T:System.Collections.IEqualityComparer" /> spécifiés.</span><span class="sxs-lookup"><span data-stu-id="191bb-369">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor and <see cref="T:System.Collections.IEqualityComparer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-370">La capacité initiale est définie sur le nombre d’éléments dans le dictionnaire source.</span><span class="sxs-lookup"><span data-stu-id="191bb-370">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="191bb-371">La capacité est automatiquement augmentée en fonction des besoins selon le facteur de charge.</span><span class="sxs-lookup"><span data-stu-id="191bb-371">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="191bb-372">Le facteur de charge est le ratio maximal d’éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-372">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="191bb-373">Un facteur de charge plus petit signifie une recherche plus rapide au détriment de la consommation de mémoire accrue.</span><span class="sxs-lookup"><span data-stu-id="191bb-373">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="191bb-374">Un facteur de charge de 1,0 est le meilleur compromis entre vitesse et la taille.</span><span class="sxs-lookup"><span data-stu-id="191bb-374">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="191bb-375">Lorsque le facteur de charge réel atteint le facteur de charge spécifié, le nombre de compartiments est automatiquement augmenté au plus petit nombre premier qui est supérieure à deux fois le nombre actuel de compartiments.</span><span class="sxs-lookup"><span data-stu-id="191bb-375">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="191bb-376">Le <xref:System.Collections.IEqualityComparer> objet inclut le fournisseur de code de hachage et le comparateur.</span><span class="sxs-lookup"><span data-stu-id="191bb-376">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="191bb-377">Si un <xref:System.Collections.IEqualityComparer> est utilisé dans le <xref:System.Collections.Hashtable> constructeur, les objets utilisés en tant que clés dans le <xref:System.Collections.Hashtable> objet n’est pas nécessaire de substituer le <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> et <xref:System.Object.Equals%2A?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="191bb-377">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> object are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="191bb-378">Le fournisseur de code de hachage fournit les codes de hachage des clés dans le <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-378">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="191bb-379">Le fournisseur de code de hachage par défaut est l’implémentation de clé de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-379">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-380">Le comparateur détermine si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-380">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="191bb-381">Chaque clé dans un <xref:System.Collections.Hashtable> doit être unique.</span><span class="sxs-lookup"><span data-stu-id="191bb-381">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="191bb-382">Le comparateur par défaut est l’implémentation de clé de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-382">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-383">Le <xref:System.Collections.IEqualityComparer> permet des scénarios tels qu’effectuant des recherches avec des chaînes de non-respect de la casse.</span><span class="sxs-lookup"><span data-stu-id="191bb-383">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="191bb-384">Les éléments de la nouvelle <xref:System.Collections.Hashtable> sont triés dans le même ordre que celui dans lequel l’énumérateur itère au sein du <xref:System.Collections.IDictionary> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-384">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="191bb-385">Ce constructeur est un O (`n`) opération, où `n` est le nombre d’éléments dans le `d` paramètre.</span><span class="sxs-lookup"><span data-stu-id="191bb-385">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-386">L’exemple de code suivant crée des tables de hachage à l’aide de différents <xref:System.Collections.Hashtable> constructeurs et montre les différences de comportement entre les tables de hachage, même si chacune d’elles contient les mêmes éléments.</span><span class="sxs-lookup"><span data-stu-id="191bb-386">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CPP/hashtable_ctordictionaryfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CS/hashtable_ctordictionaryfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/VB/hashtable_ctordictionaryfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="191bb-387"><paramref name="d" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-387"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="191bb-388"><paramref name="loadFactor" /> est inférieur à 0,1.</span><span class="sxs-lookup"><span data-stu-id="191bb-388"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
<span data-ttu-id="191bb-389">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-389">-or-</span></span> 
 <span data-ttu-id="191bb-390"><paramref name="loadFactor" /> est supérieur à 1,0.</span><span class="sxs-lookup"><span data-stu-id="191bb-390"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Please use Hashtable(int, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="191bb-391">Nombre approximatif d'éléments que l'objet <see cref="T:System.Collections.Hashtable" /> peut contenir initialement.</span><span class="sxs-lookup"><span data-stu-id="191bb-391">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="hcp"><span data-ttu-id="191bb-392">Objet <see cref="T:System.Collections.IHashCodeProvider" /> qui fournit les codes de hachage pour toutes les clés dans <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-392">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="191bb-393">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-393">-or-</span></span> 
 <span data-ttu-id="191bb-394"><see langword="null" /> pour utiliser le fournisseur de code de hachage par défaut, qui est l'implémentation de chaque clé de <see cref="M:System.Object.GetHashCode" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-394"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="191bb-395">Objet <see cref="T:System.Collections.IComparer" /> à utiliser pour déterminer si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-395">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
<span data-ttu-id="191bb-396">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-396">-or-</span></span> 
 <span data-ttu-id="191bb-397"><see langword="null" /> pour utiliser le comparateur par défaut, qui est l'implémentation de chaque clé de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-397"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="191bb-398">Initialise une nouvelle instance vide de la classe <see cref="T:System.Collections.Hashtable" /> à l'aide de la capacité initiale, du fournisseur de codes de hachage, du comparateur et du facteur de charge par défaut.</span><span class="sxs-lookup"><span data-stu-id="191bb-398">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, hash code provider, comparer, and the default load factor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-399">Spécification de la capacité initiale vous évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.Hashtable> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-399">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="191bb-400">La capacité est automatiquement augmentée en fonction des besoins selon le facteur de charge.</span><span class="sxs-lookup"><span data-stu-id="191bb-400">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="191bb-401">Le facteur de charge est le ratio maximal d’éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-401">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="191bb-402">Un facteur de charge plus petit signifie une recherche plus rapide au détriment de la consommation de mémoire accrue.</span><span class="sxs-lookup"><span data-stu-id="191bb-402">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="191bb-403">Lorsque le facteur de charge réel atteint le facteur de charge spécifié, le nombre de compartiments est automatiquement augmenté au plus petit nombre premier qui est supérieure à deux fois le nombre actuel de compartiments.</span><span class="sxs-lookup"><span data-stu-id="191bb-403">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="191bb-404">Le fournisseur de code de hachage fournit les codes de hachage des clés dans le <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-404">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="191bb-405">Le fournisseur de code de hachage par défaut est l’implémentation de clé de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-405">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-406">Le comparateur détermine si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-406">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="191bb-407">Chaque clé dans un <xref:System.Collections.Hashtable> doit être unique.</span><span class="sxs-lookup"><span data-stu-id="191bb-407">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="191bb-408">Le comparateur par défaut est l’implémentation de clé de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-408">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-409">Le fournisseur de code de hachage personnalisé et le comparateur personnalisé permettent des scénarios tels qu’effectuant des recherches avec des chaînes de non-respect de la casse.</span><span class="sxs-lookup"><span data-stu-id="191bb-409">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="191bb-410">Ce constructeur est un O (`n`) opération, où `n` est le `capacity` paramètre.</span><span class="sxs-lookup"><span data-stu-id="191bb-410">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-411">L’exemple de code suivant crée des tables de hachage à l’aide de différents <xref:System.Collections.Hashtable> constructeurs et montre les différences de comportement entre les tables de hachage, même si chacune d’elles contient les mêmes éléments.</span><span class="sxs-lookup"><span data-stu-id="191bb-411">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CPP/hashtable_ctorint.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CS/hashtable_ctorint.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/VB/hashtable_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="191bb-412"><paramref name="capacity" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="191bb-412"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, float loadFactor, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 loadFactor, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, loadFactor As Single, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, float loadFactor, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * single * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, loadFactor, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="191bb-413">Nombre approximatif d'éléments que l'objet <see cref="T:System.Collections.Hashtable" /> peut contenir initialement.</span><span class="sxs-lookup"><span data-stu-id="191bb-413">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="191bb-414">Nombre dans la plage comprise entre 0,1 et 1,0 qui est multiplié par la valeur par défaut qui fournit les meilleures performances.</span><span class="sxs-lookup"><span data-stu-id="191bb-414">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="191bb-415">Le résultat est le ratio maximal d'éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-415">The result is the maximum ratio of elements to buckets.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="191bb-416">Objet <see cref="T:System.Collections.IEqualityComparer" /> qui définit le fournisseur de code de hachage et le comparateur à utiliser avec <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-416">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="191bb-417">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-417">-or-</span></span> 
 <span data-ttu-id="191bb-418"><see langword="null" /> pour utiliser le fournisseur de code de hachage par défaut et le comparateur par défaut.</span><span class="sxs-lookup"><span data-stu-id="191bb-418"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="191bb-419">Le fournisseur de code de hachage par défaut est l'implémentation de <see cref="M:System.Object.GetHashCode" /> de chaque clé et le comparateur par défaut est l'implémentation de <see cref="M:System.Object.Equals(System.Object)" /> de chaque clé.</span><span class="sxs-lookup"><span data-stu-id="191bb-419">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="191bb-420">Initialise une nouvelle instance vide de la classe <see cref="T:System.Collections.Hashtable" /> à l'aide de la capacité initiale, du facteur de charge et de l'objet <see cref="T:System.Collections.IEqualityComparer" /> spécifiés.</span><span class="sxs-lookup"><span data-stu-id="191bb-420">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, load factor, and <see cref="T:System.Collections.IEqualityComparer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-421">Spécification de la capacité initiale vous évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.Hashtable> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-421">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="191bb-422">La capacité est automatiquement augmentée en fonction des besoins selon le facteur de charge.</span><span class="sxs-lookup"><span data-stu-id="191bb-422">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="191bb-423">Le facteur de charge est le ratio maximal d’éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-423">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="191bb-424">Un facteur de charge plus petit signifie une recherche plus rapide au détriment de la consommation de mémoire accrue.</span><span class="sxs-lookup"><span data-stu-id="191bb-424">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="191bb-425">Un facteur de charge de 1,0 est le meilleur compromis entre vitesse et la taille.</span><span class="sxs-lookup"><span data-stu-id="191bb-425">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="191bb-426">Lorsque le facteur de charge réel atteint le facteur de charge spécifié, le nombre de compartiments est automatiquement augmenté au plus petit nombre premier qui est supérieure à deux fois le nombre actuel de compartiments.</span><span class="sxs-lookup"><span data-stu-id="191bb-426">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="191bb-427">Le <xref:System.Collections.IEqualityComparer> objet inclut le fournisseur de code de hachage et le comparateur.</span><span class="sxs-lookup"><span data-stu-id="191bb-427">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="191bb-428">Si un <xref:System.Collections.IEqualityComparer> est utilisé dans le <xref:System.Collections.Hashtable> constructeur, les objets utilisés en tant que clés dans le <xref:System.Collections.Hashtable> n’est pas nécessaire de substituer le <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> et <xref:System.Object.Equals%2A?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="191bb-428">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="191bb-429">Le fournisseur de code de hachage fournit les codes de hachage des clés dans le <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-429">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="191bb-430">Le fournisseur de code de hachage par défaut est l’implémentation de clé de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-430">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-431">Le comparateur détermine si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-431">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="191bb-432">Chaque clé dans un <xref:System.Collections.Hashtable> doit être unique.</span><span class="sxs-lookup"><span data-stu-id="191bb-432">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="191bb-433">Le comparateur par défaut est l’implémentation de clé de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-433">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-434">Le <xref:System.Collections.IEqualityComparer> permet des scénarios tels qu’effectuant des recherches avec des chaînes de non-respect de la casse.</span><span class="sxs-lookup"><span data-stu-id="191bb-434">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="191bb-435">Ce constructeur est un O (`n`) opération, où `n` est le `capacity` paramètre.</span><span class="sxs-lookup"><span data-stu-id="191bb-435">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-436">L’exemple de code suivant crée des tables de hachage à l’aide de différents <xref:System.Collections.Hashtable> constructeurs et montre les différences de comportement entre les tables de hachage, même si chacune d’elles contient les mêmes éléments.</span><span class="sxs-lookup"><span data-stu-id="191bb-436">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CPP/hashtable_ctorintfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CS/hashtable_ctorintfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/VB/hashtable_ctorintfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="191bb-437"><paramref name="capacity" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="191bb-437"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="191bb-438">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-438">-or-</span></span> 
 <span data-ttu-id="191bb-439"><paramref name="loadFactor" /> est inférieur à 0,1.</span><span class="sxs-lookup"><span data-stu-id="191bb-439"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
<span data-ttu-id="191bb-440">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-440">-or-</span></span> 
 <span data-ttu-id="191bb-441"><paramref name="loadFactor" /> est supérieur à 1,0.</span><span class="sxs-lookup"><span data-stu-id="191bb-441"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, float loadFactor, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, float32 loadFactor, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, loadFactor As Single, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, float loadFactor, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * single * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, loadFactor, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Please use Hashtable(IDictionary, float, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="191bb-442">Objet <see cref="T:System.Collections.IDictionary" /> à copier vers un nouvel objet <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-442">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="191bb-443">Nombre dans la plage comprise entre 0,1 et 1,0 qui est multiplié par la valeur par défaut qui fournit les meilleures performances.</span><span class="sxs-lookup"><span data-stu-id="191bb-443">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="191bb-444">Le résultat est le ratio maximal d'éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-444">The result is the maximum ratio of elements to buckets.</span></span></param>
        <param name="hcp"><span data-ttu-id="191bb-445">Objet <see cref="T:System.Collections.IHashCodeProvider" /> qui fournit les codes de hachage pour toutes les clés dans <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-445">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="191bb-446">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-446">-or-</span></span> 
 <span data-ttu-id="191bb-447"><see langword="null" /> pour utiliser le fournisseur de code de hachage par défaut, qui est l'implémentation de chaque clé de <see cref="M:System.Object.GetHashCode" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-447"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="191bb-448">Objet <see cref="T:System.Collections.IComparer" /> à utiliser pour déterminer si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-448">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
<span data-ttu-id="191bb-449">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-449">-or-</span></span> 
 <span data-ttu-id="191bb-450"><see langword="null" /> pour utiliser le comparateur par défaut, qui est l'implémentation de chaque clé de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-450"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="191bb-451">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Hashtable" /> en copiant les éléments du dictionnaire spécifié vers le nouvel objet <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-451">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="191bb-452">Le nouvel objet <see cref="T:System.Collections.Hashtable" /> a une capacité initiale égale au nombre d'éléments copiés et utilise le facteur de charge, le fournisseur de codes de hachage et le comparateur spécifiés.</span><span class="sxs-lookup"><span data-stu-id="191bb-452">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-453">La capacité initiale est définie sur le nombre d’éléments dans le dictionnaire source.</span><span class="sxs-lookup"><span data-stu-id="191bb-453">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="191bb-454">La capacité est automatiquement augmentée en fonction des besoins selon le facteur de charge.</span><span class="sxs-lookup"><span data-stu-id="191bb-454">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="191bb-455">Le facteur de charge est le ratio maximal d’éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-455">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="191bb-456">Un facteur de charge plus petit signifie une recherche plus rapide au détriment de la consommation de mémoire accrue.</span><span class="sxs-lookup"><span data-stu-id="191bb-456">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="191bb-457">Un facteur de charge de 1,0 est le meilleur compromis entre vitesse et la taille.</span><span class="sxs-lookup"><span data-stu-id="191bb-457">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="191bb-458">Lorsque le facteur de charge réel atteint le facteur de charge spécifié, le nombre de compartiments est automatiquement augmenté au plus petit nombre premier qui est supérieure à deux fois le nombre actuel de compartiments.</span><span class="sxs-lookup"><span data-stu-id="191bb-458">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="191bb-459">Le fournisseur de code de hachage fournit les codes de hachage des clés dans le <xref:System.Collections.Hashtable> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-459">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="191bb-460">Le fournisseur de code de hachage par défaut est l’implémentation de clé de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-460">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-461">Le comparateur détermine si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-461">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="191bb-462">Chaque clé dans un <xref:System.Collections.Hashtable> doit être unique.</span><span class="sxs-lookup"><span data-stu-id="191bb-462">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="191bb-463">Le comparateur par défaut est l’implémentation de clé de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-463">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-464">Le fournisseur de code de hachage personnalisé et le comparateur personnalisé permettent des scénarios tels qu’effectuant des recherches avec des chaînes de non-respect de la casse.</span><span class="sxs-lookup"><span data-stu-id="191bb-464">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="191bb-465">Les éléments de la nouvelle <xref:System.Collections.Hashtable> sont triés dans le même ordre que celui dans lequel l’énumérateur itère au sein du <xref:System.Collections.IDictionary> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-465">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="191bb-466">Ce constructeur est un O (`n`) opération, où `n` est le nombre d’éléments dans le `d` paramètre.</span><span class="sxs-lookup"><span data-stu-id="191bb-466">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-467">L’exemple de code suivant crée des tables de hachage à l’aide de différents <xref:System.Collections.Hashtable> constructeurs et montre les différences de comportement entre les tables de hachage, même si chacune d’elles contient les mêmes éléments.</span><span class="sxs-lookup"><span data-stu-id="191bb-467">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CPP/hashtable_ctordictionaryfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CS/hashtable_ctordictionaryfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/VB/hashtable_ctordictionaryfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="191bb-468"><paramref name="d" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-468"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="191bb-469"><paramref name="loadFactor" /> est inférieur à 0,1.</span><span class="sxs-lookup"><span data-stu-id="191bb-469"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
<span data-ttu-id="191bb-470">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-470">-or-</span></span> 
 <span data-ttu-id="191bb-471"><paramref name="loadFactor" /> est supérieur à 1,0.</span><span class="sxs-lookup"><span data-stu-id="191bb-471"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, float loadFactor, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 loadFactor, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, loadFactor As Single, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, float loadFactor, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * single * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, loadFactor, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Please use Hashtable(int, float, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="191bb-472">Nombre approximatif d'éléments que l'objet <see cref="T:System.Collections.Hashtable" /> peut contenir initialement.</span><span class="sxs-lookup"><span data-stu-id="191bb-472">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="191bb-473">Nombre dans la plage comprise entre 0,1 et 1,0 qui est multiplié par la valeur par défaut qui fournit les meilleures performances.</span><span class="sxs-lookup"><span data-stu-id="191bb-473">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="191bb-474">Le résultat est le ratio maximal d'éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-474">The result is the maximum ratio of elements to buckets.</span></span></param>
        <param name="hcp"><span data-ttu-id="191bb-475">Objet <see cref="T:System.Collections.IHashCodeProvider" /> qui fournit les codes de hachage pour toutes les clés dans <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-475">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="191bb-476">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-476">-or-</span></span> 
 <span data-ttu-id="191bb-477"><see langword="null" /> pour utiliser le fournisseur de code de hachage par défaut, qui est l'implémentation de chaque clé de <see cref="M:System.Object.GetHashCode" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-477"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="191bb-478">Objet <see cref="T:System.Collections.IComparer" /> à utiliser pour déterminer si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-478">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
<span data-ttu-id="191bb-479">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-479">-or-</span></span> 
 <span data-ttu-id="191bb-480"><see langword="null" /> pour utiliser le comparateur par défaut, qui est l'implémentation de chaque clé de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-480"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="191bb-481">Initialise une nouvelle instance vide de la classe <see cref="T:System.Collections.Hashtable" /> à l'aide de la capacité initiale, du facteur de charge, du fournisseur de codes de hachage et du comparateur spécifiés.</span><span class="sxs-lookup"><span data-stu-id="191bb-481">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-482">Spécification de la capacité initiale vous évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.Hashtable> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-482">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="191bb-483">La capacité est automatiquement augmentée en fonction des besoins selon le facteur de charge.</span><span class="sxs-lookup"><span data-stu-id="191bb-483">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="191bb-484">Le facteur de charge est le ratio maximal d’éléments par compartiment.</span><span class="sxs-lookup"><span data-stu-id="191bb-484">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="191bb-485">Un facteur de charge plus petit signifie une recherche plus rapide au détriment de la consommation de mémoire accrue.</span><span class="sxs-lookup"><span data-stu-id="191bb-485">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="191bb-486">Un facteur de charge de 1,0 est le meilleur compromis entre vitesse et la taille.</span><span class="sxs-lookup"><span data-stu-id="191bb-486">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="191bb-487">Lorsque le facteur de charge réel atteint le facteur de charge spécifié, le nombre de compartiments est automatiquement augmenté au plus petit nombre premier qui est supérieure à deux fois le nombre actuel de compartiments.</span><span class="sxs-lookup"><span data-stu-id="191bb-487">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="191bb-488">Le fournisseur de code de hachage fournit les codes de hachage des clés dans le <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-488">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="191bb-489">Le fournisseur de code de hachage par défaut est l’implémentation de clé de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-489">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-490">Le comparateur détermine si deux clés sont égales.</span><span class="sxs-lookup"><span data-stu-id="191bb-490">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="191bb-491">Chaque clé dans un <xref:System.Collections.Hashtable> doit être unique.</span><span class="sxs-lookup"><span data-stu-id="191bb-491">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="191bb-492">Le comparateur par défaut est l’implémentation de clé de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-492">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="191bb-493">Le fournisseur de code de hachage personnalisé et le comparateur personnalisé permettent des scénarios tels qu’effectuant des recherches avec des chaînes de non-respect de la casse.</span><span class="sxs-lookup"><span data-stu-id="191bb-493">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="191bb-494">Ce constructeur est un O (`n`) opération, où `n` est le `capacity` paramètre.</span><span class="sxs-lookup"><span data-stu-id="191bb-494">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-495">L’exemple de code suivant crée des tables de hachage à l’aide de différents <xref:System.Collections.Hashtable> constructeurs et montre les différences de comportement entre les tables de hachage, même si chacune d’elles contient les mêmes éléments.</span><span class="sxs-lookup"><span data-stu-id="191bb-495">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CPP/hashtable_ctorintfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CS/hashtable_ctorintfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/VB/hashtable_ctorintfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="191bb-496"><paramref name="capacity" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="191bb-496"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="191bb-497">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-497">-or-</span></span> 
 <span data-ttu-id="191bb-498"><paramref name="loadFactor" /> est inférieur à 0,1.</span><span class="sxs-lookup"><span data-stu-id="191bb-498"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
<span data-ttu-id="191bb-499">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-499">-or-</span></span> 
 <span data-ttu-id="191bb-500"><paramref name="loadFactor" /> est supérieur à 1,0.</span><span class="sxs-lookup"><span data-stu-id="191bb-500"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj -&gt; unit&#xA;override this.Add : obj * obj -&gt; unit" Usage="hashtable.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="191bb-501">Clé de l'élément à ajouter.</span><span class="sxs-lookup"><span data-stu-id="191bb-501">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="191bb-502">Valeur de l'élément à ajouter.</span><span class="sxs-lookup"><span data-stu-id="191bb-502">The value of the element to add.</span></span> <span data-ttu-id="191bb-503">La valeur peut être <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-503">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="191bb-504">Ajoute un élément avec la clé et la valeur spécifiées dans <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-504">Adds an element with the specified key and value into the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-505">Une clé ne peut pas être `null`, mais une valeur peut être.</span><span class="sxs-lookup"><span data-stu-id="191bb-505">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="191bb-506">Un objet qui ne présente aucune corrélation entre son état et sa valeur de code de hachage ne doit généralement pas utilisé comme clé.</span><span class="sxs-lookup"><span data-stu-id="191bb-506">An object that has no correlation between its state and its hash code value should typically not be used as the key.</span></span> <span data-ttu-id="191bb-507">Par exemple, les objets de chaîne sont meilleures que les objets de StringBuilder pour une utilisation en tant que clés.</span><span class="sxs-lookup"><span data-stu-id="191bb-507">For example, String objects are better than StringBuilder objects for use as keys.</span></span>  
  
 <span data-ttu-id="191bb-508">Vous pouvez également utiliser le <xref:System.Collections.Hashtable.Item%2A> propriété à ajouter de nouveaux éléments en définissant la valeur d’une clé qui n’existe pas dans le <xref:System.Collections.Hashtable>; par exemple, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="191bb-508">You can also use the <xref:System.Collections.Hashtable.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Hashtable>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="191bb-509">Toutefois, si la clé spécifiée existe déjà dans le <xref:System.Collections.Hashtable>, ce qui affecte le <xref:System.Collections.Hashtable.Item%2A> propriété remplace l’ancienne valeur.</span><span class="sxs-lookup"><span data-stu-id="191bb-509">However, if the specified key already exists in the <xref:System.Collections.Hashtable>, setting the <xref:System.Collections.Hashtable.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="191bb-510">En revanche, le <xref:System.Collections.Hashtable.Add%2A> méthode ne modifie pas les éléments existants.</span><span class="sxs-lookup"><span data-stu-id="191bb-510">In contrast, the <xref:System.Collections.Hashtable.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="191bb-511">Si <xref:System.Collections.Hashtable.Count%2A> est inférieure à la capacité de la <xref:System.Collections.Hashtable>, cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="191bb-511">If <xref:System.Collections.Hashtable.Count%2A> is less than the capacity of the <xref:System.Collections.Hashtable>, this method is an O(1) operation.</span></span> <span data-ttu-id="191bb-512">Si la capacité doit être augmentée pour intégrer un nouvel élément, cette méthode devient un O (`n`) opération, où `n` est <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="191bb-512">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-513">L’exemple suivant montre comment ajouter des éléments à la <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-513">The following example shows how to add elements to the <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Add Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="191bb-514"><paramref name="key" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-514"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="191bb-515">Un élément possédant la même clé existe déjà dans <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-515">An element with the same key already exists in the <see cref="T:System.Collections.Hashtable" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="191bb-516"><see cref="T:System.Collections.Hashtable" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="191bb-516">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span>  
  
<span data-ttu-id="191bb-517">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-517">-or-</span></span> 
<span data-ttu-id="191bb-518"><see cref="T:System.Collections.Hashtable" /> est de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="191bb-518">The <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.Remove(System.Object)" />
        <altmember cref="P:System.Collections.Hashtable.Item(System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="hashtable.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="191bb-519">Supprime tous les éléments de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-519">Removes all elements from the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-520"><xref:System.Collections.Hashtable.Count%2A> est défini sur zéro et les références à d’autres objets à partir des éléments de la collection sont également libérées.</span><span class="sxs-lookup"><span data-stu-id="191bb-520"><xref:System.Collections.Hashtable.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span> <span data-ttu-id="191bb-521">La capacité reste inchangée.</span><span class="sxs-lookup"><span data-stu-id="191bb-521">The capacity remains unchanged.</span></span>  
  
 <span data-ttu-id="191bb-522">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="191bb-522">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-523">L’exemple suivant montre comment effacer les valeurs de la <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-523">The following example shows how to clear the values of the <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="191bb-524"><see cref="T:System.Collections.Hashtable" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="191bb-524">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span></exception>
        <altmember cref="M:System.Collections.IDictionary.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="hashtable.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="191bb-525">Crée une copie superficielle de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-525">Creates a shallow copy of the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <returns><span data-ttu-id="191bb-526">Copie superficielle de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-526">A shallow copy of the <see cref="T:System.Collections.Hashtable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-527">Une copie superficielle d’une collection copie uniquement les éléments de la collection, si elles sont des types référence ou types valeur, mais il ne copie pas les objets qui la fait référence à.</span><span class="sxs-lookup"><span data-stu-id="191bb-527">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="191bb-528">Les références dans la nouvelle collection pointent vers les mêmes objets que les références dans la collection d’origine pointent vers.</span><span class="sxs-lookup"><span data-stu-id="191bb-528">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="191bb-529">En revanche, une copie complète d’une collection copie les éléments et tous les éléments référencés directement ou indirectement par les éléments.</span><span class="sxs-lookup"><span data-stu-id="191bb-529">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="191bb-530">Le <xref:System.Collections.Hashtable> clone a le même nombre, la capacité, le même <xref:System.Collections.IHashCodeProvider> implémentation et les mêmes <xref:System.Collections.IComparer> implémentation que l’original <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-530">The <xref:System.Collections.Hashtable> clone has the same count, the same capacity, the same <xref:System.Collections.IHashCodeProvider> implementation, and the same <xref:System.Collections.IComparer> implementation as the original <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="191bb-531">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="191bb-531">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="comparer">
      <MemberSignature Language="C#" Value="protected System.Collections.IComparer comparer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.comparer" />
      <MemberSignature Language="VB.NET" Value="Protected Property comparer As IComparer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IComparer ^ comparer { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.comparer : System.Collections.IComparer with get, set" Usage="System.Collections.Hashtable.comparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Please use KeyComparer properties.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="191bb-532">Obtient ou définit le <see cref="T:System.Collections.IComparer" /> à utiliser pour <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-532">Gets or sets the <see cref="T:System.Collections.IComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="191bb-533"><see cref="T:System.Collections.IComparer" /> à utiliser pour <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-533">The <see cref="T:System.Collections.IComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-534">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="191bb-534">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="191bb-535">La propriété a une valeur, mais la table de hachage a été créée à l'aide d'un <see cref="T:System.Collections.IEqualityComparer" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-535">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IEqualityComparer" />.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="hashtable.Contains key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="191bb-536">Clé à rechercher dans <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-536">The key to locate in the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="191bb-537">Détermine si <see cref="T:System.Collections.Hashtable" /> contient une clé spécifique.</span><span class="sxs-lookup"><span data-stu-id="191bb-537">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific key.</span></span></summary>
        <returns><span data-ttu-id="191bb-538"><see langword="true" /> si <see cref="T:System.Collections.Hashtable" /> contient un élément correspondant à la clé spécifiée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-538"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-539">L'objet <xref:System.Collections.Hashtable.Contains%2A> implémente l'objet <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="191bb-539"><xref:System.Collections.Hashtable.Contains%2A> implements <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="191bb-540">Elle se comporte exactement comme <xref:System.Collections.Hashtable.ContainsKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="191bb-540">It behaves exactly as <xref:System.Collections.Hashtable.ContainsKey%2A>.</span></span>  
  
 <span data-ttu-id="191bb-541">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="191bb-541">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="191bb-542">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `item` pour déterminer l’existence d’un élément.</span><span class="sxs-lookup"><span data-stu-id="191bb-542">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="191bb-543">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="191bb-543">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-544">L’exemple suivant montre comment déterminer si le <xref:System.Collections.Hashtable> contient un élément spécifique.</span><span class="sxs-lookup"><span data-stu-id="191bb-544">The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.</span></span>  
  
 [!code-cpp[Classic Hashtable.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="191bb-545"><paramref name="key" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-545"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : obj -&gt; bool&#xA;override this.ContainsKey : obj -&gt; bool" Usage="hashtable.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="191bb-546">Clé à rechercher dans <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-546">The key to locate in the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="191bb-547">Détermine si <see cref="T:System.Collections.Hashtable" /> contient une clé spécifique.</span><span class="sxs-lookup"><span data-stu-id="191bb-547">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific key.</span></span></summary>
        <returns><span data-ttu-id="191bb-548"><see langword="true" /> si <see cref="T:System.Collections.Hashtable" /> contient un élément correspondant à la clé spécifiée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-548"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-549">Cette méthode se comporte exactement comme <xref:System.Collections.Hashtable.Contains%2A>.</span><span class="sxs-lookup"><span data-stu-id="191bb-549">This method behaves exactly as <xref:System.Collections.Hashtable.Contains%2A>.</span></span>  
  
 <span data-ttu-id="191bb-550">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="191bb-550">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="191bb-551">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `item` pour déterminer l’existence d’un élément.</span><span class="sxs-lookup"><span data-stu-id="191bb-551">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="191bb-552">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="191bb-552">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-553">L’exemple suivant montre comment déterminer si le <xref:System.Collections.Hashtable> contient un élément spécifique.</span><span class="sxs-lookup"><span data-stu-id="191bb-553">The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.</span></span>  
  
 [!code-cpp[Classic Hashtable.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="191bb-554"><paramref name="key" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-554"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.Contains(System.Object)" />
        <altmember cref="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public virtual bool ContainsValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsValue (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ContainsValue : obj -&gt; bool&#xA;override this.ContainsValue : obj -&gt; bool" Usage="hashtable.ContainsValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="191bb-555">Valeur à trouver dans <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-555">The value to locate in the <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="191bb-556">La valeur peut être <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-556">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="191bb-557">Détermine si <see cref="T:System.Collections.Hashtable" /> contient une valeur spécifique.</span><span class="sxs-lookup"><span data-stu-id="191bb-557">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="191bb-558"><see langword="true" /> si <see cref="T:System.Collections.Hashtable" /> contient un élément avec le <paramref name="value" /> spécifié ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-558"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified <paramref name="value" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-559">Les valeurs des éléments de la <xref:System.Collections.Hashtable> sont comparées à la valeur spécifiée à l’aide de la <xref:System.Object.Equals%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="191bb-559">The values of the elements of the <xref:System.Collections.Hashtable> are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="191bb-560">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="191bb-560">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 <span data-ttu-id="191bb-561">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `item` pour déterminer l’existence d’un élément.</span><span class="sxs-lookup"><span data-stu-id="191bb-561">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="191bb-562">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="191bb-562">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-563">L’exemple suivant montre comment déterminer si le <xref:System.Collections.Hashtable> contient un élément spécifique.</span><span class="sxs-lookup"><span data-stu-id="191bb-563">The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.</span></span>  
  
 [!code-cpp[Classic Hashtable.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="hashtable.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="191bb-564"><see cref="T:System.Array" /> unidimensionnel qui constitue la destination des objets <see cref="T:System.Collections.DictionaryEntry" /> copiés à partir de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-564">The one-dimensional <see cref="T:System.Array" /> that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="191bb-565"><see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span><span class="sxs-lookup"><span data-stu-id="191bb-565">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="191bb-566">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</span><span class="sxs-lookup"><span data-stu-id="191bb-566">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="191bb-567">Copie les éléments <see cref="T:System.Collections.Hashtable" /> dans une instance de <see cref="T:System.Array" /> unidimensionnelle à l'index spécifié.</span><span class="sxs-lookup"><span data-stu-id="191bb-567">Copies the <see cref="T:System.Collections.Hashtable" /> elements to a one-dimensional <see cref="T:System.Array" /> instance at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-568">Les éléments sont copiés dans le <xref:System.Array> dans le même ordre que celui dans lequel l’énumérateur itère au sein du <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-568">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="191bb-569">Pour copier uniquement les clés dans le <xref:System.Collections.Hashtable>, utilisez `Hashtable.Keys.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="191bb-569">To copy only the keys in the <xref:System.Collections.Hashtable>, use `Hashtable.Keys.CopyTo`.</span></span>  
  
 <span data-ttu-id="191bb-570">Pour copier uniquement les valeurs dans le <xref:System.Collections.Hashtable>, utilisez `Hashtable.Values.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="191bb-570">To copy only the values in the <xref:System.Collections.Hashtable>, use `Hashtable.Values.CopyTo`.</span></span>  
  
 <span data-ttu-id="191bb-571">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="191bb-571">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-572">L’exemple suivant montre comment copier la liste des clés ou la liste des valeurs dans un <xref:System.Collections.Hashtable> dans une dimension <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="191bb-572">The following example shows how to copy the list of keys or the list of values in a <xref:System.Collections.Hashtable> into a one-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Hashtable.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="191bb-573"><paramref name="array" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-573"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="191bb-574"><paramref name="arrayIndex" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="191bb-574"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="191bb-575"><paramref name="array" /> est multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="191bb-575"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="191bb-576">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-576">-or-</span></span> 
<span data-ttu-id="191bb-577">Le nombre d’éléments dans le <see cref="T:System.Collections.Hashtable" /> source est supérieur à la quantité d’espace disponible entre <paramref name="arrayIndex" /> et la fin du <paramref name="array" /> de destination.</span><span class="sxs-lookup"><span data-stu-id="191bb-577">The number of elements in the source <see cref="T:System.Collections.Hashtable" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="191bb-578">Le type du <see cref="T:System.Collections.Hashtable" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</span><span class="sxs-lookup"><span data-stu-id="191bb-578">The type of the source <see cref="T:System.Collections.Hashtable" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.Hashtable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Hashtable.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="191bb-579">Obtient le nombre de paires clé/valeur contenues dans <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-579">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="191bb-580">Nombre de paires clé/valeur contenues dans <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-580">The number of key/value pairs contained in the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-581">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="191bb-581">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EqualityComparer">
      <MemberSignature Language="C#" Value="protected System.Collections.IEqualityComparer EqualityComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEqualityComparer EqualityComparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.EqualityComparer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property EqualityComparer As IEqualityComparer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IEqualityComparer ^ EqualityComparer { System::Collections::IEqualityComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EqualityComparer : System.Collections.IEqualityComparer" Usage="System.Collections.Hashtable.EqualityComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEqualityComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="191bb-582">Obtient le <see cref="T:System.Collections.IEqualityComparer" /> à utiliser pour <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-582">Gets the <see cref="T:System.Collections.IEqualityComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="191bb-583"><see cref="T:System.Collections.IEqualityComparer" /> à utiliser pour <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-583">The <see cref="T:System.Collections.IEqualityComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-584">Le <xref:System.Collections.IEqualityComparer> inclut le fournisseur de code de hachage et le comparateur.</span><span class="sxs-lookup"><span data-stu-id="191bb-584">The <xref:System.Collections.IEqualityComparer> includes both the comparer and the hash code provider.</span></span> <span data-ttu-id="191bb-585">Si un <xref:System.Collections.IEqualityComparer> est utilisé dans le <xref:System.Collections.Hashtable> constructeur, les objets utilisés en tant que clés dans le <xref:System.Collections.Hashtable> n’est pas nécessaire de substituer le <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> et <xref:System.Object.Equals%2A?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="191bb-585">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="191bb-586">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="191bb-586">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="191bb-587">La propriété a une valeur, mais la table de hachage a été créée à l'aide d'un <see cref="T:System.Collections.IHashCodeProvider" /> et d'un <see cref="T:System.Collections.IComparer" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-587">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IHashCodeProvider" /> and an <see cref="T:System.Collections.IComparer" />.</span></span></exception>
        <altmember cref="T:System.Collections.Comparer" />
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="hashtable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="191bb-588">Retourne un <see cref="T:System.Collections.IDictionaryEnumerator" /> qui itère au sein de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-588">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that iterates through the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <returns><span data-ttu-id="191bb-589"><see cref="T:System.Collections.IDictionaryEnumerator" /> pour <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-589">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Hashtable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-590">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="191bb-590">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="191bb-591">L'instruction `foreach` du langage C# (`for each` en Visual Basic) se charge de la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="191bb-591">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="191bb-592">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="191bb-592">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="191bb-593">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="191bb-593">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="191bb-594">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="191bb-594">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="191bb-595"><xref:System.Collections.IEnumerator.Reset%2A> replace également l'énumérateur à cette position.</span><span class="sxs-lookup"><span data-stu-id="191bb-595"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="191bb-596">À cette position, <xref:System.Collections.IEnumerator.Current%2A> n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="191bb-596">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="191bb-597">Par conséquent, vous devez appeler <xref:System.Collections.IEnumerator.MoveNext%2A> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="191bb-597">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="191bb-598"><xref:System.Collections.IEnumerator.Current%2A> retourne le même objet tant que <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> n'est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="191bb-598"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="191bb-599"><xref:System.Collections.IEnumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="191bb-599"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="191bb-600">Si <xref:System.Collections.IEnumerator.MoveNext%2A> passe à la fin de la collection, l’énumérateur est positionnée après le dernier élément dans la collection et <xref:System.Collections.IEnumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="191bb-600">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="191bb-601">Lorsque l’énumérateur se trouve à cette position, les appels suivants à <xref:System.Collections.IEnumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="191bb-601">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="191bb-602">Si le dernier appel à <xref:System.Collections.IEnumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.IEnumerator.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="191bb-602">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="191bb-603">Pour attribuer une nouvelle fois <xref:System.Collections.IEnumerator.Current%2A> au premier élément de la collection, vous pouvez appeler <xref:System.Collections.IEnumerator.Reset%2A> suivi de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="191bb-603">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="191bb-604">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="191bb-604">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="191bb-605">Si des modifications sont apportées à la collection, telles que l’ajout, la modification ou la suppression d’éléments, l’énumérateur est définitivement invalidé et son comportement n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="191bb-605">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="191bb-606">L’énumérateur ne dispose pas d’un accès exclusif à la collection. Par conséquent, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="191bb-606">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span>  <span data-ttu-id="191bb-607">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="191bb-607">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="191bb-608">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="191bb-608">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="191bb-609">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="191bb-609">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="191bb-610">Étant donné que la sérialisation et la désérialisation d’un énumérateur pour un <xref:System.Collections.Hashtable> peut provoquer les réorganisation des éléments, il n’est pas possible de continuer l’énumération sans appeler le <xref:System.Collections.IEnumerator.Reset%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="191bb-610">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-611">L’exemple suivant compare l’utilisation de <xref:System.Collections.Hashtable.GetEnumerator%2A> et `foreach` pour énumérer le contenu d’un <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-611">The following example compares the use of <xref:System.Collections.Hashtable.GetEnumerator%2A> and `foreach` to enumerate the contents of a <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Hashtable Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable Example/CS/source2.cs#2)]
 [!code-vb[Classic Hashtable Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable Example/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetHash">
      <MemberSignature Language="C#" Value="protected virtual int GetHash (object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 GetHash(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.GetHash(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetHash (key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int GetHash(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member GetHash : obj -&gt; int&#xA;override this.GetHash : obj -&gt; int" Usage="hashtable.GetHash key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="191bb-612"><see cref="T:System.Object" /> pour lequel un code de hachage doit être retourné.</span><span class="sxs-lookup"><span data-stu-id="191bb-612">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span></span></param>
        <summary><span data-ttu-id="191bb-613">Retourne le code de hachage pour la clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="191bb-613">Returns the hash code for the specified key.</span></span></summary>
        <returns><span data-ttu-id="191bb-614">Code de hachage pour <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-614">The hash code for <paramref name="key" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-615">Si la table de hachage a été créée avec un spécifique <xref:System.Collections.IHashCodeProvider> implémentation, cette méthode utilise ce fournisseur de code de hachage ; sinon, il utilise le <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> implémentation de `key`.</span><span class="sxs-lookup"><span data-stu-id="191bb-615">If the hash table was created with a specific <xref:System.Collections.IHashCodeProvider> implementation, this method uses that hash code provider; otherwise, it uses the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> implementation of `key`.</span></span>  
  
 <span data-ttu-id="191bb-616">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="191bb-616">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="191bb-617"><paramref name="key" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-617"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="hashtable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="191bb-618">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenant les informations nécessaires pour sérialiser <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-618">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <param name="context"><span data-ttu-id="191bb-619">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenant la source et la destination du flux sérialisé associé à <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-619">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="191bb-620">Implémente l'interface <see cref="T:System.Runtime.Serialization.ISerializable" /> et retourne les données requises pour sérialiser <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-620">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-621">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="191bb-621">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="191bb-622"><paramref name="info" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-622"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="191bb-623">La collection a été modifiée.</span><span class="sxs-lookup"><span data-stu-id="191bb-623">The collection was modified.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="191bb-624">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="191bb-624">requires full trust for the immediate caller.</span></span> <span data-ttu-id="191bb-625">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="191bb-625">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="hcp">
      <MemberSignature Language="C#" Value="protected System.Collections.IHashCodeProvider hcp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IHashCodeProvider hcp" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.hcp" />
      <MemberSignature Language="VB.NET" Value="Protected Property hcp As IHashCodeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IHashCodeProvider ^ hcp { System::Collections::IHashCodeProvider ^ get(); void set(System::Collections::IHashCodeProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.hcp : System.Collections.IHashCodeProvider with get, set" Usage="System.Collections.Hashtable.hcp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Please use EqualityComparer property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IHashCodeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="191bb-626">Obtient ou définit l'objet qui peut dispenser des codes de hachage.</span><span class="sxs-lookup"><span data-stu-id="191bb-626">Gets or sets the object that can dispense hash codes.</span></span></summary>
        <value><span data-ttu-id="191bb-627">Objet qui peut dispenser des codes de hachage.</span><span class="sxs-lookup"><span data-stu-id="191bb-627">The object that can dispense hash codes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-628">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="191bb-628">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="191bb-629">La propriété a une valeur, mais la table de hachage a été créée à l'aide d'un <see cref="T:System.Collections.IEqualityComparer" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-629">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IEqualityComparer" />.</span></span></exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.Hashtable.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="191bb-630">Obtient une valeur indiquant si <see cref="T:System.Collections.Hashtable" /> est de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="191bb-630">Gets a value indicating whether the <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="191bb-631"><see langword="true" /> si <see cref="T:System.Collections.Hashtable" /> est de taille fixe ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-631"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> has a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="191bb-632">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-632">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-633">Une collection de taille fixe ne permet pas l’ajout ou la suppression d’éléments après sa création, mais permet la modification des éléments existants.</span><span class="sxs-lookup"><span data-stu-id="191bb-633">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="191bb-634">Une collection avec une taille fixe est simplement une collection avec un wrapper qui empêche l’ajout et suppression d’éléments. Par conséquent, si des modifications sont apportées à la collection sous-jacente, y compris l’ajout ou la suppression d’éléments, la collection de taille fixe reflète ces modifications.</span><span class="sxs-lookup"><span data-stu-id="191bb-634">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="191bb-635">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="191bb-635">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.Hashtable.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="191bb-636">Obtient une valeur indiquant si <see cref="T:System.Collections.Hashtable" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="191bb-636">Gets a value indicating whether the <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="191bb-637"><see langword="true" /> si <see cref="T:System.Collections.Hashtable" /> est en lecture seule ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-637"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="191bb-638">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-638">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-639">Une collection en lecture seule n’autorise pas l’ajout, la suppression ou la modification d’éléments après sa création.</span><span class="sxs-lookup"><span data-stu-id="191bb-639">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="191bb-640">Une collection est en lecture seule est simplement une collection avec un wrapper qui empêche la modification de la collection ; Par conséquent, si des modifications sont apportées à la collection sous-jacente, la collection en lecture seule reflète ces modifications.</span><span class="sxs-lookup"><span data-stu-id="191bb-640">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="191bb-641">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="191bb-641">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.Hashtable.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="191bb-642">Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.Hashtable" /> est synchronisé (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="191bb-642">Gets a value indicating whether access to the <see cref="T:System.Collections.Hashtable" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="191bb-643"><see langword="true" /> si l'accès à <see cref="T:System.Collections.Hashtable" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-643"><see langword="true" /> if access to the <see cref="T:System.Collections.Hashtable" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="191bb-644">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-644">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-645">Un <xref:System.Collections.Hashtable> peut prendre en charge un writer et plusieurs lecteurs simultanément.</span><span class="sxs-lookup"><span data-stu-id="191bb-645">A <xref:System.Collections.Hashtable> can support one writer and multiple readers concurrently.</span></span> <span data-ttu-id="191bb-646">Pour prendre en charge plusieurs writers, toutes les opérations doivent être effectuées via le wrapper retourné par la <xref:System.Collections.Hashtable.Synchronized%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="191bb-646">To support multiple writers, all operations must be done through the wrapper returned by the <xref:System.Collections.Hashtable.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="191bb-647">L’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="191bb-647">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="191bb-648">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="191bb-648">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="191bb-649">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="191bb-649">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="191bb-650">L’exemple de code suivant montre comment verrouiller la collection en utilisant la <xref:System.Collections.Hashtable.SyncRoot%2A> pendant toute l’énumération :</span><span class="sxs-lookup"><span data-stu-id="191bb-650">The following code example shows how to lock the collection using the <xref:System.Collections.Hashtable.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/remarks.cs#2)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/remarks.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="191bb-651">L’exemple suivant montre comment synchroniser un <xref:System.Collections.Hashtable>, déterminer si un <xref:System.Collections.Hashtable> est synchronisé et utiliser une liste synchronisé <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-651">The following example shows how to synchronize a <xref:System.Collections.Hashtable>, determine if a <xref:System.Collections.Hashtable> is synchronized, and use a synchronized <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
        <altmember cref="P:System.Collections.Hashtable.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj with get, set" Usage="System.Collections.Hashtable.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="191bb-652">Clé dont la valeur doit être obtenue ou définie.</span><span class="sxs-lookup"><span data-stu-id="191bb-652">The key whose value to get or set.</span></span></param>
        <summary><span data-ttu-id="191bb-653">Obtient ou définit la valeur associée à la clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="191bb-653">Gets or sets the value associated with the specified key.</span></span></summary>
        <value><span data-ttu-id="191bb-654">Valeur associée à la clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="191bb-654">The value associated with the specified key.</span></span> <span data-ttu-id="191bb-655">Si la clé spécifiée est introuvable, la tentative d'obtention retourne <see langword="null" /> et la tentative de définition crée un nouvel élément avec la clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="191bb-655">If the specified key is not found, attempting to get it returns <see langword="null" />, and attempting to set it creates a new element using the specified key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-656">Cette propriété permet d’accéder à un élément spécifique de la collection à l’aide de la syntaxe suivante : `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="191bb-656">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="191bb-657">Vous pouvez également utiliser le <xref:System.Collections.Hashtable.Item%2A> propriété à ajouter de nouveaux éléments en définissant la valeur d’une clé qui n’existe pas dans le <xref:System.Collections.Hashtable>; par exemple, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="191bb-657">You can also use the <xref:System.Collections.Hashtable.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Hashtable>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="191bb-658">Toutefois, si la clé spécifiée existe déjà dans le <xref:System.Collections.Hashtable>, ce qui affecte le <xref:System.Collections.Hashtable.Item%2A> propriété remplace l’ancienne valeur.</span><span class="sxs-lookup"><span data-stu-id="191bb-658">However, if the specified key already exists in the <xref:System.Collections.Hashtable>, setting the <xref:System.Collections.Hashtable.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="191bb-659">En revanche, le <xref:System.Collections.Hashtable.Add%2A> méthode ne modifie pas les éléments existants.</span><span class="sxs-lookup"><span data-stu-id="191bb-659">In contrast, the <xref:System.Collections.Hashtable.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="191bb-660">Une clé ne peut pas être `null`, mais une valeur peut être.</span><span class="sxs-lookup"><span data-stu-id="191bb-660">A key cannot be `null`, but a value can be.</span></span> <span data-ttu-id="191bb-661">Faire la distinction entre `null` qui est retourné parce que la clé spécifiée est introuvable et `null` qui est retournée parce que la valeur de la clé spécifiée est `null`, utiliser le <xref:System.Collections.Hashtable.Contains%2A> méthode ou le <xref:System.Collections.Hashtable.ContainsKey%2A> méthode pour déterminer si la clé existe dans la liste.</span><span class="sxs-lookup"><span data-stu-id="191bb-661">To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.Hashtable.Contains%2A> method or the <xref:System.Collections.Hashtable.ContainsKey%2A> method to determine if the key exists in the list.</span></span>  
  
 <span data-ttu-id="191bb-662">Récupération de la valeur de cette propriété est une opération o (1) ; définition de la propriété est également une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="191bb-662">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 <span data-ttu-id="191bb-663">Le C# langue utilise le [ `this` ](~/docs/csharp/language-reference/keywords/this.md) mot clé pour définir les indexeurs au lieu d’implémenter la <xref:System.Collections.IList.Item%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="191bb-663">The C# language uses the [`this`](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.IList.Item%2A> property.</span></span> <span data-ttu-id="191bb-664">Visual Basic implémente <xref:System.Collections.Hashtable.Item%2A> comme propriété par défaut, ce qui fournit les mêmes fonctionnalités d'indexation.</span><span class="sxs-lookup"><span data-stu-id="191bb-664">Visual Basic implements <xref:System.Collections.Hashtable.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="191bb-665"><paramref name="key" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-665"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="191bb-666">La propriété est définie et <see cref="T:System.Collections.Hashtable" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="191bb-666">The property is set and the <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span>  
  
<span data-ttu-id="191bb-667">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-667">-or-</span></span> 
<span data-ttu-id="191bb-668">La propriété est définie, <paramref name="key" /> n’existe pas dans la collection et <see cref="T:System.Collections.Hashtable" /> a une taille fixe.</span><span class="sxs-lookup"><span data-stu-id="191bb-668">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="KeyEquals">
      <MemberSignature Language="C#" Value="protected virtual bool KeyEquals (object item, object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool KeyEquals(object item, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function KeyEquals (item As Object, key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool KeyEquals(System::Object ^ item, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member KeyEquals : obj * obj -&gt; bool&#xA;override this.KeyEquals : obj * obj -&gt; bool" Usage="hashtable.KeyEquals (item, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="191bb-669"><see cref="T:System.Object" /> à comparer à <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-669">The <see cref="T:System.Object" /> to compare with <paramref name="key" />.</span></span></param>
        <param name="key"><span data-ttu-id="191bb-670">Clé de <see cref="T:System.Collections.Hashtable" /> à comparer à <paramref name="item" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-670">The key in the <see cref="T:System.Collections.Hashtable" /> to compare with <paramref name="item" />.</span></span></param>
        <summary><span data-ttu-id="191bb-671">Compare un <see cref="T:System.Object" /> spécifique avec une clé spécifique dans <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-671">Compares a specific <see cref="T:System.Object" /> with a specific key in the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <returns><span data-ttu-id="191bb-672"><see langword="true" /> si <paramref name="item" /> et <paramref name="key" /> sont égales ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-672"><see langword="true" /> if <paramref name="item" /> and <paramref name="key" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-673">Si la table de hachage a été créée avec un spécifique <xref:System.Collections.IComparer> implémentation, cette méthode utilise ce comparateur ; c'est-à-dire, <xref:System.Collections.IComparer.Compare%2A> (`item`, `key`).</span><span class="sxs-lookup"><span data-stu-id="191bb-673">If the hash table was created with a specific <xref:System.Collections.IComparer> implementation, this method uses that comparer; that is, <xref:System.Collections.IComparer.Compare%2A> (`item`, `key`).</span></span> <span data-ttu-id="191bb-674">Sinon, il utilise `item.Equals(key)`.</span><span class="sxs-lookup"><span data-stu-id="191bb-674">Otherwise, it uses `item.Equals(key)`.</span></span>  
  
 <span data-ttu-id="191bb-675">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="191bb-675">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="191bb-676"><paramref name="item" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-676"><paramref name="item" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="191bb-677">- ou -</span><span class="sxs-lookup"><span data-stu-id="191bb-677">-or-</span></span> 
 <span data-ttu-id="191bb-678"><paramref name="key" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-678"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Collections.IComparer.Compare(System.Object,System.Object)" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Collections.Hashtable.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="191bb-679">Obtient <see cref="T:System.Collections.ICollection" /> contenant les clés de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-679">Gets an <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="191bb-680"><see cref="T:System.Collections.ICollection" /> contenant les clés de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-680">An <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-681">L’ordre des clés dans le <xref:System.Collections.ICollection> n’est pas spécifié, mais c’est le même ordre que les valeurs associées dans le <xref:System.Collections.ICollection> retourné par le <xref:System.Collections.Hashtable.Values%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="191bb-681">The order of the keys in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Hashtable.Values%2A> method.</span></span>  
  
 <span data-ttu-id="191bb-682">Retourné <xref:System.Collections.ICollection> n’est pas une copie statique ; au lieu de cela, le <xref:System.Collections.ICollection> fait référence aux clés dans la version d’origine <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-682">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="191bb-683">Par conséquent, remplace le <xref:System.Collections.Hashtable> continuent d’être répercutées dans le <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="191bb-683">Therefore, changes to the <xref:System.Collections.Hashtable> continue to be reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="191bb-684">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="191bb-684">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Hashtable.Values" />
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public virtual void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberSignature Language="F#" Value="abstract member OnDeserialization : obj -&gt; unit&#xA;override this.OnDeserialization : obj -&gt; unit" Usage="hashtable.OnDeserialization sender" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="191bb-685">Source de l’événement de désérialisation.</span><span class="sxs-lookup"><span data-stu-id="191bb-685">The source of the deserialization event.</span></span></param>
        <summary><span data-ttu-id="191bb-686">Implémente l’interface <see cref="T:System.Runtime.Serialization.ISerializable" /> et déclenche l’événement de désérialisation une fois la désérialisation terminée.</span><span class="sxs-lookup"><span data-stu-id="191bb-686">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-687">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="191bb-687">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 <span data-ttu-id="191bb-688">Étant donné que la sérialisation et la désérialisation d’un énumérateur pour un <xref:System.Collections.Hashtable> peut provoquer les réorganisation des éléments, il n’est pas possible de continuer l’énumération sans appeler le <xref:System.Collections.IEnumerator.Reset%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="191bb-688">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="191bb-689">L'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associé au <see cref="T:System.Collections.Hashtable" /> en cours n'est pas valide.</span><span class="sxs-lookup"><span data-stu-id="191bb-689">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Hashtable" /> is invalid.</span></span></exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="hashtable.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="191bb-690">Clé de l'élément à supprimer.</span><span class="sxs-lookup"><span data-stu-id="191bb-690">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="191bb-691">Supprime de <see cref="T:System.Collections.Hashtable" /> l'élément ayant la clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="191bb-691">Removes the element with the specified key from the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-692">Si le <xref:System.Collections.Hashtable> ne contient pas d’élément avec la clé spécifiée, le <xref:System.Collections.Hashtable> reste inchangé.</span><span class="sxs-lookup"><span data-stu-id="191bb-692">If the <xref:System.Collections.Hashtable> does not contain an element with the specified key, the <xref:System.Collections.Hashtable> remains unchanged.</span></span> <span data-ttu-id="191bb-693">Aucune exception n'est levée.</span><span class="sxs-lookup"><span data-stu-id="191bb-693">No exception is thrown.</span></span>  
  
 <span data-ttu-id="191bb-694">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="191bb-694">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-695">L’exemple suivant montre comment supprimer des éléments dans le <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-695">The following example shows how to remove elements from the <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="191bb-696"><paramref name="key" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-696"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="191bb-697"><see cref="T:System.Collections.Hashtable" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="191bb-697">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span>  
  
<span data-ttu-id="191bb-698">ou</span><span class="sxs-lookup"><span data-stu-id="191bb-698">-or-</span></span> 
<span data-ttu-id="191bb-699"><see cref="T:System.Collections.Hashtable" /> est de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="191bb-699">The <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.Hashtable Synchronized (System.Collections.Hashtable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Hashtable Synchronized(class System.Collections.Hashtable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (table As Hashtable) As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Hashtable ^ Synchronized(System::Collections::Hashtable ^ table);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.Hashtable -&gt; System.Collections.Hashtable" Usage="System.Collections.Hashtable.Synchronized table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="191bb-700"><see cref="T:System.Collections.Hashtable" /> à synchroniser.</span><span class="sxs-lookup"><span data-stu-id="191bb-700">The <see cref="T:System.Collections.Hashtable" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="191bb-701">Retourne un wrapper synchronisé (thread-safe) pour <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-701">Returns a synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <returns><span data-ttu-id="191bb-702">Wrapper synchronisé (thread-safe) pour <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-702">A synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.Hashtable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-703">Le <xref:System.Collections.Hashtable.Synchronized%2A> méthode est thread-safe pour plusieurs lecteurs et writers.</span><span class="sxs-lookup"><span data-stu-id="191bb-703">The <xref:System.Collections.Hashtable.Synchronized%2A> method is thread safe for multiple readers and writers.</span></span> <span data-ttu-id="191bb-704">En outre, le wrapper synchronisé garantit qu’il y a qu’un seul writer écrit à la fois.</span><span class="sxs-lookup"><span data-stu-id="191bb-704">Furthermore, the synchronized wrapper ensures that there is only one writer writing at a time.</span></span>  
  
 <span data-ttu-id="191bb-705">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="191bb-705">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="191bb-706">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="191bb-706">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="191bb-707">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="191bb-707">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="191bb-708">L’exemple de code suivant montre comment verrouiller la collection en utilisant la <xref:System.Collections.Hashtable.SyncRoot%2A> pendant toute l’énumération :</span><span class="sxs-lookup"><span data-stu-id="191bb-708">The following code example shows how to lock the collection using the <xref:System.Collections.Hashtable.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/remarks.cs#2)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/remarks.vb#2)]  
  
 <span data-ttu-id="191bb-709">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="191bb-709">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191bb-710">L’exemple suivant montre comment synchroniser un <xref:System.Collections.Hashtable>, déterminer si un <xref:System.Collections.Hashtable> est synchronisé et utiliser une liste synchronisé <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-710">The following example shows how to synchronize a <xref:System.Collections.Hashtable>, determine if a <xref:System.Collections.Hashtable> is synchronized, and use a synchronized <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="191bb-711"><paramref name="table" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-711"><paramref name="table" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.Hashtable.IsSynchronized" />
        <altmember cref="P:System.Collections.Hashtable.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.Hashtable.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="191bb-712">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-712">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="191bb-713">Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-713">An object that can be used to synchronize access to the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-714">Pour créer une version synchronisée de la <xref:System.Collections.Hashtable>, utilisez le <xref:System.Collections.Hashtable.Synchronized%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="191bb-714">To create a synchronized version of the <xref:System.Collections.Hashtable>, use the <xref:System.Collections.Hashtable.Synchronized%2A> method.</span></span> <span data-ttu-id="191bb-715">Toutefois, les classes dérivées peuvent fournir leur propre version synchronisée de la <xref:System.Collections.Hashtable> à l’aide de la <xref:System.Collections.Hashtable.SyncRoot%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="191bb-715">However, derived classes can provide their own synchronized version of the <xref:System.Collections.Hashtable> using the <xref:System.Collections.Hashtable.SyncRoot%2A> property.</span></span> <span data-ttu-id="191bb-716">Le code de synchronisation doit effectuer les opérations sur le <xref:System.Collections.Hashtable.SyncRoot%2A> de la <xref:System.Collections.Hashtable>, et non directement sur le <xref:System.Collections.Hashtable> .</span><span class="sxs-lookup"><span data-stu-id="191bb-716">The synchronizing code must perform operations on the <xref:System.Collections.Hashtable.SyncRoot%2A> of the <xref:System.Collections.Hashtable>, not directly on the <xref:System.Collections.Hashtable> .</span></span> <span data-ttu-id="191bb-717">Cela garantit un bon fonctionnement des collections dérivées d’autres objets.</span><span class="sxs-lookup"><span data-stu-id="191bb-717">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="191bb-718">Plus précisément, il maintient une synchronisation correcte avec les autres threads qui pourraient modifier simultanément les <xref:System.Collections.Hashtable> objet.</span><span class="sxs-lookup"><span data-stu-id="191bb-718">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Hashtable> object.</span></span>  
  
 <span data-ttu-id="191bb-719">L’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="191bb-719">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="191bb-720">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="191bb-720">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="191bb-721">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="191bb-721">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="191bb-722">L’exemple de code suivant montre comment verrouiller la collection en utilisant la <xref:System.Collections.Hashtable.SyncRoot%2A> pendant toute l’énumération :</span><span class="sxs-lookup"><span data-stu-id="191bb-722">The following code example shows how to lock the collection using the <xref:System.Collections.Hashtable.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/remarks.cs#2)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/remarks.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Hashtable.IsSynchronized" />
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="191bb-723">Retourne un énumérateur qui itère au sein d’une collection.</span><span class="sxs-lookup"><span data-stu-id="191bb-723">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="191bb-724"><see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein de la collection.</span><span class="sxs-lookup"><span data-stu-id="191bb-724">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-725">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="191bb-725">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="191bb-726">L'instruction `foreach` du langage C# (`for each` en Visual Basic) se charge de la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="191bb-726">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="191bb-727">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="191bb-727">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="191bb-728">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="191bb-728">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="191bb-729">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="191bb-729">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="191bb-730"><xref:System.Collections.IEnumerator.Reset%2A> replace également l'énumérateur à cette position.</span><span class="sxs-lookup"><span data-stu-id="191bb-730"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="191bb-731">À cette position, l’appel <xref:System.Collections.IEnumerator.Current%2A> lève une exception.</span><span class="sxs-lookup"><span data-stu-id="191bb-731">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="191bb-732">Par conséquent, vous devez appeler <xref:System.Collections.IEnumerator.MoveNext%2A> pour avancer l’énumérateur jusqu’au premier élément de la collection avant de lire la valeur de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="191bb-732">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="191bb-733"><xref:System.Collections.IEnumerator.Current%2A> retourne le même objet tant que <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> n'est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="191bb-733"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="191bb-734"><xref:System.Collections.IEnumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="191bb-734"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="191bb-735">Si <xref:System.Collections.IEnumerator.MoveNext%2A> passe à la fin de la collection, l’énumérateur est positionnée après le dernier élément dans la collection et <xref:System.Collections.IEnumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="191bb-735">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="191bb-736">Lorsque l’énumérateur se trouve à cette position, les appels suivants à <xref:System.Collections.IEnumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="191bb-736">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="191bb-737">Si le dernier appel à <xref:System.Collections.IEnumerator.MoveNext%2A> retourné `false`, l’appel <xref:System.Collections.IEnumerator.Current%2A> lève une exception.</span><span class="sxs-lookup"><span data-stu-id="191bb-737">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="191bb-738">Pour attribuer une nouvelle fois <xref:System.Collections.IEnumerator.Current%2A> au premier élément de la collection, vous pouvez appeler <xref:System.Collections.IEnumerator.Reset%2A> suivi de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="191bb-738">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="191bb-739">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="191bb-739">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="191bb-740">Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou suppression d’éléments, l’énumérateur peut être invalidé et l’appel suivant à <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="191bb-740">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator can be invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="191bb-741">Si la collection est modifiée entre <xref:System.Collections.IEnumerator.MoveNext%2A> et <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> retourne l’élément auquel il est attribué, même si l’énumérateur est déjà invalidé.</span><span class="sxs-lookup"><span data-stu-id="191bb-741">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="191bb-742">L’énumérateur ne dispose pas d’un accès exclusif à la collection. Par conséquent, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="191bb-742">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="191bb-743">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="191bb-743">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="191bb-744">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="191bb-744">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="191bb-745">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="191bb-745">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Values" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.ICollection" Usage="System.Collections.Hashtable.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="191bb-746">Obtient <see cref="T:System.Collections.ICollection" /> contenant les valeurs de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-746">Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="191bb-747"><see cref="T:System.Collections.ICollection" /> contenant les valeurs de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="191bb-747">An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191bb-748">L’ordre des valeurs dans le <xref:System.Collections.ICollection> n’est pas spécifié, mais c’est le même ordre que les clés associées dans le <xref:System.Collections.ICollection> retourné par le <xref:System.Collections.Hashtable.Keys%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="191bb-748">The order of the values in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Hashtable.Keys%2A> method.</span></span>  
  
 <span data-ttu-id="191bb-749">Retourné <xref:System.Collections.ICollection> n’est pas une copie statique ; au lieu de cela, le <xref:System.Collections.ICollection> fait référence aux valeurs d’origine <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="191bb-749">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="191bb-750">Par conséquent, remplace le <xref:System.Collections.Hashtable> continuent d’être répercutées dans le <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="191bb-750">Therefore, changes to the <xref:System.Collections.Hashtable> continue to be reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="191bb-751">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="191bb-751">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Hashtable.Keys" />
      </Docs>
    </Member>
  </Members>
</Type>