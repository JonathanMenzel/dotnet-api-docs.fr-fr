<Type Name="SortedList" FullName="System.Collections.SortedList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="662ef7c5fa1e67929e659c9b3e4741d5b2100db0" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58700834" /></Metadata><TypeSignature Language="C#" Value="public class SortedList : ICloneable, System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SortedList extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.SortedList" />
  <TypeSignature Language="VB.NET" Value="Public Class SortedList&#xA;Implements ICloneable, IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortedList : ICloneable, System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type SortedList = class&#xA;    interface IDictionary&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.SortedList/SortedListDebugView))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ab1a5-101">Représente une collection de paires clé/valeur triées par les clés et accessible par clé et par index.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-101">Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="ab1a5-102">Un <xref:System.Collections.SortedList> est accessible par sa clé, comme un élément dans un élément <xref:System.Collections.IDictionary> implémentation, ou par son index, comme un élément de <xref:System.Collections.IList> implémentation.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-102">A <xref:System.Collections.SortedList> element can be accessed by its key, like an element in any <xref:System.Collections.IDictionary> implementation, or by its index, like an element in any <xref:System.Collections.IList> implementation.</span></span>  

> [!IMPORTANT]
> <span data-ttu-id="ab1a5-103">Nous ne vous recommandons d’utiliser la `SortedList` classe pour tout nouveau développement.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-103">We don't recommend that you use the `SortedList` class for new development.</span></span> <span data-ttu-id="ab1a5-104">Au lieu de cela, nous vous recommandons d’utiliser le modèle générique <xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-104">Instead, we recommend that you use the generic <xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="ab1a5-105">Pour plus d’informations, consultez [les collections Non génériques ne doit pas être utilisées](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) sur GitHub.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-105">For more information, see [Non-generic collections shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) on GitHub.</span></span>

 <span data-ttu-id="ab1a5-106">Un <xref:System.Collections.SortedList> objet conserve en interne les deux tableaux pour stocker les éléments de la liste ; autrement dit, un tableau pour les clés et un autre tableau de valeurs associées.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-106">A <xref:System.Collections.SortedList> object internally maintains two arrays to store the elements of the list; that is, one array for the keys and another array for the associated values.</span></span> <span data-ttu-id="ab1a5-107">Chaque élément est une paire clé/valeur qui est accessible en tant qu’un <xref:System.Collections.DictionaryEntry> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-107">Each element is a key/value pair that can be accessed as a <xref:System.Collections.DictionaryEntry> object.</span></span> <span data-ttu-id="ab1a5-108">Une clé ne peut pas être `null`, mais une valeur peut être.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-108">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="ab1a5-109">La capacité d’un <xref:System.Collections.SortedList> objet est le nombre d’éléments du <xref:System.Collections.SortedList> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-109">The capacity of a <xref:System.Collections.SortedList> object is the number of elements the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="ab1a5-110">Comme les éléments sont ajoutés à un <xref:System.Collections.SortedList>, la capacité est automatiquement augmentée par réallocation.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-110">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="ab1a5-111">La capacité peut être diminuée en appelant <xref:System.Collections.SortedList.TrimToSize%2A> ou en définissant le <xref:System.Collections.SortedList.Capacity%2A> propriété explicitement.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-111">The capacity can be decreased by calling <xref:System.Collections.SortedList.TrimToSize%2A> or by setting the <xref:System.Collections.SortedList.Capacity%2A> property explicitly.</span></span>  
  
 <span data-ttu-id="ab1a5-112">**.NET framework :** Pour très volumineux <xref:System.Collections.SortedList> objets, vous pouvez augmenter la capacité maximale à 2 milliards des éléments sur un système 64 bits en définissant le `enabled` attribut de la [ `<gcAllowVeryLargeObjects>` ](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) élément de configuration `true` dans le environnement d’exécution.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-112">**.NET Framework only:** For very large <xref:System.Collections.SortedList> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="ab1a5-113">Les éléments d’un <xref:System.Collections.SortedList> objet sont triées par les clés soit selon un spécifique <xref:System.Collections.IComparer> implémentation spécifié lorsque le <xref:System.Collections.SortedList> est créé ou conformément au <xref:System.IComparable> implémentation fournie par les clés elles-mêmes.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-113">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span> <span data-ttu-id="ab1a5-114">Dans les deux cas, un <xref:System.Collections.SortedList> n’autorise pas les clés en double.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-114">In either case, a <xref:System.Collections.SortedList> does not allow duplicate keys.</span></span>  
  
 <span data-ttu-id="ab1a5-115">La séquence d’index est basée sur l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-115">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="ab1a5-116">Lorsqu’un élément est ajouté, il est inséré dans <xref:System.Collections.SortedList> dans le tri correct ordre et l’indexation s’ajuste en conséquence.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-116">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="ab1a5-117">Lorsqu’un élément est supprimé, l’indexation s’adapte également en conséquence.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-117">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="ab1a5-118">Par conséquent, l’index d’une paire clé/valeur spécifique peut changer que les éléments sont ajoutés ou supprimés à partir de la <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-118">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="ab1a5-119">Opérations sur un <xref:System.Collections.SortedList> objet ont tendance à être plus lentes que les opérations sur un <xref:System.Collections.Hashtable> objet en raison du tri.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-119">Operations on a <xref:System.Collections.SortedList> object tend to be slower than operations on a <xref:System.Collections.Hashtable> object because of the sorting.</span></span> <span data-ttu-id="ab1a5-120">Toutefois, le <xref:System.Collections.SortedList> offre davantage de souplesse en autorisant l’accès aux valeurs via les clés associées ou les index.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-120">However, the <xref:System.Collections.SortedList> offers more flexibility by allowing access to the values either through the associated keys or through the indexes.</span></span>  
  
 <span data-ttu-id="ab1a5-121">Éléments de cette collection est accessible à l’aide d’un index d’entiers.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-121">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="ab1a5-122">Index de cette collection sont de base zéro.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-122">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="ab1a5-123">Le `foreach` instruction du langage C# (`for each` en Visual Basic) retourne un objet du type des éléments dans la collection.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-123">The `foreach` statement of the C# language (`for each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="ab1a5-124">Étant donné que chaque élément de la <xref:System.Collections.SortedList> objet est une paire clé/valeur, le type d’élément n’est pas le type de la clé ou le type de la valeur.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-124">Since each element of the <xref:System.Collections.SortedList> object is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="ab1a5-125">Au lieu de cela, le type d’élément est <xref:System.Collections.DictionaryEntry>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-125">Rather, the element type is <xref:System.Collections.DictionaryEntry>.</span></span> <span data-ttu-id="ab1a5-126">Par exemple :</span><span class="sxs-lookup"><span data-stu-id="ab1a5-126">For example:</span></span>  
  
 [!code-cpp[Classic SortedList Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic SortedList Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList Example/CS/remarks.cs#2)]
 [!code-vb[Classic SortedList Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList Example/VB/remarks.vb#2)]  
  
 <span data-ttu-id="ab1a5-127">La `foreach` instruction est un wrapper autour de l’énumérateur, qui permet la lecture à partir n’écrit ne pas à la collection.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-127">The `foreach` statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-128">L’exemple de code suivant montre comment créer et initialiser un <xref:System.Collections.SortedList> objet et comment imprimer ses clés et valeurs.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-128">The following code example shows how to create and initialize a <xref:System.Collections.SortedList> object and how to print out its keys and values.</span></span>  
  
 [!code-cpp[Classic SortedList Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="ab1a5-129">Statique public (<see langword="Shared" /> en Visual Basic) de ce type sont thread-safe.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-129">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="ab1a5-130">Il n'est pas garanti que les membres d'instance soient thread-safe.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-130">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="ab1a5-131">Un <see cref="T:System.Collections.SortedList" /> objet peut prendre en charge simultanément, plusieurs lecteurs, que la collection n’est pas modifiée.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-131">A <see cref="T:System.Collections.SortedList" /> object can support multiple readers concurrently, as long as the collection is not modified.</span></span> <span data-ttu-id="ab1a5-132">Pour garantir la sécurité des threads de la <see cref="T:System.Collections.SortedList" />, toutes les opérations doivent être effectuées via le wrapper retourné par la <see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-132">To guarantee the thread safety of the <see cref="T:System.Collections.SortedList" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /> method.</span></span>  
  
<span data-ttu-id="ab1a5-133">L'énumération d'une collection n'est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-133">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="ab1a5-134">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-134">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="ab1a5-135">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-135">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.IComparer" />
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.Generic.SortedList`2" />
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="ab1a5-136">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span><span class="sxs-lookup"><span data-stu-id="ab1a5-136">Performing Culture-Insensitive String Operations in Collections</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ab1a5-137">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-137">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ab1a5-138">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui est vide, possède la capacité initiale par défaut et est triée suivant l'interface <see cref="T:System.IComparable" /> implémentée par chaque clé ajoutée à l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-138">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the default initial capacity, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key added to the <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-139">Chaque clé doit implémenter le <xref:System.IComparable> interface soit faire des comparaisons avec toutes les autres clés dans le <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-139">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="ab1a5-140">Les éléments sont triés en fonction de la <xref:System.IComparable> implémentation de chaque clé ajoutée à la <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-140">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="ab1a5-141">La capacité d’un <xref:System.Collections.SortedList> objet est le nombre d’éléments qui le <xref:System.Collections.SortedList> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-141">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="ab1a5-142">Comme les éléments sont ajoutés à un <xref:System.Collections.SortedList>, la capacité est augmentée automatiquement selon les besoins en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-142">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="ab1a5-143">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-143">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="ab1a5-144">Ce constructeur est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-144">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-145">L’exemple de code suivant crée des collections à l’aide de différents <xref:System.Collections.SortedList> constructeurs et illustre les différences de comportement entre les collections.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-145">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CPP/sortedlist_ctor.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CS/sortedlist_ctor.cs#1)]
 [!code-vb[System.Collections.SortedList_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/VB/sortedlist_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="ab1a5-146">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span><span class="sxs-lookup"><span data-stu-id="ab1a5-146">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : System.Collections.IComparer -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="ab1a5-147">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser lors de la comparaison de clés.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-147">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span></span>  
  
<span data-ttu-id="ab1a5-148">ou</span><span class="sxs-lookup"><span data-stu-id="ab1a5-148">-or-</span></span> 
 <span data-ttu-id="ab1a5-149"><see langword="null" /> pour utiliser l'implémentation de <see cref="T:System.IComparable" /> de chaque clé.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-149"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span></span></param>
        <summary><span data-ttu-id="ab1a5-150">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui est vide, possède la capacité initiale par défaut et est triée suivant l'interface <see cref="T:System.Collections.IComparer" /> spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-150">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the default initial capacity, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-151">Les éléments sont triés selon le <xref:System.Collections.IComparer> implémentation.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-151">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="ab1a5-152">Si le `comparer` paramètre est `null`, le <xref:System.IComparable> implémentation de chaque clé est utilisée ; par conséquent, chaque clé doit implémenter le <xref:System.IComparable> interface soit faire des comparaisons avec toutes les autres clés dans le <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-152">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="ab1a5-153">La capacité d’un <xref:System.Collections.SortedList> objet est le nombre d’éléments qui le <xref:System.Collections.SortedList> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-153">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="ab1a5-154">Comme les éléments sont ajoutés à un <xref:System.Collections.SortedList>, la capacité est augmentée automatiquement selon les besoins en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-154">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="ab1a5-155">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-155">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="ab1a5-156">Ce constructeur est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-156">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-157">L’exemple de code suivant crée des collections à l’aide de différents <xref:System.Collections.SortedList> constructeurs et illustre les différences de comportement entre les collections.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-157">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CPP/sortedlist_ctor.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CS/sortedlist_ctor.cs#1)]
 [!code-vb[System.Collections.SortedList_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/VB/sortedlist_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="ab1a5-158">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span><span class="sxs-lookup"><span data-stu-id="ab1a5-158">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IDictionary ^ d);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : System.Collections.IDictionary -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList d" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="ab1a5-159">Implémentation de <see cref="T:System.Collections.IDictionary" /> à copier vers un nouvel objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-159">The <see cref="T:System.Collections.IDictionary" /> implementation to copy to a new <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="ab1a5-160">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui contient des éléments copiés à partir du dictionnaire spécifié, possède la capacité initiale correspondant au nombre d'éléments copiés et est triée suivant l'interface <see cref="T:System.IComparable" /> implémentée par chaque clé.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-160">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-161">Chaque clé doit implémenter le <xref:System.IComparable> interface soit faire des comparaisons avec toutes les autres clés dans le <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-161">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="ab1a5-162">Les éléments sont triés en fonction de la <xref:System.IComparable> implémentation de chaque clé ajoutée à la <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-162">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="ab1a5-163">Un <xref:System.Collections.Hashtable> objet est un exemple d’un <xref:System.Collections.IDictionary> implémentation qui peut être passée à ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-163">A <xref:System.Collections.Hashtable> object is an example of an <xref:System.Collections.IDictionary> implementation that can be passed to this constructor.</span></span> <span data-ttu-id="ab1a5-164">La nouvelle <xref:System.Collections.SortedList> objet contient une copie des clés et valeurs stockées dans le <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-164">The new <xref:System.Collections.SortedList> object contains a copy of the keys and values stored in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="ab1a5-165">La capacité d’un <xref:System.Collections.SortedList> objet est le nombre d’éléments qui le <xref:System.Collections.SortedList> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-165">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="ab1a5-166">Comme les éléments sont ajoutés à un <xref:System.Collections.SortedList>, la capacité est augmentée automatiquement selon les besoins en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-166">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="ab1a5-167">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-167">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="ab1a5-168">Ce constructeur est un O (`n`) opération, où `n` est le nombre d’éléments dans `d`.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-168">This constructor is an O(`n`) operation, where `n` is the number of elements in `d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-169">L’exemple de code suivant crée des collections à l’aide de différents <xref:System.Collections.SortedList> constructeurs et illustre les différences de comportement entre les collections.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-169">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CPP/sortedlist_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CS/sortedlist_ctordictionary.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/VB/sortedlist_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab1a5-170"><paramref name="d" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-170"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ab1a5-171">Un ou plusieurs éléments de <paramref name="d" /> n'implémentent pas l'interface <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-171">One or more elements in <paramref name="d" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="ab1a5-172">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span><span class="sxs-lookup"><span data-stu-id="ab1a5-172">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(int initialCapacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : int -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList initialCapacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCapacity"><span data-ttu-id="ab1a5-173">Nombre initial d'éléments que l'objet <see cref="T:System.Collections.SortedList" /> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-173">The initial number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span></span></param>
        <summary><span data-ttu-id="ab1a5-174">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui est vide, possède la capacité initiale spécifiée et est triée suivant l'interface <see cref="T:System.IComparable" /> implémentée par chaque clé ajoutée à l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-174">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the specified initial capacity, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key added to the <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-175">Chaque clé doit implémenter le <xref:System.IComparable> interface soit faire des comparaisons avec toutes les autres clés dans le <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-175">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="ab1a5-176">Les éléments sont triés en fonction de la <xref:System.IComparable> implémentation de chaque clé ajoutée à la <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-176">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="ab1a5-177">La capacité d’un <xref:System.Collections.SortedList> objet est le nombre d’éléments qui le <xref:System.Collections.SortedList> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-177">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="ab1a5-178">Comme les éléments sont ajoutés à un <xref:System.Collections.SortedList>, la capacité est augmentée automatiquement selon les besoins en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-178">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="ab1a5-179">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-179">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="ab1a5-180">Ce constructeur est un O (`n`) opération, où `n` est `initialCapacity`.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-180">This constructor is an O(`n`) operation, where `n` is `initialCapacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-181">L’exemple de code suivant crée des collections à l’aide de différents <xref:System.Collections.SortedList> constructeurs et illustre les différences de comportement entre les collections.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-181">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CPP/sortedlist_ctorint.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CS/sortedlist_ctorint.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/VB/sortedlist_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ab1a5-182"><paramref name="initialCapacity" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-182"><paramref name="initialCapacity" /> is less than zero.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ab1a5-183">La mémoire disponible est insuffisante pour créer un objet <see cref="T:System.Collections.SortedList" /> avec le <paramref name="initialCapacity" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-183">There is not enough available memory to create a <see cref="T:System.Collections.SortedList" /> object with the specified <paramref name="initialCapacity" />.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="ab1a5-184">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span><span class="sxs-lookup"><span data-stu-id="ab1a5-184">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IComparer comparer, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer, capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IComparer ^ comparer, int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : System.Collections.IComparer * int -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList (comparer, capacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="ab1a5-185">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser lors de la comparaison de clés.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-185">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span></span>  
  
<span data-ttu-id="ab1a5-186">ou</span><span class="sxs-lookup"><span data-stu-id="ab1a5-186">-or-</span></span> 
 <span data-ttu-id="ab1a5-187"><see langword="null" /> pour utiliser l'implémentation de <see cref="T:System.IComparable" /> de chaque clé.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-187"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span></span></param>
        <param name="capacity"><span data-ttu-id="ab1a5-188">Nombre initial d'éléments que l'objet <see cref="T:System.Collections.SortedList" /> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-188">The initial number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span></span></param>
        <summary><span data-ttu-id="ab1a5-189">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui est vide, possède la capacité initiale spécifiée et est triée suivant l'interface <see cref="T:System.Collections.IComparer" /> spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-189">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the specified initial capacity, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-190">Les éléments sont triés selon le <xref:System.Collections.IComparer> implémentation.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-190">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="ab1a5-191">Si le `comparer` paramètre est `null`, le <xref:System.IComparable> implémentation de chaque clé est utilisée ; par conséquent, chaque clé doit implémenter le <xref:System.IComparable> interface soit faire des comparaisons avec toutes les autres clés dans le <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-191">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="ab1a5-192">La capacité d’un <xref:System.Collections.SortedList> objet est le nombre d’éléments qui le <xref:System.Collections.SortedList> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-192">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="ab1a5-193">Comme les éléments sont ajoutés à un <xref:System.Collections.SortedList>, la capacité est augmentée automatiquement selon les besoins en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-193">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="ab1a5-194">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-194">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="ab1a5-195">Ce constructeur est un O (`n`) opération, où `n` est `capacity`.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-195">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-196">L’exemple de code suivant crée des collections à l’aide de différents <xref:System.Collections.SortedList> constructeurs et illustre les différences de comportement entre les collections.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-196">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CPP/sortedlist_ctorint.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CS/sortedlist_ctorint.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/VB/sortedlist_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ab1a5-197"><paramref name="capacity" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-197"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ab1a5-198">La mémoire disponible est insuffisante pour créer un objet <see cref="T:System.Collections.SortedList" /> avec le <paramref name="capacity" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-198">There is not enough available memory to create a <see cref="T:System.Collections.SortedList" /> object with the specified <paramref name="capacity" />.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="ab1a5-199">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span><span class="sxs-lookup"><span data-stu-id="ab1a5-199">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IDictionary d, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IDictionary ^ d, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : System.Collections.IDictionary * System.Collections.IComparer -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList (d, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="ab1a5-200">Implémentation de <see cref="T:System.Collections.IDictionary" /> à copier vers un nouvel objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-200">The <see cref="T:System.Collections.IDictionary" /> implementation to copy to a new <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <param name="comparer"><span data-ttu-id="ab1a5-201">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser lors de la comparaison de clés.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-201">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span></span>  
  
<span data-ttu-id="ab1a5-202">ou</span><span class="sxs-lookup"><span data-stu-id="ab1a5-202">-or-</span></span> 
 <span data-ttu-id="ab1a5-203"><see langword="null" /> pour utiliser l'implémentation de <see cref="T:System.IComparable" /> de chaque clé.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-203"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span></span></param>
        <summary><span data-ttu-id="ab1a5-204">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui contient des éléments copiés à partir du dictionnaire spécifié, possède la capacité initiale correspondant au nombre d'éléments copiés et est triée suivant l'interface <see cref="T:System.Collections.IComparer" /> spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-204">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-205">Les éléments sont triés selon le <xref:System.Collections.IComparer> implémentation.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-205">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="ab1a5-206">Si le `comparer` paramètre est `null`, le <xref:System.IComparable> implémentation de chaque clé est utilisée ; par conséquent, chaque clé doit implémenter le <xref:System.IComparable> interface soit faire des comparaisons avec toutes les autres clés dans le <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-206">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="ab1a5-207">Un <xref:System.Collections.Hashtable> objet est un exemple d’un <xref:System.Collections.IDictionary> implémentation qui peut être passée à ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-207">A <xref:System.Collections.Hashtable> object is an example of an <xref:System.Collections.IDictionary> implementation that can be passed to this constructor.</span></span> <span data-ttu-id="ab1a5-208">La nouvelle <xref:System.Collections.SortedList> objet contient une copie des clés et valeurs stockées dans le <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-208">The new <xref:System.Collections.SortedList> object contains a copy of the keys and values stored in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="ab1a5-209">La capacité d’un <xref:System.Collections.SortedList> objet est le nombre d’éléments qui le <xref:System.Collections.SortedList> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-209">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="ab1a5-210">Comme les éléments sont ajoutés à un <xref:System.Collections.SortedList>, la capacité est augmentée automatiquement selon les besoins en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-210">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="ab1a5-211">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-211">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="ab1a5-212">Ce constructeur est un O (`n`) opération, où `n` est le nombre d’éléments dans `d`.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-212">This constructor is an O(`n`) operation, where `n` is the number of elements in `d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-213">L’exemple de code suivant crée des collections à l’aide de différents <xref:System.Collections.SortedList> constructeurs et illustre les différences de comportement entre les collections.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-213">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CPP/sortedlist_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CS/sortedlist_ctordictionary.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/VB/sortedlist_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab1a5-214"><paramref name="d" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-214"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ab1a5-215"><paramref name="comparer" /> est <see langword="null" /> et un ou plusieurs éléments de <paramref name="d" /> n'implémentent pas l'interface <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-215"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="d" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="ab1a5-216">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span><span class="sxs-lookup"><span data-stu-id="ab1a5-216">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj -&gt; unit&#xA;override this.Add : obj * obj -&gt; unit" Usage="sortedList.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ab1a5-217">Clé de l'élément à ajouter.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-217">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="ab1a5-218">Valeur de l'élément à ajouter.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-218">The value of the element to add.</span></span> <span data-ttu-id="ab1a5-219">La valeur peut être <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-219">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ab1a5-220">Ajoute un élément avec la clé et la valeur spécifiées dans un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-220">Adds an element with the specified key and value to a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-221">Le point d’insertion est déterminé en fonction du comparateur sélectionné, explicitement ou par défaut, lorsque le <xref:System.Collections.SortedList> objet a été créé.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-221">The insertion point is determined based on the comparer selected, either explicitly or by default, when the <xref:System.Collections.SortedList> object was created.</span></span>  
  
 <span data-ttu-id="ab1a5-222">Si <xref:System.Collections.SortedList.Count%2A> est déjà égale à <xref:System.Collections.SortedList.Capacity%2A>, la capacité de la <xref:System.Collections.SortedList> objet est augmenté en réallouant automatiquement le tableau interne, et les éléments existants sont copiés vers le nouveau tableau avant le nouvel élément est ajouté.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-222">If <xref:System.Collections.SortedList.Count%2A> already equals <xref:System.Collections.SortedList.Capacity%2A>, the capacity of the <xref:System.Collections.SortedList> object is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="ab1a5-223">Vous pouvez également utiliser le <xref:System.Collections.SortedList.Item%2A> propriété à ajouter de nouveaux éléments en définissant la valeur d’une clé qui n’existe pas dans le <xref:System.Collections.SortedList> objet (par exemple, `myCollection["myNonexistentKey"] = myValue`).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-223">You can also use the <xref:System.Collections.SortedList.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.SortedList> object (for example, `myCollection["myNonexistentKey"] = myValue`).</span></span> <span data-ttu-id="ab1a5-224">Toutefois, si la clé spécifiée existe déjà dans le <xref:System.Collections.SortedList>, ce qui affecte le <xref:System.Collections.SortedList.Item%2A> propriété remplace l’ancienne valeur.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-224">However, if the specified key already exists in the <xref:System.Collections.SortedList>, setting the <xref:System.Collections.SortedList.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="ab1a5-225">En revanche, le <xref:System.Collections.SortedList.Add%2A> méthode ne modifie pas les éléments existants.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-225">In contrast, the <xref:System.Collections.SortedList.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="ab1a5-226">Les éléments d’un <xref:System.Collections.SortedList> objet sont triées par les clés soit selon un spécifique <xref:System.Collections.IComparer> implémentation spécifié lorsque le <xref:System.Collections.SortedList> est créé ou conformément au <xref:System.IComparable> implémentation fournie par les clés elles-mêmes.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-226">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="ab1a5-227">Une clé ne peut pas être `null`, mais une valeur peut être.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-227">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="ab1a5-228">Cette méthode est un O (`n`) opération pour les données non triées, où `n` est <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-228">This method is an O(`n`) operation for unsorted data, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="ab1a5-229">C’est un O (log `n`) opération si le nouvel élément est ajouté à la fin de la liste.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-229">It is an O(log `n`) operation if the new element is added at the end of the list.</span></span> <span data-ttu-id="ab1a5-230">Si l’insertion conduit à un redimensionnement, l’opération est O (`n`).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-230">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-231">L’exemple de code suivant montre comment ajouter des éléments à un <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-231">The following code example shows how to add elements to a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab1a5-232"><paramref name="key" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-232"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ab1a5-233">Un élément possédant le <paramref name="key" /> spécifié existe déjà dans l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-233">An element with the specified <paramref name="key" /> already exists in the <see cref="T:System.Collections.SortedList" /> object.</span></span>  
  
<span data-ttu-id="ab1a5-234">ou</span><span class="sxs-lookup"><span data-stu-id="ab1a5-234">-or-</span></span> 
<span data-ttu-id="ab1a5-235"><see cref="T:System.Collections.SortedList" /> est défini pour utiliser l'interface <see cref="T:System.IComparable" /> et <paramref name="key" /> n'implémente pas l'interface <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-235">The <see cref="T:System.Collections.SortedList" /> is set to use the <see cref="T:System.IComparable" /> interface, and <paramref name="key" /> does not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ab1a5-236"><see cref="T:System.Collections.SortedList" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-236">The <see cref="T:System.Collections.SortedList" /> is read-only.</span></span>  
  
<span data-ttu-id="ab1a5-237">ou</span><span class="sxs-lookup"><span data-stu-id="ab1a5-237">-or-</span></span> 
<span data-ttu-id="ab1a5-238"><see cref="T:System.Collections.SortedList" /> est de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-238">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ab1a5-239">La mémoire disponible est insuffisante pour ajouter l'élément à <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-239">There is not enough available memory to add the element to the <see cref="T:System.Collections.SortedList" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ab1a5-240">Le comparateur lève une exception.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-240">The comparer throws an exception.</span></span></exception>
        <altmember cref="P:System.Collections.SortedList.Item(System.Object)" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public virtual int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.SortedList.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab1a5-241">Obtient ou définit la capacité d'un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-241">Gets or sets the capacity of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="ab1a5-242">Nombre d'éléments que l'objet <see cref="T:System.Collections.SortedList" /> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-242">The number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-243"><xref:System.Collections.SortedList.Capacity%2A> est le nombre d’éléments qui le <xref:System.Collections.SortedList> objet peut stocker.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-243"><xref:System.Collections.SortedList.Capacity%2A> is the number of elements that the <xref:System.Collections.SortedList> object can store.</span></span> <span data-ttu-id="ab1a5-244"><xref:System.Collections.SortedList.Count%2A> est le nombre d’éléments réellement contenus dans le <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-244"><xref:System.Collections.SortedList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="ab1a5-245"><xref:System.Collections.SortedList.Capacity%2A> est toujours supérieur ou égal à <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-245"><xref:System.Collections.SortedList.Capacity%2A> is always greater than or equal to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="ab1a5-246">Si <xref:System.Collections.SortedList.Count%2A> dépasse <xref:System.Collections.SortedList.Capacity%2A> lors de l’ajout d’éléments, la capacité est automatiquement augmentée en réallouant le tableau interne avant de copier les anciens éléments et d’ajouter les nouveaux éléments.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-246">If <xref:System.Collections.SortedList.Count%2A> exceeds <xref:System.Collections.SortedList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="ab1a5-247">La capacité peut être diminuée en appelant <xref:System.Collections.SortedList.TrimToSize%2A> ou en définissant le <xref:System.Collections.SortedList.Capacity%2A> propriété explicitement.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-247">The capacity can be decreased by calling <xref:System.Collections.SortedList.TrimToSize%2A> or by setting the <xref:System.Collections.SortedList.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="ab1a5-248">Lorsque la valeur de <xref:System.Collections.SortedList.Capacity%2A> n’est défini explicitement, le tableau interne est également réalloué pour prendre en charge de la capacité spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-248">When the value of <xref:System.Collections.SortedList.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="ab1a5-249">Récupération de la valeur de cette propriété est une opération o (1) ; définition de la propriété est un O (`n`) opération, où `n` est la nouvelle capacité.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-249">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ab1a5-250">La valeur assignée est inférieure ou égale au nombre actuel d'éléments dans l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-250">The value assigned is less than the current number of elements in the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ab1a5-251">Il n’y a pas assez de mémoire disponible sur le système.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-251">There is not enough memory available on the system.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.TrimToSize" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="sortedList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ab1a5-252">Supprime tous les éléments d'un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-252">Removes all elements from a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-253"><xref:System.Collections.SortedList.Count%2A> est défini à zéro et les références à d’autres objets à partir des éléments de la collection sont également libérées.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-253"><xref:System.Collections.SortedList.Count%2A> is set to zero and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="ab1a5-254"><xref:System.Collections.SortedList.Capacity%2A> reste inchangé.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-254"><xref:System.Collections.SortedList.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="ab1a5-255">Pour rétablir la capacité de la <xref:System.Collections.SortedList> de l’objet, appelez <xref:System.Collections.SortedList.TrimToSize%2A> ou définir le <xref:System.Collections.SortedList.Capacity%2A> propriété directement.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-255">To reset the capacity of the <xref:System.Collections.SortedList> object, call <xref:System.Collections.SortedList.TrimToSize%2A> or set the <xref:System.Collections.SortedList.Capacity%2A> property directly.</span></span> <span data-ttu-id="ab1a5-256">Suppression vide <xref:System.Collections.SortedList> définit la capacité de la <xref:System.Collections.SortedList> à la capacité par défaut.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-256">Trimming an empty <xref:System.Collections.SortedList> sets the capacity of the <xref:System.Collections.SortedList> to the default capacity.</span></span>  
  
 <span data-ttu-id="ab1a5-257">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-257">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-258">L’exemple de code suivant montre comment supprimer les parties inutilisées d’une <xref:System.Collections.SortedList> objet et comment effacer les valeurs de la <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-258">The following code example shows how to trim the unused portions of a <xref:System.Collections.SortedList> object and how to clear the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ab1a5-259">L'objet <see cref="T:System.Collections.SortedList" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-259">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
<span data-ttu-id="ab1a5-260">ou</span><span class="sxs-lookup"><span data-stu-id="ab1a5-260">-or-</span></span> 
<span data-ttu-id="ab1a5-261"><see cref="T:System.Collections.SortedList" /> est de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-261">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.TrimToSize" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <altmember cref="P:System.Collections.SortedList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="sortedList.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ab1a5-262">Crée une copie superficielle d'un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-262">Creates a shallow copy of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="ab1a5-263">Copie superficielle de l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-263">A shallow copy of the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-264">Une copie superficielle d’une collection copie uniquement les éléments de la collection, si elles sont des types référence ou les types valeur, mais il ne copie pas les objets que les références.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-264">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but does not copy the objects that the references refer to.</span></span> <span data-ttu-id="ab1a5-265">Les références dans la nouvelle collection pointent vers les mêmes objets que les références dans la collection d’origine pointent vers.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-265">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="ab1a5-266">En revanche, une copie complète d’une collection copie les éléments et tous les éléments référencés directement ou indirectement par les éléments.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-266">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="ab1a5-267">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-267">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="sortedList.Contains key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ab1a5-268">Clé à rechercher dans l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-268">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="ab1a5-269">Détermine si un objet <see cref="T:System.Collections.SortedList" /> contient une clé spécifique.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-269">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific key.</span></span></summary>
        <returns><span data-ttu-id="ab1a5-270"><see langword="true" /> si l'objet <see cref="T:System.Collections.SortedList" /> contient un élément avec le <paramref name="key" /> spécifié ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-270"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="key" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-271">Les éléments d’un <xref:System.Collections.SortedList> objet sont triées par les clés soit selon un spécifique <xref:System.Collections.IComparer> implémentation spécifié lorsque le <xref:System.Collections.SortedList> est créé ou conformément au <xref:System.IComparable> implémentation fournie par les clés elles-mêmes.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-271">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="ab1a5-272">L'objet <xref:System.Collections.SortedList.Contains%2A> implémente l'objet <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-272"><xref:System.Collections.SortedList.Contains%2A> implements <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ab1a5-273">Elle se comporte exactement comme <xref:System.Collections.SortedList.ContainsKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-273">It behaves exactly as <xref:System.Collections.SortedList.ContainsKey%2A>.</span></span>  
  
 <span data-ttu-id="ab1a5-274">Cette méthode utilise un algorithme de recherche binaire ; Par conséquent, cette méthode est un O (log `n`) opération, où `n` est <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-274">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="ab1a5-275">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `item` pour déterminer l’existence d’un élément.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-275">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="ab1a5-276">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-276">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-277">L’exemple de code suivant montre comment déterminer si un <xref:System.Collections.SortedList> objet contient un élément spécifique.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-277">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab1a5-278"><paramref name="key" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-278"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ab1a5-279">Le comparateur lève une exception.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-279">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="ab1a5-280">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span><span class="sxs-lookup"><span data-stu-id="ab1a5-280">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.ContainsKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : obj -&gt; bool&#xA;override this.ContainsKey : obj -&gt; bool" Usage="sortedList.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ab1a5-281">Clé à rechercher dans l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-281">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="ab1a5-282">Détermine si un objet <see cref="T:System.Collections.SortedList" /> contient une clé spécifique.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-282">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific key.</span></span></summary>
        <returns><span data-ttu-id="ab1a5-283"><see langword="true" /> si l'objet <see cref="T:System.Collections.SortedList" /> contient un élément avec le <paramref name="key" /> spécifié ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-283"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="key" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-284">Les éléments d’un <xref:System.Collections.SortedList> objet sont triées par les clés soit selon un spécifique <xref:System.Collections.IComparer> implémentation spécifié lorsque le <xref:System.Collections.SortedList> est créé ou conformément au <xref:System.IComparable> implémentation fournie par les clés elles-mêmes.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-284">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="ab1a5-285">Cette méthode se comporte exactement comme le <xref:System.Collections.SortedList.Contains%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-285">This method behaves exactly as the <xref:System.Collections.SortedList.Contains%2A> method.</span></span>  
  
 <span data-ttu-id="ab1a5-286">Cette méthode utilise un algorithme de recherche binaire ; Par conséquent, cette méthode est un O (log `n`) opération, où `n` est <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-286">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="ab1a5-287">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `item` pour déterminer l’existence d’un élément.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-287">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="ab1a5-288">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-288">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-289">L’exemple de code suivant montre comment déterminer si un <xref:System.Collections.SortedList> objet contient un élément spécifique.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-289">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab1a5-290"><paramref name="key" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-290"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ab1a5-291">Le comparateur lève une exception.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-291">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Contains(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.ContainsValue(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="ab1a5-292">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span><span class="sxs-lookup"><span data-stu-id="ab1a5-292">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public virtual bool ContainsValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.ContainsValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsValue (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ContainsValue : obj -&gt; bool&#xA;override this.ContainsValue : obj -&gt; bool" Usage="sortedList.ContainsValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ab1a5-293">Valeur à trouver dans l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-293">The value to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span> <span data-ttu-id="ab1a5-294">La valeur peut être <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-294">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ab1a5-295">Détermine si un objet <see cref="T:System.Collections.SortedList" /> contient une valeur spécifique.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-295">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="ab1a5-296"><see langword="true" /> si l'objet <see cref="T:System.Collections.SortedList" /> contient un élément avec le <paramref name="value" /> spécifié ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-296"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="value" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-297">Les valeurs des éléments de la <xref:System.Collections.SortedList> objet sont comparées à la valeur spécifiée à l’aide de la <xref:System.Object.Equals%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-297">The values of the elements of the <xref:System.Collections.SortedList> object are compared to the specified value using the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="ab1a5-298">Cette méthode effectue une recherche linéaire ; Par conséquent, la durée d’exécution moyenne est proportionnelle à <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-298">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="ab1a5-299">Autrement dit, cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-299">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="ab1a5-300">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `item` pour déterminer l’existence d’un élément.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-300">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="ab1a5-301">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-301">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-302">L’exemple de code suivant montre comment déterminer si un <xref:System.Collections.SortedList> objet contient un élément spécifique.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-302">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="ab1a5-303">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span><span class="sxs-lookup"><span data-stu-id="ab1a5-303">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="sortedList.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="ab1a5-304">Objet <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des objets <see cref="T:System.Collections.DictionaryEntry" /> copiés à partir de <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-304">The one-dimensional <see cref="T:System.Array" /> object that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from <see cref="T:System.Collections.SortedList" />.</span></span> <span data-ttu-id="ab1a5-305"><see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-305">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="ab1a5-306">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-306">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="ab1a5-307">Copie des éléments <see cref="T:System.Collections.SortedList" /> dans un objet <see cref="T:System.Array" /> unidimensionnel, en commençant à l'index spécifié dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-307">Copies <see cref="T:System.Collections.SortedList" /> elements to a one-dimensional <see cref="T:System.Array" /> object, starting at the specified index in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-308">Les paires clé/valeur sont copiés vers le <xref:System.Array> objet dans le même ordre que celui dans lequel l’énumérateur itère au sein du <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-308">The key/value pairs are copied to the <xref:System.Array> object in the same order in which the enumerator iterates through the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="ab1a5-309">Pour copier uniquement les clés dans le <xref:System.Collections.SortedList>, utilisez `SortedList.Keys.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-309">To copy only the keys in the <xref:System.Collections.SortedList>, use `SortedList.Keys.CopyTo`.</span></span>  
  
 <span data-ttu-id="ab1a5-310">Pour copier uniquement les valeurs dans le <xref:System.Collections.SortedList>, utilisez `SortedList.Values.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-310">To copy only the values in the <xref:System.Collections.SortedList>, use `SortedList.Values.CopyTo`.</span></span>  
  
 <span data-ttu-id="ab1a5-311">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-311">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-312">L’exemple de code suivant montre comment copier les valeurs dans un <xref:System.Collections.SortedList> objet dans une dimension <xref:System.Array> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-312">The following code example shows how to copy the values in a <xref:System.Collections.SortedList> object into a one-dimensional <xref:System.Array> object.</span></span>  
  
 [!code-cpp[Classic SortedList.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab1a5-313"><paramref name="array" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-313"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ab1a5-314"><paramref name="arrayIndex" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-314"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ab1a5-315"><paramref name="array" /> est multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-315"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="ab1a5-316">ou</span><span class="sxs-lookup"><span data-stu-id="ab1a5-316">-or-</span></span> 
<span data-ttu-id="ab1a5-317">Le nombre d'éléments de l'objet <see cref="T:System.Collections.SortedList" /> source est supérieur à la quantité d'espace disponible entre <paramref name="arrayIndex" /> et la fin du <paramref name="array" /> de destination.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-317">The number of elements in the source <see cref="T:System.Collections.SortedList" /> object is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ab1a5-318">Le type du <see cref="T:System.Collections.SortedList" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-318">The type of the source <see cref="T:System.Collections.SortedList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.SortedList.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.SortedList.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab1a5-319">Obtient le nombre d'éléments contenus dans un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-319">Gets the number of elements contained in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="ab1a5-320">Nombre d'éléments contenus dans l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-320">The number of elements contained in the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-321">Chaque élément est une paire clé/valeur qui est accessible en tant qu’un <xref:System.Collections.DictionaryEntry> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-321">Each element is a key/value pair that can be accessed as a <xref:System.Collections.DictionaryEntry> object.</span></span>  
  
 <span data-ttu-id="ab1a5-322"><xref:System.Collections.SortedList.Capacity%2A> est le nombre d’éléments qui le <xref:System.Collections.SortedList> objet peut stocker.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-322"><xref:System.Collections.SortedList.Capacity%2A> is the number of elements that the <xref:System.Collections.SortedList> object can store.</span></span> <span data-ttu-id="ab1a5-323"><xref:System.Collections.SortedList.Count%2A> est le nombre d’éléments réellement contenus dans le <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-323"><xref:System.Collections.SortedList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="ab1a5-324"><xref:System.Collections.SortedList.Capacity%2A> est toujours supérieur ou égal à <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-324"><xref:System.Collections.SortedList.Capacity%2A> is always greater than or equal to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="ab1a5-325">Si <xref:System.Collections.SortedList.Count%2A> dépasse <xref:System.Collections.SortedList.Capacity%2A> lors de l’ajout d’éléments, la capacité est automatiquement augmentée en réallouant le tableau interne avant de copier les anciens éléments et d’ajouter les nouveaux éléments.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-325">If <xref:System.Collections.SortedList.Count%2A> exceeds <xref:System.Collections.SortedList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="ab1a5-326">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-326">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="GetByIndex">
      <MemberSignature Language="C#" Value="public virtual object GetByIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetByIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetByIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByIndex (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetByIndex(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetByIndex : int -&gt; obj&#xA;override this.GetByIndex : int -&gt; obj" Usage="sortedList.GetByIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ab1a5-327">Index de base zéro de la valeur à obtenir.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-327">The zero-based index of the value to get.</span></span></param>
        <summary><span data-ttu-id="ab1a5-328">Obtient la valeur à l'index spécifié d'un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-328">Gets the value at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="ab1a5-329">Valeur à l'index spécifié de l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-329">The value at the specified index of the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-330">La séquence d’index est basée sur l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-330">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="ab1a5-331">Lorsqu’un élément est ajouté, il est inséré dans <xref:System.Collections.SortedList> dans le tri correct ordre et l’indexation s’ajuste en conséquence.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-331">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="ab1a5-332">Lorsqu’un élément est supprimé, l’indexation s’adapte également en conséquence.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-332">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="ab1a5-333">Par conséquent, l’index d’une paire clé/valeur spécifique peut changer que les éléments sont ajoutés ou supprimés à partir de la <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-333">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="ab1a5-334">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-334">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-335">L’exemple de code suivant montre comment obtenir une ou toutes les clés ou valeurs dans un <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-335">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ab1a5-336"><paramref name="index" /> sort de la plage d'index valides pour l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-336"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="sortedList.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ab1a5-337">Retourne un objet <see cref="T:System.Collections.IDictionaryEnumerator" /> qui itère a sein d'un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-337">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> object that iterates through a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="ab1a5-338">Objet <see cref="T:System.Collections.IDictionaryEnumerator" /> de l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-338">An <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-339">L'instruction `foreach` du langage C# (`for each` en Visual Basic) se charge de la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-339">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="ab1a5-340">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-340">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="ab1a5-341">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-341">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="ab1a5-342">Au départ, l'énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-342">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="ab1a5-343"><xref:System.Collections.IEnumerator.Reset%2A> replace également l'énumérateur à cette position.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-343"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="ab1a5-344">À cette position, <xref:System.Collections.IEnumerator.Current%2A> n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-344">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="ab1a5-345">Par conséquent, vous devez appeler <xref:System.Collections.IEnumerator.MoveNext%2A> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-345">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="ab1a5-346"><xref:System.Collections.IEnumerator.Current%2A> retourne le même objet tant que <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> n'est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-346"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="ab1a5-347"><xref:System.Collections.IEnumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-347"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="ab1a5-348">Si <xref:System.Collections.IEnumerator.MoveNext%2A> passe à la fin de la collection, l’énumérateur est positionnée après le dernier élément dans la collection et <xref:System.Collections.IEnumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-348">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="ab1a5-349">Lorsque l’énumérateur se trouve à cette position, les appels suivants à <xref:System.Collections.IEnumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-349">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="ab1a5-350">Si le dernier appel à <xref:System.Collections.IEnumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.IEnumerator.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-350">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="ab1a5-351">Pour attribuer une nouvelle fois <xref:System.Collections.IEnumerator.Current%2A> au premier élément de la collection, vous pouvez appeler <xref:System.Collections.IEnumerator.Reset%2A> suivi de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-351">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="ab1a5-352">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-352">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="ab1a5-353">Si des modifications sont apportées à la collection, telles que l’ajout, la modification ou la suppression d’éléments, l’énumérateur est définitivement invalidé et son comportement n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-353">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="ab1a5-354">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-354">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="ab1a5-355">Pour garantir la sécurité des threads pendant l'énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-355">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="ab1a5-356">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-356">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="ab1a5-357">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-357">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public virtual object GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKey (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetKey(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetKey : int -&gt; obj&#xA;override this.GetKey : int -&gt; obj" Usage="sortedList.GetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ab1a5-358">Index de base zéro de la clé à obtenir.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-358">The zero-based index of the key to get.</span></span></param>
        <summary><span data-ttu-id="ab1a5-359">Obtient la clé à l'index spécifié d'un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-359">Gets the key at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="ab1a5-360">Clé à l'index spécifié de l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-360">The key at the specified index of the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-361">La séquence d’index est basée sur l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-361">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="ab1a5-362">Lorsqu’un élément est ajouté, il est inséré dans <xref:System.Collections.SortedList> dans le tri correct ordre et l’indexation s’ajuste en conséquence.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-362">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="ab1a5-363">Lorsqu’un élément est supprimé, l’indexation s’adapte également en conséquence.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-363">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="ab1a5-364">Par conséquent, l’index d’une paire clé/valeur spécifique peut changer que les éléments sont ajoutés ou supprimés à partir de la <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-364">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="ab1a5-365">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-365">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-366">L’exemple de code suivant montre comment obtenir une ou toutes les clés ou valeurs dans un <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-366">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ab1a5-367"><paramref name="index" /> sort de la plage d'index valides pour l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-367"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList GetKeyList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetKeyList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetKeyList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IList ^ GetKeyList();" />
      <MemberSignature Language="F#" Value="abstract member GetKeyList : unit -&gt; System.Collections.IList&#xA;override this.GetKeyList : unit -&gt; System.Collections.IList" Usage="sortedList.GetKeyList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ab1a5-368">Obtient les clés d'un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-368">Gets the keys in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="ab1a5-369">Objet <see cref="T:System.Collections.IList" /> contenant les clés de l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-369">An <see cref="T:System.Collections.IList" /> object containing the keys in the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-370">Retourné <xref:System.Collections.IList> objet est une vue en lecture seule des clés de la <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-370">The returned <xref:System.Collections.IList> object is a read-only view of the keys of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="ab1a5-371">Les modifications apportées à sous-jacent <xref:System.Collections.SortedList> sont immédiatement répercutées dans le <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-371">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="ab1a5-372">Les éléments de retourné <xref:System.Collections.IList> sont triés dans le même ordre que les clés de la <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-372">The elements of the returned <xref:System.Collections.IList> are sorted in the same order as the keys of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="ab1a5-373">Cette méthode est similaire à la <xref:System.Collections.SortedList.Keys%2A> propriété, mais retourne un <xref:System.Collections.IList> au lieu de l’objet une <xref:System.Collections.ICollection> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-373">This method is similar to the <xref:System.Collections.SortedList.Keys%2A> property, but returns an <xref:System.Collections.IList> object instead of an <xref:System.Collections.ICollection> object.</span></span>  
  
 <span data-ttu-id="ab1a5-374">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-374">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-375">L’exemple de code suivant montre comment obtenir une ou toutes les clés ou valeurs dans un <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-375">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.SortedList.GetValueList" />
        <altmember cref="P:System.Collections.SortedList.Keys" />
      </Docs>
    </Member>
    <Member MemberName="GetValueList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList GetValueList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetValueList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetValueList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValueList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IList ^ GetValueList();" />
      <MemberSignature Language="F#" Value="abstract member GetValueList : unit -&gt; System.Collections.IList&#xA;override this.GetValueList : unit -&gt; System.Collections.IList" Usage="sortedList.GetValueList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ab1a5-376">Obtient les valeurs d'un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-376">Gets the values in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="ab1a5-377">Objet <see cref="T:System.Collections.IList" /> contenant les valeurs de l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-377">An <see cref="T:System.Collections.IList" /> object containing the values in the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-378">Retourné <xref:System.Collections.IList> objet est une vue en lecture seule des valeurs de la <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-378">The returned <xref:System.Collections.IList> object is a read-only view of the values of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="ab1a5-379">Les modifications apportées à sous-jacent <xref:System.Collections.SortedList> sont immédiatement répercutées dans le <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-379">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="ab1a5-380">Les éléments de retourné <xref:System.Collections.IList> sont triés dans le même ordre que les valeurs de la <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-380">The elements of the returned <xref:System.Collections.IList> are sorted in the same order as the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="ab1a5-381">Cette méthode est similaire à la <xref:System.Collections.SortedList.Values%2A> propriété, mais retourne un <xref:System.Collections.IList> au lieu de l’objet une <xref:System.Collections.ICollection> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-381">This method is similar to the <xref:System.Collections.SortedList.Values%2A> property, but returns an <xref:System.Collections.IList> object instead of an <xref:System.Collections.ICollection> object.</span></span>  
  
 <span data-ttu-id="ab1a5-382">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-382">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-383">L’exemple de code suivant montre comment obtenir une ou toutes les clés ou valeurs dans un <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-383">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.SortedList.GetKeyList" />
        <altmember cref="P:System.Collections.SortedList.Values" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : obj -&gt; int&#xA;override this.IndexOfKey : obj -&gt; int" Usage="sortedList.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ab1a5-384">Clé à rechercher dans l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-384">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="ab1a5-385">Retourne l'index de base zéro de la clé spécifiée dans un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-385">Returns the zero-based index of the specified key in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="ab1a5-386">Index de base zéro du paramètre <paramref name="key" />, si <paramref name="key" /> se trouve dans l'objet <see cref="T:System.Collections.SortedList" /> ; sinon, -1.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-386">The zero-based index of the <paramref name="key" /> parameter, if <paramref name="key" /> is found in the <see cref="T:System.Collections.SortedList" /> object; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-387">Les éléments d’un <xref:System.Collections.SortedList> objet sont triées par les clés soit selon un spécifique <xref:System.Collections.IComparer> implémentation spécifié lorsque le <xref:System.Collections.SortedList> est créé ou conformément au <xref:System.IComparable> implémentation fournie par les clés elles-mêmes.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-387">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created, or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="ab1a5-388">La séquence d’index est basée sur l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-388">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="ab1a5-389">Lorsqu’un élément est ajouté, il est inséré dans <xref:System.Collections.SortedList> dans le tri correct ordre et l’indexation s’ajuste en conséquence.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-389">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="ab1a5-390">Lorsqu’un élément est supprimé, l’indexation s’adapte également en conséquence.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-390">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="ab1a5-391">Par conséquent, l’index d’une paire clé/valeur spécifique peut changer que les éléments sont ajoutés ou supprimés à partir de la <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-391">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="ab1a5-392">Cette méthode utilise un algorithme de recherche binaire ; Par conséquent, cette méthode est un O (log `n`) opération, où `n` est <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-392">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="ab1a5-393">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `item` pour déterminer l’existence d’un élément.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-393">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="ab1a5-394">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-394">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-395">L’exemple de code suivant montre comment déterminer l’index d’une clé ou une valeur dans un <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-395">The following code example shows how to determine the index of a key or a value in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab1a5-396"><paramref name="key" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-396"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ab1a5-397">Le comparateur lève une exception.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-397">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="ab1a5-398">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span><span class="sxs-lookup"><span data-stu-id="ab1a5-398">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IndexOfValue">
      <MemberSignature Language="C#" Value="public virtual int IndexOfValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfValue (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfValue : obj -&gt; int&#xA;override this.IndexOfValue : obj -&gt; int" Usage="sortedList.IndexOfValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ab1a5-399">Valeur à trouver dans l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-399">The value to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span> <span data-ttu-id="ab1a5-400">La valeur peut être <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-400">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ab1a5-401">Retourne l'index de base zéro de la première occurrence de la valeur spécifiée dans un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-401">Returns the zero-based index of the first occurrence of the specified value in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="ab1a5-402">Index de base zéro de la première occurrence du paramètre <paramref name="value" />, si <paramref name="value" /> se trouve dans l'objet <see cref="T:System.Collections.SortedList" /> ; sinon, -1.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-402">The zero-based index of the first occurrence of the <paramref name="value" /> parameter, if <paramref name="value" /> is found in the <see cref="T:System.Collections.SortedList" /> object; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-403">La séquence d’index est basée sur l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-403">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="ab1a5-404">Lorsqu’un élément est ajouté, il est inséré dans <xref:System.Collections.SortedList> dans le tri correct ordre et l’indexation s’ajuste en conséquence.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-404">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="ab1a5-405">Lorsqu’un élément est supprimé, l’indexation s’adapte également en conséquence.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-405">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="ab1a5-406">Par conséquent, l’index d’une paire clé/valeur spécifique peut changer que les éléments sont ajoutés ou supprimés à partir de la <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-406">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="ab1a5-407">Les valeurs des éléments de la <xref:System.Collections.SortedList> sont comparées à la valeur spécifiée à l’aide de la <xref:System.Object.Equals%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-407">The values of the elements of the <xref:System.Collections.SortedList> are compared to the specified value using the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="ab1a5-408">Cette méthode utilise une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-408">This method uses a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="ab1a5-409">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `item` pour déterminer l’existence d’un élément.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-409">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="ab1a5-410">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-410">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-411">L’exemple de code suivant montre comment déterminer l’index d’une clé ou une valeur dans un <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-411">The following code example shows how to determine the index of a key or a value in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.ContainsValue(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="ab1a5-412">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span><span class="sxs-lookup"><span data-stu-id="ab1a5-412">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.SortedList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab1a5-413">Obtient une valeur indiquant si un objet <see cref="T:System.Collections.SortedList" /> est de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-413">Gets a value indicating whether a <see cref="T:System.Collections.SortedList" /> object has a fixed size.</span></span></summary>
        <value><span data-ttu-id="ab1a5-414"><see langword="true" /> si l'objet <see cref="T:System.Collections.SortedList" /> est de taille fixe ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-414"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object has a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ab1a5-415">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-415">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-416">Une collection avec une taille fixe n’autorise pas l’ajout ou la suppression d’éléments une fois que la collection est créée, mais n’autorise pas la modification des éléments existants.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-416">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="ab1a5-417">Une collection avec une taille fixe est simplement une collection avec un wrapper qui empêche l’ajout et suppression d’éléments. Par conséquent, si des modifications sont apportées à la collection sous-jacente, y compris l’ajout ou la suppression d’éléments, la collection de taille fixe reflète ces modifications.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-417">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="ab1a5-418">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-418">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.SortedList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab1a5-419">Obtient une valeur indiquant si un objet <see cref="T:System.Collections.SortedList" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-419">Gets a value indicating whether a <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span></summary>
        <value><span data-ttu-id="ab1a5-420"><see langword="true" /> si l'objet <see cref="T:System.Collections.SortedList" /> est en lecture seule ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-420"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ab1a5-421">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-421">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-422">Une collection en lecture seule n’autorise pas l’ajout, la suppression ou la modification d’éléments après sa création.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-422">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="ab1a5-423">Une collection est en lecture seule est simplement une collection avec un wrapper qui empêche la modification de la collection ; Par conséquent, si des modifications sont apportées à la collection sous-jacente, la collection en lecture seule reflète ces modifications.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-423">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="ab1a5-424">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-424">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.SortedList.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab1a5-425">Obtient une valeur indiquant si l'accès à un objet <see cref="T:System.Collections.SortedList" /> est synchronisé (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-425">Gets a value indicating whether access to a <see cref="T:System.Collections.SortedList" /> object is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="ab1a5-426"><see langword="true" /> si l'accès à l'objet <see cref="T:System.Collections.SortedList" /> est synchronisé (thread-safe) ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-426"><see langword="true" /> if access to the <see cref="T:System.Collections.SortedList" /> object is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ab1a5-427">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-427">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-428">Pour garantir la cohérence de thread d’un <xref:System.Collections.SortedList> de l’objet, toutes les opérations doivent être effectuées via le wrapper retourné par la <xref:System.Collections.SortedList.Synchronized%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-428">To guarantee the thread safety of a <xref:System.Collections.SortedList> object, all operations must be done through the wrapper returned by the <xref:System.Collections.SortedList.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="ab1a5-429">L'énumération d'une collection n'est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-429">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="ab1a5-430">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-430">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="ab1a5-431">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-431">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-432">L’exemple de code suivant montre comment verrouiller une collection en utilisant le <xref:System.Collections.SortedList.SyncRoot%2A> propriété pendant toute l’énumération.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-432">The following code example shows how to lock a collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="ab1a5-433">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-433">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="ab1a5-434">L’exemple de code suivant montre comment synchroniser un <xref:System.Collections.SortedList> d’objet, de déterminer si un <xref:System.Collections.SortedList> est synchronisé et utiliser une liste synchronisé <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-434">The following code example shows how to synchronize a <xref:System.Collections.SortedList> object, determine whether a <xref:System.Collections.SortedList> is synchronized, and use a synchronized <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.SyncRoot" />
        <altmember cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj with get, set" Usage="System.Collections.SortedList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ab1a5-435">Clé dont la valeur doit être obtenue ou définie.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-435">The key associated with the value to get or set.</span></span></param>
        <summary><span data-ttu-id="ab1a5-436">Obtient ou définit la valeur associée à une clé spécifique dans un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-436">Gets or sets the value associated with a specific key in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="ab1a5-437">Valeur associée au paramètre <paramref name="key" /> dans l'objet <see cref="T:System.Collections.SortedList" />, si <paramref name="key" /> existe ; sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-437">The value associated with the <paramref name="key" /> parameter in the <see cref="T:System.Collections.SortedList" /> object, if <paramref name="key" /> is found; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-438">Vous pouvez utiliser la <xref:System.Collections.SortedList.Item%2A> propriété accéder à un élément spécifique dans une collection en spécifiant la syntaxe suivante : `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-438">You can use the <xref:System.Collections.SortedList.Item%2A> property to access a specific element in a collection by specifying the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="ab1a5-439">Vous pouvez également utiliser cette propriété pour ajouter de nouveaux éléments en définissant la valeur d’une clé qui n’existe pas dans le <xref:System.Collections.SortedList> objet (par exemple, `myCollection["myNonexistentKey"] = myValue)`.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-439">You can also use this property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.SortedList> object (for example, `myCollection["myNonexistentKey"] = myValue)`.</span></span> <span data-ttu-id="ab1a5-440">Toutefois, si la clé spécifiée existe déjà dans le <xref:System.Collections.SortedList>, ce qui affecte le <xref:System.Collections.SortedList.Item%2A> propriété remplace l’ancienne valeur.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-440">However, if the specified key already exists in the <xref:System.Collections.SortedList>, setting the <xref:System.Collections.SortedList.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="ab1a5-441">En revanche, le <xref:System.Collections.SortedList.Add%2A> méthode ne modifie pas les éléments existants.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-441">In contrast, the <xref:System.Collections.SortedList.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="ab1a5-442">Une clé ne peut pas être `null`, mais une valeur peut être.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-442">A key cannot be `null`, but a value can be.</span></span> <span data-ttu-id="ab1a5-443">Faire la distinction entre `null` qui est retourné parce que la clé spécifiée est introuvable et `null` qui est retournée parce que la valeur de la clé spécifiée est `null`, utiliser le <xref:System.Collections.SortedList.Contains%2A> méthode ou le <xref:System.Collections.SortedList.ContainsKey%2A> méthode pour déterminer si la clé existe dans la liste.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-443">To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.SortedList.Contains%2A> method or the <xref:System.Collections.SortedList.ContainsKey%2A> method to determine if the key exists in the list.</span></span>  
  
 <span data-ttu-id="ab1a5-444">Les éléments d’un <xref:System.Collections.SortedList> sont triées par les clés soit selon un spécifique <xref:System.Collections.IComparer> implémentation spécifié lorsque le <xref:System.Collections.SortedList> est créé ou conformément au <xref:System.IComparable> implémentation fournie par les clés elles-mêmes.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-444">The elements of a <xref:System.Collections.SortedList> are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="ab1a5-445">Le C# langue utilise le [ `this` ](~/docs/csharp/language-reference/keywords/this.md) mot clé pour définir les indexeurs au lieu d’implémenter la <xref:System.Collections.SortedList.Keys%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-445">The C# language uses the [`this`](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.SortedList.Keys%2A> property.</span></span> <span data-ttu-id="ab1a5-446">Visual Basic implémente <xref:System.Collections.SortedList.Item%2A> comme propriété par défaut, ce qui fournit les mêmes fonctionnalités d'indexation.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-446">Visual Basic implements <xref:System.Collections.SortedList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="ab1a5-447">Récupération de la valeur de cette propriété est un O (log `n`) opération, où `n` est <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-447">Retrieving the value of this property is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="ab1a5-448">Définition de la propriété est un O (log `n`) opération si la clé est déjà dans le <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-448">Setting the property is an O(log `n`) operation if the key is already in the <xref:System.Collections.SortedList>.</span></span> <span data-ttu-id="ab1a5-449">Si la clé n’est pas dans la liste, la propriété est un O (`n`) opération pour les données non triées, ou O (log `n`) si le nouvel élément est ajouté à la fin de la liste.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-449">If the key is not in the list, setting the property is an O(`n`) operation for unsorted data, or O(log `n`) if the new element is added at the end of the list.</span></span> <span data-ttu-id="ab1a5-450">Si l’insertion conduit à un redimensionnement, l’opération est O (`n`).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-450">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab1a5-451"><paramref name="key" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-451"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ab1a5-452">La propriété est définie et l'objet <see cref="T:System.Collections.SortedList" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-452">The property is set and the <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
<span data-ttu-id="ab1a5-453">ou</span><span class="sxs-lookup"><span data-stu-id="ab1a5-453">-or-</span></span> 
<span data-ttu-id="ab1a5-454">La propriété est définie, <paramref name="key" /> n’existe pas dans la collection et <see cref="T:System.Collections.SortedList" /> a une taille fixe.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-454">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ab1a5-455">La mémoire disponible est insuffisante pour ajouter l'élément à <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-455">There is not enough available memory to add the element to the <see cref="T:System.Collections.SortedList" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ab1a5-456">Le comparateur lève une exception.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-456">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.SortedList.Contains(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="ab1a5-457">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span><span class="sxs-lookup"><span data-stu-id="ab1a5-457">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Collections.SortedList.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab1a5-458">Obtient les clés d'un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-458">Gets the keys in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="ab1a5-459">Objet <see cref="T:System.Collections.ICollection" /> contenant les clés de l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-459">An <see cref="T:System.Collections.ICollection" /> object containing the keys in the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-460">Le <xref:System.Collections.ICollection> objet est une vue en lecture seule des clés de la <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-460">The <xref:System.Collections.ICollection> object is a read-only view of the keys of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="ab1a5-461">Les modifications apportées à sous-jacent <xref:System.Collections.SortedList> sont immédiatement répercutées dans le <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-461">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="ab1a5-462">Les éléments de la <xref:System.Collections.ICollection> sont triés dans le même ordre que les clés de la <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-462">The elements of the <xref:System.Collections.ICollection> are sorted in the same order as the keys of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="ab1a5-463">Cette propriété est similaire à la <xref:System.Collections.SortedList.GetKeyList%2A> (méthode), mais retourne un <xref:System.Collections.ICollection> au lieu de l’objet une <xref:System.Collections.IList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-463">This property is similar to the <xref:System.Collections.SortedList.GetKeyList%2A> method, but returns an <xref:System.Collections.ICollection> object instead of an <xref:System.Collections.IList> object.</span></span>  
  
 <span data-ttu-id="ab1a5-464">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-464">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.SortedList.Values" />
        <altmember cref="M:System.Collections.SortedList.GetKeyList" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="ab1a5-465">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span><span class="sxs-lookup"><span data-stu-id="ab1a5-465">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="sortedList.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ab1a5-466">Clé de l'élément à supprimer.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-466">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="ab1a5-467">Supprime d'un objet <see cref="T:System.Collections.SortedList" /> l'élément ayant la clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-467">Removes the element with the specified key from a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-468">Si l'objet <xref:System.Collections.SortedList> ne contient pas d'élément avec la clé spécifiée, <xref:System.Collections.SortedList> reste inchangé.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-468">If the <xref:System.Collections.SortedList> object does not contain an element with the specified key, the <xref:System.Collections.SortedList> remains unchanged.</span></span> <span data-ttu-id="ab1a5-469">Aucune exception n'est levée.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-469">No exception is thrown.</span></span>  
  
 <span data-ttu-id="ab1a5-470">Dans des collections d'éléments contigus, telles que les listes, les éléments qui suivent l'élément supprimé remontent pour occuper l'espace libéré.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-470">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="ab1a5-471">Si la collection est indexée, les index des éléments déplacés sont également mis à jour.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-471">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="ab1a5-472">Ce comportement ne s'applique pas aux collections dont les éléments sont regroupés de manière conceptuelle en compartiments, comme par exemple les tables de hachage.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-472">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="ab1a5-473">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-473">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-474">L’exemple de code suivant montre comment supprimer des éléments dans un <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-474">The following code example shows how to remove elements from a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab1a5-475"><paramref name="key" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-475"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ab1a5-476">L'objet <see cref="T:System.Collections.SortedList" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-476">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
<span data-ttu-id="ab1a5-477">ou</span><span class="sxs-lookup"><span data-stu-id="ab1a5-477">-or-</span></span> 
<span data-ttu-id="ab1a5-478"><see cref="T:System.Collections.SortedList" /> est de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-478">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.RemoveAt(System.Int32)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="ab1a5-479">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span><span class="sxs-lookup"><span data-stu-id="ab1a5-479">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="sortedList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ab1a5-480">Index de base zéro de l'élément à supprimer.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-480">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="ab1a5-481">Supprime l'élément à l'index spécifié d'un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-481">Removes the element at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-482">La séquence d’index est basée sur l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-482">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="ab1a5-483">Lorsqu’un élément est ajouté, il est inséré dans <xref:System.Collections.SortedList> dans le tri correct ordre et l’indexation s’ajuste en conséquence.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-483">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="ab1a5-484">Lorsqu’un élément est supprimé, l’indexation s’adapte également en conséquence.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-484">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="ab1a5-485">Par conséquent, l’index d’une paire clé/valeur spécifique peut changer que les éléments sont ajoutés ou supprimés à partir de la <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-485">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="ab1a5-486">Dans des collections d'éléments contigus, telles que les listes, les éléments qui suivent l'élément supprimé remontent pour occuper l'espace libéré.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-486">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="ab1a5-487">Si la collection est indexée, les index des éléments déplacés sont également mis à jour.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-487">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="ab1a5-488">Ce comportement ne s'applique pas aux collections dont les éléments sont regroupés de manière conceptuelle en compartiments, comme par exemple les tables de hachage.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-488">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="ab1a5-489">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-489">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-490">L’exemple de code suivant montre comment supprimer des éléments dans un <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-490">The following code example shows how to remove elements from a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ab1a5-491"><paramref name="index" /> sort de la plage d'index valides pour l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-491"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ab1a5-492"><see cref="T:System.Collections.SortedList" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-492">The <see cref="T:System.Collections.SortedList" /> is read-only.</span></span>  
  
<span data-ttu-id="ab1a5-493">ou</span><span class="sxs-lookup"><span data-stu-id="ab1a5-493">-or-</span></span> 
<span data-ttu-id="ab1a5-494"><see cref="T:System.Collections.SortedList" /> est de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-494">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetByIndex">
      <MemberSignature Language="C#" Value="public virtual void SetByIndex (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetByIndex(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetByIndex (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetByIndex(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetByIndex : int * obj -&gt; unit&#xA;override this.SetByIndex : int * obj -&gt; unit" Usage="sortedList.SetByIndex (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ab1a5-495">Index de base zéro au niveau duquel enregistrer <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-495">The zero-based index at which to save <paramref name="value" />.</span></span></param>
        <param name="value"><span data-ttu-id="ab1a5-496"><see cref="T:System.Object" /> à enregistrer dans l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-496">The <see cref="T:System.Object" /> to save into the <see cref="T:System.Collections.SortedList" /> object.</span></span> <span data-ttu-id="ab1a5-497">La valeur peut être <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-497">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ab1a5-498">Remplace la valeur à l'index spécifié dans un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-498">Replaces the value at a specific index in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-499">La séquence d’index est basée sur l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-499">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="ab1a5-500">Lorsqu’un élément est ajouté, il est inséré dans <xref:System.Collections.SortedList> dans le tri correct ordre et l’indexation s’ajuste en conséquence.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-500">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="ab1a5-501">Lorsqu’un élément est supprimé, l’indexation s’adapte également en conséquence.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-501">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="ab1a5-502">Par conséquent, l’index d’une paire clé/valeur spécifique peut changer que les éléments sont ajoutés ou supprimés à partir de la <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-502">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="ab1a5-503">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-503">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-504">L’exemple de code suivant montre comment remplacer la valeur d’un élément existant dans un <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-504">The following code example shows how to replace the value of an existing element in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.SetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.SetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.SetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ab1a5-505"><paramref name="index" /> sort de la plage d'index valides pour l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-505"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.SortedList Synchronized (System.Collections.SortedList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.SortedList Synchronized(class System.Collections.SortedList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As SortedList) As SortedList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::SortedList ^ Synchronized(System::Collections::SortedList ^ list);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.SortedList -&gt; System.Collections.SortedList" Usage="System.Collections.SortedList.Synchronized list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.SortedList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.SortedList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="ab1a5-506">Objet <see cref="T:System.Collections.SortedList" /> à synchroniser.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-506">The <see cref="T:System.Collections.SortedList" /> object to synchronize.</span></span></param>
        <summary><span data-ttu-id="ab1a5-507">Retourne un wrapper synchronisé (thread-safe) pour un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-507">Returns a synchronized (thread-safe) wrapper for a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="ab1a5-508">Wrapper synchronisé (thread-safe) pour l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-508">A synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-509">Pour garantir la cohérence de thread d’un <xref:System.Collections.SortedList> de l’objet, toutes les opérations doivent être effectuées via ce wrapper uniquement.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-509">To guarantee the thread safety of a <xref:System.Collections.SortedList> object, all operations must be done through this wrapper only.</span></span>  
  
 <span data-ttu-id="ab1a5-510">L'énumération d'une collection n'est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-510">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="ab1a5-511">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-511">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="ab1a5-512">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-512">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-513">L’exemple de code suivant montre comment verrouiller la collection en utilisant le <xref:System.Collections.SortedList.SyncRoot%2A> propriété pendant toute l’énumération.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-513">The following code example shows how to lock the collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="ab1a5-514">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-514">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="ab1a5-515">L’exemple de code suivant montre comment synchroniser un <xref:System.Collections.SortedList> d’objet, de déterminer si un <xref:System.Collections.SortedList> est synchronisé et utiliser une liste synchronisé <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-515">The following code example shows how to synchronize a <xref:System.Collections.SortedList> object, determine whether a <xref:System.Collections.SortedList> is synchronized, and use a synchronized <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab1a5-516"><paramref name="list" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-516"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.SortedList.IsSynchronized" />
        <altmember cref="P:System.Collections.SortedList.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.SortedList.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab1a5-517">Obtient un objet qui peut être utilisé pour synchroniser l'accès à un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-517">Gets an object that can be used to synchronize access to a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="ab1a5-518">Objet pouvant être utilisé pour synchroniser l’accès à l’objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-518">An object that can be used to synchronize access to the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-519">Pour créer une version synchronisée de la <xref:System.Collections.SortedList> de l’objet, utilisez le <xref:System.Collections.SortedList.Synchronized%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-519">To create a synchronized version of the <xref:System.Collections.SortedList> object, use the <xref:System.Collections.SortedList.Synchronized%2A> method.</span></span> <span data-ttu-id="ab1a5-520">Toutefois, les classes dérivées peuvent fournir leur propre version synchronisée de la <xref:System.Collections.SortedList> à l’aide de la <xref:System.Collections.SortedList.SyncRoot%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-520">However, derived classes can provide their own synchronized version of the <xref:System.Collections.SortedList> using the <xref:System.Collections.SortedList.SyncRoot%2A> property.</span></span> <span data-ttu-id="ab1a5-521">Le code de synchronisation doit effectuer les opérations sur le <xref:System.Collections.SortedList.SyncRoot%2A> de la <xref:System.Collections.SortedList>, et non directement sur le <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-521">The synchronizing code must perform operations on the <xref:System.Collections.SortedList.SyncRoot%2A> of the <xref:System.Collections.SortedList>, not directly on the <xref:System.Collections.SortedList>.</span></span> <span data-ttu-id="ab1a5-522">Cela garantit un bon fonctionnement des collections dérivées d’autres objets.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-522">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="ab1a5-523">Plus précisément, il maintient une synchronisation correcte avec les autres threads qui pourraient modifier simultanément les <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-523">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="ab1a5-524">L'énumération d'une collection n'est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-524">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="ab1a5-525">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-525">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="ab1a5-526">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-526">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-527">L’exemple de code suivant montre comment verrouiller la collection en utilisant le <xref:System.Collections.SortedList.SyncRoot%2A> propriété pendant toute l’énumération.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-527">The following code example shows how to lock the collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="ab1a5-528">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-528">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.IsSynchronized" />
        <altmember cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ab1a5-529">Retourne un <see cref="T:System.Collections.IEnumerator" /> qui itère au sein de <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-529">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Collections.SortedList" />.</span></span></summary>
        <returns><span data-ttu-id="ab1a5-530"><see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-530">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.SortedList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-531">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="ab1a5-531">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="ab1a5-532">L'instruction `foreach` du langage C# (`for each` en Visual Basic) se charge de la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-532">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="ab1a5-533">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-533">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="ab1a5-534">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-534">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="ab1a5-535">Au départ, l'énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-535">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="ab1a5-536"><xref:System.Collections.IEnumerator.Reset%2A> replace également l'énumérateur à cette position.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-536"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="ab1a5-537">À cette position, l’appel <xref:System.Collections.IEnumerator.Current%2A> lève une exception.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-537">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="ab1a5-538">Par conséquent, vous devez appeler <xref:System.Collections.IEnumerator.MoveNext%2A> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-538">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="ab1a5-539"><xref:System.Collections.IEnumerator.Current%2A> retourne le même objet tant que <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> n'est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-539"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="ab1a5-540"><xref:System.Collections.IEnumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-540"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="ab1a5-541">Si <xref:System.Collections.IEnumerator.MoveNext%2A> passe à la fin de la collection, l’énumérateur est positionnée après le dernier élément dans la collection et <xref:System.Collections.IEnumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-541">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="ab1a5-542">Lorsque l’énumérateur se trouve à cette position, les appels suivants à <xref:System.Collections.IEnumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-542">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="ab1a5-543">Si le dernier appel à <xref:System.Collections.IEnumerator.MoveNext%2A> retourné `false`, l’appel <xref:System.Collections.IEnumerator.Current%2A> lève une exception.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-543">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="ab1a5-544">Pour attribuer une nouvelle fois <xref:System.Collections.IEnumerator.Current%2A> au premier élément de la collection, vous pouvez appeler <xref:System.Collections.IEnumerator.Reset%2A> suivi de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-544">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="ab1a5-545">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-545">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="ab1a5-546">Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou la suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-546">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="ab1a5-547">Si la collection est modifiée entre <xref:System.Collections.IEnumerator.MoveNext%2A> et <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> retourne l’élément auquel il est attribué, même si l’énumérateur est déjà invalidé.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-547">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="ab1a5-548">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-548">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="ab1a5-549">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-549">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="ab1a5-550">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-550">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="ab1a5-551">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-551">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberSignature Language="F#" Value="abstract member TrimToSize : unit -&gt; unit&#xA;override this.TrimToSize : unit -&gt; unit" Usage="sortedList.TrimToSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ab1a5-552">Affecte à la capacité le nombre réel d'éléments d'un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-552">Sets the capacity to the actual number of elements in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-553">Cette méthode peut être utilisée pour réduire une surcharge de mémoire d’une collection si aucun nouvel élément ne doit être ajouté à la collection.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-553">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span>  
  
 <span data-ttu-id="ab1a5-554">Pour réinitialiser un <xref:System.Collections.SortedList> objet à son état initial, l’appel de la <xref:System.Collections.SortedList.Clear%2A> méthode avant d’appeler <xref:System.Collections.SortedList.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-554">To reset a <xref:System.Collections.SortedList> object to its initial state, call the <xref:System.Collections.SortedList.Clear%2A> method before calling <xref:System.Collections.SortedList.TrimToSize%2A>.</span></span> <span data-ttu-id="ab1a5-555">Suppression vide <xref:System.Collections.SortedList> définit la capacité de la <xref:System.Collections.SortedList> à la capacité par défaut.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-555">Trimming an empty <xref:System.Collections.SortedList> sets the capacity of the <xref:System.Collections.SortedList> to the default capacity.</span></span>  
  
 <span data-ttu-id="ab1a5-556">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-556">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab1a5-557">L’exemple de code suivant montre comment supprimer les parties inutilisées d’une <xref:System.Collections.SortedList> objet et comment effacer ses valeurs.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-557">The following code example shows how to trim the unused portions of a <xref:System.Collections.SortedList> object and how to clear its values.</span></span>  
  
 [!code-cpp[Classic SortedList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ab1a5-558">L'objet <see cref="T:System.Collections.SortedList" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-558">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
<span data-ttu-id="ab1a5-559">ou</span><span class="sxs-lookup"><span data-stu-id="ab1a5-559">-or-</span></span> 
<span data-ttu-id="ab1a5-560"><see cref="T:System.Collections.SortedList" /> est de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-560">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Clear" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <altmember cref="P:System.Collections.SortedList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Values" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.ICollection" Usage="System.Collections.SortedList.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab1a5-561">Obtient les valeurs d'un objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-561">Gets the values in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="ab1a5-562">Objet <see cref="T:System.Collections.ICollection" /> contenant les valeurs de l'objet <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-562">An <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab1a5-563">Le <xref:System.Collections.ICollection> objet est une vue en lecture seule des valeurs de la <xref:System.Collections.SortedList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-563">The <xref:System.Collections.ICollection> object is a read-only view of the values of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="ab1a5-564">Les modifications apportées à sous-jacent <xref:System.Collections.SortedList> sont immédiatement répercutées dans le <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-564">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="ab1a5-565">Les éléments de la <xref:System.Collections.ICollection> sont triés dans le même ordre que les valeurs de la <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-565">The elements of the <xref:System.Collections.ICollection> are sorted in the same order as the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="ab1a5-566">Cette propriété est similaire à la <xref:System.Collections.SortedList.GetValueList%2A> (méthode), mais retourne un <xref:System.Collections.ICollection> au lieu de l’objet une <xref:System.Collections.IList> objet.</span><span class="sxs-lookup"><span data-stu-id="ab1a5-566">This property is similar to the <xref:System.Collections.SortedList.GetValueList%2A> method, but returns an <xref:System.Collections.ICollection> object instead of an <xref:System.Collections.IList> object.</span></span>  
  
 <span data-ttu-id="ab1a5-567">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="ab1a5-567">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.SortedList.Keys" />
        <altmember cref="M:System.Collections.SortedList.GetValueList" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="ab1a5-568">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span><span class="sxs-lookup"><span data-stu-id="ab1a5-568">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>