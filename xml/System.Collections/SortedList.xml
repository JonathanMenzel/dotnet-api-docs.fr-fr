<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SortedList.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d3124b7bda8739a20a75d51b771ab675fd3a27c3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3124b7bda8739a20a75d51b771ab675fd3a27c3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.SortedList">
          <source>Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.</source>
          <target state="translated">Représente une collection de paires clé/valeur triées par les clés et accessible par clé et par index.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>For the generic version of this collection, see <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Pour la version générique de cette collection, consultez <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>A <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> element can be accessed by its key, like an element in any <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> implementation, or by its index, like an element in any <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> implementation.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> est accessible par sa clé, comme un élément d’un élément <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> implémentation, ou par son index, comme un élément d’une <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> implémentation.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>A <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object internally maintains two arrays to store the elements of the list; that is, one array for the keys and another array for the associated values.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet gère en interne deux tableaux pour stocker les éléments de la liste, c'est-à-dire un tableau pour les clés et un autre pour les valeurs associées.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Each element is a key/value pair that can be accessed as a <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> object.</source>
          <target state="translated">Chaque élément est une paire clé/valeur qui sont accessibles en tant qu’un <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">Une clé ne peut pas être <ph id="ph1">`null`</ph>, mais une valeur peut être.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">La capacité d’un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet est le nombre d’éléments du <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> peut contenir.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">Lorsque des éléments sont ajoutés à un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, la capacité est augmentée automatiquement par réallocation.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> or by setting the <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">La capacité peut être diminuée en appelant <ph id="ph1">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> ou en définissant le <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> propriété explicitement.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>For very large <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph2">`enabled`</ph> attribute of the  configuration element to <ph id="ph3">`true`</ph> in the run-time environment.</source>
          <target state="translated">Pour les très volumineux <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> des objets, vous pouvez augmenter la capacité maximale de 2 milliards des éléments sur un système 64 bits en définissant le <ph id="ph2">`enabled`</ph> attribut de l’élément de configuration <ph id="ph3">`true`</ph> dans l’environnement d’exécution.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">Les éléments d’un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet sont triées par les clés soit selon un spécifique <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implémentation spécifié quand le <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> est créé ou suivant le <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implémentation fournie par les clés elles-mêmes.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>In either case, a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> does not allow duplicate keys.</source>
          <target state="translated">Dans les deux cas, un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> n’autorise pas les clés en double.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">La séquence d’index est basée sur l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Lorsqu’un élément est ajouté, il est inséré dans <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> dans le tri correct ordre et l’indexation s’ajuste en conséquence.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Lorsqu’un élément est supprimé, l’indexation s’ajuste aussi en conséquence.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Par conséquent, l’index d’une paire clé/valeur spécifique peut changer que les éléments sont ajoutés ou supprimés à partir de la <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Operations on a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object tend to be slower than operations on a <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph> object because of the sorting.</source>
          <target state="translated">Opérations sur un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet ont tendance à être plus lentes que les opérations sur un <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph> objet en raison de l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>However, the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> offers more flexibility by allowing access to the values either through the associated keys or through the indexes.</source>
          <target state="translated">Toutefois, le <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> offre davantage de souplesse en autorisant l’accès aux valeurs de clés associées par le biais ou les index.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Elements in this collection can be accessed using an integer index.</source>
          <target state="translated">Éléments de cette collection est accessible à l’aide d’un index d’entiers.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Indexes in this collection are zero-based.</source>
          <target state="translated">Index de cette collection sont de base zéro.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated">Le <ph id="ph1">`foreach`</ph> instruction du langage c# (<ph id="ph2">`for each`</ph> en Visual Basic) retourne un objet du type des éléments dans la collection.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Since each element of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">Étant donné que chaque élément de la <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet est une paire clé/valeur, le type d’élément n’est pas le type de la clé ou le type de la valeur.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Rather, the element type is <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>.</source>
          <target state="translated">Au lieu de cela, le type d’élément est <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>For example:</source>
          <target state="translated">Exemple :</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</source>
          <target state="translated">La <ph id="ph1">`foreach`</ph> instruction est un wrapper autour de l’énumérateur, qui permet la lecture à partir n’écrit ne pas à la collection.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The following code example shows how to create and initialize a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object and how to print out its keys and values.</source>
          <target state="translated">L’exemple de code suivant montre comment créer et initialiser un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet et l’impression de ses clés et valeurs.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Statique public (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> en Visual Basic) de ce type sont thread-safe.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">Il n'est pas garanti que les membres d'instance soient thread-safe.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object can support multiple readers concurrently, as long as the collection is not modified.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> objet peut prendre en charge simultanément, plusieurs lecteurs tant que la collection n’est pas modifiée.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>, all operations must be done through the wrapper returned by the <ph id="ph2">&lt;see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /&gt;</ph> method.</source>
          <target state="translated">Pour garantir la sécurité des threads de le <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>, toutes les opérations doivent être effectuées via le wrapper retourné par la <ph id="ph2">&lt;see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Collections.SortedList">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that is empty, has the default initial capacity, and is sorted according to the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface implemented by each key added to the <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> qui est vide, possède la capacité initiale par défaut et est triée suivant l'interface <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> implémentée par chaque clé ajoutée à l'objet <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>Each key must implement the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Chaque clé doit implémenter le <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface afin de pouvoir faire des comparaisons avec toutes les autres clés dans le <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>The elements are sorted according to the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implementation of each key added to the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Les éléments sont triés en fonction de la <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implémentation de chaque clé ajoutée à la <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">La capacité d’un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet est le nombre d’éléments qui le <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> peut contenir.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Lorsque des éléments sont ajoutés à un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, la capacité est automatiquement augmentée si nécessaire, en réallouant le tableau interne.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite d’avoir à effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Ce constructeur est une opération o (1).</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">L’exemple de code suivant crée des collections à l’aide de différents <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructeurs et illustre les différences de comportement entre les collections.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated">Implémentation de <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> à utiliser lors de la comparaison de clés.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> implementation of each key.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> pour utiliser l'implémentation de <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> de chaque clé.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that is empty, has the default initial capacity, and is sorted according to the specified <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> interface.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> qui est vide, possède la capacité initiale par défaut et est triée suivant l'interface <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> spécifiée.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>The elements are sorted according to the specified <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> implementation.</source>
          <target state="translated">Les éléments sont triés en fonction de l’élément spécifié <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> implémentation.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implementation of each key is used; therefore, each key must implement the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Si le <ph id="ph1">`comparer`</ph> paramètre est <ph id="ph2">`null`</ph>, le <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implémentation de chaque clé est utilisée ; par conséquent, chaque clé doit implémenter le <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface afin de pouvoir faire des comparaisons avec toutes les autres clés dans le <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">La capacité d’un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet est le nombre d’éléments qui le <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> peut contenir.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Lorsque des éléments sont ajoutés à un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, la capacité est automatiquement augmentée si nécessaire, en réallouant le tableau interne.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite d’avoir à effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Ce constructeur est une opération o (1).</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">L’exemple de code suivant crée des collections à l’aide de différents <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructeurs et illustre les différences de comportement entre les collections.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> implementation to copy to a new <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Implémentation de <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> à copier vers un nouvel objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface implemented by each key.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> qui contient des éléments copiés à partir du dictionnaire spécifié, possède la capacité initiale correspondant au nombre d'éléments copiés et est triée suivant l'interface <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> implémentée par chaque clé.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>Each key must implement the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Chaque clé doit implémenter le <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface afin de pouvoir faire des comparaisons avec toutes les autres clés dans le <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The elements are sorted according to the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implementation of each key added to the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Les éléments sont triés en fonction de la <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implémentation de chaque clé ajoutée à la <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> object is an example of an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> implementation that can be passed to this constructor.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> objet est un exemple d’un <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> implémentation qui peut être passée à ce constructeur.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The new <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a copy of the keys and values stored in the <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>.</source>
          <target state="translated">La nouvelle <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet contient une copie des clés et valeurs stockées dans le <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">La capacité d’un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet est le nombre d’éléments qui le <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> peut contenir.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Lorsque des éléments sont ajoutés à un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, la capacité est automatiquement augmentée si nécessaire, en réallouant le tableau interne.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite d’avoir à effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`d`</ph>.</source>
          <target state="translated">Ce constructeur est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est le nombre d’éléments dans <ph id="ph3">`d`</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">L’exemple de code suivant crée des collections à l’aide de différents <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructeurs et illustre les différences de comportement entre les collections.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source><ph id="ph1">&lt;paramref name="d" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>One or more elements in <ph id="ph1">&lt;paramref name="d" /&gt;</ph> do not implement the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated">Un ou plusieurs éléments de <ph id="ph1">&lt;paramref name="d" /&gt;</ph> n'implémentent pas l'interface <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object can contain.</source>
          <target state="translated">Nombre initial d'éléments que l'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> peut contenir.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that is empty, has the specified initial capacity, and is sorted according to the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface implemented by each key added to the <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> qui est vide, possède la capacité initiale spécifiée et est triée suivant l'interface <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> implémentée par chaque clé ajoutée à l'objet <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>Each key must implement the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Chaque clé doit implémenter le <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface afin de pouvoir faire des comparaisons avec toutes les autres clés dans le <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>The elements are sorted according to the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implementation of each key added to the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Les éléments sont triés en fonction de la <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implémentation de chaque clé ajoutée à la <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">La capacité d’un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet est le nombre d’éléments qui le <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> peut contenir.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Lorsque des éléments sont ajoutés à un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, la capacité est automatiquement augmentée si nécessaire, en réallouant le tableau interne.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite d’avoir à effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`initialCapacity`</ph>.</source>
          <target state="translated">Ce constructeur est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">`initialCapacity`</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">L’exemple de code suivant crée des collections à l’aide de différents <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructeurs et illustre les différences de comportement entre les collections.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="initialCapacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="initialCapacity" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>There is not enough available memory to create a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object with the specified <ph id="ph2">&lt;paramref name="initialCapacity" /&gt;</ph>.</source>
          <target state="translated">La mémoire disponible est insuffisante pour créer un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> avec le <ph id="ph2">&lt;paramref name="initialCapacity" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated">Implémentation de <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> à utiliser lors de la comparaison de clés.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> implementation of each key.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> pour utiliser l'implémentation de <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> de chaque clé.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object can contain.</source>
          <target state="translated">Nombre initial d'éléments que l'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> peut contenir.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that is empty, has the specified initial capacity, and is sorted according to the specified <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> interface.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> qui est vide, possède la capacité initiale spécifiée et est triée suivant l'interface <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> spécifiée.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The elements are sorted according to the specified <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> implementation.</source>
          <target state="translated">Les éléments sont triés en fonction de l’élément spécifié <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> implémentation.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implementation of each key is used; therefore, each key must implement the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Si le <ph id="ph1">`comparer`</ph> paramètre est <ph id="ph2">`null`</ph>, le <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implémentation de chaque clé est utilisée ; par conséquent, chaque clé doit implémenter le <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface afin de pouvoir faire des comparaisons avec toutes les autres clés dans le <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">La capacité d’un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet est le nombre d’éléments qui le <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> peut contenir.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Lorsque des éléments sont ajoutés à un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, la capacité est automatiquement augmentée si nécessaire, en réallouant le tableau interne.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite d’avoir à effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">Ce constructeur est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">`capacity`</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">L’exemple de code suivant crée des collections à l’aide de différents <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructeurs et illustre les différences de comportement entre les collections.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>There is not enough available memory to create a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object with the specified <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph>.</source>
          <target state="translated">La mémoire disponible est insuffisante pour créer un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> avec le <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> implementation to copy to a new <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Implémentation de <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> à copier vers un nouvel objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated">Implémentation de <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> à utiliser lors de la comparaison de clés.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> implementation of each key.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> pour utiliser l'implémentation de <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> de chaque clé.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> interface.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> qui contient des éléments copiés à partir du dictionnaire spécifié, possède la capacité initiale correspondant au nombre d'éléments copiés et est triée suivant l'interface <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> spécifiée.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The elements are sorted according to the specified <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> implementation.</source>
          <target state="translated">Les éléments sont triés en fonction de l’élément spécifié <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> implémentation.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implementation of each key is used; therefore, each key must implement the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Si le <ph id="ph1">`comparer`</ph> paramètre est <ph id="ph2">`null`</ph>, le <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implémentation de chaque clé est utilisée ; par conséquent, chaque clé doit implémenter le <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface afin de pouvoir faire des comparaisons avec toutes les autres clés dans le <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> object is an example of an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> implementation that can be passed to this constructor.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> objet est un exemple d’un <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> implémentation qui peut être passée à ce constructeur.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The new <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a copy of the keys and values stored in the <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>.</source>
          <target state="translated">La nouvelle <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet contient une copie des clés et valeurs stockées dans le <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">La capacité d’un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet est le nombre d’éléments qui le <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> peut contenir.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Lorsque des éléments sont ajoutés à un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, la capacité est automatiquement augmentée si nécessaire, en réallouant le tableau interne.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite d’avoir à effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`d`</ph>.</source>
          <target state="translated">Ce constructeur est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est le nombre d’éléments dans <ph id="ph3">`d`</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">L’exemple de code suivant crée des collections à l’aide de différents <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructeurs et illustre les différences de comportement entre les collections.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="d" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and one or more elements in <ph id="ph3">&lt;paramref name="d" /&gt;</ph> do not implement the <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph> et un ou plusieurs éléments de <ph id="ph3">&lt;paramref name="d" /&gt;</ph> n'implémentent pas l'interface <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The key of the element to add.</source>
          <target state="translated">Clé de l'élément à ajouter.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The value of the element to add.</source>
          <target state="translated">Valeur de l'élément à ajouter.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La valeur peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>Adds an element with the specified key and value to a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Ajoute un élément avec la clé et la valeur spécifiées dans un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The insertion point is determined based on the comparer selected, either explicitly or by default, when the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object was created.</source>
          <target state="translated">Le point d’insertion est déterminé en fonction du comparateur sélectionné, explicitement ou par défaut, lorsque le <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet a été créé.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> already equals <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph>, the capacity of the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> object is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> est déjà égale à <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph>, la capacité de la <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> objet est augmenté en réallouant automatiquement le tableau interne, et les éléments existants sont copiés dans le nouveau tableau avant le nouvel élément est ajouté.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object (for example, <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>).</source>
          <target state="translated">Vous pouvez également utiliser le <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> propriété à ajouter de nouveaux éléments en définissant la valeur d’une clé qui n’existe pas dans le <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> objet (par exemple, <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>).</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Toutefois, si la clé spécifiée existe déjà dans le <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, ce qui affecte le <ph id="ph2">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> propriété remplace l’ancienne valeur.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">En revanche, le <ph id="ph1">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> méthode ne modifie pas les éléments existants.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">Les éléments d’un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet sont triées par les clés soit selon un spécifique <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implémentation spécifié quand le <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> est créé ou suivant le <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implémentation fournie par les clés elles-mêmes.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">Une clé ne peut pas être <ph id="ph1">`null`</ph>, mais une valeur peut être.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation for unsorted data, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération pour les données non triées, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>It is an O(log <ph id="ph1">`n`</ph>) operation if the new element is added at the end of the list.</source>
          <target state="translated">Il s’agit d’un O (journal <ph id="ph1">`n`</ph>) opération si le nouvel élément est ajouté à la fin de la liste.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>If insertion causes a resize, the operation is O(<ph id="ph1">`n`</ph>).</source>
          <target state="translated">Si l’insertion conduit à un redimensionnement, l’opération est O (<ph id="ph1">`n`</ph>).</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The following code example shows how to add elements to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant montre comment ajouter des éléments à un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>An element with the specified <ph id="ph1">&lt;paramref name="key" /&gt;</ph> already exists in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Un élément possédant le <ph id="ph1">&lt;paramref name="key" /&gt;</ph> spécifié existe déjà dans l'objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> is set to use the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface, and <ph id="ph3">&lt;paramref name="key" /&gt;</ph> does not implement the <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> est défini pour utiliser l'interface <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> et <ph id="ph3">&lt;paramref name="key" /&gt;</ph> n'implémente pas l'interface <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> est en lecture seule.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> est de taille fixe.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>There is not enough available memory to add the element to the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated">La mémoire disponible est insuffisante pour ajouter l'élément à <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">Le comparateur lève une exception.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Capacity">
          <source>Gets or sets the capacity of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Obtient ou définit la capacité d'un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>The number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object can contain.</source>
          <target state="translated">Nombre d'éléments que l'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> peut contenir.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object can store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> est le nombre d’éléments qui le <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> objet peut stocker.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> est le nombre d’éléments réellement contenus dans le <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> est toujours supérieur ou égal à <ph id="ph2">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>If <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> dépasse <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> lors de l’ajout d’éléments, la capacité est automatiquement augmentée en réallouant le tableau interne avant de copier les anciens éléments et d’ajouter les nouveaux éléments.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> or by setting the <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">La capacité peut être diminuée en appelant <ph id="ph1">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> ou en définissant le <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> propriété explicitement.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>When the value of <ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</source>
          <target state="translated">Lorsque la valeur de <ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> est défini explicitement, le tableau interne est aussi réalloué pour prendre en compte la capacité spécifiée.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the new capacity.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération o (1) ; définition de la propriété est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est la nouvelle capacité.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Capacity">
          <source>The value assigned is less than the current number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">La valeur assignée est inférieure ou égale au nombre actuel d'éléments dans l'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Capacity">
          <source>There is not enough memory available on the system.</source>
          <target state="translated">Il n’y a pas assez de mémoire disponible sur le système.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clear">
          <source>Removes all elements from a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Supprime tous les éléments d'un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> is set to zero and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> a la valeur zéro et des références à d’autres objets des éléments de la collection sont également libérées.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> remains unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> reste inchangé.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source>To reset the capacity of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, call <ph id="ph2">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> or set the <ph id="ph3">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> property directly.</source>
          <target state="translated">Pour rétablir la capacité de la <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> de l’objet, appelez <ph id="ph2">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> ou définir le <ph id="ph3">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> propriété directement.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> to the default capacity.</source>
          <target state="translated">La suppression vide <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> définit la capacité de la <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> à la capacité par défaut.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source>The following code example shows how to trim the unused portions of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object and how to clear the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant montre comment supprimer les parties inutilisées d’une <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet et comment effacer les valeurs de la <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clear">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> est en lecture seule.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clear">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clear">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> est de taille fixe.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clone">
          <source>Creates a shallow copy of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Crée une copie superficielle d'un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clone">
          <source>A shallow copy of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Copie superficielle de l'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clone">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but does not copy the objects that the references refer to.</source>
          <target state="translated">Une copie superficielle d’une collection copie uniquement les éléments de la collection, si elles sont des types référence ou les types valeur, mais il ne copie pas les objets que les références.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clone">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">Les références dans la nouvelle collection désignent les mêmes objets que les références dans la collection d’origine à.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clone">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">En revanche, une copie complète d’une collection copie les éléments et tous les éléments référencés directement ou indirectement par les éléments.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clone">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Clé à rechercher dans l'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains a specific key.</source>
          <target state="translated">Détermine si un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> contient une clé spécifique.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains an element with the specified <ph id="ph3">&lt;paramref name="key" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> contient un élément avec le <ph id="ph3">&lt;paramref name="key" /&gt;</ph> spécifié ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">Les éléments d’un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet sont triées par les clés soit selon un spécifique <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implémentation spécifié quand le <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> est créé ou suivant le <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implémentation fournie par les clés elles-mêmes.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> implements <ph id="ph2">&lt;xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> implémente l'objet <ph id="ph2">&lt;xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>It behaves exactly as <ph id="ph1">&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;</ph>.</source>
          <target state="translated">Il se comporte exactement comme <ph id="ph1">&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode utilise un algorithme de recherche binaire ; Par conséquent, cette méthode est un O (journal <ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">À compter de .NET Framework 2.0, cette méthode utilise les objets de la collection <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> méthodes sur <ph id="ph3">`item`</ph> pour déterminer l’existence d’un élément.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> méthodes de la <ph id="ph3">`item`</ph> paramètre sur les objets dans la collection.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>The following code example shows how to determine whether a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a specific element.</source>
          <target state="translated">L’exemple de code suivant montre comment déterminer si un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet contient un élément spécifique.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">Le comparateur lève une exception.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Clé à rechercher dans l'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains a specific key.</source>
          <target state="translated">Détermine si un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> contient une clé spécifique.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains an element with the specified <ph id="ph3">&lt;paramref name="key" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> contient un élément avec le <ph id="ph3">&lt;paramref name="key" /&gt;</ph> spécifié ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">Les éléments d’un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet sont triées par les clés soit selon un spécifique <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implémentation spécifié quand le <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> est créé ou suivant le <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implémentation fournie par les clés elles-mêmes.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>This method behaves exactly as the <ph id="ph1">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode se comporte exactement comme le <ph id="ph1">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode utilise un algorithme de recherche binaire ; Par conséquent, cette méthode est un O (journal <ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">À compter de .NET Framework 2.0, cette méthode utilise les objets de la collection <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> méthodes sur <ph id="ph3">`item`</ph> pour déterminer l’existence d’un élément.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> méthodes de la <ph id="ph3">`item`</ph> paramètre sur les objets dans la collection.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>The following code example shows how to determine whether a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a specific element.</source>
          <target state="translated">L’exemple de code suivant montre comment déterminer si un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet contient un élément spécifique.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">Le comparateur lève une exception.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Valeur à trouver dans l'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La valeur peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains a specific value.</source>
          <target state="translated">Détermine si un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> contient une valeur spécifique.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains an element with the specified <ph id="ph3">&lt;paramref name="value" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> contient un élément avec le <ph id="ph3">&lt;paramref name="value" /&gt;</ph> spécifié ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>The values of the elements of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are compared to the specified value using the <ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Les valeurs des éléments de la <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet sont comparées à la valeur spécifiée à l’aide de la <ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>This method performs a linear search; therefore, the average execution time is proportional to <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode effectue une recherche linéaire ; Par conséquent, le temps d’exécution moyen est proportionnel au <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Autrement dit, cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">À compter de .NET Framework 2.0, cette méthode utilise les objets de la collection <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> méthodes sur <ph id="ph3">`item`</ph> pour déterminer l’existence d’un élément.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> méthodes de la <ph id="ph3">`item`</ph> paramètre sur les objets dans la collection.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>The following code example shows how to determine whether a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a specific element.</source>
          <target state="translated">L’exemple de code suivant montre comment déterminer si un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet contient un élément spécifique.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> object that is the destination of the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> objects copied from <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> unidimensionnel qui constitue la destination des objets <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> copiés à partir de <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> doit avoir une indexation de base zéro.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Index de base zéro dans un <bpt id="p1">&lt;c&gt;</bpt>tableau<ept id="p1">&lt;/c&gt;</ept> auquel commencer la copie.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>Copies <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> elements to a one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> object, starting at the specified index in the array.</source>
          <target state="translated">Copie des éléments <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> dans un objet <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> unidimensionnel, en commençant à l'index spécifié dans le tableau.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The key/value pairs are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> object in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Les paires clé/valeur sont copiés vers le <ph id="ph1">&lt;xref:System.Array&gt;</ph> objet dans le même ordre que celui dans lequel l’énumérateur itère au sein du <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>To copy only the keys in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, use <ph id="ph2">`SortedList.Keys.CopyTo`</ph>.</source>
          <target state="translated">Pour copier uniquement les clés dans le <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, utilisez <ph id="ph2">`SortedList.Keys.CopyTo`</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>To copy only the values in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, use <ph id="ph2">`SortedList.Values.CopyTo`</ph>.</source>
          <target state="translated">Pour copier uniquement les valeurs dans le <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, utilisez <ph id="ph2">`SortedList.Values.CopyTo`</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The following code example shows how to copy the values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object into a one-dimensional <ph id="ph2">&lt;xref:System.Array&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant montre comment copier les valeurs dans une <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet dans une dimension <ph id="ph2">&lt;xref:System.Array&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> est multidimensionnel.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is greater than the available space from <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Le nombre d'éléments de l'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> source est supérieur à la quantité d'espace disponible entre <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> et la fin du <ph id="ph3">&lt;paramref name="array" /&gt;</ph> de destination.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Le type du <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> source ne peut pas être converti automatiquement en type du <ph id="ph2">&lt;paramref name="array" /&gt;</ph> de destination.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Count">
          <source>Gets the number of elements contained in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Obtient le nombre d'éléments contenus dans un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Nombre d'éléments contenus dans l'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source>Each element is a key/value pair that can be accessed as a <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> object.</source>
          <target state="translated">Chaque élément est une paire clé/valeur qui sont accessibles en tant qu’un <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object can store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> est le nombre d’éléments qui le <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> objet peut stocker.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> est le nombre d’éléments réellement contenus dans le <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> est toujours supérieur ou égal à <ph id="ph2">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source>If <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> dépasse <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> lors de l’ajout d’éléments, la capacité est automatiquement augmentée en réallouant le tableau interne avant de copier les anciens éléments et d’ajouter les nouveaux éléments.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>The zero-based index of the value to get.</source>
          <target state="translated">Index de base zéro de la valeur à obtenir.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>Gets the value at the specified index of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Obtient la valeur à l'index spécifié d'un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>The value at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Valeur à l'index spécifié de l'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">La séquence d’index est basée sur l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Lorsqu’un élément est ajouté, il est inséré dans <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> dans le tri correct ordre et l’indexation s’ajuste en conséquence.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Lorsqu’un élément est supprimé, l’indexation s’ajuste aussi en conséquence.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Par conséquent, l’index d’une paire clé/valeur spécifique peut changer que les éléments sont ajoutés ou supprimés à partir de la <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>The following code example shows how to get one or all the keys or values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant montre comment obtenir une ou toutes les clés ou valeurs dans un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> sort de la plage d'index valides pour l'objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> object that iterates through a <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Retourne un objet <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> qui itère a sein d'un objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> object for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> de l'objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">L'instruction <ph id="ph1">`foreach`</ph> du langage C# (<ph id="ph2">`for each`</ph> en Visual Basic) se charge de la complexité des énumérateurs.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Il est donc recommandé d'utiliser <ph id="ph1">`foreach`</ph> plutôt que de manipuler l'énumérateur directement.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> replace également l'énumérateur à cette position.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">À cette position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> n'est pas défini.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Par conséquent, vous devez appeler <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> retourne le même objet tant que <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> n'est pas appelé.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> affecte l'élément suivant à <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retourne <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Lorsque l’énumérateur est à cette position, les appels suivants à <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> également retourner <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Si le dernier appel à <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retourné <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> n’est pas défini.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Pour attribuer une nouvelle fois <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> au premier élément de la collection, vous pouvez appeler <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> suivi de <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un énumérateur est valide tant que la collection demeure inchangée.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Si des modifications sont apportées à la collection, telles que l'ajout, la modification ou la suppression d'éléments, l'énumérateur est définitivement invalidé et son comportement n'est pas défini.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>The zero-based index of the key to get.</source>
          <target state="translated">Index de base zéro de la clé à obtenir.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>Gets the key at the specified index of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Obtient la clé à l'index spécifié d'un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>The key at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Clé à l'index spécifié de l'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">La séquence d’index est basée sur l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Lorsqu’un élément est ajouté, il est inséré dans <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> dans le tri correct ordre et l’indexation s’ajuste en conséquence.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Lorsqu’un élément est supprimé, l’indexation s’ajuste aussi en conséquence.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Par conséquent, l’index d’une paire clé/valeur spécifique peut changer que les éléments sont ajoutés ou supprimés à partir de la <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>The following code example shows how to get one or all the keys or values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant montre comment obtenir une ou toutes les clés ou valeurs dans un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> sort de la plage d'index valides pour l'objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKeyList">
          <source>Gets the keys in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Obtient les clés d'un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKeyList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> object containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> contenant les clés de l'objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> object is a read-only view of the keys of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Retourné <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> objet est une vue en lecture seule des clés de la <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>Modifications made to the underlying <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are immediately reflected in the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</source>
          <target state="translated">Les modifications apportées à sous-jacent <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> sont immédiatement répercutées dans le <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>The elements of the returned <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> are sorted in the same order as the keys of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Les éléments de retourné <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> sont triés dans le même ordre que les clés de la <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.SortedList.Keys%2A&gt;</ph> property, but returns an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> object instead of an <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> object.</source>
          <target state="translated">Cette méthode est similaire à la <ph id="ph1">&lt;xref:System.Collections.SortedList.Keys%2A&gt;</ph> propriété, mais retourne un <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> au lieu de l’objet une <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>The following code example shows how to get one or all the keys or values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant montre comment obtenir une ou toutes les clés ou valeurs dans un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetValueList">
          <source>Gets the values in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Obtient les valeurs d'un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetValueList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> object containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> contenant les valeurs de l'objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> object is a read-only view of the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Retourné <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> objet est une vue en lecture seule des valeurs de la <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>Modifications made to the underlying <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are immediately reflected in the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</source>
          <target state="translated">Les modifications apportées à sous-jacent <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> sont immédiatement répercutées dans le <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>The elements of the returned <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> are sorted in the same order as the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Les éléments de retourné <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> sont triés dans le même ordre que les valeurs de la <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.SortedList.Values%2A&gt;</ph> property, but returns an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> object instead of an <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> object.</source>
          <target state="translated">Cette méthode est similaire à la <ph id="ph1">&lt;xref:System.Collections.SortedList.Values%2A&gt;</ph> propriété, mais retourne un <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> au lieu de l’objet une <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>The following code example shows how to get one or all the keys or values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant montre comment obtenir une ou toutes les clés ou valeurs dans un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Clé à rechercher dans l'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>Returns the zero-based index of the specified key in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Retourne l'index de base zéro de la clé spécifiée dans un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The zero-based index of the <ph id="ph1">&lt;paramref name="key" /&gt;</ph> parameter, if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object; otherwise, -1.</source>
          <target state="translated">Index de base zéro du paramètre <ph id="ph1">&lt;paramref name="key" /&gt;</ph>, si <ph id="ph2">&lt;paramref name="key" /&gt;</ph> se trouve dans l'objet <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> ; sinon, -1.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created, or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">Les éléments d’un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet sont triées par les clés soit selon un spécifique <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implémentation spécifié quand le <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> est créé ou suivant le <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implémentation fournie par les clés elles-mêmes.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">La séquence d’index est basée sur l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Lorsqu’un élément est ajouté, il est inséré dans <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> dans le tri correct ordre et l’indexation s’ajuste en conséquence.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Lorsqu’un élément est supprimé, l’indexation s’ajuste aussi en conséquence.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Par conséquent, l’index d’une paire clé/valeur spécifique peut changer que les éléments sont ajoutés ou supprimés à partir de la <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode utilise un algorithme de recherche binaire ; Par conséquent, cette méthode est un O (journal <ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">À compter de .NET Framework 2.0, cette méthode utilise les objets de la collection <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> méthodes sur <ph id="ph3">`item`</ph> pour déterminer l’existence d’un élément.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> méthodes de la <ph id="ph3">`item`</ph> paramètre sur les objets dans la collection.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The following code example shows how to determine the index of a key or a value in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant montre comment déterminer l’index d’une clé ou une valeur dans un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">Le comparateur lève une exception.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Valeur à trouver dans l'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La valeur peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>Returns the zero-based index of the first occurrence of the specified value in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Retourne l'index de base zéro de la première occurrence de la valeur spécifiée dans un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The zero-based index of the first occurrence of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter, if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object; otherwise, -1.</source>
          <target state="translated">Index de base zéro de la première occurrence du paramètre <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, si <ph id="ph2">&lt;paramref name="value" /&gt;</ph> se trouve dans l'objet <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> ; sinon, -1.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">La séquence d’index est basée sur l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Lorsqu’un élément est ajouté, il est inséré dans <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> dans le tri correct ordre et l’indexation s’ajuste en conséquence.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Lorsqu’un élément est supprimé, l’indexation s’ajuste aussi en conséquence.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Par conséquent, l’index d’une paire clé/valeur spécifique peut changer que les éléments sont ajoutés ou supprimés à partir de la <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The values of the elements of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are compared to the specified value using the <ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Les valeurs des éléments de la <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> sont comparées à la valeur spécifiée à l’aide de la <ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>This method uses a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode utilise une recherche linéaire ; Par conséquent, cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">À compter de .NET Framework 2.0, cette méthode utilise les objets de la collection <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> méthodes sur <ph id="ph3">`item`</ph> pour déterminer l’existence d’un élément.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> méthodes de la <ph id="ph3">`item`</ph> paramètre sur les objets dans la collection.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The following code example shows how to determine the index of a key or a value in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant montre comment déterminer l’index d’une clé ou une valeur dans un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>Gets a value indicating whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object has a fixed size.</source>
          <target state="translated">Obtient une valeur indiquant si un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> est de taille fixe.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> est de taille fixe ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</source>
          <target state="translated">Une collection de taille fixe ne permet pas l’ajout ou la suppression d’éléments une fois que la collection est créée, mais permet la modification des éléments existants.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Une collection de taille fixe est simplement une collection avec un wrapper qui empêche l’ajout et suppression d’éléments. Par conséquent, si des modifications sont apportées à la collection sous-jacente, y compris l’ajout ou la suppression d’éléments, la collection de taille fixe reflète ces modifications.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>Gets a value indicating whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated">Obtient une valeur indiquant si un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> est en lecture seule.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> est en lecture seule ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Une collection en lecture seule n’autorise pas l’ajout, la suppression ou la modification d’éléments après sa création.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Une collection est en lecture seule est simplement une collection avec un wrapper qui empêche la modification de la collection ; Par conséquent, si des modifications sont apportées à la collection sous-jacente, la collection en lecture seule reflète ces modifications.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>Gets a value indicating whether access to a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is synchronized (thread safe).</source>
          <target state="translated">Obtient une valeur indiquant si l'accès à un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> est synchronisé (thread-safe).</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'accès à l'objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> est synchronisé (thread-safe) ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>To guarantee the thread safety of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, all operations must be done through the wrapper returned by the <ph id="ph2">&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;</ph> method.</source>
          <target state="translated">Pour garantir la sécurité des threads d’un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> de l’objet, toutes les opérations doivent être effectuées via le wrapper retourné par la <ph id="ph2">&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>The following code example shows how to lock a collection using the <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> property during the entire enumeration.</source>
          <target state="translated">L’exemple de code suivant montre comment verrouiller la collection à l’aide du <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> propriété pendant toute l’énumération.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>The following code example shows how to synchronize a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, determine whether a <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> is synchronized, and use a synchronized <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant montre comment synchroniser un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> d’objet, de déterminer si un <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> est synchronisé et utiliser synchronisé <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The key associated with the value to get or set.</source>
          <target state="translated">Clé dont la valeur doit être obtenue ou définie.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>Gets and sets the value associated with a specific key in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Obtient et définit la valeur associée à une clé spécifique dans un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The value associated with the <ph id="ph1">&lt;paramref name="key" /&gt;</ph> parameter in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object, if <ph id="ph3">&lt;paramref name="key" /&gt;</ph> is found; otherwise, <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Valeur associée au paramètre <ph id="ph1">&lt;paramref name="key" /&gt;</ph> dans l'objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>, si <ph id="ph3">&lt;paramref name="key" /&gt;</ph> existe ; sinon, <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> property to access a specific element in a collection by specifying the following syntax: <ph id="ph2">`myCollection[key]`</ph>.</source>
          <target state="translated">Vous pouvez utiliser la <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> propriété accéder à un élément spécifique dans une collection en spécifiant la syntaxe suivante : <ph id="ph2">`myCollection[key]`</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>You can also use this property to add new elements by setting the value of a key that does not exist in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object (for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue)`</ph>.</source>
          <target state="translated">Vous pouvez également utiliser cette propriété pour ajouter de nouveaux éléments en définissant la valeur d’une clé qui n’existe pas dans le <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet (par exemple, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue)`</ph>.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Toutefois, si la clé spécifiée existe déjà dans le <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, ce qui affecte le <ph id="ph2">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> propriété remplace l’ancienne valeur.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">En revanche, le <ph id="ph1">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> méthode ne modifie pas les éléments existants.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">Une clé ne peut pas être <ph id="ph1">`null`</ph>, mais une valeur peut être.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>To distinguish between <ph id="ph1">`null`</ph> that is returned because the specified key is not found and <ph id="ph2">`null`</ph> that is returned because the value of the specified key is <ph id="ph3">`null`</ph>, use the <ph id="ph4">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> method or the <ph id="ph5">&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;</ph> method to determine if the key exists in the list.</source>
          <target state="translated">Faire la distinction entre <ph id="ph1">`null`</ph> qui est retourné parce que la clé spécifiée est introuvable et <ph id="ph2">`null`</ph> qui est retourné parce que la valeur de la clé spécifiée est <ph id="ph3">`null`</ph>, utiliser le <ph id="ph4">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> méthode ou le <ph id="ph5">&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;</ph> pour déterminer si la clé existe dans la liste.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">Les éléments d’un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> sont triées par les clés soit selon un spécifique <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implémentation spécifié quand le <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> est créé ou suivant le <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implémentation fournie par les clés elles-mêmes.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.SortedList.Keys%2A&gt;</ph> property.</source>
          <target state="translated">Le langage c# utilise le mot clé pour définir les indexeurs au lieu d’implémenter la <ph id="ph1">&lt;xref:System.Collections.SortedList.Keys%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implémente <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> comme propriété par défaut, ce qui fournit les mêmes fonctionnalités d'indexation.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>Retrieving the value of this property is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">La récupération de la valeur de cette propriété est un O (journal <ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>Setting the property is an O(log <ph id="ph1">`n`</ph>) operation if the key is already in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Définition de la propriété est un O (journal <ph id="ph1">`n`</ph>) opération si la clé est déjà dans le <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>If the key is not in the list, setting the property is an O(<ph id="ph1">`n`</ph>) operation for unsorted data, or O(log <ph id="ph2">`n`</ph>) if the new element is added at the end of the list.</source>
          <target state="translated">Si la clé n’est pas dans la liste, la propriété est un O (<ph id="ph1">`n`</ph>) opération pour les données non triées, ou O (journal <ph id="ph2">`n`</ph>) si le nouvel élément est ajouté à la fin de la liste.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>If insertion causes a resize, the operation is O(<ph id="ph1">`n`</ph>).</source>
          <target state="translated">Si l’insertion conduit à un redimensionnement, l’opération est O (<ph id="ph1">`n`</ph>).</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The property is set and the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated">La propriété est définie et l'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> est en lecture seule.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The property is set, <ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not exist in the collection, and the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">La propriété est définie, <ph id="ph1">&lt;paramref name="key" /&gt;</ph> n'existe pas dans la collection et <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> est de taille fixe.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>There is not enough available memory to add the element to the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated">La mémoire disponible est insuffisante pour ajouter l'élément à <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">Le comparateur lève une exception.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Keys">
          <source>Gets the keys in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Obtient les clés d'un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> contenant les clés de l'objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> object is a read-only view of the keys of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> objet est une vue en lecture seule des clés de la <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>Modifications made to the underlying <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are immediately reflected in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Les modifications apportées à sous-jacent <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> sont immédiatement répercutées dans le <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>The elements of the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> are sorted in the same order as the keys of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Les éléments de la <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> sont triés dans le même ordre que les clés de la <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>This property is similar to the <ph id="ph1">&lt;xref:System.Collections.SortedList.GetKeyList%2A&gt;</ph> method, but returns an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> object instead of an <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> object.</source>
          <target state="translated">Cette propriété est similaire à la <ph id="ph1">&lt;xref:System.Collections.SortedList.GetKeyList%2A&gt;</ph> (méthode), mais retourne un <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> au lieu de l’objet une <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>The key of the element to remove.</source>
          <target state="translated">Clé de l'élément à supprimer.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>Removes the element with the specified key from a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Supprime d'un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> l'élément ayant la clé spécifiée.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object does not contain an element with the specified key, the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> remains unchanged.</source>
          <target state="translated">Si l'objet <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> ne contient pas d'élément avec la clé spécifiée, <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> reste inchangé.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>No exception is thrown.</source>
          <target state="translated">Aucune exception n'est levée.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">Dans des collections d’éléments contigus, telles que les listes, les éléments qui suivent l’élément supprimé remontent pour occuper l’espace libéré.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Si la collection est indexée, les index des éléments déplacés sont également mis à jour.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">Ce comportement ne s’applique pas aux collections dont les éléments sont regroupés de manière conceptuelle en compartiments, comme par exemple les tables de hachage.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>The following code example shows how to remove elements from a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant montre comment supprimer des éléments d’un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> est en lecture seule.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> est de taille fixe.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">Index de base zéro de l'élément à supprimer.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>Removes the element at the specified index of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Supprime l'élément à l'index spécifié d'un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">La séquence d’index est basée sur l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Lorsqu’un élément est ajouté, il est inséré dans <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> dans le tri correct ordre et l’indexation s’ajuste en conséquence.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Lorsqu’un élément est supprimé, l’indexation s’ajuste aussi en conséquence.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Par conséquent, l’index d’une paire clé/valeur spécifique peut changer que les éléments sont ajoutés ou supprimés à partir de la <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">Dans des collections d’éléments contigus, telles que les listes, les éléments qui suivent l’élément supprimé remontent pour occuper l’espace libéré.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Si la collection est indexée, les index des éléments déplacés sont également mis à jour.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">Ce comportement ne s’applique pas aux collections dont les éléments sont regroupés de manière conceptuelle en compartiments, comme par exemple les tables de hachage.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The following code example shows how to remove elements from a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant montre comment supprimer des éléments d’un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> sort de la plage d'index valides pour l'objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> est en lecture seule.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> est de taille fixe.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The zero-based index at which to save <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Index de base zéro au niveau duquel enregistrer <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to save into the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> à enregistrer dans l'objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La valeur peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>Replaces the value at a specific index in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Remplace la valeur à l'index spécifié dans un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">La séquence d’index est basée sur l’ordre de tri.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">Lorsqu’un élément est ajouté, il est inséré dans <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> dans le tri correct ordre et l’indexation s’ajuste en conséquence.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">Lorsqu’un élément est supprimé, l’indexation s’ajuste aussi en conséquence.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Par conséquent, l’index d’une paire clé/valeur spécifique peut changer que les éléments sont ajoutés ou supprimés à partir de la <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The following code example shows how to replace the value of an existing element in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant montre comment remplacer la valeur d’un élément existant dans un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> sort de la plage d'index valides pour l'objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object to synchronize.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> à synchroniser.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>Returns a synchronized (thread-safe) wrapper for a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Retourne un wrapper synchronisé (thread-safe) pour un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>A synchronized (thread-safe) wrapper for the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Wrapper synchronisé (thread-safe) pour l'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>To guarantee the thread safety of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, all operations must be done through this wrapper only.</source>
          <target state="translated">Pour garantir la sécurité des threads d’un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> de l’objet, toutes les opérations doivent être effectuées via ce wrapper uniquement.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> property during the entire enumeration.</source>
          <target state="translated">L’exemple de code suivant montre comment verrouiller la collection à l’aide de la <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> propriété pendant toute l’énumération.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>The following code example shows how to synchronize a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, determine whether a <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> is synchronized, and use a synchronized <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant montre comment synchroniser un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> d’objet, de déterminer si un <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> est synchronisé et utiliser synchronisé <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source><ph id="ph1">&lt;paramref name="list" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="list" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Gets an object that can be used to synchronize access to a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Obtient un objet qui peut être utilisé pour synchroniser l'accès à un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Objet pouvant être utilisé pour synchroniser l'accès à l'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>To create a synchronized version of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, use the <ph id="ph2">&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;</ph> method.</source>
          <target state="translated">Pour créer une version synchronisée de la <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> de l’objet, utilisez le <ph id="ph2">&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>However, derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">Toutefois, les classes dérivées peuvent fournir leur propre version synchronisée de la <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> à l’aide de la <ph id="ph2">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>, not directly on the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Le code de synchronisation doit effectuer les opérations sur le <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> de la <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>, et non directement sur le <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">Cela garantit un bon fonctionnement des collections dérivées d’autres objets.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Plus particulièrement, il maintient la synchronisation est assurée avec les autres threads qui pourraient modifier simultanément le <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> property during the entire enumeration.</source>
          <target state="translated">L’exemple de code suivant montre comment verrouiller la collection à l’aide de la <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> propriété pendant toute l’énumération.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that iterates through the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated">Retourne un <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> qui itère au sein de <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> pour <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">(Visual Basic, c#)</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">L'instruction <ph id="ph1">`foreach`</ph> du langage C# (<ph id="ph2">`for each`</ph> en Visual Basic) se charge de la complexité des énumérateurs.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Il est donc recommandé d'utiliser <ph id="ph1">`foreach`</ph> plutôt que de manipuler l'énumérateur directement.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> replace également l'énumérateur à cette position.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">À cette position, l’appel <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> lève une exception.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Par conséquent, vous devez appeler <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> retourne le même objet tant que <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> n'est pas appelé.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> affecte l'élément suivant à <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retourne <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Lorsque l’énumérateur est à cette position, les appels suivants à <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> également retourner <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">Si le dernier appel à <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retourné <ph id="ph2">`false`</ph>, l’appel <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> lève une exception.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Pour attribuer une nouvelle fois <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> au premier élément de la collection, vous pouvez appeler <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> suivi de <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un énumérateur est valide tant que la collection demeure inchangée.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou la suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> lève une <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Si la collection est modifiée entre <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> retourne l’élément auquel il est attribué, même si l’énumérateur est déjà invalidé.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.TrimToSize">
          <source>Sets the capacity to the actual number of elements in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Affecte à la capacité le nombre réel d'éléments d'un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</source>
          <target state="translated">Cette méthode peut être utilisée pour réduire la surcharge de mémoire d’une collection si aucun nouvel élément ne doit être ajouté à la collection.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>To reset a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object to its initial state, call the <ph id="ph2">&lt;xref:System.Collections.SortedList.Clear%2A&gt;</ph> method before calling <ph id="ph3">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">Pour réinitialiser un <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet à son état initial, l’appel de la <ph id="ph2">&lt;xref:System.Collections.SortedList.Clear%2A&gt;</ph> méthode avant d’appeler <ph id="ph3">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> to the default capacity.</source>
          <target state="translated">La suppression vide <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> définit la capacité de la <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> à la capacité par défaut.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>The following code example shows how to trim the unused portions of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object and how to clear its values.</source>
          <target state="translated">L’exemple de code suivant montre comment supprimer les parties inutilisées d’une <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objet et comment effacer ses valeurs.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.TrimToSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> est en lecture seule.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.TrimToSize">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.TrimToSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> est de taille fixe.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Values">
          <source>Gets the values in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Obtient les valeurs d'un objet <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> contenant les valeurs de l'objet <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> object is a read-only view of the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> objet est une vue en lecture seule des valeurs de la <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>Modifications made to the underlying <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are immediately reflected in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Les modifications apportées à sous-jacent <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> sont immédiatement répercutées dans le <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>The elements of the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> are sorted in the same order as the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">Les éléments de la <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> sont triés dans le même ordre que les valeurs de la <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>This property is similar to the <ph id="ph1">&lt;xref:System.Collections.SortedList.GetValueList%2A&gt;</ph> method, but returns an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> object instead of an <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> object.</source>
          <target state="translated">Cette propriété est similaire à la <ph id="ph1">&lt;xref:System.Collections.SortedList.GetValueList%2A&gt;</ph> (méthode), mais retourne un <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> au lieu de l’objet une <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>