<Type Name="IList" FullName="System.Collections.IList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d612016acad4c9592d195fcf4550a33ce2b1a538" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51307739" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IList : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IList implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IList" />
  <TypeSignature Language="VB.NET" Value="Public Interface IList&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public interface class IList : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type IList = interface&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1be67-101">Représente une collection non générique d’objets accessibles séparément par index.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1be67-101">Represents a non-generic collection of objects that can be individually accessed by index.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1be67-102"><xref:System.Collections.IList> est un descendant de la <xref:System.Collections.ICollection> interface et est l’interface de base de toutes les listes non génériques.</span><span class="sxs-lookup"><span data-stu-id="1be67-102"><xref:System.Collections.IList> is a descendant of the <xref:System.Collections.ICollection> interface and is the base interface of all non-generic lists.</span></span> <span data-ttu-id="1be67-103"><xref:System.Collections.IList> implémentations se répartissent en trois catégories : en lecture seule, taille fixe et taille variable.</span><span class="sxs-lookup"><span data-stu-id="1be67-103"><xref:System.Collections.IList> implementations fall into three categories: read-only, fixed-size, and variable-size.</span></span> <span data-ttu-id="1be67-104">En lecture seule <xref:System.Collections.IList> ne peut pas être modifié.</span><span class="sxs-lookup"><span data-stu-id="1be67-104">A read-only <xref:System.Collections.IList> cannot be modified.</span></span> <span data-ttu-id="1be67-105">Une taille fixe <xref:System.Collections.IList> n’autorise pas l’ajout ou la suppression d’éléments, mais elle permet la modification des éléments existants.</span><span class="sxs-lookup"><span data-stu-id="1be67-105">A fixed-size <xref:System.Collections.IList> does not allow the addition or removal of elements, but it allows the modification of existing elements.</span></span> <span data-ttu-id="1be67-106">Une taille de la variable <xref:System.Collections.IList> permet l’ajout, la suppression et la modification des éléments.</span><span class="sxs-lookup"><span data-stu-id="1be67-106">A variable-size <xref:System.Collections.IList> allows the addition, removal, and modification of elements.</span></span>  
  
 <span data-ttu-id="1be67-107">Pour la version générique de cette interface, consultez <xref:System.Collections.Generic.IList%601?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1be67-107">For the generic version of this interface, see <xref:System.Collections.Generic.IList%601?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1be67-108">L’exemple suivant illustre l’implémentation de la <xref:System.Collections.IList> interface permettant de créer une liste simple, une liste de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="1be67-108">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#01)]
 [!code-vb[System.Collections.IList_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#01)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.ArrayList" />
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Collections.Generic.IList`1" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; int" Usage="iList.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1be67-109">Objet à ajouter à <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-109">The object to add to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1be67-110">Ajoute un élément à <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-110">Adds an item to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1be67-111">Position à laquelle le nouvel élément a été inséré, ou -1 pour indiquer que l’élément n’a pas été inséré dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-111">The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1be67-112">L’exemple suivant illustre l’implémentation de la <xref:System.Collections.IList> interface pour créer une liste simple, de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="1be67-112">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple, fixed-size list.</span></span> <span data-ttu-id="1be67-113">Ce code fait partie d’un exemple plus complet pour le <xref:System.Collections.IList> interface.</span><span class="sxs-lookup"><span data-stu-id="1be67-113">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1be67-114">
            <see cref="T:System.Collections.IList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-114">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
          <span data-ttu-id="1be67-115">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-115">-or-</span>
          </span>
          <span data-ttu-id="1be67-116">
            <see cref="T:System.Collections.IList" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-116">The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iList.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1be67-117">Supprime tous les éléments de <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-117">Removes all items from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1be67-118">Les implémentations de cette méthode peuvent varier dans la façon dont ils gèrent la <xref:System.Collections.ICollection.Count%2A?displayProperty=nameWithType> et la capacité d’une collection.</span><span class="sxs-lookup"><span data-stu-id="1be67-118">Implementations of this method can vary in how they handle the <xref:System.Collections.ICollection.Count%2A?displayProperty=nameWithType> and the capacity of a collection.</span></span> <span data-ttu-id="1be67-119">En règle générale, le nombre est défini sur zéro, et les références à d’autres objets à partir des éléments de la collection sont également libérées.</span><span class="sxs-lookup"><span data-stu-id="1be67-119">Typically, the count is set to zero, and references to other objects from elements of the collection are also released.</span></span> <span data-ttu-id="1be67-120">La capacité peut être définie à zéro ou une valeur par défaut, ou elle peut rester inchangée.</span><span class="sxs-lookup"><span data-stu-id="1be67-120">The capacity can be set to zero or a default value, or it can remain unchanged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1be67-121">L’exemple suivant illustre l’implémentation de la <xref:System.Collections.IList> interface permettant de créer une liste simple, une liste de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="1be67-121">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span> <span data-ttu-id="1be67-122">Ce code fait partie d’un exemple plus complet pour le <xref:System.Collections.IList> interface.</span><span class="sxs-lookup"><span data-stu-id="1be67-122">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1be67-123">
            <see cref="T:System.Collections.IList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-123">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool" Usage="iList.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1be67-124">Objet à rechercher dans <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-124">The object to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1be67-125">Détermine si <see cref="T:System.Collections.IList" /> contient une valeur spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-125">Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1be67-126">
            <see langword="true" /> si le <see cref="T:System.Object" /> se trouve dans le <see cref="T:System.Collections.IList" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-126">
              <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1be67-127">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `item` pour déterminer l’existence d’un élément.</span><span class="sxs-lookup"><span data-stu-id="1be67-127">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="1be67-128">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="1be67-128">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1be67-129">L’exemple suivant illustre l’implémentation de la <xref:System.Collections.IList> interface permettant de créer une liste simple, une liste de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="1be67-129">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span> <span data-ttu-id="1be67-130">Ce code fait partie d’un exemple plus complet pour le <xref:System.Collections.IList> interface.</span><span class="sxs-lookup"><span data-stu-id="1be67-130">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int" Usage="iList.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1be67-131">Objet à rechercher dans <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-131">The object to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1be67-132">Détermine l'index d'un élément spécifique d'<see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-132">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1be67-133">Index de <paramref name="value" /> s'il figure dans la liste ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-133">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1be67-134">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `item` pour déterminer l’existence d’un élément.</span><span class="sxs-lookup"><span data-stu-id="1be67-134">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="1be67-135">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="1be67-135">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1be67-136">L’exemple suivant illustre l’implémentation de la <xref:System.Collections.IList> interface permettant de créer une liste simple, une liste de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="1be67-136">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span> <span data-ttu-id="1be67-137">Ce code fait partie d’un exemple plus complet pour le <xref:System.Collections.IList> interface.</span><span class="sxs-lookup"><span data-stu-id="1be67-137">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit" Usage="iList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1be67-138">Index de base zéro auquel la <c>valeur</c> doit être insérée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-138">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="1be67-139">Objet à insérer dans <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-139">The object to insert into the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1be67-140">Insère un élément dans <see cref="T:System.Collections.IList" /> à l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-140">Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1be67-141">Si `index` est égal au nombre d'éléments dans <xref:System.Collections.IList>, `value` est ajouté à la fin.</span><span class="sxs-lookup"><span data-stu-id="1be67-141">If `index` equals the number of items in the <xref:System.Collections.IList>, then `value` is appended to the end.</span></span>  
  
 <span data-ttu-id="1be67-142">Dans des collections d’éléments contigus, telles que les listes, les éléments situés après le point d’insertion descendent afin de prendre en compte le nouvel élément.</span><span class="sxs-lookup"><span data-stu-id="1be67-142">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="1be67-143">Si la collection est indexée, les index des éléments déplacés sont également mis à jour.</span><span class="sxs-lookup"><span data-stu-id="1be67-143">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="1be67-144">Ce comportement ne s’applique pas aux collections dont les éléments sont regroupés de manière conceptuelle en compartiments, comme par exemple les tables de hachage.</span><span class="sxs-lookup"><span data-stu-id="1be67-144">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1be67-145">L’exemple suivant illustre l’implémentation de la <xref:System.Collections.IList> interface permettant de créer une liste simple, une liste de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="1be67-145">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span> <span data-ttu-id="1be67-146">Ce code fait partie d’un exemple plus complet pour le <xref:System.Collections.IList> interface.</span><span class="sxs-lookup"><span data-stu-id="1be67-146">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1be67-147">
            <paramref name="index" /> n'est pas un index valide dans <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-147">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1be67-148">
            <see cref="T:System.Collections.IList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-148">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
          <span data-ttu-id="1be67-149">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-149">-or-</span>
          </span>
          <span data-ttu-id="1be67-150">
            <see cref="T:System.Collections.IList" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-150">The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="1be67-151">
            <paramref name="value" /> est une référence null dans <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-151">
              <paramref name="value" /> is null reference in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1be67-152">Obtient une valeur indiquant si <see cref="T:System.Collections.IList" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-152">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1be67-153">
            <see langword="true" /> si <see cref="T:System.Collections.IList" /> est de taille fixe ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-153">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1be67-154">Une collection de taille fixe ne permet pas l’ajout ou la suppression d’éléments après sa création, mais permet la modification des éléments existants.</span><span class="sxs-lookup"><span data-stu-id="1be67-154">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1be67-155">L’exemple suivant illustre l’implémentation de la <xref:System.Collections.IList> interface permettant de créer une liste simple, une liste de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="1be67-155">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span> <span data-ttu-id="1be67-156">Ce code fait partie d’un exemple plus complet pour le <xref:System.Collections.IList> interface.</span><span class="sxs-lookup"><span data-stu-id="1be67-156">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1be67-157">Obtient une valeur indiquant si <see cref="T:System.Collections.IList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-157">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1be67-158">
            <see langword="true" /> si <see cref="T:System.Collections.IList" /> est en lecture seule ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-158">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1be67-159">Une collection en lecture seule n’autorise pas l’ajout, la suppression ou la modification d’éléments après sa création.</span><span class="sxs-lookup"><span data-stu-id="1be67-159">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1be67-160">L’exemple suivant illustre l’implémentation de la <xref:System.Collections.IList> interface permettant de créer une liste simple, une liste de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="1be67-160">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span> <span data-ttu-id="1be67-161">Ce code fait partie d’un exemple plus complet pour le <xref:System.Collections.IList> interface.</span><span class="sxs-lookup"><span data-stu-id="1be67-161">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IList.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1be67-162">Index de base zéro de l'élément à obtenir ou à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-162">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1be67-163">Obtient ou définit l'élément au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-163">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1be67-164">Élément au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-164">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1be67-165">Cette propriété permet d’accéder à un élément spécifique de la collection à l’aide de la syntaxe suivante : `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="1be67-165">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="1be67-166">Le langage c# utilise le mot clé pour définir les indexeurs au lieu d’implémenter le <xref:System.Collections.IList.Item%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1be67-166">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.IList.Item%2A> property.</span></span> <span data-ttu-id="1be67-167">Visual Basic implémente <xref:System.Collections.IList.Item%2A> comme propriété par défaut, ce qui fournit les mêmes fonctionnalités d'indexation.</span><span class="sxs-lookup"><span data-stu-id="1be67-167">Visual Basic implements <xref:System.Collections.IList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1be67-168">L’exemple suivant illustre l’implémentation de la <xref:System.Collections.IList> interface permettant de créer une liste simple, une liste de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="1be67-168">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span> <span data-ttu-id="1be67-169">Ce code fait partie d’un exemple plus complet pour le <xref:System.Collections.IList> interface.</span><span class="sxs-lookup"><span data-stu-id="1be67-169">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1be67-170">
            <paramref name="index" /> n'est pas un index valide dans <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-170">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1be67-171">La propriété est définie et <see cref="T:System.Collections.IList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-171">The property is set and the <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit" Usage="iList.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1be67-172">Objet à supprimer de <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-172">The object to remove from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1be67-173">Supprime la première occurrence d'un objet spécifique de <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-173">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1be67-174">Dans des collections d’éléments contigus, telles que les listes, les éléments qui suivent l’élément supprimé remontent pour occuper l’espace libéré.</span><span class="sxs-lookup"><span data-stu-id="1be67-174">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="1be67-175">Si la collection est indexée, les index des éléments déplacés sont également mis à jour.</span><span class="sxs-lookup"><span data-stu-id="1be67-175">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="1be67-176">Ce comportement ne s’applique pas aux collections dont les éléments sont regroupés de manière conceptuelle en compartiments, comme par exemple les tables de hachage.</span><span class="sxs-lookup"><span data-stu-id="1be67-176">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span> <span data-ttu-id="1be67-177">Si `value` n'est pas trouvé dans <xref:System.Collections.IList>, <xref:System.Collections.IList> reste inchangé et aucune exception n'est levée.</span><span class="sxs-lookup"><span data-stu-id="1be67-177">If `value` is not found in the <xref:System.Collections.IList>, the <xref:System.Collections.IList> remains unchanged and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1be67-178">L’exemple suivant illustre l’implémentation de la <xref:System.Collections.IList> interface permettant de créer une liste simple, une liste de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="1be67-178">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span> <span data-ttu-id="1be67-179">Ce code fait partie d’un exemple plus complet pour le <xref:System.Collections.IList> interface.</span><span class="sxs-lookup"><span data-stu-id="1be67-179">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1be67-180">
            <see cref="T:System.Collections.IList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-180">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
          <span data-ttu-id="1be67-181">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-181">-or-</span>
          </span>
          <span data-ttu-id="1be67-182">
            <see cref="T:System.Collections.IList" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-182">The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1be67-183">Si <paramref name="value" /> n’est pas dans la liste, le <see cref="M:System.Collections.IList.Remove(System.Object)" /> méthode ne doit rien faire.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1be67-183">If <paramref name="value" /> is not in the list, the <see cref="M:System.Collections.IList.Remove(System.Object)" /> method should do nothing.</span>
            </span>
            <span data-ttu-id="1be67-184">En particulier, il ne doit pas lever une exception.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1be67-184">In particular, it should not throw an exception.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1be67-185">Index de base zéro de l'élément à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-185">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1be67-186">Supprime l'élément <see cref="T:System.Collections.IList" /> au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-186">Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1be67-187">Dans des collections d’éléments contigus, telles que les listes, les éléments qui suivent l’élément supprimé remontent pour occuper l’espace libéré.</span><span class="sxs-lookup"><span data-stu-id="1be67-187">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="1be67-188">Si la collection est indexée, les index des éléments déplacés sont également mis à jour.</span><span class="sxs-lookup"><span data-stu-id="1be67-188">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="1be67-189">Ce comportement ne s’applique pas aux collections dont les éléments sont regroupés de manière conceptuelle en compartiments, comme par exemple les tables de hachage.</span><span class="sxs-lookup"><span data-stu-id="1be67-189">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1be67-190">L’exemple suivant illustre l’implémentation de la <xref:System.Collections.IList> interface permettant de créer une liste simple, une liste de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="1be67-190">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span> <span data-ttu-id="1be67-191">Ce code fait partie d’un exemple plus complet pour le <xref:System.Collections.IList> interface.</span><span class="sxs-lookup"><span data-stu-id="1be67-191">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1be67-192">
            <paramref name="index" /> n'est pas un index valide dans <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-192">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1be67-193">
            <see cref="T:System.Collections.IList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-193">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
          <span data-ttu-id="1be67-194">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-194">-or-</span>
          </span>
          <span data-ttu-id="1be67-195">
            <see cref="T:System.Collections.IList" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1be67-195">The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>