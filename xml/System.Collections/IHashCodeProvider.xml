<Type Name="IHashCodeProvider" FullName="System.Collections.IHashCodeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9a3e79a3692d70745a1427c4ec46b9033941d8c2" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52213895" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IHashCodeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHashCodeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IHashCodeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHashCodeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHashCodeProvider" />
  <TypeSignature Language="F#" Value="type IHashCodeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.Obsolete("Please use IEqualityComparer instead.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit un code de hachage pour un objet, à l'aide d'une fonction de hachage personnalisée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!IMPORTANT]
> Nous ne vous recommandons d’utiliser le `IHashCodeProvider` interface pour un nouveau développement. Son remplacement recommandée est la <xref:System.Collections.IEqualityComparer?displayProperty=nameWithType> ou de l’interface de < xef:System.Collections.Generic.IEqualityComparer%601?displayProperty=nameWithType >.

Le <xref:System.Collections.IHashCodeProvider> interface est utilisée conjointement avec la <xref:System.Collections.Hashtable> classe. Les objets utilisés en tant que clés par un <xref:System.Collections.Hashtable> objet doit remplacer le <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> et <xref:System.Object.Equals%2A?displayProperty=nameWithType> méthodes. <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> ou l’implémentation de clé de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> est utilisé en tant que le fournisseur de code de hachage. <xref:System.Object.Equals%2A?displayProperty=nameWithType> ou l’implémentation de clé de <xref:System.Object.Equals%2A?displayProperty=nameWithType> est utilisé en tant que le comparateur.  
  
 Toutefois, certaines surcharges de la <xref:System.Collections.Hashtable> constructeur acceptent un paramètre qui est un <xref:System.Collections.IHashCodeProvider> implémentation ou un paramètre qui est un <xref:System.Collections.IComparer> implémentation ou les deux. Si un <xref:System.Collections.IHashCodeProvider> implémentation est passée au constructeur, le <xref:System.Collections.IHashCodeProvider.GetHashCode%2A?displayProperty=nameWithType> méthode de cette implémentation est utilisée en tant que le fournisseur de code de hachage. Si un <xref:System.Collections.IComparer> implémentation est passée au constructeur, le <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> méthode de cette implémentation est utilisée en tant que le comparateur.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.IHashCodeProvider" />
    <altmember cref="T:System.Collections.IComparer" />
    <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
  </Docs>
  <Members>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IHashCodeProvider.GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : obj -&gt; int" Usage="iHashCodeProvider.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Object" /> pour lequel un code de hachage doit être retourné.</param>
        <summary>Retourne un code de hachage pour l'objet spécifié.</summary>
        <returns>Code de hachage pour l'objet spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de retour à partir de cette méthode ne doit pas être persistante pour deux raisons. Tout d’abord, la fonction de hachage d’une classe peut être modifiée pour générer une meilleure distribution, toutes les valeurs à partir de l’ancienne fonction de hachage de rendu inutilisable. Deuxièmement, l’implémentation par défaut de cette classe ne garantit pas que la même valeur sera retournée par différentes instances.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le type de <paramref name="obj" /> est un type référence et <paramref name="obj" /> a la valeur <see langword="null" />.</exception>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
  </Members>
</Type>