<Type Name="ArrayList" FullName="System.Collections.ArrayList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf52f8cf6bc04e528bdcb846b45ce2ac3377ec4d" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52614188" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ArrayList : ICloneable, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ArrayList extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ArrayList" />
  <TypeSignature Language="VB.NET" Value="Public Class ArrayList&#xA;Implements ICloneable, IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArrayList : ICloneable, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ArrayList = class&#xA;    interface IList&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.ArrayList/ArrayListDebugView))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="689bc-101">Implémente l’interface <see cref="T:System.Collections.IList" /> à l’aide d’un tableau dont la taille est augmentée de manière dynamique au besoin.</span>
      <span class="sxs-lookup">
        <span data-stu-id="689bc-101">Implements the <see cref="T:System.Collections.IList" /> interface using an array whose size is dynamically increased as required.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!IMPORTANT]
>  <span data-ttu-id="689bc-102">Nous ne vous recommandons d’utiliser la `ArrayList` classe pour tout nouveau développement.</span><span class="sxs-lookup"><span data-stu-id="689bc-102">We don't recommend that you use the `ArrayList` class for new development.</span></span> <span data-ttu-id="689bc-103">Au lieu de cela, nous vous recommandons d’utiliser le modèle générique <xref:System.Collections.Generic.List%601> classe.</span><span class="sxs-lookup"><span data-stu-id="689bc-103">Instead, we recommend that you use the generic <xref:System.Collections.Generic.List%601> class.</span></span>
> <span data-ttu-id="689bc-104">Le <xref:System.Collections.ArrayList> classe est conçue pour contenir des collections hétérogènes d’objets.</span><span class="sxs-lookup"><span data-stu-id="689bc-104">The <xref:System.Collections.ArrayList> class is designed to hold heterogeneous collections of objects.</span></span> <span data-ttu-id="689bc-105">Toutefois, elle n’offre pas toujours les meilleures performances.</span><span class="sxs-lookup"><span data-stu-id="689bc-105">However, it does not always offer the best performance.</span></span> <span data-ttu-id="689bc-106">Au lieu de cela, nous recommandons ce qui suit :</span><span class="sxs-lookup"><span data-stu-id="689bc-106">Instead, we recommend the following:</span></span>  
> - <span data-ttu-id="689bc-107">Pour obtenir une collection hétérogène d’objets, utilisez le `List<Object>` (en c#) ou `List(Of Object)` (en Visual Basic), tapez.</span><span class="sxs-lookup"><span data-stu-id="689bc-107">For a heterogeneous collection of objects, use the `List<Object>` (in C#) or `List(Of Object)` (in Visual Basic) type.</span></span>  
> - <span data-ttu-id="689bc-108">Pour obtenir une collection homogène d’objets, utilisez la <xref:System.Collections.Generic.List%601> classe.</span><span class="sxs-lookup"><span data-stu-id="689bc-108">For a homogeneous collection of objects, use the <xref:System.Collections.Generic.List%601> class.</span></span>  
> <span data-ttu-id="689bc-109">Consultez [considérations relatives aux performances](xref:System.Collections.Generic.List%601#performance-considerations) dans le <xref:System.Collections.Generic.List%601> rubrique de référence pour une discussion sur les performances relatives de ces classes.</span><span class="sxs-lookup"><span data-stu-id="689bc-109">See [Performance Considerations](xref:System.Collections.Generic.List%601#performance-considerations) in the <xref:System.Collections.Generic.List%601> reference topic for a discussion of the relative performance of these classes.</span></span>  <span data-ttu-id="689bc-110">Consultez [les collections Non génériques ne doit pas être utilisées](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) sur GitHub pour des informations générales sur l’utilisation de génériques plutôt que des types de collection non générique.</span><span class="sxs-lookup"><span data-stu-id="689bc-110">See [Non-generic collections shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) on GitHub for general information on the use of generic instead of non-generic collection types.</span></span> 
  
 <span data-ttu-id="689bc-111">Le <xref:System.Collections.ArrayList> le tri n’est pas garanti.</span><span class="sxs-lookup"><span data-stu-id="689bc-111">The <xref:System.Collections.ArrayList> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="689bc-112">Vous devez trier les <xref:System.Collections.ArrayList> en appelant son <xref:System.Collections.ArrayList.Sort%2A> méthode avant d’effectuer des opérations (telles que <xref:System.Collections.ArrayList.BinarySearch%2A>) qui nécessitent le <xref:System.Collections.ArrayList> à trier.</span><span class="sxs-lookup"><span data-stu-id="689bc-112">You must sort the <xref:System.Collections.ArrayList> by calling its <xref:System.Collections.ArrayList.Sort%2A> method prior to performing operations (such as <xref:System.Collections.ArrayList.BinarySearch%2A>) that require the <xref:System.Collections.ArrayList> to be sorted.</span></span> <span data-ttu-id="689bc-113">Pour gérer une collection qui est triée automatiquement lors de l’ajout de nouveaux éléments, vous pouvez utiliser la <xref:System.Collections.Generic.SortedSet%601> classe.</span><span class="sxs-lookup"><span data-stu-id="689bc-113">To maintain a collection that is automatically sorted as new elements are added, you can use the <xref:System.Collections.Generic.SortedSet%601> class.</span></span>  
  
 <span data-ttu-id="689bc-114">La capacité d’un <xref:System.Collections.ArrayList> est le nombre d’éléments du <xref:System.Collections.ArrayList> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="689bc-114">The capacity of an <xref:System.Collections.ArrayList> is the number of elements the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="689bc-115">Comme les éléments sont ajoutés à un <xref:System.Collections.ArrayList>, la capacité est automatiquement augmentée par réallocation.</span><span class="sxs-lookup"><span data-stu-id="689bc-115">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="689bc-116">La capacité peut être diminuée en appelant <xref:System.Collections.ArrayList.TrimToSize%2A> ou en définissant le <xref:System.Collections.ArrayList.Capacity%2A> propriété explicitement.</span><span class="sxs-lookup"><span data-stu-id="689bc-116">The capacity can be decreased by calling <xref:System.Collections.ArrayList.TrimToSize%2A> or by setting the <xref:System.Collections.ArrayList.Capacity%2A> property explicitly.</span></span>  
  
 <span data-ttu-id="689bc-117">Pour les très volumineux <xref:System.Collections.ArrayList> objets, vous pouvez augmenter la capacité maximale à 2 milliards des éléments sur un système 64 bits en définissant le `enabled` attribut de l’élément de configuration `true` dans l’environnement d’exécution.</span><span class="sxs-lookup"><span data-stu-id="689bc-117">For very large <xref:System.Collections.ArrayList> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="689bc-118">Éléments de cette collection est accessible à l’aide d’un index d’entiers.</span><span class="sxs-lookup"><span data-stu-id="689bc-118">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="689bc-119">Index de cette collection sont de base zéro.</span><span class="sxs-lookup"><span data-stu-id="689bc-119">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="689bc-120">Le <xref:System.Collections.ArrayList> collection accepte `null` comme une valeur valide.</span><span class="sxs-lookup"><span data-stu-id="689bc-120">The <xref:System.Collections.ArrayList> collection accepts `null` as a valid value.</span></span> <span data-ttu-id="689bc-121">Il permet également des éléments en double.</span><span class="sxs-lookup"><span data-stu-id="689bc-121">It also allows duplicate elements.</span></span>  
  
 <span data-ttu-id="689bc-122">À l’aide de tableaux multidimensionnels en tant qu’éléments dans un <xref:System.Collections.ArrayList> collection n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="689bc-122">Using multidimensional arrays as elements in an <xref:System.Collections.ArrayList> collection is not supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-123">L’exemple suivant montre comment créer et initialiser un <xref:System.Collections.ArrayList> et comment afficher ses valeurs.</span><span class="sxs-lookup"><span data-stu-id="689bc-123">The following example shows how to create and initialize an <xref:System.Collections.ArrayList> and how to display its values.</span></span>  
  
 [!code-cpp[Classic ArrayList Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="689bc-124">Statique public (<see langword="Shared" /> en Visual Basic) de ce type sont thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="689bc-124">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="689bc-125">Il n'est pas garanti que les membres d'instance soient thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="689bc-125">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="689bc-126">Un <see cref="T:System.Collections.ArrayList" /> peut prendre en charge plusieurs lecteurs simultanément, tant que la collection n’est pas modifiée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="689bc-126">An <see cref="T:System.Collections.ArrayList" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="689bc-127">Pour garantir la sécurité des threads de la <see cref="T:System.Collections.ArrayList" />, toutes les opérations doivent être effectuées via le wrapper retourné par la <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" /> (méthode).</span>
      <span class="sxs-lookup">
        <span data-stu-id="689bc-127">To guarantee the thread safety of the <see cref="T:System.Collections.ArrayList" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" /> method.</span>
      </span>
      <span data-ttu-id="689bc-128">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="689bc-128">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="689bc-129">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span>
      <span class="sxs-lookup">
        <span data-stu-id="689bc-129">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="689bc-130">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span>
      <span class="sxs-lookup">
        <span data-stu-id="689bc-130">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.Generic.List`1" />
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
      <span data-ttu-id="689bc-131">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span>
      <span class="sxs-lookup">
        <span data-stu-id="689bc-131">Performing Culture-Insensitive String Operations in Collections</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="689bc-132">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-132">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="689bc-133">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.ArrayList" /> qui est vide et possède la capacité initiale par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-133">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that is empty and has the default initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-134">La capacité d’un <xref:System.Collections.ArrayList> est le nombre d’éléments qui le <xref:System.Collections.ArrayList> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="689bc-134">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="689bc-135">Comme les éléments sont ajoutés à un <xref:System.Collections.ArrayList>, la capacité est augmentée automatiquement selon les besoins en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="689bc-135">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="689bc-136">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-136">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="689bc-137">Ce constructeur est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="689bc-137">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList(System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="new System.Collections.ArrayList : System.Collections.ICollection -&gt; System.Collections.ArrayList" Usage="new System.Collections.ArrayList c" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="689bc-138">
            <see cref="T:System.Collections.ICollection" /> dont les éléments sont copiés dans la nouvelle liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-138">The <see cref="T:System.Collections.ICollection" /> whose elements are copied to the new list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-139">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.ArrayList" /> qui contient des éléments copiés à partir de la collection spécifiée et qui possède la capacité initiale correspondant au nombre d'éléments copiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-139">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that contains elements copied from the specified collection and that has the same initial capacity as the number of elements copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-140">La capacité d’un <xref:System.Collections.ArrayList> est le nombre d’éléments qui le <xref:System.Collections.ArrayList> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="689bc-140">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="689bc-141">Comme les éléments sont ajoutés à un <xref:System.Collections.ArrayList>, la capacité est augmentée automatiquement selon les besoins en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="689bc-141">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="689bc-142">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-142">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="689bc-143">Les éléments sont copiés dans le <xref:System.Collections.ArrayList> dans le même ordre qu’ils sont lus par le <xref:System.Collections.IEnumerator> de la <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="689bc-143">The elements are copied onto the <xref:System.Collections.ArrayList> in the same order they are read by the <xref:System.Collections.IEnumerator> of the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="689bc-144">Ce constructeur est un O (`n`) opération, où `n` est le nombre d’éléments dans `c`.</span><span class="sxs-lookup"><span data-stu-id="689bc-144">This constructor is an O(`n`) operation, where `n` is the number of elements in `c`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689bc-145">
            <paramref name="c" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-145">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.ArrayList : int -&gt; System.Collections.ArrayList" Usage="new System.Collections.ArrayList capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="689bc-146">Nombre d'éléments que la nouvelle liste peut initialement stocker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-146">The number of elements that the new list can initially store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-147">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.ArrayList" /> qui est vide et a la capacité initiale spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-147">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that is empty and has the specified initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-148">La capacité d’un <xref:System.Collections.ArrayList> est le nombre d’éléments qui le <xref:System.Collections.ArrayList> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="689bc-148">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="689bc-149">Comme les éléments sont ajoutés à un <xref:System.Collections.ArrayList>, la capacité est augmentée automatiquement selon les besoins en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="689bc-149">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="689bc-150">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-150">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="689bc-151">Ce constructeur est un O (`n`) opération, où `n` est `capacity`.</span><span class="sxs-lookup"><span data-stu-id="689bc-151">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-152">
            <paramref name="capacity" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-152">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Adapter">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Adapter (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Adapter(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Adapter(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Adapter (list As IList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Adapter(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member Adapter : System.Collections.IList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.Adapter list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="689bc-153">Élément <see cref="T:System.Collections.IList" /> à inclure dans un wrapper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-153">The <see cref="T:System.Collections.IList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-154">Crée un wrapper <see cref="T:System.Collections.ArrayList" /> pour un <see cref="T:System.Collections.IList" /> spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-154">Creates an <see cref="T:System.Collections.ArrayList" /> wrapper for a specific <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-155">Wrapper <see cref="T:System.Collections.ArrayList" /> autour de <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-155">The <see cref="T:System.Collections.ArrayList" /> wrapper around the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-156"><xref:System.Collections.ArrayList.Adapter%2A> ne copiez pas le contenu du <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-156"><xref:System.Collections.ArrayList.Adapter%2A> does not copy the contents of <xref:System.Collections.IList>.</span></span> <span data-ttu-id="689bc-157">Au lieu de cela, elle crée seulement un <xref:System.Collections.ArrayList> wrapper autour de <xref:System.Collections.IList>; par conséquent, modifications apportées à la <xref:System.Collections.IList> affectent également le <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-157">Instead, it only creates an <xref:System.Collections.ArrayList> wrapper around <xref:System.Collections.IList>; therefore, changes to the <xref:System.Collections.IList> also affect the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="689bc-158">Le <xref:System.Collections.ArrayList> classe fournit générique <xref:System.Collections.ArrayList.Reverse%2A>, <xref:System.Collections.ArrayList.BinarySearch%2A> et <xref:System.Collections.ArrayList.Sort%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="689bc-158">The <xref:System.Collections.ArrayList> class provides generic <xref:System.Collections.ArrayList.Reverse%2A>, <xref:System.Collections.ArrayList.BinarySearch%2A> and <xref:System.Collections.ArrayList.Sort%2A> methods.</span></span> <span data-ttu-id="689bc-159">Ce wrapper peut être un moyen d’utiliser ces méthodes sur <xref:System.Collections.IList>; Toutefois, ces opérations génériques via le wrapper peut être moins efficace que les opérations appliquées directement sur le <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-159">This wrapper can be a means to use those methods on <xref:System.Collections.IList>; however, performing these generic operations through the wrapper might be less efficient than operations applied directly on the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="689bc-160">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="689bc-160">This method is an O(1) operation.</span></span>  
  
## <a name="version-compatibility"></a><span data-ttu-id="689bc-161">Compatibilité des versions</span><span class="sxs-lookup"><span data-stu-id="689bc-161">Version Compatibility</span></span>  
 <span data-ttu-id="689bc-162">Dans le .NET Framework version 1.0 et 1.1, appelant le <xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29> surcharge de méthode sur le <xref:System.Collections.ArrayList> wrapper retourné un énumérateur qui traitait le deuxième argument comme une limite supérieure plutôt que comme un nombre.</span><span class="sxs-lookup"><span data-stu-id="689bc-162">In the .NET Framework version 1.0 and 1.1, calling the <xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29> method overload on the <xref:System.Collections.ArrayList> wrapper returned an enumerator that treated the second argument as an upper bound rather than as a count.</span></span> <span data-ttu-id="689bc-163">Dans le [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] le deuxième argument est correctement traité comme un nombre.</span><span class="sxs-lookup"><span data-stu-id="689bc-163">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] the second argument is correctly treated as a count.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689bc-164">
            <paramref name="list" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-164">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
        <altmember cref="M:System.Collections.ArrayList.Reverse" />
        <altmember cref="M:System.Collections.ArrayList.Sort" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; int&#xA;override this.Add : obj -&gt; int" Usage="arrayList.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="689bc-165">
            <see cref="T:System.Object" /> à ajouter à la fin de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-165">The <see cref="T:System.Object" /> to be added to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-166">La valeur peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-166">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-167">Ajoute un objet à la fin de la <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-167">Adds an object to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-168">Index <see cref="T:System.Collections.ArrayList" /> auquel <paramref name="value" /> a été ajouté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-168">The <see cref="T:System.Collections.ArrayList" /> index at which the <paramref name="value" /> has been added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-169"><xref:System.Collections.ArrayList> accepte `null` comme une valeur valide et autorise les éléments en double.</span><span class="sxs-lookup"><span data-stu-id="689bc-169"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="689bc-170">Si <xref:System.Collections.ArrayList.Count%2A> est déjà égale à <xref:System.Collections.ArrayList.Capacity%2A>, la capacité de la <xref:System.Collections.ArrayList> est augmentée en réallouant automatiquement le tableau interne, et les éléments existants sont copiés vers le nouveau tableau avant le nouvel élément est ajouté.</span><span class="sxs-lookup"><span data-stu-id="689bc-170">If <xref:System.Collections.ArrayList.Count%2A> already equals <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="689bc-171">Si <xref:System.Collections.ArrayList.Count%2A> est inférieure à <xref:System.Collections.ArrayList.Capacity%2A>, cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="689bc-171">If <xref:System.Collections.ArrayList.Count%2A> is less than <xref:System.Collections.ArrayList.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="689bc-172">Si la capacité doit être augmentée pour intégrer un nouvel élément, cette méthode devient un O (`n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-172">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-173">L’exemple de code suivant montre comment ajouter des éléments à la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-173">The following code example shows how to add elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="689bc-174">
            <see cref="T:System.Collections.ArrayList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-174">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="689bc-175">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-175">-or-</span>
          </span>
          <span data-ttu-id="689bc-176">
            <see cref="T:System.Collections.ArrayList" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-176">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="abstract member AddRange : System.Collections.ICollection -&gt; unit&#xA;override this.AddRange : System.Collections.ICollection -&gt; unit" Usage="arrayList.AddRange c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="689bc-177">
            <see cref="T:System.Collections.ICollection" /> dont les éléments doivent être ajoutés à la fin de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-177">The <see cref="T:System.Collections.ICollection" /> whose elements should be added to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-178">La collection elle-même ne peut pas avoir la valeur <see langword="null" />, mais elle peut contenir des éléments qui ont la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-178">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-179">Ajoute les éléments de <see cref="T:System.Collections.ICollection" /> à la fin de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-179">Adds the elements of an <see cref="T:System.Collections.ICollection" /> to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-180"><xref:System.Collections.ArrayList> accepte `null` comme une valeur valide et autorise les éléments en double.</span><span class="sxs-lookup"><span data-stu-id="689bc-180"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="689bc-181">L’ordre des éléments dans le <xref:System.Collections.ICollection> est conservé dans le <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-181">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="689bc-182">Si la nouvelle <xref:System.Collections.ArrayList.Count%2A> (actuel <xref:System.Collections.ArrayList.Count%2A> plus la taille de la collection) sera supérieur à <xref:System.Collections.ArrayList.Capacity%2A>, la capacité de la <xref:System.Collections.ArrayList> est augmentée en réallouant automatiquement le tableau interne pour prendre en compte les nouveaux éléments et le éléments existants sont copiés vers le nouveau tableau avant que les nouveaux éléments sont ajoutés.</span><span class="sxs-lookup"><span data-stu-id="689bc-182">If the new <xref:System.Collections.ArrayList.Count%2A> (the current <xref:System.Collections.ArrayList.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="689bc-183">Si le <xref:System.Collections.ArrayList> peut prendre en charge les nouveaux éléments sans augmenter la <xref:System.Collections.ArrayList.Capacity%2A>, cette méthode est un O (`n`) opération, où `n` est le nombre d’éléments à ajouter.</span><span class="sxs-lookup"><span data-stu-id="689bc-183">If the <xref:System.Collections.ArrayList> can accommodate the new elements without increasing the <xref:System.Collections.ArrayList.Capacity%2A>, this method is an O(`n`) operation, where `n` is the number of elements to be added.</span></span> <span data-ttu-id="689bc-184">Si la capacité doit être augmentée pour intégrer les nouveaux éléments, cette méthode devient un O (`n` + `m`) opération, où `n` est le nombre d’éléments à ajouter et `m` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-184">If the capacity needs to be increased to accommodate the new elements, this method becomes an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-185">L’exemple de code suivant montre comment ajouter des éléments à la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-185">The following code example shows how to add elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689bc-186">
            <paramref name="c" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-186">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="689bc-187">
            <see cref="T:System.Collections.ArrayList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-187">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="689bc-188">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-188">-or-</span>
          </span>
          <span data-ttu-id="689bc-189">
            <see cref="T:System.Collections.ArrayList" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-189">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="689bc-190">Utilise un algorithme de recherche binaire pour trouver un élément spécifique dans le <see cref="T:System.Collections.ArrayList" /> trié ou une partie de celui-ci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-190">Uses a binary search algorithm to locate a specific element in the sorted <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member BinarySearch : obj -&gt; int&#xA;override this.BinarySearch : obj -&gt; int" Usage="arrayList.BinarySearch value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="689bc-191">
            <see cref="T:System.Object" /> à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-191">The <see cref="T:System.Object" /> to locate.</span>
          </span>
          <span data-ttu-id="689bc-192">La valeur peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-192">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-193">Recherche un élément utilisant le comparateur par défaut dans le <see cref="T:System.Collections.ArrayList" /> entièrement trié et retourne l'index de base zéro de l'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-193">Searches the entire sorted <see cref="T:System.Collections.ArrayList" /> for an element using the default comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-194">Index de base zéro de <paramref name="value" /> dans le <see cref="T:System.Collections.ArrayList" /> trié, si <paramref name="value" /> existe ; sinon, un nombre négatif qui est le complément de bits de l’index de l’élément suivant supérieur à <paramref name="value" /> ou, s’il n’existe aucun élément supérieur, le complément de bits de <see cref="P:System.Collections.ArrayList.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-194">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-195">Le `value` paramètre et chaque élément de la <xref:System.Collections.ArrayList> doit implémenter le <xref:System.IComparable> interface, ce qui est utilisé pour les comparaisons.</span><span class="sxs-lookup"><span data-stu-id="689bc-195">The `value` parameter and each element of the <xref:System.Collections.ArrayList> must implement the <xref:System.IComparable> interface, which is used for comparisons.</span></span> <span data-ttu-id="689bc-196">Les éléments de la <xref:System.Collections.ArrayList> doivent déjà être triés par ordre croissant selon l’ordre de tri défini par le <xref:System.IComparable> implémentation ; sinon, le résultat peut être incorrect.</span><span class="sxs-lookup"><span data-stu-id="689bc-196">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="689bc-197">Comparaison `null` avec n’importe quel type est autorisée et ne génère pas d’exception lors de l’utilisation <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="689bc-197">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="689bc-198">Lors du tri, `null` est considéré comme étant inférieure à n’importe quel autre objet.</span><span class="sxs-lookup"><span data-stu-id="689bc-198">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="689bc-199">Si le <xref:System.Collections.ArrayList> contient plusieurs éléments avec la même valeur, la méthode retourne uniquement les occurrences, et il peut retourner l’une des occurrences, pas nécessairement le.</span><span class="sxs-lookup"><span data-stu-id="689bc-199">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="689bc-200">Si le <xref:System.Collections.ArrayList> ne contient pas la valeur spécifiée, la méthode retourne un entier négatif.</span><span class="sxs-lookup"><span data-stu-id="689bc-200">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="689bc-201">Vous pouvez appliquer l’opération de complément de bits (~) à cet entier négatif pour obtenir l’index du premier élément qui est supérieure à la valeur de recherche.</span><span class="sxs-lookup"><span data-stu-id="689bc-201">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="689bc-202">Lors de l’insertion de la valeur dans la <xref:System.Collections.ArrayList>, cet index doit être utilisé en tant que le point d’insertion pour conserver l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="689bc-202">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="689bc-203">Cette méthode est un O (log `n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-203">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-204">L’exemple de code suivant montre comment utiliser <xref:System.Collections.ArrayList.BinarySearch%2A> pour localiser un objet spécifique dans le <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-204">The following code example shows how to use <xref:System.Collections.ArrayList.BinarySearch%2A> to locate a specific object in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="689bc-205">Ni <paramref name="value" /> ni les éléments d’<see cref="T:System.Collections.ArrayList" /> n’implémentent l’interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-205">Neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="689bc-206">
            <paramref name="value" /> n’est pas du même type que les éléments de l’<see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-206">
              <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="689bc-207">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-207">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (value As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member BinarySearch : obj * System.Collections.IComparer -&gt; int&#xA;override this.BinarySearch : obj * System.Collections.IComparer -&gt; int" Usage="arrayList.BinarySearch (value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="689bc-208">
            <see cref="T:System.Object" /> à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-208">The <see cref="T:System.Object" /> to locate.</span>
          </span>
          <span data-ttu-id="689bc-209">La valeur peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-209">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="689bc-210">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser pendant la comparaison d'éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-210">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="689bc-211">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-211">-or-</span>
          </span>
          <span data-ttu-id="689bc-212">
            <see langword="null" /> pour utiliser le comparateur par défaut qui correspond à l’implémentation <see cref="T:System.IComparable" /> de chaque élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-212">
              <see langword="null" /> to use the default comparer that is the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-213">Recherche un élément utilisant le comparateur spécifié dans le <see cref="T:System.Collections.ArrayList" /> entièrement trié et retourne l'index de base zéro de l'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-213">Searches the entire sorted <see cref="T:System.Collections.ArrayList" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-214">Index de base zéro de <paramref name="value" /> dans le <see cref="T:System.Collections.ArrayList" /> trié, si <paramref name="value" /> existe ; sinon, un nombre négatif qui est le complément de bits de l’index de l’élément suivant supérieur à <paramref name="value" /> ou, s’il n’existe aucun élément supérieur, le complément de bits de <see cref="P:System.Collections.ArrayList.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-214">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-215">Le comparateur personnalise la manière dont les éléments sont comparés.</span><span class="sxs-lookup"><span data-stu-id="689bc-215">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="689bc-216">Par exemple, vous pouvez utiliser un <xref:System.Collections.CaseInsensitiveComparer> instance en tant que comparateur pour effectuer des recherches de chaîne de non-respect de la casse.</span><span class="sxs-lookup"><span data-stu-id="689bc-216">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="689bc-217">Si `comparer` est fourni, les éléments de la <xref:System.Collections.ArrayList> sont comparées à la valeur spécifiée à l’aide de la <xref:System.Collections.IComparer> implémentation.</span><span class="sxs-lookup"><span data-stu-id="689bc-217">If `comparer` is provided, the elements of the <xref:System.Collections.ArrayList> are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="689bc-218">Les éléments de la <xref:System.Collections.ArrayList> doivent déjà être triés par ordre croissant selon l’ordre de tri défini par `comparer`; sinon, le résultat peut être incorrect.</span><span class="sxs-lookup"><span data-stu-id="689bc-218">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="689bc-219">Si `comparer` est `null`, la comparaison est effectuée à l’aide de la <xref:System.IComparable> implémentation fournie par l’élément lui-même ou par la valeur spécifiée.</span><span class="sxs-lookup"><span data-stu-id="689bc-219">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="689bc-220">Les éléments de la <xref:System.Collections.ArrayList> doivent déjà être triés par ordre croissant selon l’ordre de tri défini par le <xref:System.IComparable> implémentation ; sinon, le résultat peut être incorrect.</span><span class="sxs-lookup"><span data-stu-id="689bc-220">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="689bc-221">Comparaison `null` avec n’importe quel type est autorisée et ne génère pas d’exception lors de l’utilisation <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="689bc-221">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="689bc-222">Lors du tri, `null` est considéré comme étant inférieure à n’importe quel autre objet.</span><span class="sxs-lookup"><span data-stu-id="689bc-222">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="689bc-223">Si le <xref:System.Collections.ArrayList> contient plusieurs éléments avec la même valeur, la méthode retourne uniquement les occurrences, et il peut retourner l’une des occurrences, pas nécessairement le.</span><span class="sxs-lookup"><span data-stu-id="689bc-223">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="689bc-224">Si le <xref:System.Collections.ArrayList> ne contient pas la valeur spécifiée, la méthode retourne un entier négatif.</span><span class="sxs-lookup"><span data-stu-id="689bc-224">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="689bc-225">Vous pouvez appliquer l’opération de complément de bits (~) à cet entier négatif pour obtenir l’index du premier élément qui est supérieure à la valeur de recherche.</span><span class="sxs-lookup"><span data-stu-id="689bc-225">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="689bc-226">Lors de l’insertion de la valeur dans la <xref:System.Collections.ArrayList>, cet index doit être utilisé en tant que le point d’insertion pour conserver l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="689bc-226">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="689bc-227">Cette méthode est un O (log `n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-227">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-228">L’exemple suivant crée un <xref:System.Collections.ArrayList> d’animaux colorés.</span><span class="sxs-lookup"><span data-stu-id="689bc-228">The following example creates an <xref:System.Collections.ArrayList> of colored animals.</span></span> <span data-ttu-id="689bc-229">Fourni <xref:System.Collections.IComparer> effectue la comparaison de chaînes pour la recherche binaire.</span><span class="sxs-lookup"><span data-stu-id="689bc-229">The provided <xref:System.Collections.IComparer> performs the string comparison for the binary search.</span></span> <span data-ttu-id="689bc-230">Les résultats d’une recherche itérative et une recherche binaire sont affichés.</span><span class="sxs-lookup"><span data-stu-id="689bc-230">The results of both an iterative search and a binary search are displayed.</span></span>  
  
 [!code-cpp[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="689bc-231">
            <paramref name="comparer" /> est <see langword="null" />, et ni <paramref name="value" /> ni les éléments de <see cref="T:System.Collections.ArrayList" /> n’implémentent l’interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-231">
              <paramref name="comparer" /> is <see langword="null" /> and neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="689bc-232">
            <paramref name="comparer" /> est <see langword="null" />, et <paramref name="value" /> n’est pas du même type que les éléments de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-232">
              <paramref name="comparer" /> is <see langword="null" /> and <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="689bc-233">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-233">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (int index, int count, object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(int32 index, int32 count, object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (index As Integer, count As Integer, value As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(int index, int count, System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member BinarySearch : int * int * obj * System.Collections.IComparer -&gt; int&#xA;override this.BinarySearch : int * int * obj * System.Collections.IComparer -&gt; int" Usage="arrayList.BinarySearch (index, count, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="689bc-234">Index de début de base zéro de la plage dans laquelle effectuer la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-234">The zero-based starting index of the range to search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="689bc-235">Longueur de la plage dans laquelle effectuer la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-235">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="689bc-236">
            <see cref="T:System.Object" /> à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-236">The <see cref="T:System.Object" /> to locate.</span>
          </span>
          <span data-ttu-id="689bc-237">La valeur peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-237">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="689bc-238">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser pendant la comparaison d'éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-238">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="689bc-239">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-239">-or-</span>
          </span>
          <span data-ttu-id="689bc-240">
            <see langword="null" /> pour utiliser le comparateur par défaut qui correspond à l’implémentation <see cref="T:System.IComparable" /> de chaque élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-240">
              <see langword="null" /> to use the default comparer that is the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-241">Recherche un élément utilisant le comparateur spécifié dans une plage d'éléments du <see cref="T:System.Collections.ArrayList" /> trié et retourne l'index de base zéro de l'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-241">Searches a range of elements in the sorted <see cref="T:System.Collections.ArrayList" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-242">Index de base zéro de <paramref name="value" /> dans le <see cref="T:System.Collections.ArrayList" /> trié, si <paramref name="value" /> existe ; sinon, un nombre négatif qui est le complément de bits de l’index de l’élément suivant supérieur à <paramref name="value" /> ou, s’il n’existe aucun élément supérieur, le complément de bits de <see cref="P:System.Collections.ArrayList.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-242">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-243">Le comparateur personnalise la manière dont les éléments sont comparés.</span><span class="sxs-lookup"><span data-stu-id="689bc-243">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="689bc-244">Par exemple, vous pouvez utiliser un <xref:System.Collections.CaseInsensitiveComparer> instance en tant que comparateur pour effectuer des recherches de chaîne de non-respect de la casse.</span><span class="sxs-lookup"><span data-stu-id="689bc-244">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="689bc-245">Si `comparer` est fourni, les éléments de la <xref:System.Collections.ArrayList> sont comparées à la valeur spécifiée à l’aide de la <xref:System.Collections.IComparer> implémentation.</span><span class="sxs-lookup"><span data-stu-id="689bc-245">If `comparer` is provided, the elements of the <xref:System.Collections.ArrayList> are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="689bc-246">Les éléments de la <xref:System.Collections.ArrayList> doivent déjà être triés par ordre croissant selon l’ordre de tri défini par `comparer`; sinon, le résultat peut être incorrect.</span><span class="sxs-lookup"><span data-stu-id="689bc-246">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="689bc-247">Si `comparer` est `null`, la comparaison est effectuée à l’aide de la <xref:System.IComparable> implémentation fournie par l’élément lui-même ou par la valeur spécifiée.</span><span class="sxs-lookup"><span data-stu-id="689bc-247">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="689bc-248">Les éléments de la <xref:System.Collections.ArrayList> doivent déjà être triés par ordre croissant selon l’ordre de tri défini par le <xref:System.IComparable> implémentation ; sinon, le résultat peut être incorrect.</span><span class="sxs-lookup"><span data-stu-id="689bc-248">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="689bc-249">Comparaison `null` avec n’importe quel type est autorisée et ne génère pas d’exception lors de l’utilisation <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="689bc-249">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="689bc-250">Lors du tri, `null` est considéré comme étant inférieure à n’importe quel autre objet.</span><span class="sxs-lookup"><span data-stu-id="689bc-250">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="689bc-251">Si le <xref:System.Collections.ArrayList> contient plusieurs éléments avec la même valeur, la méthode retourne uniquement les occurrences, et il peut retourner l’une des occurrences, pas nécessairement le.</span><span class="sxs-lookup"><span data-stu-id="689bc-251">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="689bc-252">Si le <xref:System.Collections.ArrayList> ne contient pas la valeur spécifiée, la méthode retourne un entier négatif.</span><span class="sxs-lookup"><span data-stu-id="689bc-252">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="689bc-253">Vous pouvez appliquer l’opération de complément de bits (~) à cet entier négatif pour obtenir l’index du premier élément qui est supérieure à la valeur de recherche.</span><span class="sxs-lookup"><span data-stu-id="689bc-253">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="689bc-254">Lors de l’insertion de la valeur dans la <xref:System.Collections.ArrayList>, cet index doit être utilisé en tant que le point d’insertion pour conserver l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="689bc-254">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="689bc-255">Cette méthode est un O (log `n`) opération, où `n` est `count`.</span><span class="sxs-lookup"><span data-stu-id="689bc-255">This method is an O(log `n`) operation, where `n` is `count`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="689bc-256">
            <paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-256">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-257">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-257">-or-</span>
          </span>
          <span data-ttu-id="689bc-258">
            <paramref name="comparer" /> a la valeur <see langword="null" /> et ni <paramref name="value" />, ni les éléments de <see cref="T:System.Collections.ArrayList" /> n’implémentent l’interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-258">
              <paramref name="comparer" /> is <see langword="null" /> and neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="689bc-259">
            <paramref name="comparer" /> a la valeur <see langword="null" /> et <paramref name="value" /> n’est pas du même type que les éléments de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-259">
              <paramref name="comparer" /> is <see langword="null" /> and <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-260">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-260">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="689bc-261">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-261">-or-</span>
          </span>
          <span data-ttu-id="689bc-262">
            <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-262">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="689bc-263">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-263">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public virtual int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.ArrayList.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="689bc-264">Obtient ou définit le nombre d'éléments que <see cref="T:System.Collections.ArrayList" /> peut contenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-264">Gets or sets the number of elements that the <see cref="T:System.Collections.ArrayList" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="689bc-265">Nombre initial d'éléments que <see cref="T:System.Collections.ArrayList" /> peut contenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-265">The number of elements that the <see cref="T:System.Collections.ArrayList" /> can contain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-266"><xref:System.Collections.ArrayList.Capacity%2A> est le nombre d’éléments qui le <xref:System.Collections.ArrayList> peut stocker.</span><span class="sxs-lookup"><span data-stu-id="689bc-266"><xref:System.Collections.ArrayList.Capacity%2A> is the number of elements that the <xref:System.Collections.ArrayList> can store.</span></span> <span data-ttu-id="689bc-267"><xref:System.Collections.ArrayList.Count%2A> est le nombre d’éléments réellement contenus dans le <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-267"><xref:System.Collections.ArrayList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="689bc-268"><xref:System.Collections.ArrayList.Capacity%2A> est toujours supérieur ou égal à <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-268"><xref:System.Collections.ArrayList.Capacity%2A> is always greater than or equal to <xref:System.Collections.ArrayList.Count%2A>.</span></span> <span data-ttu-id="689bc-269">Si <xref:System.Collections.ArrayList.Count%2A> dépasse <xref:System.Collections.ArrayList.Capacity%2A> lors de l’ajout d’éléments, la capacité est automatiquement augmentée en réallouant le tableau interne avant de copier les anciens éléments et d’ajouter les nouveaux éléments.</span><span class="sxs-lookup"><span data-stu-id="689bc-269">If <xref:System.Collections.ArrayList.Count%2A> exceeds <xref:System.Collections.ArrayList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="689bc-270">La capacité peut être diminuée en appelant <xref:System.Collections.ArrayList.TrimToSize%2A> ou en définissant le <xref:System.Collections.ArrayList.Capacity%2A> propriété explicitement.</span><span class="sxs-lookup"><span data-stu-id="689bc-270">The capacity can be decreased by calling <xref:System.Collections.ArrayList.TrimToSize%2A> or by setting the <xref:System.Collections.ArrayList.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="689bc-271">Lorsque la valeur de <xref:System.Collections.ArrayList.Capacity%2A> n’est défini explicitement, le tableau interne est également réalloué pour prendre en charge de la capacité spécifiée.</span><span class="sxs-lookup"><span data-stu-id="689bc-271">When the value of <xref:System.Collections.ArrayList.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="689bc-272">Récupération de la valeur de cette propriété est une opération o (1) ; définition de la propriété est un O (`n`) opération, où `n` est la nouvelle capacité.</span><span class="sxs-lookup"><span data-stu-id="689bc-272">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-273">La valeur affectée à <see cref="P:System.Collections.ArrayList.Capacity" /> est inférieure à <see cref="P:System.Collections.ArrayList.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-273">
              <see cref="P:System.Collections.ArrayList.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="689bc-274">Il n’y a pas assez de mémoire disponible sur le système.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-274">There is not enough memory available on the system.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="arrayList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="689bc-275">Supprime tous les éléments de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-275">Removes all elements from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-276"><xref:System.Collections.ArrayList.Count%2A> est défini sur zéro et les références à d’autres objets à partir des éléments de la collection sont également libérées.</span><span class="sxs-lookup"><span data-stu-id="689bc-276"><xref:System.Collections.ArrayList.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="689bc-277"><xref:System.Collections.ArrayList.Capacity%2A> reste inchangé.</span><span class="sxs-lookup"><span data-stu-id="689bc-277"><xref:System.Collections.ArrayList.Capacity%2A> remains unchanged.</span></span>  <span data-ttu-id="689bc-278">Pour rétablir la capacité de la <xref:System.Collections.ArrayList>, appelez <xref:System.Collections.ArrayList.TrimToSize%2A> ou définir le <xref:System.Collections.ArrayList.Capacity%2A> propriété directement.</span><span class="sxs-lookup"><span data-stu-id="689bc-278">To reset the capacity of the <xref:System.Collections.ArrayList>, call <xref:System.Collections.ArrayList.TrimToSize%2A> or set the <xref:System.Collections.ArrayList.Capacity%2A> property directly.</span></span> <span data-ttu-id="689bc-279">Suppression vide <xref:System.Collections.ArrayList> définit la capacité de la <xref:System.Collections.ArrayList> à la capacité par défaut.</span><span class="sxs-lookup"><span data-stu-id="689bc-279">Trimming an empty <xref:System.Collections.ArrayList> sets the capacity of the <xref:System.Collections.ArrayList> to the default capacity.</span></span>  
  
 <span data-ttu-id="689bc-280">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-280">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-281">L’exemple de code suivant montre comment supprimer les parties inutilisées de la <xref:System.Collections.ArrayList> et comment effacer les valeurs de la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-281">The following code example shows how to trim the unused portions of the <xref:System.Collections.ArrayList> and how to clear the values of the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="689bc-282">
            <see cref="T:System.Collections.ArrayList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-282">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="689bc-283">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-283">-or-</span>
          </span>
          <span data-ttu-id="689bc-284">
            <see cref="T:System.Collections.ArrayList" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-284">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.TrimToSize" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="arrayList.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="689bc-285">Crée une copie superficielle de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-285">Creates a shallow copy of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-286">Copie superficielle de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-286">A shallow copy of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-287">Une copie superficielle d’une collection copie uniquement les éléments de la collection, si elles sont des types référence ou types valeur, mais il ne copie pas les objets qui la fait référence à.</span><span class="sxs-lookup"><span data-stu-id="689bc-287">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="689bc-288">Les références dans la nouvelle collection pointent vers les mêmes objets que les références dans la collection d’origine pointent vers.</span><span class="sxs-lookup"><span data-stu-id="689bc-288">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="689bc-289">En revanche, une copie complète d’une collection copie les éléments et tous les éléments référencés directement ou indirectement par les éléments.</span><span class="sxs-lookup"><span data-stu-id="689bc-289">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="689bc-290">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-290">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="arrayList.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="689bc-291">
            <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-291">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-292">La valeur peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-292">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-293">Détermine si le <see cref="T:System.Collections.ArrayList" /> contient un élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-293">Determines whether an element is in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-294">
            <see langword="true" /> si <paramref name="item" /> existe dans <see cref="T:System.Collections.ArrayList" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-294">
              <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.ArrayList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-295">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-295">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="689bc-296">Cette méthode détermine l’égalité en appelant <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="689bc-296">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="689bc-297">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `item` pour déterminer l’existence d’un élément.</span><span class="sxs-lookup"><span data-stu-id="689bc-297">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="689bc-298">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="689bc-298">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="689bc-299">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-299">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="689bc-300">Copie <see cref="T:System.Collections.ArrayList" /> ou une partie de celui-ci dans un tableau unidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-300">Copies the <see cref="T:System.Collections.ArrayList" /> or a portion of it to a one-dimensional array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array -&gt; unit&#xA;override this.CopyTo : Array -&gt; unit" Usage="arrayList.CopyTo array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="689bc-301">
            <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-301">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-302">
            <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-302">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-303">Copie l’ensemble de <see cref="T:System.Collections.ArrayList" /> dans un <see cref="T:System.Array" /> compatible unidimensionnel en commençant au début du tableau cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-303">Copies the entire <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the beginning of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-304">Le tableau spécifié doit être d’un type compatible.</span><span class="sxs-lookup"><span data-stu-id="689bc-304">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="689bc-305">Cette méthode utilise <xref:System.Array.Copy%2A?displayProperty=nameWithType> pour copier les éléments.</span><span class="sxs-lookup"><span data-stu-id="689bc-305">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="689bc-306">Les éléments sont copiés dans le <xref:System.Array> dans le même ordre que celui dans lequel l’énumérateur itère au sein du <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-306">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="689bc-307">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-307">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-308">L’exemple de code suivant montre comment copier un <xref:System.Collections.ArrayList> dans une dimension <xref:System.Array?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="689bc-308">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689bc-309">
            <paramref name="array" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-309">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="689bc-310">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-310">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="689bc-311">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-311">-or-</span>
          </span>
          <span data-ttu-id="689bc-312">Le nombre d’éléments du <see cref="T:System.Collections.ArrayList" /> source est supérieur au nombre d’éléments que la destination <paramref name="array" /> peut contenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-312">The number of elements in the source <see cref="T:System.Collections.ArrayList" /> is greater than the number of elements that the destination <paramref name="array" /> can contain.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="689bc-313">Le type du <see cref="T:System.Collections.ArrayList" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-313">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="arrayList.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="689bc-314">
            <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-314">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-315">Le <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-315">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="689bc-316">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-316">The zero-based index in <paramref name="array" /> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-317">Copie l'ensemble de l'objet <see cref="T:System.Collections.ArrayList" /> vers un objet <see cref="T:System.Array" /> unidimensionnel compatible, en commençant à l'index spécifié du tableau cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-317">Copies the entire <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-318">Le tableau spécifié doit être d’un type compatible.</span><span class="sxs-lookup"><span data-stu-id="689bc-318">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="689bc-319">Cette méthode utilise <xref:System.Array.Copy%2A?displayProperty=nameWithType> pour copier les éléments.</span><span class="sxs-lookup"><span data-stu-id="689bc-319">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="689bc-320">Les éléments sont copiés dans le <xref:System.Array> dans le même ordre que celui dans lequel l’énumérateur itère au sein du <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-320">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="689bc-321">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-321">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-322">L’exemple de code suivant montre comment copier un <xref:System.Collections.ArrayList> dans une dimension <xref:System.Array?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="689bc-322">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689bc-323">
            <paramref name="array" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-323">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-324">
            <paramref name="arrayIndex" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-324">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="689bc-325">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-325">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="689bc-326">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-326">-or-</span>
          </span>
          <span data-ttu-id="689bc-327">Le nombre d’éléments dans le <see cref="T:System.Collections.ArrayList" /> source est supérieur à la quantité d’espace disponible entre <paramref name="arrayIndex" /> et la fin du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-327">The number of elements in the source <see cref="T:System.Collections.ArrayList" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="689bc-328">Le type du <see cref="T:System.Collections.ArrayList" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-328">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (int index, Array array, int arrayIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int32 index, class System.Array array, int32 arrayIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(int index, Array ^ array, int arrayIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : int * Array * int * int -&gt; unit&#xA;override this.CopyTo : int * Array * int * int -&gt; unit" Usage="arrayList.CopyTo (index, array, arrayIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="689bc-329">Index de base zéro dans le <see cref="T:System.Collections.ArrayList" /> source au niveau duquel la copie commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-329">The zero-based index in the source <see cref="T:System.Collections.ArrayList" /> at which copying begins.</span>
          </span>
        </param>
        <param name="array">
          <span data-ttu-id="689bc-330">
            <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-330">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-331">Le <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-331">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="689bc-332">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-332">The zero-based index in <paramref name="array" /> at which copying begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="689bc-333">Nombre d'éléments à copier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-333">The number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-334">Copie une plage d’éléments de <see cref="T:System.Collections.ArrayList" /> vers un <see cref="T:System.Array" /> unidimensionnel compatible, en commençant à l’index spécifié du tableau cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-334">Copies a range of elements from the <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-335">Le tableau spécifié doit être d’un type compatible.</span><span class="sxs-lookup"><span data-stu-id="689bc-335">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="689bc-336">Cette méthode utilise <xref:System.Array.Copy%2A?displayProperty=nameWithType> pour copier les éléments.</span><span class="sxs-lookup"><span data-stu-id="689bc-336">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="689bc-337">Les éléments sont copiés dans le <xref:System.Array> dans le même ordre que celui dans lequel l’énumérateur itère au sein du <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-337">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="689bc-338">Cette méthode est un O (`n`) opération, où `n` est `count`.</span><span class="sxs-lookup"><span data-stu-id="689bc-338">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-339">L’exemple de code suivant montre comment copier un <xref:System.Collections.ArrayList> dans une dimension <xref:System.Array?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="689bc-339">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689bc-340">
            <paramref name="array" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-340">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-341">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-341">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="689bc-342">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-342">-or-</span>
          </span>
          <span data-ttu-id="689bc-343">
            <paramref name="arrayIndex" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-343">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="689bc-344">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-344">-or-</span>
          </span>
          <span data-ttu-id="689bc-345">
            <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-345">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="689bc-346">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-346">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="689bc-347">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-347">-or-</span>
          </span>
          <span data-ttu-id="689bc-348">
            <paramref name="index" /> est supérieur ou égal au <see cref="P:System.Collections.ArrayList.Count" /> du <see cref="T:System.Collections.ArrayList" /> source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-348">
              <paramref name="index" /> is equal to or greater than the <see cref="P:System.Collections.ArrayList.Count" /> of the source <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-349">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-349">-or-</span>
          </span>
          <span data-ttu-id="689bc-350">Le nombre d’éléments entre <paramref name="index" /> et la fin du <see cref="T:System.Collections.ArrayList" /> source est supérieur à l’espace disponible entre <paramref name="arrayIndex" /> et la fin du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-350">The number of elements from <paramref name="index" /> to the end of the source <see cref="T:System.Collections.ArrayList" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="689bc-351">Le type du <see cref="T:System.Collections.ArrayList" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-351">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.ArrayList.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="689bc-352">Obtient le nombre d’éléments réellement contenus dans <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-352">Gets the number of elements actually contained in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="689bc-353">Nombre d’éléments réellement contenus dans <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-353">The number of elements actually contained in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-354"><xref:System.Collections.ArrayList.Capacity%2A> est le nombre d’éléments qui le <xref:System.Collections.ArrayList> peut stocker.</span><span class="sxs-lookup"><span data-stu-id="689bc-354"><xref:System.Collections.ArrayList.Capacity%2A> is the number of elements that the <xref:System.Collections.ArrayList> can store.</span></span> <span data-ttu-id="689bc-355"><xref:System.Collections.ArrayList.Count%2A> est le nombre d’éléments réellement contenus dans le <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-355"><xref:System.Collections.ArrayList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="689bc-356"><xref:System.Collections.ArrayList.Capacity%2A> est toujours supérieur ou égal à <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-356"><xref:System.Collections.ArrayList.Capacity%2A> is always greater than or equal to <xref:System.Collections.ArrayList.Count%2A>.</span></span> <span data-ttu-id="689bc-357">Si <xref:System.Collections.ArrayList.Count%2A> dépasse <xref:System.Collections.ArrayList.Capacity%2A> lors de l’ajout d’éléments, la capacité est automatiquement augmentée en réallouant le tableau interne avant de copier les anciens éléments et d’ajouter les nouveaux éléments.</span><span class="sxs-lookup"><span data-stu-id="689bc-357">If <xref:System.Collections.ArrayList.Count%2A> exceeds <xref:System.Collections.ArrayList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="689bc-358">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="689bc-358">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FixedSize">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="689bc-359">Retourne un wrapper de liste de taille fixe, où les éléments peuvent être modifiés, mais ni ajoutés ni supprimés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-359">Returns a list wrapper with a fixed size, where elements are allowed to be modified, but not added or removed.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FixedSize">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList FixedSize (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList FixedSize(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FixedSize (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ FixedSize(System::Collections::ArrayList ^ list);" />
      <MemberSignature Language="F#" Value="static member FixedSize : System.Collections.ArrayList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.FixedSize list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="689bc-360">Élément <see cref="T:System.Collections.ArrayList" /> à inclure dans un wrapper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-360">The <see cref="T:System.Collections.ArrayList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-361">Retourne un wrapper <see cref="T:System.Collections.ArrayList" /> de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-361">Returns an <see cref="T:System.Collections.ArrayList" /> wrapper with a fixed size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-362">Wrapper <see cref="T:System.Collections.ArrayList" /> de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-362">An <see cref="T:System.Collections.ArrayList" /> wrapper with a fixed size.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-363">Ce wrapper peut servir à empêcher les ajouts et suppressions de l’original <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-363">This wrapper can be used to prevent additions to and deletions from the original <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="689bc-364">Les éléments peuvent toujours être modifiés ou remplacés.</span><span class="sxs-lookup"><span data-stu-id="689bc-364">The elements can still be modified or replaced.</span></span>  
  
 <span data-ttu-id="689bc-365">Une collection avec une taille fixe est simplement une collection avec un wrapper qui empêche l’ajout et suppression d’éléments. Par conséquent, si des modifications sont apportées à la collection sous-jacente, y compris l’ajout ou la suppression d’éléments, la collection de taille fixe reflète ces modifications.</span><span class="sxs-lookup"><span data-stu-id="689bc-365">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="689bc-366">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="689bc-366">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-367">L’exemple de code suivant montre comment créer un wrapper de taille fixe autour d’un <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-367">The following code example shows how to create a fixed-size wrapper around an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689bc-368">
            <paramref name="list" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-368">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FixedSize">
      <MemberSignature Language="C#" Value="public static System.Collections.IList FixedSize (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList FixedSize(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FixedSize (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ FixedSize(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member FixedSize : System.Collections.IList -&gt; System.Collections.IList" Usage="System.Collections.ArrayList.FixedSize list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="689bc-369">Élément <see cref="T:System.Collections.IList" /> à inclure dans un wrapper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-369">The <see cref="T:System.Collections.IList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-370">Retourne un wrapper <see cref="T:System.Collections.IList" /> de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-370">Returns an <see cref="T:System.Collections.IList" /> wrapper with a fixed size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-371">Wrapper <see cref="T:System.Collections.IList" /> de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-371">An <see cref="T:System.Collections.IList" /> wrapper with a fixed size.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-372">Ce wrapper peut servir à empêcher les ajouts et suppressions de l’original <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-372">This wrapper can be used to prevent additions to and deletions from the original <xref:System.Collections.IList>.</span></span> <span data-ttu-id="689bc-373">Les éléments peuvent toujours être modifiés ou remplacés.</span><span class="sxs-lookup"><span data-stu-id="689bc-373">The elements can still be modified or replaced.</span></span>  
  
 <span data-ttu-id="689bc-374">Une collection avec une taille fixe est simplement une collection avec un wrapper qui empêche l’ajout et suppression d’éléments. Par conséquent, si des modifications sont apportées à la collection sous-jacente, y compris l’ajout ou la suppression d’éléments, la collection de taille fixe reflète ces modifications.</span><span class="sxs-lookup"><span data-stu-id="689bc-374">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="689bc-375">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="689bc-375">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689bc-376">
            <paramref name="list" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-376">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="689bc-377">Retourne un énumérateur qui itère au sein de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-377">Returns an enumerator that iterates through the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="arrayList.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="689bc-378">Retourne un énumérateur pour le <see cref="T:System.Collections.ArrayList" /> entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-378">Returns an enumerator for the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-379">
            <see cref="T:System.Collections.IEnumerator" /> pour l’intégralité de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-379">An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-380">L'instruction `foreach` du langage C# (`for each` en Visual Basic) se charge de la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="689bc-380">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="689bc-381">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="689bc-381">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="689bc-382">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="689bc-382">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="689bc-383">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="689bc-383">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="689bc-384"><xref:System.Collections.IEnumerator.Reset%2A> replace également l'énumérateur à cette position.</span><span class="sxs-lookup"><span data-stu-id="689bc-384"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="689bc-385">À cette position, <xref:System.Collections.IEnumerator.Current%2A> n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="689bc-385">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="689bc-386">Par conséquent, vous devez appeler <xref:System.Collections.IEnumerator.MoveNext%2A> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-386">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="689bc-387"><xref:System.Collections.IEnumerator.Current%2A> retourne le même objet tant que <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> n'est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="689bc-387"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="689bc-388"><xref:System.Collections.IEnumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-388"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="689bc-389">Si <xref:System.Collections.IEnumerator.MoveNext%2A> passe à la fin de la collection, l’énumérateur est positionnée après le dernier élément dans la collection et <xref:System.Collections.IEnumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="689bc-389">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="689bc-390">Lorsque l’énumérateur se trouve à cette position, les appels suivants à <xref:System.Collections.IEnumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="689bc-390">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="689bc-391">Si le dernier appel à <xref:System.Collections.IEnumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.IEnumerator.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="689bc-391">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="689bc-392">Pour attribuer une nouvelle fois <xref:System.Collections.IEnumerator.Current%2A> au premier élément de la collection, vous pouvez appeler <xref:System.Collections.IEnumerator.Reset%2A> suivi de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-392">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="689bc-393">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="689bc-393">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="689bc-394">Si des modifications sont apportées à la collection, telles que l'ajout, la modification ou la suppression d'éléments, l'énumérateur est définitivement invalidé et son comportement n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="689bc-394">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="689bc-395">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="689bc-395">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="689bc-396">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="689bc-396">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="689bc-397">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="689bc-397">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="689bc-398">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="689bc-398">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-399">L’exemple suivant obtient l’énumérateur pour une <xref:System.Collections.ArrayList>et l’énumérateur pour une plage d’éléments dans le <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-399">The following example gets the enumerator for an <xref:System.Collections.ArrayList>, and the enumerator for a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-csharp[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR/collections.arraylist.getenumerator/cs/program.cs#1)]
 [!code-vb[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/collections.arraylist.getenumerator/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator (index As Integer, count As Integer) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : int * int -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : int * int -&gt; System.Collections.IEnumerator" Usage="arrayList.GetEnumerator (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="689bc-400">Index de début de base zéro de la section <see cref="T:System.Collections.ArrayList" /> à laquelle l’énumérateur devrait se référer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-400">The zero-based starting index of the <see cref="T:System.Collections.ArrayList" /> section that the enumerator should refer to.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="689bc-401">Nombre d’éléments dans la section <see cref="T:System.Collections.ArrayList" /> à laquelle l’énumérateur devrait se référer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-401">The number of elements in the <see cref="T:System.Collections.ArrayList" /> section that the enumerator should refer to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-402">Retourne un énumérateur pour une plage d’éléments d’<see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-402">Returns an enumerator for a range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-403">
            <see cref="T:System.Collections.IEnumerator" /> pour la plage d’éléments spécifiée d’<see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-403">An <see cref="T:System.Collections.IEnumerator" /> for the specified range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-404">Le `foreach` instruction du langage c# (`for each` dans Visual C++, `For Each` Visual Basic) masque la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="689bc-404">The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="689bc-405">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="689bc-405">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="689bc-406">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="689bc-406">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="689bc-407">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="689bc-407">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="689bc-408"><xref:System.Collections.IEnumerator.Reset%2A> replace également l'énumérateur à cette position.</span><span class="sxs-lookup"><span data-stu-id="689bc-408"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="689bc-409">À cette position, <xref:System.Collections.IEnumerator.Current%2A> n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="689bc-409">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="689bc-410">Par conséquent, vous devez appeler <xref:System.Collections.IEnumerator.MoveNext%2A> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-410">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="689bc-411"><xref:System.Collections.IEnumerator.Current%2A> retourne le même objet tant que <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> n'est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="689bc-411"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="689bc-412"><xref:System.Collections.IEnumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-412"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="689bc-413">Si <xref:System.Collections.IEnumerator.MoveNext%2A> passe à la fin de la collection, l’énumérateur est positionnée après le dernier élément dans la collection et <xref:System.Collections.IEnumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="689bc-413">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="689bc-414">Lorsque l’énumérateur se trouve à cette position, les appels suivants à <xref:System.Collections.IEnumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="689bc-414">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="689bc-415">Si le dernier appel à <xref:System.Collections.IEnumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.IEnumerator.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="689bc-415">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="689bc-416">Pour attribuer une nouvelle fois <xref:System.Collections.IEnumerator.Current%2A> au premier élément de la collection, vous pouvez appeler <xref:System.Collections.IEnumerator.Reset%2A> suivi de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-416">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="689bc-417">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="689bc-417">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="689bc-418">Si des modifications sont apportées à la collection, telles que l'ajout, la modification ou la suppression d'éléments, l'énumérateur est définitivement invalidé et son comportement n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="689bc-418">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="689bc-419">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="689bc-419">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="689bc-420">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="689bc-420">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="689bc-421">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="689bc-421">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="689bc-422">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="689bc-422">This method is an O(1) operation.</span></span>  
  
## <a name="version-compatibility"></a><span data-ttu-id="689bc-423">Compatibilité des versions</span><span class="sxs-lookup"><span data-stu-id="689bc-423">Version Compatibility</span></span>  
 <span data-ttu-id="689bc-424">Dans les versions de .NET Framework 1.0 et 1.1, l’énumérateur pour une <xref:System.Collections.ArrayList> wrapper retourné par la <xref:System.Collections.ArrayList.Adapter%2A> méthode traitée le deuxième argument comme une limite supérieure plutôt que comme un nombre.</span><span class="sxs-lookup"><span data-stu-id="689bc-424">In the .NET Framework versions 1.0 and 1.1, the enumerator for an <xref:System.Collections.ArrayList> wrapper returned by the <xref:System.Collections.ArrayList.Adapter%2A> method treated the second argument as an upper bound rather than as a count.</span></span> <span data-ttu-id="689bc-425">Dans le [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] le deuxième argument est correctement traité comme un nombre.</span><span class="sxs-lookup"><span data-stu-id="689bc-425">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] the second argument is correctly treated as a count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-426">L’exemple suivant obtient l’énumérateur pour une <xref:System.Collections.ArrayList>et l’énumérateur pour une plage d’éléments dans le <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-426">The following example gets the enumerator for an <xref:System.Collections.ArrayList>, and the enumerator for a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-csharp[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR/collections.arraylist.getenumerator/cs/program.cs#1)]
 [!code-vb[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/collections.arraylist.getenumerator/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-427">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-427">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="689bc-428">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-428">-or-</span>
          </span>
          <span data-ttu-id="689bc-429">
            <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-429">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="689bc-430">
            <paramref name="index" /> et <paramref name="count" /> ne spécifient pas une plage valide dans le <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-430">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetRange">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ArrayList GetRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ArrayList GetRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRange (index As Integer, count As Integer) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ArrayList ^ GetRange(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetRange : int * int -&gt; System.Collections.ArrayList&#xA;override this.GetRange : int * int -&gt; System.Collections.ArrayList" Usage="arrayList.GetRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="689bc-431">Index de base zéro <see cref="T:System.Collections.ArrayList" /> où débute la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-431">The zero-based <see cref="T:System.Collections.ArrayList" /> index at which the range starts.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="689bc-432">Nombre d'éléments dans la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-432">The number of elements in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-433">Retourne un <see cref="T:System.Collections.ArrayList" /> qui représente un sous-ensemble des éléments du <see cref="T:System.Collections.ArrayList" /> source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-433">Returns an <see cref="T:System.Collections.ArrayList" /> which represents a subset of the elements in the source <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-434">
            <see cref="T:System.Collections.ArrayList" /> qui représente un sous-ensemble des éléments dans le <see cref="T:System.Collections.ArrayList" /> source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-434">An <see cref="T:System.Collections.ArrayList" /> which represents a subset of the elements in the source <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-435">Cette méthode ne crée pas de copies des éléments.</span><span class="sxs-lookup"><span data-stu-id="689bc-435">This method does not create copies of the elements.</span></span> <span data-ttu-id="689bc-436">La nouvelle <xref:System.Collections.ArrayList> est uniquement une fenêtre d’affichage dans la source <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-436">The new <xref:System.Collections.ArrayList> is only a view window into the source <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="689bc-437">Toutefois, toutes les modifications ultérieures apportées à la source de <xref:System.Collections.ArrayList> doivent être effectuées via cette fenêtre d’affichage <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-437">However, all subsequent changes to the source <xref:System.Collections.ArrayList> must be done through this view window <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="689bc-438">Si des modifications sont apportées directement à la source de <xref:System.Collections.ArrayList>, la fenêtre d’affichage <xref:System.Collections.ArrayList> est invalidé et toutes les opérations sur ce dernier renverra une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="689bc-438">If changes are made directly to the source <xref:System.Collections.ArrayList>, the view window <xref:System.Collections.ArrayList> is invalidated and any operations on it will return an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="689bc-439">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="689bc-439">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-440">L’exemple de code suivant montre comment définir et obtenir une plage d’éléments dans le <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-440">The following code example shows how to set and get a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.SetRange Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.SetRange Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.SetRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-441">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-441">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="689bc-442">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-442">-or-</span>
          </span>
          <span data-ttu-id="689bc-443">
            <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-443">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="689bc-444">
            <paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage d’éléments valide du <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-444">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="689bc-445">Retourne l'index de base zéro de la première occurrence d'une valeur trouvée dans <see cref="T:System.Collections.ArrayList" /> ou dans une partie de celui-ci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-445">Returns the zero-based index of the first occurrence of a value in the <see cref="T:System.Collections.ArrayList" /> or in a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int&#xA;override this.IndexOf : obj -&gt; int" Usage="arrayList.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="689bc-446">
            <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-446">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-447">La valeur peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-447">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-448">Recherche le <see cref="T:System.Object" /> spécifié et retourne l’index de base zéro de la première occurrence dans l’ensemble du <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-448">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-449">Index de base zéro de la première occurrence de <paramref name="value" /> dans l'ensemble du <see cref="T:System.Collections.ArrayList" />, s'il existe ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-449">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.ArrayList" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-450">Le <xref:System.Collections.ArrayList> recherche est effectuée vers l’avant à partir du premier élément au dernier élément.</span><span class="sxs-lookup"><span data-stu-id="689bc-450">The <xref:System.Collections.ArrayList> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="689bc-451">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-451">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="689bc-452">Cette méthode détermine l’égalité en appelant <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="689bc-452">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="689bc-453">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `item` pour déterminer l’existence d’un élément.</span><span class="sxs-lookup"><span data-stu-id="689bc-453">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="689bc-454">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="689bc-454">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-455">L’exemple de code suivant montre comment déterminer l’index de la première occurrence d’un élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="689bc-455">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="689bc-456">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-456">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj * int -&gt; int&#xA;override this.IndexOf : obj * int -&gt; int" Usage="arrayList.IndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="689bc-457">
            <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-457">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-458">La valeur peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-458">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="689bc-459">Index de début de base zéro de la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-459">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="689bc-460">0 (zéro) est valide dans une liste vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-460">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-461">Recherche le <see cref="T:System.Object" /> spécifié et retourne l’index de base zéro de la première occurrence au sein de la plage d’éléments du <see cref="T:System.Collections.ArrayList" /> qui s’étend de l’index spécifié jusqu’au dernier élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-461">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-462">Index de base zéro de la première occurrence de <paramref name="value" /> trouvée dans la plage d’éléments de <see cref="T:System.Collections.ArrayList" /> qui s’étend de <paramref name="startIndex" /> jusqu’au dernier élément, le cas échéant ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-462">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from <paramref name="startIndex" /> to the last element, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-463">Le <xref:System.Collections.ArrayList> recherche est effectuée vers l’avant `startIndex` et jusqu’au dernier élément.</span><span class="sxs-lookup"><span data-stu-id="689bc-463">The <xref:System.Collections.ArrayList> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="689bc-464">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est le nombre d’éléments à partir de `startIndex` à la fin de la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-464">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="689bc-465">Cette méthode détermine l’égalité en appelant <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="689bc-465">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="689bc-466">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `item` pour déterminer l’existence d’un élément.</span><span class="sxs-lookup"><span data-stu-id="689bc-466">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="689bc-467">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="689bc-467">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-468">L’exemple de code suivant montre comment déterminer l’index de la première occurrence d’un élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="689bc-468">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-469">
            <paramref name="startIndex" /> est en dehors de la plage d’index valides pour <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-469">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="689bc-470">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-470">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj * int * int -&gt; int&#xA;override this.IndexOf : obj * int * int -&gt; int" Usage="arrayList.IndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="689bc-471">
            <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-471">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-472">La valeur peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-472">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="689bc-473">Index de début de base zéro de la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-473">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="689bc-474">0 (zéro) est valide dans une liste vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-474">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="689bc-475">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-475">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-476">Recherche le <see cref="T:System.Object" /> spécifié et retourne l’index de base zéro de la première occurrence dans la plage d’éléments de <see cref="T:System.Collections.ArrayList" /> qui commence à l’index spécifié et qui contient le nombre d’éléments spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-476">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-477">Index de base zéro de la première occurrence de <paramref name="value" /> trouvée dans la plage d’éléments de <see cref="T:System.Collections.ArrayList" /> qui commence à <paramref name="startIndex" /> et contient le nombre <paramref name="count" /> d’éléments, le cas échéant ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-477">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that starts at <paramref name="startIndex" /> and contains <paramref name="count" /> number of elements, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-478">Le <xref:System.Collections.ArrayList> recherche est effectuée vers l’avant `startIndex` et en terminant à `startIndex` plus `count` -1, si `count` est supérieur à 0.</span><span class="sxs-lookup"><span data-stu-id="689bc-478">The <xref:System.Collections.ArrayList> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="689bc-479">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est `count`.</span><span class="sxs-lookup"><span data-stu-id="689bc-479">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="689bc-480">Cette méthode détermine l’égalité en appelant <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="689bc-480">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="689bc-481">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `item` pour déterminer l’existence d’un élément.</span><span class="sxs-lookup"><span data-stu-id="689bc-481">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="689bc-482">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="689bc-482">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-483">L’exemple de code suivant montre comment déterminer l’index de la première occurrence d’un élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="689bc-483">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-484">
            <paramref name="startIndex" /> est en dehors de la plage d’index valides pour <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-484">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-485">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-485">-or-</span>
          </span>
          <span data-ttu-id="689bc-486">
            <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-486">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="689bc-487">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-487">-or-</span>
          </span>
          <span data-ttu-id="689bc-488">
            <paramref name="startIndex" /> et <paramref name="count" /> ne spécifient pas une section valide dans <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-488">
              <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="689bc-489">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-489">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="arrayList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="689bc-490">Index de base zéro au niveau duquel <paramref name="value" /> doit être inséré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-490">The zero-based index at which <paramref name="value" /> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="689bc-491">
            <see cref="T:System.Object" /> à insérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-491">The <see cref="T:System.Object" /> to insert.</span>
          </span>
          <span data-ttu-id="689bc-492">La valeur peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-492">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-493">Insère un élément dans la classe <see cref="T:System.Collections.ArrayList" /> au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-493">Inserts an element into the <see cref="T:System.Collections.ArrayList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-494"><xref:System.Collections.ArrayList> accepte `null` comme une valeur valide et autorise les éléments en double.</span><span class="sxs-lookup"><span data-stu-id="689bc-494"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="689bc-495">Si <xref:System.Collections.ArrayList.Count%2A> est déjà égale à <xref:System.Collections.ArrayList.Capacity%2A>, la capacité de la <xref:System.Collections.ArrayList> est augmentée en réallouant automatiquement le tableau interne, et les éléments existants sont copiés vers le nouveau tableau avant le nouvel élément est ajouté.</span><span class="sxs-lookup"><span data-stu-id="689bc-495">If <xref:System.Collections.ArrayList.Count%2A> already equals <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="689bc-496">Si `index` est égal à <xref:System.Collections.ArrayList.Count%2A>, `value` est ajouté à la fin de <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-496">If `index` is equal to <xref:System.Collections.ArrayList.Count%2A>, `value` is added to the end of <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="689bc-497">Dans des collections d'éléments contigus, telles que les listes, les éléments situés après le point d'insertion descendent afin de prendre en compte le nouvel élément.</span><span class="sxs-lookup"><span data-stu-id="689bc-497">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="689bc-498">Si la collection est indexée, les index des éléments déplacés sont également mis à jour.</span><span class="sxs-lookup"><span data-stu-id="689bc-498">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="689bc-499">Ce comportement ne s’applique pas aux collections dont les éléments sont regroupés de manière conceptuelle en compartiments, comme par exemple les tables de hachage.</span><span class="sxs-lookup"><span data-stu-id="689bc-499">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="689bc-500">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-500">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-501">L’exemple de code suivant montre comment insérer des éléments dans le <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-501">The following code example shows how to insert elements into the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Insert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-502">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-502">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="689bc-503">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-503">-or-</span>
          </span>
          <span data-ttu-id="689bc-504">
            <paramref name="index" /> est supérieur à <see cref="P:System.Collections.ArrayList.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-504">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="689bc-505">
            <see cref="T:System.Collections.ArrayList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-505">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="689bc-506">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-506">-or-</span>
          </span>
          <span data-ttu-id="689bc-507">
            <see cref="T:System.Collections.ArrayList" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-507">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public virtual void InsertRange (int index, System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertRange(int32 index, class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertRange (index As Integer, c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertRange(int index, System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="abstract member InsertRange : int * System.Collections.ICollection -&gt; unit&#xA;override this.InsertRange : int * System.Collections.ICollection -&gt; unit" Usage="arrayList.InsertRange (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="689bc-508">Index de base zéro au niveau duquel les nouveaux éléments devraient être insérés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-508">The zero-based index at which the new elements should be inserted.</span>
          </span>
        </param>
        <param name="c">
          <span data-ttu-id="689bc-509">
            <see cref="T:System.Collections.ICollection" /> dont les éléments doivent être insérés dans <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-509">The <see cref="T:System.Collections.ICollection" /> whose elements should be inserted into the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-510">La collection elle-même ne peut pas avoir la valeur <see langword="null" />, mais elle peut contenir des éléments qui ont la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-510">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-511">Insère les éléments d’une collection dans <see cref="T:System.Collections.ArrayList" /> au niveau de l’index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-511">Inserts the elements of a collection into the <see cref="T:System.Collections.ArrayList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-512"><xref:System.Collections.ArrayList> accepte `null` comme une valeur valide et autorise les éléments en double.</span><span class="sxs-lookup"><span data-stu-id="689bc-512"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="689bc-513">Si la nouvelle <xref:System.Collections.ArrayList.Count%2A> (actuel <xref:System.Collections.ArrayList.Count%2A> plus la taille de la collection) sera supérieur à <xref:System.Collections.ArrayList.Capacity%2A>, la capacité de la <xref:System.Collections.ArrayList> est augmentée en réallouant automatiquement le tableau interne pour prendre en compte les nouveaux éléments et le éléments existants sont copiés vers le nouveau tableau avant que les nouveaux éléments sont ajoutés.</span><span class="sxs-lookup"><span data-stu-id="689bc-513">If the new <xref:System.Collections.ArrayList.Count%2A> (the current <xref:System.Collections.ArrayList.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="689bc-514">Si `index` est égal à <xref:System.Collections.ArrayList.Count%2A>, les éléments sont ajoutés à la fin de <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-514">If `index` is equal to <xref:System.Collections.ArrayList.Count%2A>, the elements are added to the end of <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="689bc-515">L’ordre des éléments dans le <xref:System.Collections.ICollection> est conservé dans le <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-515">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="689bc-516">Dans des collections d’éléments contigus, telles que les listes, les éléments situés après le point d’insertion descendent afin de prendre en compte le nouvel élément.</span><span class="sxs-lookup"><span data-stu-id="689bc-516">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="689bc-517">Si la collection est indexée, les index des éléments déplacés sont également mis à jour.</span><span class="sxs-lookup"><span data-stu-id="689bc-517">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="689bc-518">Ce comportement ne s’applique pas aux collections dont les éléments sont regroupés de manière conceptuelle en compartiments, comme par exemple les tables de hachage.</span><span class="sxs-lookup"><span data-stu-id="689bc-518">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="689bc-519">Cette méthode est un O (`n` + `m`) opération, où `n` est le nombre d’éléments à ajouter et `m` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-519">This method is an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-520">L’exemple de code suivant montre comment insérer des éléments dans le <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-520">The following code example shows how to insert elements into the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Insert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689bc-521">
            <paramref name="c" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-521">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-522">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-522">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="689bc-523">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-523">-or-</span>
          </span>
          <span data-ttu-id="689bc-524">
            <paramref name="index" /> est supérieur à <see cref="P:System.Collections.ArrayList.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-524">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="689bc-525">
            <see cref="T:System.Collections.ArrayList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-525">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="689bc-526">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-526">-or-</span>
          </span>
          <span data-ttu-id="689bc-527">
            <see cref="T:System.Collections.ArrayList" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-527">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.ArrayList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="689bc-528">Obtient une valeur indiquant si <see cref="T:System.Collections.ArrayList" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-528">Gets a value indicating whether the <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="689bc-529">
            <see langword="true" /> si <see cref="T:System.Collections.ArrayList" /> est de taille fixe ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-529">
              <see langword="true" /> if the <see cref="T:System.Collections.ArrayList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="689bc-530">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-530">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-531">Une collection de taille fixe ne permet pas l’ajout ou la suppression d’éléments après sa création, mais permet la modification des éléments existants.</span><span class="sxs-lookup"><span data-stu-id="689bc-531">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="689bc-532">Une collection avec une taille fixe est simplement une collection avec un wrapper qui empêche l’ajout et suppression d’éléments. Par conséquent, si des modifications sont apportées à la collection sous-jacente, y compris l’ajout ou la suppression d’éléments, la collection de taille fixe reflète ces modifications.</span><span class="sxs-lookup"><span data-stu-id="689bc-532">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="689bc-533">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="689bc-533">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-534">L’exemple de code suivant montre comment créer un wrapper de taille fixe autour d’un <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-534">The following code example shows how to create a fixed-size wrapper around an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.ArrayList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="689bc-535">Obtient une valeur indiquant si <see cref="T:System.Collections.ArrayList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-535">Gets a value indicating whether the <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="689bc-536">
            <see langword="true" /> si <see cref="T:System.Collections.ArrayList" /> est en lecture seule ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-536">
              <see langword="true" /> if the <see cref="T:System.Collections.ArrayList" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="689bc-537">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-537">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-538">Une collection en lecture seule n’autorise pas l’ajout, la suppression ou la modification d’éléments après sa création.</span><span class="sxs-lookup"><span data-stu-id="689bc-538">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="689bc-539">Une collection est en lecture seule est simplement une collection avec un wrapper qui empêche la modification de la collection ; Par conséquent, si des modifications sont apportées à la collection sous-jacente, la collection en lecture seule reflète ces modifications.</span><span class="sxs-lookup"><span data-stu-id="689bc-539">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="689bc-540">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="689bc-540">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-541">L’exemple de code suivant montre comment créer un wrapper en lecture seule autour d’une <xref:System.Collections.ArrayList> et comment déterminer si un <xref:System.Collections.ArrayList> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="689bc-541">The following code example shows how to create a read-only wrapper around an <xref:System.Collections.ArrayList> and how to determine if an <xref:System.Collections.ArrayList> is read-only.</span></span>  
  
 [!code-cpp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.ArrayList.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="689bc-542">Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.ArrayList" /> est synchronisé (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-542">Gets a value indicating whether access to the <see cref="T:System.Collections.ArrayList" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="689bc-543">
            <see langword="true" /> si l'accès à <see cref="T:System.Collections.ArrayList" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-543">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ArrayList" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="689bc-544">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-544">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-545">Pour garantir la sécurité des threads de la <xref:System.Collections.ArrayList>, toutes les opérations doivent être effectuées via le wrapper retourné par la <xref:System.Collections.ArrayList.Synchronized%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="689bc-545">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through the wrapper returned by the <xref:System.Collections.ArrayList.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="689bc-546">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="689bc-546">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="689bc-547">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="689bc-547">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="689bc-548">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="689bc-548">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-549">L’exemple de code suivant montre comment verrouiller la collection en utilisant la <xref:System.Collections.ArrayList.SyncRoot%2A> pendant toute l’énumération.</span><span class="sxs-lookup"><span data-stu-id="689bc-549">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="689bc-550">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="689bc-550">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="689bc-551">L’exemple de code suivant montre comment synchroniser un <xref:System.Collections.ArrayList>, déterminer si un <xref:System.Collections.ArrayList> est synchronisé et utiliser une liste synchronisé <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-551">The following code example shows how to synchronize an <xref:System.Collections.ArrayList>, determine if an <xref:System.Collections.ArrayList> is synchronized and use a synchronized <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Collections.ArrayList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="689bc-552">Index de base zéro de l'élément à obtenir ou à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-552">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-553">Obtient ou définit l'élément au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-553">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="689bc-554">Élément au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-554">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-555">Le <xref:System.Collections.ArrayList.Item%2A> retourne un <xref:System.Object>, de sorte que vous devrez peut-être effectuer un cast de la valeur retournée pour le type d’origine afin de les manipuler.</span><span class="sxs-lookup"><span data-stu-id="689bc-555">The <xref:System.Collections.ArrayList.Item%2A> returns an <xref:System.Object>, so you may need to cast the returned value to the original type in order to manipulate it.</span></span> <span data-ttu-id="689bc-556">Il est important de noter que <xref:System.Collections.ArrayList> n’est pas une collection fortement typée.</span><span class="sxs-lookup"><span data-stu-id="689bc-556">It is important to note that <xref:System.Collections.ArrayList> is not a strongly-typed collection.</span></span> <span data-ttu-id="689bc-557">Pour une alternative fortement typées, consultez <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="689bc-557">For a strongly-typed alternative, see <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="689bc-558"><xref:System.Collections.ArrayList> accepte `null` comme une valeur valide et autorise les éléments en double.</span><span class="sxs-lookup"><span data-stu-id="689bc-558"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="689bc-559">Cette propriété permet d’accéder à un élément spécifique de la collection à l’aide de la syntaxe suivante : `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="689bc-559">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="689bc-560">Le langage c# utilise le mot clé pour définir les indexeurs au lieu d’implémenter le <xref:System.Collections.ArrayList.Item%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="689bc-560">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ArrayList.Item%2A> property.</span></span> <span data-ttu-id="689bc-561">Visual Basic implémente <xref:System.Collections.ArrayList.Item%2A> comme propriété par défaut, ce qui fournit les mêmes fonctionnalités d'indexation.</span><span class="sxs-lookup"><span data-stu-id="689bc-561">Visual Basic implements <xref:System.Collections.ArrayList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="689bc-562">Récupération de la valeur de cette propriété est une opération o (1) ; définition de la propriété est également une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="689bc-562">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-563">L’exemple de code suivant crée un <xref:System.Collections.ArrayList> et ajouter plusieurs éléments.</span><span class="sxs-lookup"><span data-stu-id="689bc-563">The following code example creates an <xref:System.Collections.ArrayList> and adds several items.</span></span> <span data-ttu-id="689bc-564">L’exemple illustre l’accès aux éléments avec le <xref:System.Collections.ArrayList.Item%2A> propriété (l’indexeur en c#) et la modification d’un élément en assignant une nouvelle valeur à la <xref:System.Collections.ArrayList.Item%2A> propriété pour un index spécifié.</span><span class="sxs-lookup"><span data-stu-id="689bc-564">The example demonstrates accessing elements with the <xref:System.Collections.ArrayList.Item%2A> property (the indexer in C#), and changing an element by assigning a new value to the <xref:System.Collections.ArrayList.Item%2A> property for a specified index.</span></span> <span data-ttu-id="689bc-565">L’exemple montre également que le <xref:System.Collections.ArrayList.Item%2A> propriété ne peut pas être utilisée pour accéder ou ajoutez des éléments en dehors de la taille actuelle de la liste.</span><span class="sxs-lookup"><span data-stu-id="689bc-565">The example also shows that the <xref:System.Collections.ArrayList.Item%2A> property cannot be used to access or add elements outside the current size of the list.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Item#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/cpp/source.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Item#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/CS/source.cs#1)]
 [!code-vb[System.Collections.ArrayList.Item#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/VB/source.vb#1)]  
  
 <span data-ttu-id="689bc-566">L’exemple suivant utilise le <xref:System.Collections.ArrayList.Item%2A> propriété explicitement à attribuer des valeurs aux éléments dans la liste.</span><span class="sxs-lookup"><span data-stu-id="689bc-566">The following example uses the <xref:System.Collections.ArrayList.Item%2A> property explicitly to assign values to items in the list.</span></span> <span data-ttu-id="689bc-567">L’exemple définit une classe qui hérite une <xref:System.Collections.ArrayList> et ajoute une méthode pour mélanger les éléments de liste.</span><span class="sxs-lookup"><span data-stu-id="689bc-567">The example defines a class that inherits an <xref:System.Collections.ArrayList> and adds a method to scramble the list items.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Item#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/cpp/source2.cpp#2)]
 [!code-csharp[System.Collections.ArrayList.Item#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/CS/source2.cs#2)]
 [!code-vb[System.Collections.ArrayList.Item#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-568">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-568">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="689bc-569">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-569">-or-</span>
          </span>
          <span data-ttu-id="689bc-570">
            <paramref name="index" /> est supérieur ou égal à <see cref="P:System.Collections.ArrayList.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-570">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="689bc-571">Retourne l'index de base zéro de la dernière occurrence d'une valeur trouvée dans <see cref="T:System.Collections.ArrayList" /> ou une partie de celui-ci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-571">Returns the zero-based index of the last occurrence of a value in the <see cref="T:System.Collections.ArrayList" /> or in a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : obj -&gt; int&#xA;override this.LastIndexOf : obj -&gt; int" Usage="arrayList.LastIndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="689bc-572">
            <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-572">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-573">La valeur peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-573">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-574">Recherche le <see cref="T:System.Object" /> spécifié et retourne l’index de base zéro de la dernière occurrence dans l’ensemble du <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-574">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-575">Index de base zéro de la dernière occurrence de <paramref name="value" /> trouvée dans l’ensemble de <see cref="T:System.Collections.ArrayList" />, le cas échéant ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-575">The zero-based index of the last occurrence of <paramref name="value" /> within the entire the <see cref="T:System.Collections.ArrayList" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-576">Le <xref:System.Collections.ArrayList> recherche est effectuée vers l’arrière à partir du dernier élément vers le premier élément.</span><span class="sxs-lookup"><span data-stu-id="689bc-576">The <xref:System.Collections.ArrayList> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="689bc-577">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-577">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="689bc-578">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `item` pour déterminer l’existence d’un élément.</span><span class="sxs-lookup"><span data-stu-id="689bc-578">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="689bc-579">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="689bc-579">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-580">L’exemple de code suivant montre comment déterminer l’index de la dernière occurrence d’un élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="689bc-580">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="689bc-581">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-581">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : obj * int -&gt; int&#xA;override this.LastIndexOf : obj * int -&gt; int" Usage="arrayList.LastIndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="689bc-582">
            <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-582">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-583">La valeur peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-583">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="689bc-584">Index de début de base zéro de la recherche vers le haut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-584">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-585">Recherche le <see cref="T:System.Object" /> spécifié et retourne l’index de base zéro de la dernière occurrence dans la plage d’éléments de l’<see cref="T:System.Collections.ArrayList" /> qui s’étend du premier élément à l’index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-585">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-586">Index de base zéro de la dernière occurrence de <paramref name="value" /> trouvée dans la plage d’éléments d’<see cref="T:System.Collections.ArrayList" /> qui s’étend du premier élément à <paramref name="startIndex" />, le cas échéant ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-586">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-587">Le <xref:System.Collections.ArrayList> est effectuée vers l’arrière commençant à `startIndex` et jusqu’au premier élément.</span><span class="sxs-lookup"><span data-stu-id="689bc-587">The <xref:System.Collections.ArrayList> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="689bc-588">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est le nombre d’éléments à partir du début de la <xref:System.Collections.ArrayList> à `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="689bc-588">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is the number of elements from the beginning of the <xref:System.Collections.ArrayList> to `startIndex`.</span></span>  
  
 <span data-ttu-id="689bc-589">Cette méthode détermine l’égalité en appelant <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="689bc-589">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="689bc-590">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `item` pour déterminer l’existence d’un élément.</span><span class="sxs-lookup"><span data-stu-id="689bc-590">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="689bc-591">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="689bc-591">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-592">L’exemple de code suivant montre comment déterminer l’index de la dernière occurrence d’un élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="689bc-592">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-593">
            <paramref name="startIndex" /> est en dehors de la plage d’index valides pour <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-593">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="689bc-594">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-594">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : obj * int * int -&gt; int&#xA;override this.LastIndexOf : obj * int * int -&gt; int" Usage="arrayList.LastIndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="689bc-595">
            <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-595">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-596">La valeur peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-596">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="689bc-597">Index de début de base zéro de la recherche vers le haut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-597">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="689bc-598">Nombre d'éléments contenus dans la section où la recherche doit être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-598">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-599">Recherche le <see cref="T:System.Object" /> spécifié et retourne l’index de base zéro de la dernière occurrence dans la plage d’éléments de <see cref="T:System.Collections.ArrayList" /> qui contient le nombre spécifié d’éléments et se termine à l’index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-599">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-600">Index de base zéro de la dernière occurrence de <paramref name="value" /> trouvée dans la plage d’éléments de <see cref="T:System.Collections.ArrayList" /> qui contient le nombre <paramref name="count" /> d’éléments et se termine à <paramref name="startIndex" />, le cas échéant ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-600">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that contains <paramref name="count" /> number of elements and ends at <paramref name="startIndex" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-601">Le <xref:System.Collections.ArrayList> est effectuée vers l’arrière commençant à `startIndex` et en terminant à `startIndex` moins `count` + 1, si `count` est supérieur à 0.</span><span class="sxs-lookup"><span data-stu-id="689bc-601">The <xref:System.Collections.ArrayList> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="689bc-602">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est `count`.</span><span class="sxs-lookup"><span data-stu-id="689bc-602">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="689bc-603">Cette méthode détermine l’égalité en appelant <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="689bc-603">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="689bc-604">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `item` pour déterminer l’existence d’un élément.</span><span class="sxs-lookup"><span data-stu-id="689bc-604">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="689bc-605">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="689bc-605">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-606">L’exemple de code suivant montre comment déterminer l’index de la dernière occurrence d’un élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="689bc-606">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span> <span data-ttu-id="689bc-607">Notez que `LastIndexOf` est une recherche vers l’arrière ; par conséquent, `count` doit être inférieure ou égale à `startIndex` + 1.</span><span class="sxs-lookup"><span data-stu-id="689bc-607">Note that `LastIndexOf` is a backward search; therefore, `count` must be less than or equal to `startIndex` + 1.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-608">
            <paramref name="startIndex" /> est en dehors de la plage d’index valides pour <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-608">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-609">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-609">-or-</span>
          </span>
          <span data-ttu-id="689bc-610">
            <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-610">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="689bc-611">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-611">-or-</span>
          </span>
          <span data-ttu-id="689bc-612">
            <paramref name="startIndex" /> et <paramref name="count" /> ne spécifient pas une section valide dans <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-612">
              <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="689bc-613">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-613">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadOnly">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="689bc-614">Retourne un wrapper de liste en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-614">Returns a list wrapper that is read-only.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList ReadOnly (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList ReadOnly(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ ReadOnly(System::Collections::ArrayList ^ list);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Collections.ArrayList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.ReadOnly list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="689bc-615">Élément <see cref="T:System.Collections.ArrayList" /> à inclure dans un wrapper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-615">The <see cref="T:System.Collections.ArrayList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-616">Retourne un wrapper <see cref="T:System.Collections.ArrayList" /> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-616">Returns a read-only <see cref="T:System.Collections.ArrayList" /> wrapper.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-617">Wrapper <see cref="T:System.Collections.ArrayList" /> en lecture seule autour de <paramref name="list" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-617">A read-only <see cref="T:System.Collections.ArrayList" /> wrapper around <paramref name="list" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-618">Pour empêcher toute modification apportée à `list`, exposer `list` uniquement par le biais de ce wrapper.</span><span class="sxs-lookup"><span data-stu-id="689bc-618">To prevent any modifications to `list`, expose `list` only through this wrapper.</span></span>  
  
 <span data-ttu-id="689bc-619">Une collection est en lecture seule est simplement une collection avec un wrapper qui empêche la modification de la collection.</span><span class="sxs-lookup"><span data-stu-id="689bc-619">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="689bc-620">Si des modifications sont apportées à la collection sous-jacente, la collection en lecture seule reflète ces modifications.</span><span class="sxs-lookup"><span data-stu-id="689bc-620">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="689bc-621">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="689bc-621">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-622">L’exemple de code suivant montre comment créer un wrapper en lecture seule autour d’une <xref:System.Collections.ArrayList> et comment déterminer si un <xref:System.Collections.ArrayList> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="689bc-622">The following code example shows how to create a read-only wrapper around an <xref:System.Collections.ArrayList> and how to determine if an <xref:System.Collections.ArrayList> is read-only.</span></span>  
  
 [!code-cpp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689bc-623">
            <paramref name="list" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-623">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Collections.IList ReadOnly (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList ReadOnly(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ ReadOnly(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Collections.IList -&gt; System.Collections.IList" Usage="System.Collections.ArrayList.ReadOnly list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="689bc-624">Élément <see cref="T:System.Collections.IList" /> à inclure dans un wrapper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-624">The <see cref="T:System.Collections.IList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-625">Retourne un wrapper <see cref="T:System.Collections.IList" /> en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-625">Returns a read-only <see cref="T:System.Collections.IList" /> wrapper.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-626">Wrapper <see cref="T:System.Collections.IList" /> en lecture seule autour de <paramref name="list" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-626">A read-only <see cref="T:System.Collections.IList" /> wrapper around <paramref name="list" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-627">Pour empêcher toute modification apportée à `list`, exposer `list` uniquement par le biais de ce wrapper.</span><span class="sxs-lookup"><span data-stu-id="689bc-627">To prevent any modifications to `list`, expose `list` only through this wrapper.</span></span>  
  
 <span data-ttu-id="689bc-628">Une collection est en lecture seule est simplement une collection avec un wrapper qui empêche la modification de la collection.</span><span class="sxs-lookup"><span data-stu-id="689bc-628">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="689bc-629">Si des modifications sont apportées à la collection sous-jacente, la collection en lecture seule reflète ces modifications.</span><span class="sxs-lookup"><span data-stu-id="689bc-629">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="689bc-630">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="689bc-630">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689bc-631">
            <paramref name="list" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-631">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="arrayList.Remove obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="689bc-632">
            <see cref="T:System.Object" /> à supprimer de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-632">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-633">La valeur peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-633">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-634">Supprime la première occurrence d'un objet spécifique de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-634">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-635">Si le <xref:System.Collections.ArrayList> ne contient pas l’objet spécifié, le <xref:System.Collections.ArrayList> reste inchangé.</span><span class="sxs-lookup"><span data-stu-id="689bc-635">If the <xref:System.Collections.ArrayList> does not contain the specified object, the <xref:System.Collections.ArrayList> remains unchanged.</span></span> <span data-ttu-id="689bc-636">Aucune exception n'est levée.</span><span class="sxs-lookup"><span data-stu-id="689bc-636">No exception is thrown.</span></span>  
  
 <span data-ttu-id="689bc-637">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-637">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="689bc-638">Cette méthode détermine l’égalité en appelant <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="689bc-638">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="689bc-639">Dans des collections d’éléments contigus, telles que les listes, les éléments qui suivent l’élément supprimé remontent pour occuper l’espace libéré.</span><span class="sxs-lookup"><span data-stu-id="689bc-639">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="689bc-640">Si la collection est indexée, les index des éléments déplacés sont également mis à jour.</span><span class="sxs-lookup"><span data-stu-id="689bc-640">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="689bc-641">Ce comportement ne s'applique pas aux collections dont les éléments sont regroupés de manière conceptuelle en compartiments, comme par exemple les tables de hachage.</span><span class="sxs-lookup"><span data-stu-id="689bc-641">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-642">L’exemple de code suivant montre comment supprimer des éléments dans le <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-642">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="689bc-643">
            <see cref="T:System.Collections.ArrayList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-643">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="689bc-644">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-644">-or-</span>
          </span>
          <span data-ttu-id="689bc-645">
            <see cref="T:System.Collections.ArrayList" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-645">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="689bc-646">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-646">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="arrayList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="689bc-647">Index de base zéro de l'élément à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-647">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-648">Supprime l'élément au niveau de l'index spécifié de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-648">Removes the element at the specified index of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-649">Une fois que l’élément est supprimé, la taille de la collection est ajustée et la valeur de la <xref:System.Collections.ArrayList.Count%2A> propriété est diminuée d’un.</span><span class="sxs-lookup"><span data-stu-id="689bc-649">After the element is removed, the size of the collection is adjusted and the value of the <xref:System.Collections.ArrayList.Count%2A> property is decreased by one.</span></span>  
  
 <span data-ttu-id="689bc-650">Dans des collections d’éléments contigus, telles que les listes, les éléments qui suivent l’élément supprimé remontent pour occuper l’espace libéré.</span><span class="sxs-lookup"><span data-stu-id="689bc-650">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="689bc-651">Si la collection est indexée, les index des éléments déplacés sont également mis à jour.</span><span class="sxs-lookup"><span data-stu-id="689bc-651">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="689bc-652">Ce comportement ne s’applique pas aux collections dont les éléments sont regroupés de manière conceptuelle en compartiments, comme par exemple les tables de hachage.</span><span class="sxs-lookup"><span data-stu-id="689bc-652">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="689bc-653">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-653">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-654">L’exemple de code suivant montre comment supprimer des éléments dans le <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-654">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-655">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-655">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="689bc-656">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-656">-or-</span>
          </span>
          <span data-ttu-id="689bc-657">
            <paramref name="index" /> est supérieur ou égal à <see cref="P:System.Collections.ArrayList.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-657">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="689bc-658">
            <see cref="T:System.Collections.ArrayList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-658">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="689bc-659">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-659">-or-</span>
          </span>
          <span data-ttu-id="689bc-660">
            <see cref="T:System.Collections.ArrayList" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-660">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public virtual void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveRange(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member RemoveRange : int * int -&gt; unit&#xA;override this.RemoveRange : int * int -&gt; unit" Usage="arrayList.RemoveRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="689bc-661">Index de début de base zéro de la plage d'éléments à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-661">The zero-based starting index of the range of elements to remove.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="689bc-662">Nombre d'éléments à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-662">The number of elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-663">Supprime une plage d'éléments de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-663">Removes a range of elements from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-664">Dans des collections d’éléments contigus, telles que les listes, les éléments qui suivent l’élément supprimé remontent pour occuper l’espace libéré.</span><span class="sxs-lookup"><span data-stu-id="689bc-664">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="689bc-665">Si la collection est indexée, les index des éléments déplacés sont également mis à jour.</span><span class="sxs-lookup"><span data-stu-id="689bc-665">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="689bc-666">Ce comportement ne s’applique pas aux collections dont les éléments sont regroupés de manière conceptuelle en compartiments, comme par exemple les tables de hachage.</span><span class="sxs-lookup"><span data-stu-id="689bc-666">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="689bc-667">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-667">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-668">L’exemple de code suivant montre comment supprimer des éléments dans le <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-668">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-669">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-669">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="689bc-670">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-670">-or-</span>
          </span>
          <span data-ttu-id="689bc-671">
            <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-671">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="689bc-672">
            <paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage d’éléments valide du <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-672">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="689bc-673">
            <see cref="T:System.Collections.ArrayList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-673">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="689bc-674">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-674">-or-</span>
          </span>
          <span data-ttu-id="689bc-675">
            <see cref="T:System.Collections.ArrayList" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-675">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      </Docs>
    </Member>
    <Member MemberName="Repeat">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Repeat (object value, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Repeat(object value, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Repeat (value As Object, count As Integer) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Repeat(System::Object ^ value, int count);" />
      <MemberSignature Language="F#" Value="static member Repeat : obj * int -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.Repeat (value, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="689bc-676">
            <see cref="T:System.Object" /> à copier plusieurs fois dans le nouveau <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-676">The <see cref="T:System.Object" /> to copy multiple times in the new <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-677">La valeur peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-677">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="689bc-678">Nombre de fois où <paramref name="value" /> doit être copié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-678">The number of times <paramref name="value" /> should be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-679">Retourne un <see cref="T:System.Collections.ArrayList" /> dont les éléments sont des copies de la valeur spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-679">Returns an <see cref="T:System.Collections.ArrayList" /> whose elements are copies of the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-680">
            <see cref="T:System.Collections.ArrayList" /> avec un nombre <paramref name="count" /> d’éléments, qui sont tous des copies de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-680">An <see cref="T:System.Collections.ArrayList" /> with <paramref name="count" /> number of elements, all of which are copies of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-681"><xref:System.Collections.ArrayList> accepte `null` comme une valeur valide et autorise les éléments en double.</span><span class="sxs-lookup"><span data-stu-id="689bc-681"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="689bc-682">Cette méthode est un O (`n`) opération, où `n` est `count`.</span><span class="sxs-lookup"><span data-stu-id="689bc-682">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-683">L’exemple de code suivant montre comment créer et initialiser une nouvelle <xref:System.Collections.ArrayList> avec la même valeur.</span><span class="sxs-lookup"><span data-stu-id="689bc-683">The following code example shows how to create and initialize a new <xref:System.Collections.ArrayList> with the same value.</span></span>  
  
 [!code-cpp[Classic ArrayList.Repeat Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Repeat Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Repeat Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-684">
            <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-684">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="689bc-685">Inverse l'ordre des éléments dans <see cref="T:System.Collections.ArrayList" /> ou une partie de celui-ci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-685">Reverses the order of the elements in the <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reverse();" />
      <MemberSignature Language="F#" Value="abstract member Reverse : unit -&gt; unit&#xA;override this.Reverse : unit -&gt; unit" Usage="arrayList.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="689bc-686">Inverse l'ordre des éléments dans l'ensemble de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-686">Reverses the order of the elements in the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-687">Cette méthode utilise <xref:System.Array.Reverse%2A?displayProperty=nameWithType> pour inverser l’ordre des éléments, tels que l’élément à <xref:System.Collections.ArrayList> [i], où i est un index dans la plage, se déplace vers <xref:System.Collections.ArrayList> [j], où j équivaut à `index`  +  `index`  +  `count` - i - 1.</span><span class="sxs-lookup"><span data-stu-id="689bc-687">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements, such that the element at <xref:System.Collections.ArrayList> [i], where i is any index within the range, moves to <xref:System.Collections.ArrayList> [j], where j equals `index` + `index` + `count` - i - 1.</span></span>  
  
 <span data-ttu-id="689bc-688">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-688">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-689">L’exemple de code suivant montre comment inverser l’ordre de tri des valeurs dans une <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-689">The following code example shows how to reverse the sort order of the values in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Reverse Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Reverse Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Reverse Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="689bc-690">
            <see cref="T:System.Collections.ArrayList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-690">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual void Reverse (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reverse(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reverse (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reverse(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Reverse : int * int -&gt; unit&#xA;override this.Reverse : int * int -&gt; unit" Usage="arrayList.Reverse (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="689bc-691">Index de début de base zéro de la plage à inverser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-691">The zero-based starting index of the range to reverse.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="689bc-692">Nombre d'éléments à inverser dans la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-692">The number of elements in the range to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-693">Inverse l'ordre des éléments dans la plage spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-693">Reverses the order of the elements in the specified range.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-694">Cette méthode utilise <xref:System.Array.Reverse%2A?displayProperty=nameWithType> pour inverser l’ordre des éléments, tels que l’élément à <xref:System.Collections.ArrayList> [i], où i est un index dans la plage, se déplace vers <xref:System.Collections.ArrayList> [j], où j équivaut à `index`  +  `index`  +  `count` - i - 1.</span><span class="sxs-lookup"><span data-stu-id="689bc-694">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements, such that the element at <xref:System.Collections.ArrayList> [i], where i is any index within the range, moves to <xref:System.Collections.ArrayList> [j], where j equals `index` + `index` + `count` - i - 1.</span></span>  
  
 <span data-ttu-id="689bc-695">Cette méthode est un O (`n`) opération, où `n` est `count`.</span><span class="sxs-lookup"><span data-stu-id="689bc-695">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-696">L’exemple de code suivant montre comment inverser l’ordre de tri des valeurs dans une plage d’éléments dans un <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-696">The following code example shows how to reverse the sort order of the values in a range of elements in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-697">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-697">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="689bc-698">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-698">-or-</span>
          </span>
          <span data-ttu-id="689bc-699">
            <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-699">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="689bc-700">
            <paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage d’éléments valide du <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-700">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="689bc-701">
            <see cref="T:System.Collections.ArrayList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-701">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetRange">
      <MemberSignature Language="C#" Value="public virtual void SetRange (int index, System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRange(int32 index, class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetRange (index As Integer, c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetRange(int index, System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="abstract member SetRange : int * System.Collections.ICollection -&gt; unit&#xA;override this.SetRange : int * System.Collections.ICollection -&gt; unit" Usage="arrayList.SetRange (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="689bc-702">Index <see cref="T:System.Collections.ArrayList" /> de base zéro à partir duquel commencer la copie des éléments de <paramref name="c" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-702">The zero-based <see cref="T:System.Collections.ArrayList" /> index at which to start copying the elements of <paramref name="c" />.</span>
          </span>
        </param>
        <param name="c">
          <span data-ttu-id="689bc-703">
            <see cref="T:System.Collections.ICollection" /> dont les éléments doivent être copiés dans <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-703">The <see cref="T:System.Collections.ICollection" /> whose elements to copy to the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="689bc-704">La collection elle-même ne peut pas avoir la valeur <see langword="null" />, mais elle peut contenir des éléments qui ont la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-704">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-705">Copie les éléments d’une collection par-dessus une plage d’éléments dans <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-705">Copies the elements of a collection over a range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-706"><xref:System.Collections.ArrayList> accepte `null` comme une valeur valide et autorise les éléments en double.</span><span class="sxs-lookup"><span data-stu-id="689bc-706"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="689bc-707">L’ordre des éléments dans le <xref:System.Collections.ICollection> est conservé dans le <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-707">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="689bc-708">Cette méthode est un O (`n` + 1) l’opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-708">This method is an O(`n` + 1) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-709">L’exemple de code suivant montre comment définir et obtenir une plage d’éléments dans le <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-709">The following code example shows how to set and get a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.SetRange Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.SetRange Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.SetRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-710">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-710">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="689bc-711">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-711">-or-</span>
          </span>
          <span data-ttu-id="689bc-712">
            <paramref name="index" /> plus le nombre d’éléments dans <paramref name="c" /> est supérieur à <see cref="P:System.Collections.ArrayList.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-712">
              <paramref name="index" /> plus the number of elements in <paramref name="c" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689bc-713">
            <paramref name="c" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-713">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="689bc-714">
            <see cref="T:System.Collections.ArrayList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-714">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="689bc-715">Trie les éléments dans <see cref="T:System.Collections.ArrayList" /> ou une partie de celui-ci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-715">Sorts the elements in the <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort();" />
      <MemberSignature Language="F#" Value="abstract member Sort : unit -&gt; unit&#xA;override this.Sort : unit -&gt; unit" Usage="arrayList.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="689bc-716">Trie les éléments dans l’intégralité de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-716">Sorts the elements in the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-717">Cette méthode utilise <xref:System.Array.Sort%2A?displayProperty=nameWithType>, qui utilise l’algorithme de tri rapide.</span><span class="sxs-lookup"><span data-stu-id="689bc-717">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which uses the QuickSort algorithm.</span></span> <span data-ttu-id="689bc-718">L’algorithme de tri rapide est une comparaison de tri (également appelé tri instable), ce qui signifie qu’un « inférieur ou égal à » opération de comparaison détermine lequel des deux éléments doit figurer en premier dans la liste finale triée.</span><span class="sxs-lookup"><span data-stu-id="689bc-718">The QuickSort algorithm is a comparison sort (also called an unstable sort), which means that a "less than or equal to" comparison operation determines which of two elements should occur first in the final sorted list.</span></span> <span data-ttu-id="689bc-719">Toutefois, si deux éléments sont égaux, leur ordre d’origine ne peut pas être conservé.</span><span class="sxs-lookup"><span data-stu-id="689bc-719">However, if two elements are equal, their original order might not be preserved.</span></span> <span data-ttu-id="689bc-720">En revanche, un tri stable conserve l’ordre des éléments qui sont égaux.</span><span class="sxs-lookup"><span data-stu-id="689bc-720">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="689bc-721">Pour effectuer un tri stable, vous devez implémenter un <xref:System.Collections.IComparer> interface à utiliser avec les autres surcharges de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="689bc-721">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface to use with the other overloads of this method.</span></span>  
  
 <span data-ttu-id="689bc-722">En moyenne, cette méthode est un O (`n` journal `n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>; dans le pire des cas il est un O (`n`^ 2) opération.</span><span class="sxs-lookup"><span data-stu-id="689bc-722">On average, this method is an O(`n` log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>; in the worst case it is an O(`n`^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-723">L’exemple de code suivant montre comment trier les valeurs dans une <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-723">The following code example shows how to sort the values in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Sort Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Sort Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Sort Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="689bc-724">
            <see cref="T:System.Collections.ArrayList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-724">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="689bc-725">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-725">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Sort : System.Collections.IComparer -&gt; unit&#xA;override this.Sort : System.Collections.IComparer -&gt; unit" Usage="arrayList.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="689bc-726">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser pendant la comparaison d'éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-726">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="689bc-727">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-727">-or-</span>
          </span>
          <span data-ttu-id="689bc-728">Référence Null (<see langword="Nothing" /> en Visual Basic) pour utiliser l’implémentation <see cref="T:System.IComparable" /> de chaque élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-728">A null reference (<see langword="Nothing" /> in Visual Basic) to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-729">Trie les éléments dans l'ensemble de <see cref="T:System.Collections.ArrayList" /> à l'aide du comparateur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-729">Sorts the elements in the entire <see cref="T:System.Collections.ArrayList" /> using the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-730">Utilisez le <xref:System.Collections.ArrayList.Sort%2A> méthode pour trier une liste d’objets avec un comparateur personnalisé qui implémente le <xref:System.Collections.IComparer> interface.</span><span class="sxs-lookup"><span data-stu-id="689bc-730">Use the <xref:System.Collections.ArrayList.Sort%2A> method to  sort a list of objects with a custom comparer that implements the <xref:System.Collections.IComparer> interface.</span></span> <span data-ttu-id="689bc-731">Si vous transmettez `null` pour `comparer`, cette méthode utilise la <xref:System.IComparable> implémentation de chaque élément.</span><span class="sxs-lookup"><span data-stu-id="689bc-731">If you pass `null` for `comparer`, this method uses the <xref:System.IComparable> implementation of each element.</span></span> <span data-ttu-id="689bc-732">Dans ce cas, vous devez vous assurer que les objets contenus dans la liste implémentent le <xref:System.Collections.IComparer> interface ou une exception se produit.</span><span class="sxs-lookup"><span data-stu-id="689bc-732">In this case, you must make sure that the objects contained in the list implement the <xref:System.Collections.IComparer> interface or an exception will occur.</span></span>  
  
 <span data-ttu-id="689bc-733">En outre, à l’aide de la <xref:System.IComparable> implémentation signifie que la liste effectue un tri de comparaison (également appelé tri instable) ; autrement dit, si deux éléments sont égaux, leur ordre risquent de ne pas être conservé.</span><span class="sxs-lookup"><span data-stu-id="689bc-733">In addition, using the <xref:System.IComparable> implementation means the list performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="689bc-734">En revanche, un tri stable conserve l’ordre des éléments qui sont égaux.</span><span class="sxs-lookup"><span data-stu-id="689bc-734">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="689bc-735">Pour effectuer un tri stable, vous devez implémenter un <xref:System.Collections.IComparer> interface.</span><span class="sxs-lookup"><span data-stu-id="689bc-735">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface.</span></span>  
  
 <span data-ttu-id="689bc-736">En moyenne, cette méthode est un O (`n` journal `n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>; dans le pire des cas il est un O (`n`^ 2) opération.</span><span class="sxs-lookup"><span data-stu-id="689bc-736">On average, this method is an O(`n` log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>; in the worst case it is an O(`n`^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-737">L’exemple de code suivant montre comment trier les valeurs dans une <xref:System.Collections.ArrayList> à l’aide du comparateur par défaut et un comparateur personnalisé qui inverse l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="689bc-737">The following code example shows how to sort the values in an <xref:System.Collections.ArrayList> using the default comparer and a custom comparer that reverses the sort order.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CPP/arraylist_sort2.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CS/arraylist_sort2.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/VB/arraylist_sort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="689bc-738">
            <see cref="T:System.Collections.ArrayList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-738">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="689bc-739">Une erreur s’est produite pendant la comparaison de deux éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-739">An error occurred while comparing two elements.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="689bc-740">
            <see langword="null" /> est passé pour <paramref name="comparer" />, et les éléments de la liste n’implémentent pas <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-740">
              <see langword="null" /> is passed for <paramref name="comparer" />, and the elements in the list do not implement <see cref="T:System.IComparable" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="689bc-741">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-741">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (int index, int count, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(int32 index, int32 count, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (index As Integer, count As Integer, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(int index, int count, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Sort : int * int * System.Collections.IComparer -&gt; unit&#xA;override this.Sort : int * int * System.Collections.IComparer -&gt; unit" Usage="arrayList.Sort (index, count, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="689bc-742">Index de début de base zéro de la plage à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-742">The zero-based starting index of the range to sort.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="689bc-743">Longueur de la plage à trier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-743">The length of the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="689bc-744">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser pendant la comparaison d'éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-744">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="689bc-745">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-745">-or-</span>
          </span>
          <span data-ttu-id="689bc-746">Référence Null (<see langword="Nothing" /> en Visual Basic) pour utiliser l’implémentation <see cref="T:System.IComparable" /> de chaque élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-746">A null reference (<see langword="Nothing" /> in Visual Basic) to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-747">Trie les éléments dans une plage d'éléments de <see cref="T:System.Collections.ArrayList" /> à l'aide du comparateur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-747">Sorts the elements in a range of elements in <see cref="T:System.Collections.ArrayList" /> using the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-748">Si `comparer` a la valeur `null`, cette méthode effectue un tri sur la comparaison (également appelé tri instable) ; autrement dit, si deux éléments sont égaux, leur ordre risquent de ne pas être conservé.</span><span class="sxs-lookup"><span data-stu-id="689bc-748">If `comparer` is set to `null`, this method performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="689bc-749">En revanche, un tri stable conserve l’ordre des éléments qui sont égaux.</span><span class="sxs-lookup"><span data-stu-id="689bc-749">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="689bc-750">Pour effectuer un tri stable, vous devez implémenter un <xref:System.Collections.IComparer> interface.</span><span class="sxs-lookup"><span data-stu-id="689bc-750">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface.</span></span>  
  
 <span data-ttu-id="689bc-751">En moyenne, cette méthode est un O (`n` journal `n`) opération, où `n` est `count`; dans le pire des cas il s’agit d’une opération O(n^2).</span><span class="sxs-lookup"><span data-stu-id="689bc-751">On average, this method is an O(`n` log `n`) operation, where `n` is `count`; in the worst case it is an O(n^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-752">L’exemple de code suivant montre comment trier les valeurs dans une plage d’éléments dans un <xref:System.Collections.ArrayList> à l’aide du comparateur par défaut et un comparateur personnalisé qui inverse l’ordre de tri.</span><span class="sxs-lookup"><span data-stu-id="689bc-752">The following code example shows how to sort the values in a range of elements in an <xref:System.Collections.ArrayList> using the default comparer and a custom comparer that reverses the sort order.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/CPP/arraylist_sort3.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/CS/arraylist_sort3.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/VB/arraylist_sort3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="689bc-753">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-753">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="689bc-754">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-754">-or-</span>
          </span>
          <span data-ttu-id="689bc-755">
            <paramref name="count" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-755">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="689bc-756">
            <paramref name="index" /> et <paramref name="count" /> ne spécifient pas une plage valide dans <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-756">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="689bc-757">
            <see cref="T:System.Collections.ArrayList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-757">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="689bc-758">Une erreur s’est produite pendant la comparaison de deux éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-758">An error occurred while comparing two elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="689bc-759">Exécution d’opérations de chaînes indépendantes de la culture dans des collections</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-759">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Synchronized">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="689bc-760">Retourne un wrapper de liste qui est synchronisé (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-760">Returns a list wrapper that is synchronized (thread safe).</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Synchronized (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Synchronized(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Synchronized(System::Collections::ArrayList ^ list);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.ArrayList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.Synchronized list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="689bc-761">
            <see cref="T:System.Collections.ArrayList" /> à synchroniser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-761">The <see cref="T:System.Collections.ArrayList" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-762">Retourne un wrapper <see cref="T:System.Collections.ArrayList" /> qui est synchronisé (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-762">Returns an <see cref="T:System.Collections.ArrayList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-763">Wrapper <see cref="T:System.Collections.ArrayList" /> synchronisé (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-763">An <see cref="T:System.Collections.ArrayList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-764">Pour garantir la sécurité des threads de le <xref:System.Collections.ArrayList>, toutes les opérations doivent être effectuées via ce wrapper.</span><span class="sxs-lookup"><span data-stu-id="689bc-764">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="689bc-765">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="689bc-765">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="689bc-766">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="689bc-766">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="689bc-767">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="689bc-767">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-768">L’exemple de code suivant montre comment verrouiller la collection en utilisant la <xref:System.Collections.ArrayList.SyncRoot%2A> pendant toute l’énumération.</span><span class="sxs-lookup"><span data-stu-id="689bc-768">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="689bc-769">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="689bc-769">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="689bc-770">L’exemple de code suivant montre comment synchroniser un <xref:System.Collections.ArrayList>, déterminer si un <xref:System.Collections.ArrayList> est synchronisé et utiliser une liste synchronisé <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-770">The following code example shows how to synchronize an <xref:System.Collections.ArrayList>, determine if an <xref:System.Collections.ArrayList> is synchronized and use a synchronized <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689bc-771">
            <paramref name="list" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-771">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.IList Synchronized (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList Synchronized(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ Synchronized(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.IList -&gt; System.Collections.IList" Usage="System.Collections.ArrayList.Synchronized list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="689bc-772">
            <see cref="T:System.Collections.IList" /> à synchroniser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-772">The <see cref="T:System.Collections.IList" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-773">Retourne un wrapper <see cref="T:System.Collections.IList" /> qui est synchronisé (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-773">Returns an <see cref="T:System.Collections.IList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-774">Wrapper <see cref="T:System.Collections.IList" /> synchronisé (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-774">An <see cref="T:System.Collections.IList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-775">Pour garantir la sécurité des threads de le <xref:System.Collections.ArrayList>, toutes les opérations doivent être effectuées via ce wrapper.</span><span class="sxs-lookup"><span data-stu-id="689bc-775">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="689bc-776">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="689bc-776">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="689bc-777">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="689bc-777">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="689bc-778">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="689bc-778">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-779">L’exemple de code suivant montre comment verrouiller la collection en utilisant la <xref:System.Collections.ArrayList.SyncRoot%2A> pendant toute l’énumération.</span><span class="sxs-lookup"><span data-stu-id="689bc-779">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="689bc-780">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="689bc-780">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689bc-781">
            <paramref name="list" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-781">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.ArrayList.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="689bc-782">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-782">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="689bc-783">Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-783">An object that can be used to synchronize access to the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-784">Pour créer une version synchronisée de la <xref:System.Collections.ArrayList>, utilisez le <xref:System.Collections.ArrayList.Synchronized%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="689bc-784">To create a synchronized version of the <xref:System.Collections.ArrayList>, use the <xref:System.Collections.ArrayList.Synchronized%2A> method.</span></span> <span data-ttu-id="689bc-785">Toutefois, les classes dérivées peuvent fournir leur propre version synchronisée de la <xref:System.Collections.ArrayList> à l’aide de la <xref:System.Collections.ArrayList.SyncRoot%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="689bc-785">However, derived classes can provide their own synchronized version of the <xref:System.Collections.ArrayList> using the <xref:System.Collections.ArrayList.SyncRoot%2A> property.</span></span> <span data-ttu-id="689bc-786">Le code de synchronisation doit effectuer les opérations sur le <xref:System.Collections.ArrayList.SyncRoot%2A> de la <xref:System.Collections.ArrayList>, et non directement sur le <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-786">The synchronizing code must perform operations on the <xref:System.Collections.ArrayList.SyncRoot%2A> of the <xref:System.Collections.ArrayList>, not directly on the <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="689bc-787">Cela garantit un bon fonctionnement des collections dérivées d’autres objets.</span><span class="sxs-lookup"><span data-stu-id="689bc-787">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="689bc-788">Plus précisément, il maintient une synchronisation correcte avec les autres threads qui pourraient modifier simultanément les <xref:System.Collections.ArrayList> objet.</span><span class="sxs-lookup"><span data-stu-id="689bc-788">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.ArrayList> object.</span></span>  
  
 <span data-ttu-id="689bc-789">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="689bc-789">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="689bc-790">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="689bc-790">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="689bc-791">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="689bc-791">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-792">L’exemple de code suivant montre comment verrouiller la collection en utilisant la <xref:System.Collections.ArrayList.SyncRoot%2A> pendant toute l’énumération.</span><span class="sxs-lookup"><span data-stu-id="689bc-792">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="689bc-793">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="689bc-793">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
        <altmember cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToArray">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="689bc-794">Copie les éléments de <see cref="T:System.Collections.ArrayList" /> dans un nouveau tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-794">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual object[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToArray () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="abstract member ToArray : unit -&gt; obj[]&#xA;override this.ToArray : unit -&gt; obj[]" Usage="arrayList.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="689bc-795">Copie les éléments de <see cref="T:System.Collections.ArrayList" /> dans un nouveau tableau <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-795">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new <see cref="T:System.Object" /> array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-796">Tableau <see cref="T:System.Object" /> contenant les copies des éléments de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-796">An <see cref="T:System.Object" /> array containing copies of the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-797">Les éléments sont copiés à l’aide de <xref:System.Array.Copy%2A?displayProperty=nameWithType>, qui est un O (`n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-797">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual Array ToArray (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Array ToArray(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ToArray(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Array ^ ToArray(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ToArray : Type -&gt; Array&#xA;override this.ToArray : Type -&gt; Array" Usage="arrayList.ToArray type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="689bc-798">Élément <see cref="T:System.Type" /> du tableau de destination dans lequel créer et copier des éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-798">The element <see cref="T:System.Type" /> of the destination array to create and copy elements to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="689bc-799">Copie les éléments de <see cref="T:System.Collections.ArrayList" /> vers un nouveau tableau du type d'élément spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-799">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new array of the specified element type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="689bc-800">Tableau du type d'élément spécifié contenant des copies des éléments de <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-800">An array of the specified element type containing copies of the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-801">Tous les objets dans le <xref:System.Collections.ArrayList> objet est transtypée en le <xref:System.Type> spécifié dans le `type` paramètre.</span><span class="sxs-lookup"><span data-stu-id="689bc-801">All of the objects in the <xref:System.Collections.ArrayList> object will be cast to the <xref:System.Type> specified in the `type` parameter.</span></span>  
  
 <span data-ttu-id="689bc-802">Les éléments sont copiés à l’aide de <xref:System.Array.Copy%2A?displayProperty=nameWithType>, qui est un O (`n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-802">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-803">L’exemple suivant montre comment copier les éléments d’un <xref:System.Collections.ArrayList> à un tableau de chaînes.</span><span class="sxs-lookup"><span data-stu-id="689bc-803">The following copy example shows how to copy the elements of an <xref:System.Collections.ArrayList> to a string array.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.ToArray#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/CPP/arraylist_toarray.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.ToArray#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/CS/arraylist_toarray.cs#1)]
 [!code-vb[System.Collections.ArrayList.ToArray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/VB/arraylist_toarray.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="689bc-804">
            <paramref name="type" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-804">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="689bc-805">Le cast automatique du type du <see cref="T:System.Collections.ArrayList" /> source en type spécifié est impossible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-805">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the specified type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberSignature Language="F#" Value="abstract member TrimToSize : unit -&gt; unit&#xA;override this.TrimToSize : unit -&gt; unit" Usage="arrayList.TrimToSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="689bc-806">Définit la capacité au nombre réel d'éléments dans <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-806">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="689bc-807">Cette méthode peut être utilisée pour réduire une surcharge de mémoire d’une collection si aucun nouvel élément ne doit être ajouté à la collection.</span><span class="sxs-lookup"><span data-stu-id="689bc-807">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span>  
  
 <span data-ttu-id="689bc-808">Pour réinitialiser un <xref:System.Collections.ArrayList> à son état initial, appelez le <xref:System.Collections.ArrayList.Clear%2A> méthode avant d’appeler <xref:System.Collections.ArrayList.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-808">To reset a <xref:System.Collections.ArrayList> to its initial state, call the <xref:System.Collections.ArrayList.Clear%2A> method before calling <xref:System.Collections.ArrayList.TrimToSize%2A>.</span></span> <span data-ttu-id="689bc-809">Suppression vide <xref:System.Collections.ArrayList> définit la capacité de la <xref:System.Collections.ArrayList> à la capacité par défaut.</span><span class="sxs-lookup"><span data-stu-id="689bc-809">Trimming an empty <xref:System.Collections.ArrayList> sets the capacity of the <xref:System.Collections.ArrayList> to the default capacity.</span></span>  
  
 <span data-ttu-id="689bc-810">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="689bc-810">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="689bc-811">L’exemple de code suivant montre comment supprimer les parties inutilisées de la <xref:System.Collections.ArrayList> et comment effacer les valeurs de la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="689bc-811">The following code example shows how to trim the unused portions of the <xref:System.Collections.ArrayList> and how to clear the values of the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="689bc-812">
            <see cref="T:System.Collections.ArrayList" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-812">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="689bc-813">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-813">-or-</span>
          </span>
          <span data-ttu-id="689bc-814">
            <see cref="T:System.Collections.ArrayList" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="689bc-814">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Clear" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
  </Members>
</Type>