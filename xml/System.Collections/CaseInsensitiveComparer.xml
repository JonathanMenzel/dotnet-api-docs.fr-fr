<Type Name="CaseInsensitiveComparer" FullName="System.Collections.CaseInsensitiveComparer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae1b1c627a2c035977d14ca8e67ca7ef3b1f1ef0" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39922784" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CaseInsensitiveComparer : System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CaseInsensitiveComparer extends System.Object implements class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.CaseInsensitiveComparer" />
  <TypeSignature Language="VB.NET" Value="Public Class CaseInsensitiveComparer&#xA;Implements IComparer" />
  <TypeSignature Language="C++ CLI" Value="public ref class CaseInsensitiveComparer : System::Collections::IComparer" />
  <TypeSignature Language="F#" Value="type CaseInsensitiveComparer = class&#xA;    interface IComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Compare deux objets pour contrôler leur équivalence, en ignorant la casse des chaînes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.CaseInsensitiveComparer> implémente le <xref:System.Collections.IComparer> interface prenant en charge les comparaisons sans respecter la casse des chaînes, tout comme <xref:System.Collections.CaseInsensitiveHashCodeProvider> implémente le <xref:System.Collections.IHashCodeProvider> interface prenant en charge les comparaisons sans respecter la casse sur les chaînes.  
  
 Le <xref:System.Collections.Comparer> classe est l’implémentation par défaut de la <xref:System.Collections.IComparer> interface et effectue des comparaisons de chaînes respectant la casse.  
  
 Les objets utilisés en tant que clés par un <xref:System.Collections.Hashtable> requises pour substituer le <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> (méthode) (ou le <xref:System.Collections.IHashCodeProvider> interface) et le <xref:System.Object.Equals%2A?displayProperty=nameWithType> (méthode) (ou le <xref:System.Collections.IComparer> interface). L’implémentation des méthodes ou des interfaces doit gérer respecte la casse de la même façon ; Sinon, le <xref:System.Collections.Hashtable> peut ne pas fonctionner correctement. Par exemple, lorsque vous créez un <xref:System.Collections.Hashtable>, vous devez utiliser cette classe avec le <xref:System.Collections.CaseInsensitiveHashCodeProvider> classe ou l’un non-respect de la casse <xref:System.Collections.IHashCodeProvider> implémentation.  
  
 Les comparaisons de chaînes peuvent avoir des résultats différents selon la culture. Pour plus d’informations sur les comparaisons propres à la culture, consultez le <xref:System.Globalization> espace de noms et [globalisation et localisation](~/docs/standard/globalization-localization/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant crée une table de hachage de la casse et une table de hachage de non-respect de la casse et illustre la différence de comportement, même si elles contiennent les mêmes éléments.  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IComparer" />
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.Comparer" />
    <altmember cref="T:System.Globalization.CompareInfo" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.CaseInsensitiveComparer" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CaseInsensitiveComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveComparer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CaseInsensitiveComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.CaseInsensitiveComparer" /> à l'aide de <see cref="P:System.Threading.Thread.CurrentCulture" /> du thread en cours.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Collections.CaseInsensitiveComparer> instance est créée à l’aide de ce constructeur, le <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> du thread actuel est enregistré. Les procédures de comparaison utilisent la culture enregistrée pour déterminer l’ordre de tri et les règles de casse ; Par conséquent, les comparaisons de chaînes peuvent avoir des résultats différents selon la culture. Pour plus d’informations sur les comparaisons propres à la culture, consultez le <xref:System.Globalization> espace de noms et [globalisation et localisation](~/docs/standard/globalization-localization/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant crée une table de hachage de la casse et une table de hachage de non-respect de la casse et illustre la différence de comportement, même si elles contiennent les mêmes éléments.  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CaseInsensitiveComparer (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CaseInsensitiveComparer(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="new System.Collections.CaseInsensitiveComparer : System.Globalization.CultureInfo -&gt; System.Collections.CaseInsensitiveComparer" Usage="new System.Collections.CaseInsensitiveComparer culture" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <see cref="T:System.Globalization.CultureInfo" /> à utiliser pour le nouveau <see cref="T:System.Collections.CaseInsensitiveComparer" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.CaseInsensitiveComparer" /> à l'aide du <see cref="T:System.Globalization.CultureInfo" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les procédures de comparaison utilisent spécifié <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> pour déterminer l’ordre de tri et les règles de casse. Les comparaisons de chaînes peuvent avoir des résultats différents selon la culture. Pour plus d’informations sur les comparaisons propres à la culture, consultez le <xref:System.Globalization> espace de noms et [globalisation et localisation](~/docs/standard/globalization-localization/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant crée une table de hachage de la casse et une table de hachage de non-respect de la casse et illustre la différence de comportement, même si elles contiennent les mêmes éléments.  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="culture" /> est <see langword="null" />.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (a As Object, b As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Object ^ a, System::Object ^ b);" />
      <MemberSignature Language="F#" Value="abstract member Compare : obj * obj -&gt; int&#xA;override this.Compare : obj * obj -&gt; int" Usage="caseInsensitiveComparer.Compare (a, b)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a">Premier objet à comparer.</param>
        <param name="b">Deuxième objet à comparer.</param>
        <summary>Exécute une comparaison sans respect de la casse de deux objets du même type et retourne une valeur indiquant si l'un est inférieur, égal ou supérieur à l'autre.</summary>
        <returns>Entier signé qui indique les valeurs relatives de <paramref name="a" /> et <paramref name="b" />, comme indiqué dans le tableau suivant.  
  
 <list type="table"><listheader><term> Valeur  </term><description> Signification  </description></listheader><item><term> Inférieur à zéro  </term><description><paramref name="a" /> est inférieur à <paramref name="b" /> sans respect de la casse.  </description></item><item><term> Zéro  </term><description><paramref name="a" /> égale <paramref name="b" />, sans respect de la casse.  </description></item><item><term> Supérieur à 0 </term><description><paramref name="a" /> est supérieur à <paramref name="b" />, sans respect de la casse.  </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `a` et `b` sont des chaînes, cette méthode utilise <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> pour comparer les chaînes avec la casse ignorée ; sinon, il utilise le <xref:System.IComparable> implémentation de des objets. Autrement dit, si `a` implémente <xref:System.IComparable>, cette méthode retourne le résultat de `a`. `CompareTo` (`b`) ; sinon, si `b` implémente <xref:System.IComparable>, il retourne le résultat mis en négatif de `b`. `CompareTo` (`a`).  
  
 Comparaison `null` avec n’importe quel type est autorisée et ne génère pas d’exception lors de l’utilisation <xref:System.IComparable>. Lors du tri, `null` est considéré comme étant inférieure à n’importe quel autre objet.  
  
 Les comparaisons de chaînes peuvent avoir des résultats différents selon la culture. Pour plus d’informations sur les comparaisons propres à la culture, consultez le <xref:System.Globalization> espace de noms et [globalisation et localisation](~/docs/standard/globalization-localization/index.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ni <paramref name="a" /> ni <paramref name="b" /> n'implémente l'interface <see cref="T:System.IComparable" />.  
  
- ou - 
 <paramref name="a" /> et <paramref name="b" /> sont de types différents.</exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.CaseInsensitiveComparer Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.CaseInsensitiveComparer Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CaseInsensitiveComparer.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As CaseInsensitiveComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::CaseInsensitiveComparer ^ Default { System::Collections::CaseInsensitiveComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Collections.CaseInsensitiveComparer" Usage="System.Collections.CaseInsensitiveComparer.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.CaseInsensitiveComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une instance de <see cref="T:System.Collections.CaseInsensitiveComparer" /> associée au <see cref="P:System.Threading.Thread.CurrentCulture" /> du thread en cours et toujours disponible.</summary>
        <value>Instance de <see cref="T:System.Collections.CaseInsensitiveComparer" /> associée au <see cref="P:System.Threading.Thread.CurrentCulture" /> du thread en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Collections.CaseInsensitiveComparer> instance est créée à l’aide du constructeur sans paramètre, le <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> du thread actuel est enregistré. Les procédures de comparaison utilisent la culture enregistrée pour déterminer l’ordre de tri et les règles de casse ; Par conséquent, les comparaisons de chaînes peuvent avoir des résultats différents selon la culture. Pour plus d’informations sur les comparaisons propres à la culture, consultez le <xref:System.Globalization> espace de noms et [globalisation et localisation](~/docs/standard/globalization-localization/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="DefaultInvariant">
      <MemberSignature Language="C#" Value="public static System.Collections.CaseInsensitiveComparer DefaultInvariant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.CaseInsensitiveComparer DefaultInvariant" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CaseInsensitiveComparer.DefaultInvariant" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultInvariant As CaseInsensitiveComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::CaseInsensitiveComparer ^ DefaultInvariant { System::Collections::CaseInsensitiveComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultInvariant : System.Collections.CaseInsensitiveComparer" Usage="System.Collections.CaseInsensitiveComparer.DefaultInvariant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.CaseInsensitiveComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une instance de <see cref="T:System.Collections.CaseInsensitiveComparer" /> associée à <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> et toujours disponible.</summary>
        <value>Instance de <see cref="T:System.Collections.CaseInsensitiveComparer" /> associée à <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les procédures de comparaison utilisent le <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> pour déterminer l’ordre de tri et les règles de casse. Les comparaisons de chaînes peuvent avoir des résultats différents selon la culture. Pour plus d’informations sur les comparaisons propres à la culture, consultez le <xref:System.Globalization> espace de noms et [globalisation et localisation](~/docs/standard/globalization-localization/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant crée une table de hachage de la casse et une table de hachage de non-respect de la casse et illustre la différence de comportement, même si elles contiennent les mêmes éléments.  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
  </Members>
</Type>