<Type Name="Comparer" FullName="System.Collections.Comparer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2f4ea449c663230f1fb1bfa648f8e0c4103fdd35" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52382832" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Comparer : System.Collections.IComparer, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Comparer extends System.Object implements class System.Collections.IComparer, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Comparer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Comparer&#xA;Implements IComparer, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Comparer sealed : System::Collections::IComparer, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Comparer = class&#xA;    interface IComparer&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Compare deux objets pour contrôler leur équivalence, en respectant la casse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe est l’implémentation par défaut de la <xref:System.Collections.IComparer> interface. Le <xref:System.Collections.CaseInsensitiveComparer> classe est l’implémentation de la <xref:System.Collections.IComparer> interface qui effectue des comparaisons de chaînes respectant la casse. <xref:System.Collections.Generic.Comparer%601?displayProperty=nameWithType> est l’équivalent générique de cette classe.  
  
 Procédures de comparaison utilisent le <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> d’actuel de threads, sauf indication contraire. Les comparaisons de chaînes peuvent avoir des résultats différents selon la culture. Pour plus d’informations sur les comparaisons propres à la culture, consultez le <xref:System.Globalization> espace de noms et [globalisation et localisation](~/docs/standard/globalization-localization/index.md).  
  
   
  
## Examples  
 Le code suivant montre l’exemple comment <xref:System.Collections.Comparer.Compare%2A> retourne des valeurs différentes en fonction de la culture associée le <xref:System.Collections.Comparer>.  
  
 [!code-cpp[System.Collections.Comparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Comparer/CPP/comparercultures.cpp#1)]
 [!code-csharp[System.Collections.Comparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Comparer/CS/comparercultures.cs#1)]
 [!code-vb[System.Collections.Comparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Comparer/VB/comparercultures.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IComparer" />
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
    <altmember cref="T:System.Collections.Generic.Comparer`1" />
    <altmember cref="T:System.Globalization.CompareInfo" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Comparer (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Comparer.#ctor(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Comparer(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="new System.Collections.Comparer : System.Globalization.CultureInfo -&gt; System.Collections.Comparer" Usage="new System.Collections.Comparer culture" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <see cref="T:System.Globalization.CultureInfo" /> à utiliser pour le nouveau <see cref="T:System.Collections.Comparer" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Comparer" /> à l'aide du <see cref="T:System.Globalization.CultureInfo" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les procédures de comparaison utilisent spécifié <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> pour déterminer l’ordre de tri et les règles de casse. Les comparaisons de chaînes peuvent avoir des résultats différents selon la culture. Pour plus d’informations sur les comparaisons propres à la culture, consultez le <xref:System.Globalization> espace de noms et [globalisation et localisation](~/docs/standard/globalization-localization/index.md).  
  
   
  
## Examples  
 Le code suivant montre l’exemple comment <xref:System.Collections.Comparer.Compare%2A> retourne des valeurs différentes en fonction de la culture associée le <xref:System.Collections.Comparer>.  
  
 [!code-cpp[System.Collections.Comparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Comparer/CPP/comparercultures.cpp#1)]
 [!code-csharp[System.Collections.Comparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Comparer/CS/comparercultures.cs#1)]
 [!code-vb[System.Collections.Comparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Comparer/VB/comparercultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="culture" /> a la valeur <see langword="null" />.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Comparer.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (a As Object, b As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Object ^ a, System::Object ^ b);" />
      <MemberSignature Language="F#" Value="abstract member Compare : obj * obj -&gt; int&#xA;override this.Compare : obj * obj -&gt; int" Usage="comparer.Compare (a, b)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a">Premier objet à comparer.</param>
        <param name="b">Deuxième objet à comparer.</param>
        <summary>Exécute une comparaison avec respect de la casse de deux objets du même type et retourne une valeur indiquant si l'un est inférieur, égal ou supérieur à l'autre.</summary>
        <returns>Entier signé qui indique les valeurs relatives de <paramref name="a" /> et <paramref name="b" />, comme indiqué dans le tableau suivant.  
  
 <list type="table"><listheader><term> Value 
 </term><description> Signification 
 </description></listheader><item><term> Inférieure à zéro 
 </term><description><paramref name="a" /> est inférieur à <paramref name="b" />.  
  
 </description></item><item><term> Zéro 
 </term><description><paramref name="a" /> est égal à <paramref name="b" />.  
  
 </description></item><item><term> Supérieure à zéro 
 </term><description><paramref name="a" /> est supérieur à <paramref name="b" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `a` implémente <xref:System.IComparable>, puis `a`. `CompareTo` (`b`) est retournée ; sinon, si `b` implémente <xref:System.IComparable>, puis le résultat négatif de `b`. `CompareTo` (`a`) est retournée.  
  
 Comparaison `null` avec n’importe quel type est autorisée et ne génère pas d’exception lors de l’utilisation <xref:System.IComparable>. Lors du tri, `null` est considéré comme étant inférieure à n’importe quel autre objet.  
  
 Les comparaisons de chaînes peuvent avoir des résultats différents selon la culture. Pour plus d’informations sur les comparaisons propres à la culture, consultez le <xref:System.Globalization> espace de noms et [globalisation et localisation](~/docs/standard/globalization-localization/index.md).  
  
   
  
## Examples  
 Le code suivant montre l’exemple comment <xref:System.Collections.Comparer.Compare%2A> retourne des valeurs différentes en fonction de la culture associée le <xref:System.Collections.Comparer>.  
  
 [!code-cpp[System.Collections.Comparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Comparer/CPP/comparercultures.cpp#1)]
 [!code-csharp[System.Collections.Comparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Comparer/CS/comparercultures.cs#1)]
 [!code-vb[System.Collections.Comparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Comparer/VB/comparercultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ni <paramref name="a" /> ni <paramref name="b" /> n'implémente l'interface <see cref="T:System.IComparable" />.  
  
- ou - 
 <paramref name="a" /> et <paramref name="b" /> sont de types différents et aucun d'entre eux ne peut effectuer de comparaisons avec l'autre.</exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.Comparer Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.Comparer Default" />
      <MemberSignature Language="DocId" Value="F:System.Collections.Comparer.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As Comparer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Collections::Comparer ^ Default;" />
      <MemberSignature Language="F#" Value=" staticval mutable Default : System.Collections.Comparer" Usage="System.Collections.Comparer.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Comparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente une instance de <see cref="T:System.Collections.Comparer" /> associée au <see cref="P:System.Threading.Thread.CurrentCulture" /> du thread en cours. Ce champ est en lecture seule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les procédures de comparaison utilisent le <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> du thread actuel pour déterminer l’ordre de tri et les règles de casse. Les comparaisons de chaînes peuvent avoir des résultats différents selon la culture. Pour plus d’informations sur les comparaisons propres à la culture, consultez le <xref:System.Globalization> espace de noms et [globalisation et localisation](~/docs/standard/globalization-localization/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="DefaultInvariant">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.Comparer DefaultInvariant;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.Comparer DefaultInvariant" />
      <MemberSignature Language="DocId" Value="F:System.Collections.Comparer.DefaultInvariant" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultInvariant As Comparer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Collections::Comparer ^ DefaultInvariant;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultInvariant : System.Collections.Comparer" Usage="System.Collections.Comparer.DefaultInvariant" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Comparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente une instance de <see cref="T:System.Collections.Comparer" /> associée à <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />. Ce champ est en lecture seule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les procédures de comparaison utilisent le <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> pour déterminer l’ordre de tri et les règles de casse. Les comparaisons de chaînes peuvent avoir des résultats différents selon la culture. Pour plus d’informations sur les comparaisons propres à la culture, consultez le <xref:System.Globalization> espace de noms et [globalisation et localisation](~/docs/standard/globalization-localization/index.md).  
  
   
  
## Examples  
 Le code suivant montre l’exemple comment <xref:System.Collections.Comparer.Compare%2A> retourne des valeurs différentes en fonction de la culture associée le <xref:System.Collections.Comparer>.  
  
 [!code-cpp[System.Collections.Comparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Comparer/CPP/comparercultures.cpp#1)]
 [!code-csharp[System.Collections.Comparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Comparer/CS/comparercultures.cs#1)]
 [!code-vb[System.Collections.Comparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Comparer/VB/comparercultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Comparer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="comparer.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Objet à remplir avec des données.</param>
        <param name="context">Informations de contexte sur la source ou la destination de la sérialisation.</param>
        <summary>Remplit un objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données requises pour la sérialisation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alors que le <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> méthode n’est pas visible pour les clients COM par défaut, héritage la <xref:System.Collections.Comparer> classe peut l’exposer et provoquer un comportement indésirable dans les clients COM.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="info" /> a la valeur <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour la capacité à fournir des services de sérialisation. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiert une confiance totale pour l’appelant immédiat. Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</permission>
      </Docs>
    </Member>
  </Members>
</Type>