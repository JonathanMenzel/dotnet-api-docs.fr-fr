<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ReadOnlyCollectionBase.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58dc969bb4180a41a4a3642449038c15e5e069bc3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8dc969bb4180a41a4a3642449038c15e5e069bc3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.ReadOnlyCollectionBase">
          <source>Provides the <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> base class for a strongly typed non-generic read-only collection.</source>
          <target state="translated">Fournit la classe de base <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> pour une collection en lecture seule, non générique et fortement typée.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ReadOnlyCollectionBase">
          <source>A <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> instance is always read-only.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> instance est toujours en lecture seule.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ReadOnlyCollectionBase">
          <source>See <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> for a modifiable version of this class.</source>
          <target state="translated">Consultez <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> pour obtenir une version modifiable de cette classe.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ReadOnlyCollectionBase">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> class.</source>
          <target state="translated">Le code suivant exemple implémente la <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ReadOnlyCollectionBase">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Statique public (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> en Visual Basic) de ce type sont thread-safe.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ReadOnlyCollectionBase">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">Il n'est pas garanti que les membres d'instance soient thread-safe.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ReadOnlyCollectionBase">
          <source>This implementation does not provide a synchronized (thread safe) wrapper for a <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph>, but derived classes can create their own synchronized versions of the <ph id="ph2">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> using the <ph id="ph3">&lt;see cref="P:System.Collections.ICollection.SyncRoot" /&gt;</ph> property.</source>
          <target state="translated">Cette implémentation ne fournit pas synchronisé wrapper (thread-safe) pour un <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph>, mais les classes dérivées peuvent créer leurs propres versions synchronisées de la <ph id="ph2">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> à l’aide de la <ph id="ph3">&lt;see cref="P:System.Collections.ICollection.SyncRoot" /&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ReadOnlyCollectionBase">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ReadOnlyCollectionBase">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ReadOnlyCollectionBase">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ReadOnlyCollectionBase">
          <source>This base class is provided to make it easier for implementers to create a strongly typed read-only custom collection.</source>
          <target state="translated">Cette classe de base est fournie pour le rendre plus facilement les implémenteurs afin de créer une collection personnalisée fortement typée en lecture seule.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ReadOnlyCollectionBase">
          <source>Implementers are encouraged to extend this base class instead of creating their own.</source>
          <target state="translated">Il est préférable d’étendre cette classe de base au lieu de créer leurs propres.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ReadOnlyCollectionBase">
          <source>Members of this base class are protected and are intended to be used through a derived class only.</source>
          <target state="translated">Membres de cette classe de base sont protégés et sont destinées à être utilisées via une classe dérivée uniquement.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ReadOnlyCollectionBase">
          <source>This class makes the underlying collection available through the <ph id="ph1">&lt;see cref="P:System.Collections.ReadOnlyCollectionBase.InnerList" /&gt;</ph> property, which is intended for use only by classes that are derived directly from <ph id="ph2">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph>.</source>
          <target state="translated">Cette classe rend la collection sous-jacente disponible via le <ph id="ph1">&lt;see cref="P:System.Collections.ReadOnlyCollectionBase.InnerList" /&gt;</ph> propriété, qui est conçue pour une utilisation uniquement par les classes dérivées directement à partir de <ph id="ph2">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ReadOnlyCollectionBase">
          <source>The derived class must ensure that its own users cannot modify the underlying collection.</source>
          <target state="translated">La classe dérivée doit s’assurer que ses propres utilisateurs ne peuvent pas modifier la collection sous-jacente.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.ReadOnlyCollectionBase.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Ce constructeur est une opération o (1).</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Collections.ReadOnlyCollectionBase.Count">
          <source>Gets the number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Obtient le nombre d'éléments contenus dans l'instance de <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Nombre d'éléments contenus dans l'instance de <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.Count">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> class.</source>
          <target state="translated">Le code suivant exemple implémente la <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Retourne un énumérateur qui itère au sein de l'instance <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> pour l'instance du <ph id="ph2">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">L'instruction <ph id="ph1">`foreach`</ph> du langage C# (<ph id="ph2">`for each`</ph> en Visual Basic) se charge de la complexité des énumérateurs.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Il est donc recommandé d'utiliser <ph id="ph1">`foreach`</ph> plutôt que de manipuler l'énumérateur directement.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> replace également l'énumérateur à cette position.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">À cette position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> n'est pas défini.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Par conséquent, vous devez appeler <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> retourne le même objet tant que <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> n'est pas appelé.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> affecte l'élément suivant à <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retourne <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Lorsque l’énumérateur est à cette position, les appels suivants à <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> également retourner <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Si le dernier appel à <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retourné <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> n’est pas défini.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Pour attribuer une nouvelle fois <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> au premier élément de la collection, vous pouvez appeler <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> suivi de <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un énumérateur est valide tant que la collection demeure inchangée.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Si des modifications sont apportées à la collection, telles que l'ajout, la modification ou la suppression d'éléments, l'énumérateur est définitivement invalidé et son comportement n'est pas défini.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> class.</source>
          <target state="translated">Le code suivant exemple implémente la <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <source>Gets the list of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Obtient la liste des éléments contenus dans l'instance de <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> representing the <ph id="ph2">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> instance itself.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> représentant l'instance de <ph id="ph2">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> elle-même.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> class.</source>
          <target state="translated">Le code suivant exemple implémente la <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <source>This class makes the underlying collection available through the <ph id="ph1">&lt;see cref="P:System.Collections.ReadOnlyCollectionBase.InnerList" /&gt;</ph> property, which is intended for use only by classes that are derived directly from <ph id="ph2">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph>.</source>
          <target state="translated">Cette classe rend la collection sous-jacente disponible via le <ph id="ph1">&lt;see cref="P:System.Collections.ReadOnlyCollectionBase.InnerList" /&gt;</ph> propriété, qui est conçue pour une utilisation uniquement par les classes dérivées directement à partir de <ph id="ph2">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.InnerList">
          <source>The derived class must ensure that its own users cannot modify the underlying collection.</source>
          <target state="translated">La classe dérivée doit s’assurer que ses propres utilisateurs ne peuvent pas modifier la collection sous-jacente.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> unidimensionnel qui constitue la destination des éléments copiés à partir de <ph id="ph2">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> doit avoir une indexation de base zéro.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Index de base zéro dans un <bpt id="p1">&lt;c&gt;</bpt>tableau<ept id="p1">&lt;/c&gt;</ept> auquel commencer la copie.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> to a compatible one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified index of the target array.</source>
          <target state="translated">Copie l'ensemble de l'objet <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> vers un objet <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> unidimensionnel compatible, en commençant à l'index spécifié du tableau cible.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">Le tableau spécifié doit être d’un type compatible.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> to copy the elements.</source>
          <target state="translated">Cette méthode utilise <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> pour copier les éléments.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ReadOnlyCollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.ReadOnlyCollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> est multidimensionnel.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Le nombre d’éléments dans le <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> source est supérieur à la quantité d’espace disponible entre <ph id="ph2">&lt;paramref name="index" /&gt;</ph> et la fin du <ph id="ph3">&lt;paramref name="array" /&gt;</ph> de destination.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Le type du <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> source ne peut pas être converti automatiquement en type du <ph id="ph2">&lt;paramref name="array" /&gt;</ph> de destination.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to a <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> object is synchronized (thread safe).</source>
          <target state="translated">Obtient une valeur indiquant si l'accès à un objet <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> est synchronisé (thread-safe).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> object is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'accès à l'objet <ph id="ph2">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> est synchronisé (thread-safe) ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>A <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> object is not synchronized.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> objet n’est pas synchronisé.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Derived classes can provide a synchronized version of the <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> class using the <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">Les classes dérivées peuvent fournir une version synchronisée de la <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> à l’aide de la classe le <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property during the entire enumeration.</source>
          <target state="translated">L’exemple de code suivant montre comment verrouiller la collection à l’aide de la <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> propriété pendant toute l’énumération.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to a <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> object.</source>
          <target state="translated">Obtient un objet qui peut être utilisé pour synchroniser l'accès à un objet <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph> object.</source>
          <target state="translated">Objet pouvant être utilisé pour synchroniser l'accès à l'objet <ph id="ph1">&lt;see cref="T:System.Collections.ReadOnlyCollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> class using the <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">Classes dérivées peuvent produire leur propre version synchronisée de la <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> à l’aide de la classe le <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> object, not directly on the <ph id="ph3">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> object.</source>
          <target state="translated">Le code de synchronisation doit effectuer les opérations sur le <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> propriété de la <ph id="ph2">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> objet, pas directement sur le <ph id="ph3">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">Cela garantit un bon fonctionnement des collections dérivées d’autres objets.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> object.</source>
          <target state="translated">Plus particulièrement, il maintient la synchronisation est assurée avec les autres threads qui pourraient modifier simultanément le <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property during the entire enumeration.</source>
          <target state="translated">L’exemple de code suivant montre comment verrouiller la collection à l’aide de la <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> propriété pendant toute l’énumération.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>