<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Queue.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac535a21c57df8f37e412b63620230c911fe166fb4d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">35a21c57df8f37e412b63620230c911fe166fb4d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Queue">
          <source>Represents a first-in, first-out collection of objects.</source>
          <target state="translated">Représente une collection d’objets premier entré, premier sorti.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>This class implements a queue as a circular array.</source>
          <target state="translated">Cette classe implémente une file d’attente sous forme de tableau circulaire.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Objects stored in a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> are inserted at one end and removed from the other.</source>
          <target state="translated">Objets stockés dans un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> sont insérés à une extrémité et supprimés à l’autre.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Queues and stacks are useful when you need temporary storage for information; that is, when you might want to discard an element after retrieving its value.</source>
          <target state="translated">Les files d’attente et les piles sont utiles lorsque vous avez besoin de stockage temporaire pour plus d’informations ; Autrement dit, lorsque vous pouvez souhaiter ignorer un élément après la récupération de sa valeur.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Use <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> if you need to access the information in the same order that it is stored in the collection.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> si vous devez accéder aux informations dans le même ordre que celui qu’elle est stockée dans la collection.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Use <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> if you need to access the information in reverse order.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> si vous avez besoin accéder aux informations dans l’ordre inverse.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Use <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> if you need to access the collection from multiple threads concurrently.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> ou <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> si vous avez besoin pour accéder à la collection à partir de plusieurs threads simultanément.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Three main operations can be performed on a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> and its elements:</source>
          <target state="translated">Trois opérations principales peuvent être effectuées sur un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> et ses éléments :</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source><ph id="ph1">&lt;xref:System.Collections.Queue.Enqueue%2A&gt;</ph> adds an element to the end of the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Queue.Enqueue%2A&gt;</ph> Ajoute un élément à la fin de la <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source><ph id="ph1">&lt;xref:System.Collections.Queue.Dequeue%2A&gt;</ph> removes the oldest element from the start of the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Queue.Dequeue%2A&gt;</ph> Supprime l’élément le plus ancien à partir du début de la <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source><ph id="ph1">&lt;xref:System.Collections.Queue.Peek%2A&gt;</ph> returns the oldest element that is at the start of the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> but does not remove it from the <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Queue.Peek%2A&gt;</ph> Retourne l’élément le plus ancien qui se trouve au début de la <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> mais ne supprime ne pas de la <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> can hold.</source>
          <target state="translated">La capacité d’un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> est le nombre d’éléments du <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> peut contenir.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">Lorsque des éléments sont ajoutés à un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, la capacité est augmentée automatiquement par réallocation.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">La capacité peut être diminuée en appelant <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</source>
          <target state="translated">Le facteur de croissance est le nombre par lequel la capacité actuelle est multipliée lorsqu’une capacité supérieure est requise.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>The growth factor is determined when the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is constructed.</source>
          <target state="translated">Le facteur de croissance est déterminé lorsque le <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> est construit.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>The default growth factor is 2.0.</source>
          <target state="translated">Le facteur de croissance par défaut est 2.0.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>The capacity of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> will always increase by at least a minimum of four, regardless of the growth factor.</source>
          <target state="translated">La capacité de la <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> augmentera toujours au moins un minimum de quatre, quel que soit le facteur de croissance.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>For example, a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> with a growth factor of 1.0 will always increase in capacity by four when a greater capacity is required.</source>
          <target state="translated">Par exemple, un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> avec un facteur de croissance de 1.0 augmentera toujours de capacité par quatre lorsqu’une capacité supérieure est requise.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source><ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> accepte <ph id="ph2">`null`</ph> comme valeur valide et autorise les éléments en double.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>For the generic version of this collection, see <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Pour la version générique de cette collection, consultez <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>The following example shows how to create and add values to a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> and how to print out its values.</source>
          <target state="translated">L’exemple suivant montre comment créer et ajouter des valeurs pour un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> et comment afficher ses valeurs.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Statique public (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> en Visual Basic) de ce type sont thread-safe.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">Il n'est pas garanti que les membres d'instance soient thread-safe.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>, all operations must be done through the wrapper returned by the <ph id="ph2">&lt;see cref="M:System.Collections.Queue.Synchronized(System.Collections.Queue)" /&gt;</ph> method.</source>
          <target state="translated">Pour garantir la sécurité des threads de le <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>, toutes les opérations doivent être effectuées via le wrapper retourné par la <ph id="ph2">&lt;see cref="M:System.Collections.Queue.Synchronized(System.Collections.Queue)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.Collections.Queue">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> class that is empty, has the default initial capacity, and uses the default growth factor.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> qui est vide, possède la capacité initiale par défaut et utilise le facteur de croissance par défaut.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> can hold.</source>
          <target state="translated">La capacité d’un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> est le nombre d’éléments du <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> peut contenir.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">Lorsque des éléments sont ajoutés à un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, la capacité est augmentée automatiquement par réallocation.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">La capacité peut être diminuée en appelant <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor">
          <source>The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</source>
          <target state="translated">Le facteur de croissance est le nombre par lequel la capacité actuelle est multipliée lorsqu’une capacité supérieure est requise.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor">
          <source>The growth factor is determined when the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is constructed.</source>
          <target state="translated">Le facteur de croissance est déterminé lorsque le <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> est construit.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Ce constructeur est une opération o (1).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to copy elements from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> à partir duquel les éléments sont copiés.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> class that contains elements copied from the specified collection, has the same initial capacity as the number of elements copied, and uses the default growth factor.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> qui contient des éléments copiés à partir de la collection spécifiée, possède la capacité initiale correspondant au nombre d'éléments copiés et utilise le facteur de croissance par défaut.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> can hold.</source>
          <target state="translated">La capacité d’un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> est le nombre d’éléments du <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> peut contenir.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">Lorsque des éléments sont ajoutés à un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, la capacité est augmentée automatiquement par réallocation.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">La capacité peut être diminuée en appelant <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source>The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</source>
          <target state="translated">Le facteur de croissance est le nombre par lequel la capacité actuelle est multipliée lorsqu’une capacité supérieure est requise.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source>The growth factor is determined when the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is constructed.</source>
          <target state="translated">Le facteur de croissance est déterminé lorsque le <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> est construit.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source>The elements are copied onto the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> in the same order they are read by the <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> of the <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Les éléments sont copiés dans le <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> dans le même ordre qu’ils sont lus par le <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> de la <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`col`</ph>.</source>
          <target state="translated">Ce constructeur est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est le nombre d’éléments dans <ph id="ph3">`col`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source><ph id="ph1">&lt;paramref name="col" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="col" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> can contain.</source>
          <target state="translated">Nombre initial d'éléments que <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> peut contenir.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> class that is empty, has the specified initial capacity, and uses the default growth factor.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> qui est vide, possède la capacité initiale spécifiée et utilise le facteur de croissance par défaut.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> can hold.</source>
          <target state="translated">La capacité d’un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> est le nombre d’éléments du <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> peut contenir.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">Lorsque des éléments sont ajoutés à un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, la capacité est augmentée automatiquement par réallocation.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">La capacité peut être diminuée en appelant <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source>The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</source>
          <target state="translated">Le facteur de croissance est le nombre par lequel la capacité actuelle est multipliée lorsqu’une capacité supérieure est requise.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source>The growth factor is determined when the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is constructed.</source>
          <target state="translated">Le facteur de croissance est déterminé lorsque le <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> est construit.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite d’avoir à effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">Ce constructeur est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">`capacity`</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> can contain.</source>
          <target state="translated">Nombre initial d'éléments que <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> peut contenir.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>The factor by which the capacity of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> is expanded.</source>
          <target state="translated">Facteur d'augmentation de la capacité de <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> class that is empty, has the specified initial capacity, and uses the specified growth factor.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> qui est vide, possède la capacité initiale spécifiée et utilise le facteur de croissance spécifié.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> can hold.</source>
          <target state="translated">La capacité d’un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> est le nombre d’éléments du <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> peut contenir.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">Lorsque des éléments sont ajoutés à un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, la capacité est augmentée automatiquement par réallocation.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">La capacité peut être diminuée en appelant <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</source>
          <target state="translated">Le facteur de croissance est le nombre par lequel la capacité actuelle est multipliée lorsqu’une capacité supérieure est requise.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>The growth factor is determined when the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is constructed.</source>
          <target state="translated">Le facteur de croissance est déterminé lorsque le <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> est construit.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>The capacity of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> will always increase by a minimum value, regardless of the growth factor; a growth factor of 1.0 will not prevent the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> from increasing in size.</source>
          <target state="translated">La capacité de la <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> augmentera toujours une valeur minimale, quel que soit le facteur de croissance ; un facteur de croissance de 1.0 n’empêchera pas le <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> taille n’augmente.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite d’avoir à effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">Ce constructeur est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">`capacity`</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source><ph id="ph1">&lt;paramref name="growFactor" /&gt;</ph> is less than 1.0 or greater than 10.0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="growFactor" /&gt;</ph> est inférieur à 1.0 ou supérieur à 10.0.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Clear">
          <source>Removes all objects from the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">Supprime tous les objets du <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> est définie à zéro, et les références à d’autres objets des éléments de la collection sont également libérées.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clear">
          <source>The capacity remains unchanged.</source>
          <target state="translated">La capacité reste inchangée.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clear">
          <source>To reset the capacity of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, call <ph id="ph2">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">Pour rétablir la capacité de la <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, appelez <ph id="ph2">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clear">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> to the default capacity.</source>
          <target state="translated">La suppression vide <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> définit la capacité de la <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> à la capacité par défaut.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clear">
          <source>The following example shows how to clear the values of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment effacer les valeurs de la <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Clone">
          <source>Creates a shallow copy of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">Crée une copie superficielle de <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Clone">
          <source>A shallow copy of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">Copie superficielle de <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clone">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</source>
          <target state="translated">Une copie superficielle d’une collection copie uniquement les éléments de la collection, si elles sont des types référence ou types valeur, mais elle ne copie pas les objets que les références.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clone">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">Les références dans la nouvelle collection désignent les mêmes objets que les références dans la collection d’origine à.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clone">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">En revanche, une copie complète d’une collection copie les éléments et tous les éléments référencés directement ou indirectement par les éléments.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clone">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Contains(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> à rechercher dans <ph id="ph2">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Contains(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La valeur peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Contains(System.Object)">
          <source>Determines whether an element is in the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">Détermine si le <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> contient un élément.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> existe dans <ph id="ph3">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Contains(System.Object)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cette méthode détermine l’égalité en appelant <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Contains(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`obj`</ph> to determine whether <ph id="ph4">`item`</ph> exists.</source>
          <target state="translated">À compter de .NET Framework 2.0, cette méthode utilise les objets de la collection <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> méthodes sur <ph id="ph3">`obj`</ph> pour déterminer si <ph id="ph4">`item`</ph> existe.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`obj`</ph> parameter on the objects in the collection.</source>
          <target state="translated">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> méthodes de la <ph id="ph3">`obj`</ph> paramètre sur les objets dans la collection.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> unidimensionnel qui constitue la destination des éléments copiés à partir de <ph id="ph2">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> doit avoir une indexation de base zéro.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Index de base zéro dans un <bpt id="p1">&lt;c&gt;</bpt>tableau<ept id="p1">&lt;/c&gt;</ept> auquel commencer la copie.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> elements to an existing one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified array index.</source>
          <target state="translated">Copie les éléments <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> dans un <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> unidimensionnel existant, en commençant au niveau de l'index de tableau spécifié.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">Les éléments sont copiés dans le <ph id="ph1">&lt;xref:System.Array&gt;</ph> dans le même ordre que celui dans lequel l’énumérateur itère au sein du <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>The following example shows how to copy a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> into a one-dimensional array.</source>
          <target state="translated">L’exemple suivant montre comment copier un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> dans un tableau unidimensionnel.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> est multidimensionnel.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Le nombre d’éléments dans le <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> source est supérieur à la quantité d’espace disponible entre <ph id="ph2">&lt;paramref name="index" /&gt;</ph> et la fin du <ph id="ph3">&lt;paramref name="array" /&gt;</ph> de destination.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Le type du <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> source ne peut pas être converti automatiquement en type du <ph id="ph2">&lt;paramref name="array" /&gt;</ph> de destination.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Collections.Queue.Count">
          <source>Gets the number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">Obtient le nombre d'éléments contenus dans le <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">Nombre d'éléments contenus dans <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.Count">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> can store.</source>
          <target state="translated">La capacité d’un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> est le nombre d’éléments qui le <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> peut stocker.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> est le nombre d’éléments réellement contenus dans le <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.Count">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</source>
          <target state="translated">La capacité d’un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> est toujours supérieur ou égal à <ph id="ph2">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.Count">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> dépasse la capacité lors de l’ajout d’éléments, la capacité est automatiquement augmentée en réallouant le tableau interne avant de copier les anciens éléments et d’ajouter les nouveaux éléments.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.Count">
          <source>The new capacity is determined by multiplying the current capacity by the growth factor, which is determined when the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is constructed.</source>
          <target state="translated">La nouvelle capacité est déterminée en multipliant la capacité actuelle par le facteur de croissance, qui est déterminée lorsque le <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> est construit.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.Count">
          <source>The capacity of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> will always increase by a minimum value, regardless of the growth factor; a growth factor of 1.0 will not prevent the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> from increasing in size.</source>
          <target state="translated">La capacité de la <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> augmentera toujours une valeur minimale, quel que soit le facteur de croissance ; un facteur de croissance de 1.0 n’empêchera pas le <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> taille n’augmente.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.Count">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">La capacité peut être diminuée en appelant <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Dequeue">
          <source>Removes and returns the object at the beginning of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">Supprime et renvoie l'objet au début de la <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Dequeue">
          <source>The object that is removed from the beginning of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">Objet supprimé du début de la <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Dequeue">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.Queue.Peek%2A&gt;</ph> method, but <ph id="ph2">&lt;xref:System.Collections.Queue.Peek%2A&gt;</ph> does not modify the <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">Cette méthode est analogue à la méthode <ph id="ph1">&lt;xref:System.Collections.Queue.Peek%2A&gt;</ph>, mais <ph id="ph2">&lt;xref:System.Collections.Queue.Peek%2A&gt;</ph> ne modifie pas la <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Dequeue">
          <source><ph id="ph1">`null`</ph> can be added to the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> as a value.</source>
          <target state="translated"><ph id="ph1">`null`</ph> peut être ajouté à la <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> en tant que valeur.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Dequeue">
          <source>To distinguish between a null value and the end of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, check the <ph id="ph2">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> property or catch the <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>, which is thrown when the <ph id="ph4">&lt;xref:System.Collections.Queue&gt;</ph> is empty.</source>
          <target state="translated">Faire la distinction entre une valeur null et la fin de la <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, vérifiez le <ph id="ph2">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> propriété ou catch le <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>, qui est levé lorsque le <ph id="ph4">&lt;xref:System.Collections.Queue&gt;</ph> est vide.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Dequeue">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Dequeue">
          <source>The following example shows how to add elements to the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, remove elements from the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>, or view the element at the beginning of the <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment ajouter des éléments à la <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, supprimer les éléments du <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>, ou d’afficher l’élément au début de la <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Dequeue">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> is empty.</source>
          <target state="translated">La <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> est vide.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>The object to add to the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">Objet à ajouter à <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La valeur peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>Adds an object to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">Ajoute un objet à la fin de la <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> can hold.</source>
          <target state="translated">La capacité d’un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> est le nombre d’éléments du <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> peut contenir.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">Lorsque des éléments sont ajoutés à un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, la capacité est augmentée automatiquement par réallocation.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">La capacité peut être diminuée en appelant <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</source>
          <target state="translated">Le facteur de croissance est le nombre par lequel la capacité actuelle est multipliée lorsqu’une capacité supérieure est requise.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>The growth factor is determined when the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is constructed.</source>
          <target state="translated">Le facteur de croissance est déterminé lorsque le <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> est construit.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>The capacity of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> will always increase by a minimum value, regardless of the growth factor; a growth factor of 1.0 will not prevent the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> from increasing in size.</source>
          <target state="translated">La capacité de la <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> augmentera toujours une valeur minimale, quel que soit le facteur de croissance ; un facteur de croissance de 1.0 n’empêchera pas le <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> taille n’augmente.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> is less than the capacity of the internal array, this method is an O(1) operation.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> est inférieur à la capacité du tableau interne, cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>If the internal array needs to be reallocated to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</source>
          <target state="translated">Si le tableau interne doit être réalloué pour intégrer le nouvel élément, cette méthode devient un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>The following example shows how to add elements to the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, remove elements from the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>, or view the element at the beginning of the <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment ajouter des éléments à la <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, supprimer les éléments du <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>, ou d’afficher l’élément au début de la <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">Retourne un énumérateur qui itère au sein de <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> pour <ph id="ph2">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">L'instruction <ph id="ph1">`foreach`</ph> du langage C# (<ph id="ph2">`for each`</ph> en Visual Basic) se charge de la complexité des énumérateurs.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Il est donc recommandé d'utiliser <ph id="ph1">`foreach`</ph> plutôt que de manipuler l'énumérateur directement.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> replace également l'énumérateur à cette position.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">À cette position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> n'est pas défini.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Par conséquent, vous devez appeler <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> retourne le même objet tant que <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> n'est pas appelé.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> affecte l'élément suivant à <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retourne <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Lorsque l’énumérateur est à cette position, les appels suivants à <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> également retourner <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Si le dernier appel à <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retourné <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> n’est pas défini.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Pour attribuer une nouvelle fois <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> au premier élément de la collection, vous pouvez appeler <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> suivi de <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un énumérateur est valide tant que la collection demeure inchangée.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Si des modifications sont apportées à la collection, telles que l'ajout, la modification ou la suppression d'éléments, l'énumérateur est définitivement invalidé et son comportement n'est pas défini.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="P:System.Collections.Queue.IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Obtient une valeur indiquant si l'accès à <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> est synchronisé (thread-safe).</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'accès à <ph id="ph2">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> est synchronisé (thread-safe) ; sinon <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.IsSynchronized">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.IsSynchronized">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, all operations must be done through the wrapper returned by the <ph id="ph2">&lt;xref:System.Collections.Queue.Synchronized%2A&gt;</ph> method.</source>
          <target state="translated">Pour garantir la sécurité des threads de le <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, toutes les opérations doivent être effectuées via le wrapper retourné par la <ph id="ph2">&lt;xref:System.Collections.Queue.Synchronized%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.IsSynchronized">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">L’exemple de code suivant montre comment verrouiller la collection à l’aide de la <ph id="ph1">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph> pendant toute l’énumération.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.IsSynchronized">
          <source>The following example shows how to synchronize a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, determine if a <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> is synchronized, and use a synchronized <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment synchroniser un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, déterminer si un <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> est synchronisé et utiliser synchronisé <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Peek">
          <source>Returns the object at the beginning of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> without removing it.</source>
          <target state="translated">Renvoie l'objet situé au début de la <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> sans le supprimer.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Peek">
          <source>The object at the beginning of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">Objet situé au début de la <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Peek">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.Queue.Dequeue%2A&gt;</ph> method, but <ph id="ph2">&lt;xref:System.Collections.Queue.Peek%2A&gt;</ph> does not modify the <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">Cette méthode est analogue à la méthode <ph id="ph1">&lt;xref:System.Collections.Queue.Dequeue%2A&gt;</ph>, mais <ph id="ph2">&lt;xref:System.Collections.Queue.Peek%2A&gt;</ph> ne modifie pas la <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Peek">
          <source><ph id="ph1">`null`</ph> can be added to the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> as a value.</source>
          <target state="translated"><ph id="ph1">`null`</ph> peut être ajouté à la <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> en tant que valeur.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Peek">
          <source>To distinguish between a null value and the end of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, check the <ph id="ph2">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> property or catch the <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>, which is thrown when the <ph id="ph4">&lt;xref:System.Collections.Queue&gt;</ph> is empty.</source>
          <target state="translated">Faire la distinction entre une valeur null et la fin de la <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, vérifiez le <ph id="ph2">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> propriété ou catch le <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>, qui est levé lorsque le <ph id="ph4">&lt;xref:System.Collections.Queue&gt;</ph> est vide.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Peek">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Peek">
          <source>The following example shows how to add elements to the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, remove elements from the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>, or view the element at the beginning of the <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment ajouter des éléments à la <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, supprimer les éléments du <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>, ou d’afficher l’élément au début de la <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Peek">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> is empty.</source>
          <target state="translated">La <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> est vide.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> to synchronize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> à synchroniser.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> that wraps the original queue, and is thread safe.</source>
          <target state="translated">Retourne un nouvel objet <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> thread-safe encapsulant la file d'attente d'origine.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> wrapper that is synchronized (thread safe).</source>
          <target state="translated">Wrapper <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> synchronisé (thread-safe).</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>The wrapper returned by this method locks the queue before an operation is performed so that it is performed in a thread-safe manner.</source>
          <target state="translated">Le wrapper retourné par cette méthode verrouille la file d’attente avant l’exécution d’une opération afin qu’elle est exécutée de façon thread-safe.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, all operations must be done through this wrapper only.</source>
          <target state="translated">Pour garantir la sécurité des threads de le <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, toutes les opérations doivent être effectuées via ce wrapper uniquement.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">L’exemple de code suivant montre comment verrouiller la collection à l’aide de la <ph id="ph1">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph> pendant toute l’énumération.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Cette méthode est une opération o (1).</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>The following example shows how to synchronize a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, determine if a <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> is synchronized and use a synchronized <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment synchroniser un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, déterminer si un <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> est synchronisé et utiliser synchronisé <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source><ph id="ph1">&lt;paramref name="queue" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="queue" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="P:System.Collections.Queue.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">Objet qui peut être utilisé pour synchroniser l'accès à <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>To create a synchronized version of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Collections.Queue.Synchronized%2A&gt;</ph> method.</source>
          <target state="translated">Pour créer une version synchronisée de la <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, utilisez le <ph id="ph2">&lt;xref:System.Collections.Queue.Synchronized%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>However, derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">Toutefois, les classes dérivées peuvent fournir leur propre version synchronisée de la <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> à l’aide de la <ph id="ph2">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>, not directly on the <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">Le code de synchronisation doit effectuer les opérations sur le <ph id="ph1">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph> de la <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>, et non directement sur le <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">Cela garantit un bon fonctionnement des collections dérivées d’autres objets.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> object.</source>
          <target state="translated">Plus particulièrement, il maintient la synchronisation est assurée avec les autres threads qui pourraient modifier simultanément le <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">L’exemple de code suivant montre comment verrouiller la collection à l’aide de la <ph id="ph1">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph> pendant toute l’énumération.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">La récupération de la valeur de cette propriété est une opération O(1).</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.ToArray">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> elements to a new array.</source>
          <target state="translated">Copie les éléments <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> vers un nouveau tableau.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.ToArray">
          <source>A new array containing elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">Nouveau tableau contenant les éléments copiés à partir de <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.ToArray">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is not modified.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> n’est pas modifié.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.ToArray">
          <source>The order of the elements in the new array is the same as the order of the elements from the beginning of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> to its end.</source>
          <target state="translated">L’ordre des éléments dans le nouveau tableau est le même que l’ordre des éléments à partir du début de la <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> à sa fin.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.ToArray">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.ToArray">
          <source>The following example shows how to copy a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> into a one-dimensional array.</source>
          <target state="translated">L’exemple suivant montre comment copier un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> dans un tableau unidimensionnel.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.TrimToSize">
          <source>Sets the capacity to the actual number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">Définit la capacité au nombre réel d'éléments dans <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.TrimToSize">
          <source>This method can be used to minimize a queue's memory overhead if no new elements will be added to the queue.</source>
          <target state="translated">Cette méthode peut être utilisée pour réduire la surcharge mémoire de la file d’attente si aucun nouvel élément ne doit être ajouté à la file d’attente.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.TrimToSize">
          <source>To reset a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> to its initial state, call the <ph id="ph2">&lt;xref:System.Collections.Queue.Clear%2A&gt;</ph> method before calling <ph id="ph3">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">Pour réinitialiser un <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> à son état initial, appelez le <ph id="ph2">&lt;xref:System.Collections.Queue.Clear%2A&gt;</ph> méthode avant d’appeler <ph id="ph3">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.TrimToSize">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> to the default capacity.</source>
          <target state="translated">La suppression vide <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> définit la capacité de la <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> à la capacité par défaut.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.TrimToSize">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode est un O (<ph id="ph1">`n`</ph>) opération, où <ph id="ph2">`n`</ph> est <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.TrimToSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> est en lecture seule.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>