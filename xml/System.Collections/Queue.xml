<Type Name="Queue" FullName="System.Collections.Queue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ff541860eb3f63243652aeb21a48acdfb380fe76" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39951289" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Queue : ICloneable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Queue extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Queue" />
  <TypeSignature Language="VB.NET" Value="Public Class Queue&#xA;Implements ICloneable, ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class Queue : ICloneable, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type Queue = class&#xA;    interface ICollection&#xA;    interface ICloneable&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Queue/QueueDebugView))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="eef49-101">Représente une collection d’objets premier entré, premier sorti.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eef49-101">Represents a first-in, first-out collection of objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef49-102">Cette classe implémente une file d’attente sous forme de tableau circulaire.</span><span class="sxs-lookup"><span data-stu-id="eef49-102">This class implements a queue as a circular array.</span></span> <span data-ttu-id="eef49-103">Objets stockés dans un <xref:System.Collections.Queue> sont insérés à une extrémité et supprimés à l’autre.</span><span class="sxs-lookup"><span data-stu-id="eef49-103">Objects stored in a <xref:System.Collections.Queue> are inserted at one end and removed from the other.</span></span>  
  
 <span data-ttu-id="eef49-104">Les piles et les files d’attente sont utiles lorsque vous avez besoin de stockage temporaire des informations ; Autrement dit, lorsque vous souhaitez ignorer un élément après avoir récupéré sa valeur.</span><span class="sxs-lookup"><span data-stu-id="eef49-104">Queues and stacks are useful when you need temporary storage for information; that is, when you might want to discard an element after retrieving its value.</span></span> <span data-ttu-id="eef49-105">Utilisez <xref:System.Collections.Queue> si vous avez besoin accéder aux informations dans le même ordre que celui qu’elles sont stockées dans la collection.</span><span class="sxs-lookup"><span data-stu-id="eef49-105">Use <xref:System.Collections.Queue> if you need to access the information in the same order that it is stored in the collection.</span></span> <span data-ttu-id="eef49-106">Utilisez <xref:System.Collections.Stack> si vous avez besoin accéder aux informations dans l’ordre inverse.</span><span class="sxs-lookup"><span data-stu-id="eef49-106">Use <xref:System.Collections.Stack> if you need to access the information in reverse order.</span></span> <span data-ttu-id="eef49-107">Utilisez <xref:System.Collections.Concurrent.ConcurrentQueue%601> ou <xref:System.Collections.Concurrent.ConcurrentStack%601> si vous avez besoin pour accéder à la collection à partir de plusieurs threads simultanément.</span><span class="sxs-lookup"><span data-stu-id="eef49-107">Use <xref:System.Collections.Concurrent.ConcurrentQueue%601> or <xref:System.Collections.Concurrent.ConcurrentStack%601> if you need to access the collection from multiple threads concurrently.</span></span>  
  
 <span data-ttu-id="eef49-108">Trois opérations principales peuvent être effectuées sur un <xref:System.Collections.Queue> et ses éléments :</span><span class="sxs-lookup"><span data-stu-id="eef49-108">Three main operations can be performed on a <xref:System.Collections.Queue> and its elements:</span></span>  
  
-   <span data-ttu-id="eef49-109"><xref:System.Collections.Queue.Enqueue%2A> Ajoute un élément à la fin de la <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="eef49-109"><xref:System.Collections.Queue.Enqueue%2A> adds an element to the end of the <xref:System.Collections.Queue>.</span></span>  
  
-   <span data-ttu-id="eef49-110"><xref:System.Collections.Queue.Dequeue%2A> Supprime l’élément le plus ancien à partir du début de la <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="eef49-110"><xref:System.Collections.Queue.Dequeue%2A> removes the oldest element from the start of the <xref:System.Collections.Queue>.</span></span>  
  
-   <span data-ttu-id="eef49-111"><xref:System.Collections.Queue.Peek%2A> Retourne l’élément le plus ancien qui se trouve au début de la <xref:System.Collections.Queue> mais ne supprime ne pas de la <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="eef49-111"><xref:System.Collections.Queue.Peek%2A> returns the oldest element that is at the start of the <xref:System.Collections.Queue> but does not remove it from the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="eef49-112">La capacité d’un <xref:System.Collections.Queue> est le nombre d’éléments du <xref:System.Collections.Queue> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="eef49-112">The capacity of a <xref:System.Collections.Queue> is the number of elements the <xref:System.Collections.Queue> can hold.</span></span> <span data-ttu-id="eef49-113">Comme les éléments sont ajoutés à un <xref:System.Collections.Queue>, la capacité est automatiquement augmentée par réallocation.</span><span class="sxs-lookup"><span data-stu-id="eef49-113">As elements are added to a <xref:System.Collections.Queue>, the capacity is automatically increased as required through reallocation.</span></span>  <span data-ttu-id="eef49-114">La capacité peut être diminuée en appelant <xref:System.Collections.Queue.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-114">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="eef49-115">Le facteur de croissance est le nombre par lequel la capacité actuelle est multipliée lorsqu’une capacité supérieure est requise.</span><span class="sxs-lookup"><span data-stu-id="eef49-115">The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</span></span>  <span data-ttu-id="eef49-116">Le facteur de croissance est déterminé lorsque le <xref:System.Collections.Queue> est construit.</span><span class="sxs-lookup"><span data-stu-id="eef49-116">The growth factor is determined when the <xref:System.Collections.Queue> is constructed.</span></span> <span data-ttu-id="eef49-117">Le facteur de croissance par défaut est 2.0.</span><span class="sxs-lookup"><span data-stu-id="eef49-117">The default growth factor is 2.0.</span></span> <span data-ttu-id="eef49-118">La capacité de la <xref:System.Collections.Queue> augmentera toujours d’au moins un minimum de quatre, quel que soit le facteur de croissance.</span><span class="sxs-lookup"><span data-stu-id="eef49-118">The capacity of the <xref:System.Collections.Queue> will always increase by at least a minimum of four, regardless of the growth factor.</span></span> <span data-ttu-id="eef49-119">Par exemple, un <xref:System.Collections.Queue> avec un facteur de croissance de 1.0 augmentera toujours de capacité par quatre lorsqu’une capacité supérieure est requise.</span><span class="sxs-lookup"><span data-stu-id="eef49-119">For example, a <xref:System.Collections.Queue> with a growth factor of 1.0 will always increase in capacity by four when a greater capacity is required.</span></span>  
  
 <span data-ttu-id="eef49-120"><xref:System.Collections.Queue> accepte `null` comme une valeur valide et autorise les éléments en double.</span><span class="sxs-lookup"><span data-stu-id="eef49-120"><xref:System.Collections.Queue> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="eef49-121">Pour la version générique de cette collection, consultez <xref:System.Collections.Generic.Queue%601?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="eef49-121">For the generic version of this collection, see <xref:System.Collections.Generic.Queue%601?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eef49-122">L’exemple suivant montre comment créer et ajouter des valeurs pour un <xref:System.Collections.Queue> et comment imprimer ses valeurs.</span><span class="sxs-lookup"><span data-stu-id="eef49-122">The following example shows how to create and add values to a <xref:System.Collections.Queue> and how to print out its values.</span></span>  
  
 [!code-cpp[Classic Queue Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue Example/CS/source.cs#1)]
 [!code-vb[Classic Queue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="eef49-123">Statique public (<see langword="Shared" /> en Visual Basic) de ce type sont thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eef49-123">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="eef49-124">Il n'est pas garanti que les membres d'instance soient thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eef49-124">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="eef49-125">Pour garantir la sécurité des threads de la <see cref="T:System.Collections.Queue" />, toutes les opérations doivent être effectuées via le wrapper retourné par la <see cref="M:System.Collections.Queue.Synchronized(System.Collections.Queue)" /> (méthode).</span>
      <span class="sxs-lookup">
        <span data-stu-id="eef49-125">To guarantee the thread safety of the <see cref="T:System.Collections.Queue" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.Queue.Synchronized(System.Collections.Queue)" /> method.</span>
      </span>
      <span data-ttu-id="eef49-126">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eef49-126">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="eef49-127">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eef49-127">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="eef49-128">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eef49-128">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.Generic.Queue`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eef49-129">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-129">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Queue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Queue();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eef49-130">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Queue" /> qui est vide, possède la capacité initiale par défaut et utilise le facteur de croissance par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-130">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class that is empty, has the default initial capacity, and uses the default growth factor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef49-131">La capacité d’un <xref:System.Collections.Queue> est le nombre d’éléments du <xref:System.Collections.Queue> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="eef49-131">The capacity of a <xref:System.Collections.Queue> is the number of elements the <xref:System.Collections.Queue> can hold.</span></span>  <span data-ttu-id="eef49-132">Comme les éléments sont ajoutés à un <xref:System.Collections.Queue>, la capacité est automatiquement augmentée par réallocation.</span><span class="sxs-lookup"><span data-stu-id="eef49-132">As elements are added to a <xref:System.Collections.Queue>, the capacity is automatically increased as required through reallocation.</span></span>  <span data-ttu-id="eef49-133">La capacité peut être diminuée en appelant <xref:System.Collections.Queue.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-133">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="eef49-134">Le facteur de croissance est le nombre par lequel la capacité actuelle est multipliée lorsqu’une capacité supérieure est requise.</span><span class="sxs-lookup"><span data-stu-id="eef49-134">The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</span></span>  <span data-ttu-id="eef49-135">Le facteur de croissance est déterminé lorsque le <xref:System.Collections.Queue> est construit.</span><span class="sxs-lookup"><span data-stu-id="eef49-135">The growth factor is determined when the <xref:System.Collections.Queue> is constructed.</span></span>  
  
 <span data-ttu-id="eef49-136">Ce constructeur est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="eef49-136">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Queue (System.Collections.ICollection col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection col) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (col As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Queue(System::Collections::ICollection ^ col);" />
      <MemberSignature Language="F#" Value="new System.Collections.Queue : System.Collections.ICollection -&gt; System.Collections.Queue" Usage="new System.Collections.Queue col" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="col" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="col">
          <span data-ttu-id="eef49-137">
            <see cref="T:System.Collections.ICollection" /> à partir duquel les éléments sont copiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-137">The <see cref="T:System.Collections.ICollection" /> to copy elements from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eef49-138">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Queue" /> qui contient des éléments copiés à partir de la collection spécifiée, possède la capacité initiale correspondant au nombre d'éléments copiés et utilise le facteur de croissance par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-138">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class that contains elements copied from the specified collection, has the same initial capacity as the number of elements copied, and uses the default growth factor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef49-139">La capacité d’un <xref:System.Collections.Queue> est le nombre d’éléments du <xref:System.Collections.Queue> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="eef49-139">The capacity of a <xref:System.Collections.Queue> is the number of elements the <xref:System.Collections.Queue> can hold.</span></span>  <span data-ttu-id="eef49-140">Comme les éléments sont ajoutés à un <xref:System.Collections.Queue>, la capacité est automatiquement augmentée par réallocation.</span><span class="sxs-lookup"><span data-stu-id="eef49-140">As elements are added to a <xref:System.Collections.Queue>, the capacity is automatically increased as required through reallocation.</span></span>  <span data-ttu-id="eef49-141">La capacité peut être diminuée en appelant <xref:System.Collections.Queue.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-141">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="eef49-142">Le facteur de croissance est le nombre par lequel la capacité actuelle est multipliée lorsqu’une capacité supérieure est requise.</span><span class="sxs-lookup"><span data-stu-id="eef49-142">The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</span></span>  <span data-ttu-id="eef49-143">Le facteur de croissance est déterminé lorsque le <xref:System.Collections.Queue> est construit.</span><span class="sxs-lookup"><span data-stu-id="eef49-143">The growth factor is determined when the <xref:System.Collections.Queue> is constructed.</span></span>  
  
 <span data-ttu-id="eef49-144">Les éléments sont copiés dans le <xref:System.Collections.Queue> dans le même ordre qu’ils sont lus par le <xref:System.Collections.IEnumerator> de la <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="eef49-144">The elements are copied onto the <xref:System.Collections.Queue> in the same order they are read by the <xref:System.Collections.IEnumerator> of the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="eef49-145">Ce constructeur est un O (`n`) opération, où `n` est le nombre d’éléments dans `col`.</span><span class="sxs-lookup"><span data-stu-id="eef49-145">This constructor is an O(`n`) operation, where `n` is the number of elements in `col`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eef49-146">
            <paramref name="col" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-146">
              <paramref name="col" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Queue (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Queue(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Queue : int -&gt; System.Collections.Queue" Usage="new System.Collections.Queue capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="eef49-147">Nombre initial d'éléments que <see cref="T:System.Collections.Queue" /> peut contenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-147">The initial number of elements that the <see cref="T:System.Collections.Queue" /> can contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eef49-148">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Queue" /> qui est vide, possède la capacité initiale spécifiée et utilise le facteur de croissance par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-148">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class that is empty, has the specified initial capacity, and uses the default growth factor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef49-149">La capacité d’un <xref:System.Collections.Queue> est le nombre d’éléments du <xref:System.Collections.Queue> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="eef49-149">The capacity of a <xref:System.Collections.Queue> is the number of elements the <xref:System.Collections.Queue> can hold.</span></span>  <span data-ttu-id="eef49-150">Comme les éléments sont ajoutés à un <xref:System.Collections.Queue>, la capacité est automatiquement augmentée par réallocation.</span><span class="sxs-lookup"><span data-stu-id="eef49-150">As elements are added to a <xref:System.Collections.Queue>, the capacity is automatically increased as required through reallocation.</span></span>  <span data-ttu-id="eef49-151">La capacité peut être diminuée en appelant <xref:System.Collections.Queue.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-151">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="eef49-152">Le facteur de croissance est le nombre par lequel la capacité actuelle est multipliée lorsqu’une capacité supérieure est requise.</span><span class="sxs-lookup"><span data-stu-id="eef49-152">The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</span></span>  <span data-ttu-id="eef49-153">Le facteur de croissance est déterminé lorsque le <xref:System.Collections.Queue> est construit.</span><span class="sxs-lookup"><span data-stu-id="eef49-153">The growth factor is determined when the <xref:System.Collections.Queue> is constructed.</span></span>  
  
 <span data-ttu-id="eef49-154">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="eef49-154">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="eef49-155">Ce constructeur est un O (`n`) opération, où `n` est `capacity`.</span><span class="sxs-lookup"><span data-stu-id="eef49-155">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eef49-156">
            <paramref name="capacity" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-156">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Queue (int capacity, float growFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 growFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.#ctor(System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, growFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Queue(int capacity, float growFactor);" />
      <MemberSignature Language="F#" Value="new System.Collections.Queue : int * single -&gt; System.Collections.Queue" Usage="new System.Collections.Queue (capacity, growFactor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="growFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="eef49-157">Nombre initial d'éléments que <see cref="T:System.Collections.Queue" /> peut contenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-157">The initial number of elements that the <see cref="T:System.Collections.Queue" /> can contain.</span>
          </span>
        </param>
        <param name="growFactor">
          <span data-ttu-id="eef49-158">Facteur d'augmentation de la capacité de <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-158">The factor by which the capacity of the <see cref="T:System.Collections.Queue" /> is expanded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eef49-159">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Queue" /> qui est vide, possède la capacité initiale spécifiée et utilise le facteur de croissance spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-159">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class that is empty, has the specified initial capacity, and uses the specified growth factor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef49-160">La capacité d’un <xref:System.Collections.Queue> est le nombre d’éléments du <xref:System.Collections.Queue> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="eef49-160">The capacity of a <xref:System.Collections.Queue> is the number of elements the <xref:System.Collections.Queue> can hold.</span></span>  <span data-ttu-id="eef49-161">Comme les éléments sont ajoutés à un <xref:System.Collections.Queue>, la capacité est automatiquement augmentée par réallocation.</span><span class="sxs-lookup"><span data-stu-id="eef49-161">As elements are added to a <xref:System.Collections.Queue>, the capacity is automatically increased as required through reallocation.</span></span>  <span data-ttu-id="eef49-162">La capacité peut être diminuée en appelant <xref:System.Collections.Queue.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-162">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="eef49-163">Le facteur de croissance est le nombre par lequel la capacité actuelle est multipliée lorsqu’une capacité supérieure est requise.</span><span class="sxs-lookup"><span data-stu-id="eef49-163">The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</span></span>  <span data-ttu-id="eef49-164">Le facteur de croissance est déterminé lorsque le <xref:System.Collections.Queue> est construit.</span><span class="sxs-lookup"><span data-stu-id="eef49-164">The growth factor is determined when the <xref:System.Collections.Queue> is constructed.</span></span> <span data-ttu-id="eef49-165">La capacité de la <xref:System.Collections.Queue> augmentera toujours par une valeur minimale, quel que soit le facteur de croissance ; un facteur de croissance de 1.0 n’empêchera pas le <xref:System.Collections.Queue> à partir de l’augmentation de taille.</span><span class="sxs-lookup"><span data-stu-id="eef49-165">The capacity of the <xref:System.Collections.Queue> will always increase by a minimum value, regardless of the growth factor; a growth factor of 1.0 will not prevent the <xref:System.Collections.Queue> from increasing in size.</span></span>  
  
 <span data-ttu-id="eef49-166">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="eef49-166">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="eef49-167">Ce constructeur est un O (`n`) opération, où `n` est `capacity`.</span><span class="sxs-lookup"><span data-stu-id="eef49-167">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eef49-168">
            <paramref name="capacity" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-168">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="eef49-169">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-169">-or-</span>
          </span>
          <span data-ttu-id="eef49-170">
            <paramref name="growFactor" /> est inférieur à 1.0 ou supérieur à 10.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-170">
              <paramref name="growFactor" /> is less than 1.0 or greater than 10.0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="queue.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eef49-171">Supprime tous les objets du <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-171">Removes all objects from the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef49-172"><xref:System.Collections.Queue.Count%2A> est défini sur zéro et les références à d’autres objets à partir des éléments de la collection sont également libérées.</span><span class="sxs-lookup"><span data-stu-id="eef49-172"><xref:System.Collections.Queue.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="eef49-173">La capacité reste inchangée.</span><span class="sxs-lookup"><span data-stu-id="eef49-173">The capacity remains unchanged.</span></span> <span data-ttu-id="eef49-174">Pour rétablir la capacité de la <xref:System.Collections.Queue>, appelez <xref:System.Collections.Queue.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-174">To reset the capacity of the <xref:System.Collections.Queue>, call <xref:System.Collections.Queue.TrimToSize%2A>.</span></span> <span data-ttu-id="eef49-175">Suppression vide <xref:System.Collections.Queue> définit la capacité de la <xref:System.Collections.Queue> à la capacité par défaut.</span><span class="sxs-lookup"><span data-stu-id="eef49-175">Trimming an empty <xref:System.Collections.Queue> sets the capacity of the <xref:System.Collections.Queue> to the default capacity.</span></span>  
  
 <span data-ttu-id="eef49-176">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Queue.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-176">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eef49-177">L’exemple suivant montre comment effacer les valeurs de la <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="eef49-177">The following example shows how to clear the values of the <xref:System.Collections.Queue>.</span></span>  
  
 [!code-cpp[Classic Queue.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Queue.TrimToSize" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="queue.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eef49-178">Crée une copie superficielle de <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-178">Creates a shallow copy of the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eef49-179">Copie superficielle de <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-179">A shallow copy of the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef49-180">Une copie superficielle d’une collection copie uniquement les éléments de la collection, si elles sont des types référence ou types valeur, mais il ne copie pas les objets qui la fait référence à.</span><span class="sxs-lookup"><span data-stu-id="eef49-180">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="eef49-181">Les références dans la nouvelle collection pointent vers les mêmes objets que les références dans la collection d’origine pointent vers.</span><span class="sxs-lookup"><span data-stu-id="eef49-181">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="eef49-182">En revanche, une copie complète d’une collection copie les éléments et tous les éléments référencés directement ou indirectement par les éléments.</span><span class="sxs-lookup"><span data-stu-id="eef49-182">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="eef49-183">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Queue.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-183">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="queue.Contains obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="eef49-184">
            <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-184">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.Queue" />.</span>
          </span>
          <span data-ttu-id="eef49-185">La valeur peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-185">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eef49-186">Détermine si le <see cref="T:System.Collections.Queue" /> contient un élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-186">Determines whether an element is in the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eef49-187">
            <see langword="true" /> si <paramref name="obj" /> existe dans <see cref="T:System.Collections.Queue" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-187">
              <see langword="true" /> if <paramref name="obj" /> is found in the <see cref="T:System.Collections.Queue" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef49-188">Cette méthode détermine l’égalité en appelant <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eef49-188">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="eef49-189">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Queue.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-189">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
 <span data-ttu-id="eef49-190">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `obj` pour déterminer si `item` existe.</span><span class="sxs-lookup"><span data-stu-id="eef49-190">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `obj` to determine whether `item` exists.</span></span> <span data-ttu-id="eef49-191">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `obj` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="eef49-191">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `obj` parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="queue.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="eef49-192">
            <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-192">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Queue" />.</span>
          </span>
          <span data-ttu-id="eef49-193">
            <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-193">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="eef49-194">Index de base zéro dans un <c>tableau</c> auquel commencer la copie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-194">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eef49-195">Copie les éléments <see cref="T:System.Collections.Queue" /> dans un <see cref="T:System.Array" /> unidimensionnel existant, en commençant au niveau de l'index de tableau spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-195">Copies the <see cref="T:System.Collections.Queue" /> elements to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef49-196">Les éléments sont copiés dans le <xref:System.Array> dans le même ordre que celui dans lequel l’énumérateur itère au sein du <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="eef49-196">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="eef49-197">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Queue.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-197">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eef49-198">L’exemple suivant montre comment copier un <xref:System.Collections.Queue> dans un tableau unidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="eef49-198">The following example shows how to copy a <xref:System.Collections.Queue> into a one-dimensional array.</span></span>  
  
 [!code-cpp[Classic Queue.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eef49-199">
            <paramref name="array" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-199">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eef49-200">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-200">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eef49-201">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-201">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="eef49-202">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-202">-or-</span>
          </span>
          <span data-ttu-id="eef49-203">Le nombre d’éléments dans le <see cref="T:System.Collections.Queue" /> source est supérieur à la quantité d’espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-203">The number of elements in the source <see cref="T:System.Collections.Queue" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="eef49-204">Le type du <see cref="T:System.Collections.Queue" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-204">The type of the source <see cref="T:System.Collections.Queue" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Queue.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Queue.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eef49-205">Obtient le nombre d'éléments contenus dans le <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-205">Gets the number of elements contained in the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eef49-206">Nombre d'éléments contenus dans <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-206">The number of elements contained in the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef49-207">La capacité d’un <xref:System.Collections.Queue> est le nombre d’éléments qui le <xref:System.Collections.Queue> peut stocker.</span><span class="sxs-lookup"><span data-stu-id="eef49-207">The capacity of a <xref:System.Collections.Queue> is the number of elements that the <xref:System.Collections.Queue> can store.</span></span> <span data-ttu-id="eef49-208"><xref:System.Collections.Queue.Count%2A> est le nombre d’éléments réellement contenus dans le <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="eef49-208"><xref:System.Collections.Queue.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="eef49-209">La capacité d’un <xref:System.Collections.Queue> est toujours supérieure ou égale à <xref:System.Collections.Queue.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-209">The capacity of a <xref:System.Collections.Queue> is always greater than or equal to <xref:System.Collections.Queue.Count%2A>.</span></span> <span data-ttu-id="eef49-210">Si <xref:System.Collections.Queue.Count%2A> dépasse la capacité lors de l’ajout d’éléments, la capacité est automatiquement augmentée en réallouant le tableau interne avant de copier les anciens éléments et d’ajouter les nouveaux éléments.</span><span class="sxs-lookup"><span data-stu-id="eef49-210">If <xref:System.Collections.Queue.Count%2A> exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span> <span data-ttu-id="eef49-211">La nouvelle capacité est déterminée en multipliant la capacité actuelle par le facteur de croissance, qui est déterminée lorsque le <xref:System.Collections.Queue> est construit.</span><span class="sxs-lookup"><span data-stu-id="eef49-211">The new capacity is determined by multiplying the current capacity by the growth factor, which is determined when the <xref:System.Collections.Queue> is constructed.</span></span> <span data-ttu-id="eef49-212">La capacité de la <xref:System.Collections.Queue> augmentera toujours par une valeur minimale, quel que soit le facteur de croissance ; un facteur de croissance de 1.0 n’empêchera pas le <xref:System.Collections.Queue> à partir de l’augmentation de taille.</span><span class="sxs-lookup"><span data-stu-id="eef49-212">The capacity of the <xref:System.Collections.Queue> will always increase by a minimum value, regardless of the growth factor; a growth factor of 1.0 will not prevent the <xref:System.Collections.Queue> from increasing in size.</span></span>  
  
 <span data-ttu-id="eef49-213">La capacité peut être diminuée en appelant <xref:System.Collections.Queue.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-213">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="eef49-214">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="eef49-214">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dequeue">
      <MemberSignature Language="C#" Value="public virtual object Dequeue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dequeue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Dequeue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Dequeue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Dequeue();" />
      <MemberSignature Language="F#" Value="abstract member Dequeue : unit -&gt; obj&#xA;override this.Dequeue : unit -&gt; obj" Usage="queue.Dequeue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eef49-215">Supprime et renvoie l'objet au début de la <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-215">Removes and returns the object at the beginning of the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eef49-216">Objet supprimé du début de la <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-216">The object that is removed from the beginning of the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef49-217">Cette méthode est analogue à la méthode <xref:System.Collections.Queue.Peek%2A>, mais <xref:System.Collections.Queue.Peek%2A> ne modifie pas la <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="eef49-217">This method is similar to the <xref:System.Collections.Queue.Peek%2A> method, but <xref:System.Collections.Queue.Peek%2A> does not modify the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="eef49-218">`null` peut être ajouté à la <xref:System.Collections.Queue> en tant que valeur.</span><span class="sxs-lookup"><span data-stu-id="eef49-218">`null` can be added to the <xref:System.Collections.Queue> as a value.</span></span> <span data-ttu-id="eef49-219">Faire la distinction entre une valeur null et la fin de la <xref:System.Collections.Queue>, vérifiez le <xref:System.Collections.Queue.Count%2A> propriété ou catch le <xref:System.InvalidOperationException>, qui est levée si le <xref:System.Collections.Queue> est vide.</span><span class="sxs-lookup"><span data-stu-id="eef49-219">To distinguish between a null value and the end of the <xref:System.Collections.Queue>, check the <xref:System.Collections.Queue.Count%2A> property or catch the <xref:System.InvalidOperationException>, which is thrown when the <xref:System.Collections.Queue> is empty.</span></span>  
  
 <span data-ttu-id="eef49-220">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="eef49-220">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eef49-221">L’exemple suivant montre comment ajouter des éléments à la <xref:System.Collections.Queue>, supprimer des éléments dans le <xref:System.Collections.Queue>, ou d’afficher l’élément au début de la <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="eef49-221">The following example shows how to add elements to the <xref:System.Collections.Queue>, remove elements from the <xref:System.Collections.Queue>, or view the element at the beginning of the <xref:System.Collections.Queue>.</span></span>  
  
 [!code-cpp[Classic Queue.Enqueue Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.Enqueue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.Enqueue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="eef49-222">La <see cref="T:System.Collections.Queue" /> est vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-222">The <see cref="T:System.Collections.Queue" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Queue.Enqueue(System.Object)" />
        <altmember cref="M:System.Collections.Queue.Peek" />
      </Docs>
    </Member>
    <Member MemberName="Enqueue">
      <MemberSignature Language="C#" Value="public virtual void Enqueue (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Enqueue(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Enqueue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Enqueue (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Enqueue(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Enqueue : obj -&gt; unit&#xA;override this.Enqueue : obj -&gt; unit" Usage="queue.Enqueue obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="eef49-223">Objet à ajouter à <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-223">The object to add to the <see cref="T:System.Collections.Queue" />.</span>
          </span>
          <span data-ttu-id="eef49-224">La valeur peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-224">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eef49-225">Ajoute un objet à la fin de la <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-225">Adds an object to the end of the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef49-226">La capacité d’un <xref:System.Collections.Queue> est le nombre d’éléments du <xref:System.Collections.Queue> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="eef49-226">The capacity of a <xref:System.Collections.Queue> is the number of elements the <xref:System.Collections.Queue> can hold.</span></span>  <span data-ttu-id="eef49-227">Comme les éléments sont ajoutés à un <xref:System.Collections.Queue>, la capacité est automatiquement augmentée par réallocation.</span><span class="sxs-lookup"><span data-stu-id="eef49-227">As elements are added to a <xref:System.Collections.Queue>, the capacity is automatically increased as required through reallocation.</span></span>  <span data-ttu-id="eef49-228">La capacité peut être diminuée en appelant <xref:System.Collections.Queue.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-228">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="eef49-229">Le facteur de croissance est le nombre par lequel la capacité actuelle est multipliée lorsqu’une capacité supérieure est requise.</span><span class="sxs-lookup"><span data-stu-id="eef49-229">The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</span></span>  <span data-ttu-id="eef49-230">Le facteur de croissance est déterminé lorsque le <xref:System.Collections.Queue> est construit.</span><span class="sxs-lookup"><span data-stu-id="eef49-230">The growth factor is determined when the <xref:System.Collections.Queue> is constructed.</span></span> <span data-ttu-id="eef49-231">La capacité de la <xref:System.Collections.Queue> augmentera toujours par une valeur minimale, quel que soit le facteur de croissance ; un facteur de croissance de 1.0 n’empêchera pas le <xref:System.Collections.Queue> à partir de l’augmentation de taille.</span><span class="sxs-lookup"><span data-stu-id="eef49-231">The capacity of the <xref:System.Collections.Queue> will always increase by a minimum value, regardless of the growth factor; a growth factor of 1.0 will not prevent the <xref:System.Collections.Queue> from increasing in size.</span></span>  
  
 <span data-ttu-id="eef49-232">Si <xref:System.Collections.Queue.Count%2A> est inférieure à la capacité du tableau interne, cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="eef49-232">If <xref:System.Collections.Queue.Count%2A> is less than the capacity of the internal array, this method is an O(1) operation.</span></span> <span data-ttu-id="eef49-233">Si le tableau interne doit être réalloué pour intégrer un nouvel élément, cette méthode devient un O (`n`) opération, où `n` est <xref:System.Collections.Queue.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-233">If the internal array needs to be reallocated to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eef49-234">L’exemple suivant montre comment ajouter des éléments à la <xref:System.Collections.Queue>, supprimer des éléments dans le <xref:System.Collections.Queue>, ou d’afficher l’élément au début de la <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="eef49-234">The following example shows how to add elements to the <xref:System.Collections.Queue>, remove elements from the <xref:System.Collections.Queue>, or view the element at the beginning of the <xref:System.Collections.Queue>.</span></span>  
  
 [!code-cpp[Classic Queue.Enqueue Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.Enqueue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.Enqueue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Queue.Dequeue" />
        <altmember cref="M:System.Collections.Queue.Peek" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="queue.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eef49-235">Retourne un énumérateur qui itère au sein de <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-235">Returns an enumerator that iterates through the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eef49-236">
            <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-236">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef49-237">L'instruction `foreach` du langage C# (`for each` en Visual Basic) se charge de la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="eef49-237">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="eef49-238">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="eef49-238">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="eef49-239">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="eef49-239">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="eef49-240">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="eef49-240">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="eef49-241"><xref:System.Collections.IEnumerator.Reset%2A> replace également l'énumérateur à cette position.</span><span class="sxs-lookup"><span data-stu-id="eef49-241"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="eef49-242">À cette position, <xref:System.Collections.IEnumerator.Current%2A> n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="eef49-242">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="eef49-243">Par conséquent, vous devez appeler <xref:System.Collections.IEnumerator.MoveNext%2A> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-243">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="eef49-244"><xref:System.Collections.IEnumerator.Current%2A> retourne le même objet tant que <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> n'est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="eef49-244"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="eef49-245"><xref:System.Collections.IEnumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-245"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="eef49-246">Si <xref:System.Collections.IEnumerator.MoveNext%2A> passe à la fin de la collection, l’énumérateur est positionnée après le dernier élément dans la collection et <xref:System.Collections.IEnumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="eef49-246">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="eef49-247">Lorsque l’énumérateur se trouve à cette position, les appels suivants à <xref:System.Collections.IEnumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="eef49-247">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="eef49-248">Si le dernier appel à <xref:System.Collections.IEnumerator.MoveNext%2A> retourné `false`, <xref:System.Collections.IEnumerator.Current%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="eef49-248">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="eef49-249">Pour attribuer une nouvelle fois <xref:System.Collections.IEnumerator.Current%2A> au premier élément de la collection, vous pouvez appeler <xref:System.Collections.IEnumerator.Reset%2A> suivi de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-249">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="eef49-250">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="eef49-250">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="eef49-251">Si des modifications sont apportées à la collection, telles que l'ajout, la modification ou la suppression d'éléments, l'énumérateur est définitivement invalidé et son comportement n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="eef49-251">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="eef49-252">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="eef49-252">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="eef49-253">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection tout au long de cette opération.</span><span class="sxs-lookup"><span data-stu-id="eef49-253">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="eef49-254">Pour permettre à plusieurs threads d’accéder en lecture et en écriture à la collection, vous devez implémenter votre propre synchronisation.</span><span class="sxs-lookup"><span data-stu-id="eef49-254">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="eef49-255">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="eef49-255">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Queue.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.Queue.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eef49-256">Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.Queue" /> est synchronisé (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-256">Gets a value indicating whether access to the <see cref="T:System.Collections.Queue" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eef49-257">
            <see langword="true" /> si l'accès à <see cref="T:System.Collections.Queue" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-257">
              <see langword="true" /> if access to the <see cref="T:System.Collections.Queue" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="eef49-258">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-258">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef49-259">Pour garantir la sécurité des threads de la <xref:System.Collections.Queue>, toutes les opérations doivent être effectuées via le wrapper retourné par la <xref:System.Collections.Queue.Synchronized%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="eef49-259">To guarantee the thread safety of the <xref:System.Collections.Queue>, all operations must be done through the wrapper returned by the <xref:System.Collections.Queue.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="eef49-260">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="eef49-260">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="eef49-261">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="eef49-261">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="eef49-262">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="eef49-262">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eef49-263">L’exemple de code suivant montre comment verrouiller la collection en utilisant la <xref:System.Collections.Queue.SyncRoot%2A> pendant toute l’énumération.</span><span class="sxs-lookup"><span data-stu-id="eef49-263">The following code example shows how to lock the collection using the <xref:System.Collections.Queue.SyncRoot%2A> during the entire enumeration.</span></span> <span data-ttu-id="eef49-264">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="eef49-264">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 [!code-cpp[Classic Queue.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Queue.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic Queue.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="eef49-265">L’exemple suivant montre comment synchroniser un <xref:System.Collections.Queue>, déterminer si un <xref:System.Collections.Queue> est synchronisé et utiliser une liste synchronisé <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="eef49-265">The following example shows how to synchronize a <xref:System.Collections.Queue>, determine if a <xref:System.Collections.Queue> is synchronized, and use a synchronized <xref:System.Collections.Queue>.</span></span>  
  
 [!code-cpp[Classic Queue.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Queue.SyncRoot" />
        <altmember cref="M:System.Collections.Queue.Synchronized(System.Collections.Queue)" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public virtual object Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Peek () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Peek();" />
      <MemberSignature Language="F#" Value="abstract member Peek : unit -&gt; obj&#xA;override this.Peek : unit -&gt; obj" Usage="queue.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eef49-266">Renvoie l'objet situé au début de la <see cref="T:System.Collections.Queue" /> sans le supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-266">Returns the object at the beginning of the <see cref="T:System.Collections.Queue" /> without removing it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eef49-267">Objet situé au début de la <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-267">The object at the beginning of the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef49-268">Cette méthode est analogue à la méthode <xref:System.Collections.Queue.Dequeue%2A>, mais <xref:System.Collections.Queue.Peek%2A> ne modifie pas la <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="eef49-268">This method is similar to the <xref:System.Collections.Queue.Dequeue%2A> method, but <xref:System.Collections.Queue.Peek%2A> does not modify the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="eef49-269">`null` peut être ajouté à la <xref:System.Collections.Queue> en tant que valeur.</span><span class="sxs-lookup"><span data-stu-id="eef49-269">`null` can be added to the <xref:System.Collections.Queue> as a value.</span></span> <span data-ttu-id="eef49-270">Faire la distinction entre une valeur null et la fin de la <xref:System.Collections.Queue>, vérifiez le <xref:System.Collections.Queue.Count%2A> propriété ou catch le <xref:System.InvalidOperationException>, qui est levée si le <xref:System.Collections.Queue> est vide.</span><span class="sxs-lookup"><span data-stu-id="eef49-270">To distinguish between a null value and the end of the <xref:System.Collections.Queue>, check the <xref:System.Collections.Queue.Count%2A> property or catch the <xref:System.InvalidOperationException>, which is thrown when the <xref:System.Collections.Queue> is empty.</span></span>  
  
 <span data-ttu-id="eef49-271">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="eef49-271">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eef49-272">L’exemple suivant montre comment ajouter des éléments à la <xref:System.Collections.Queue>, supprimer des éléments dans le <xref:System.Collections.Queue>, ou d’afficher l’élément au début de la <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="eef49-272">The following example shows how to add elements to the <xref:System.Collections.Queue>, remove elements from the <xref:System.Collections.Queue>, or view the element at the beginning of the <xref:System.Collections.Queue>.</span></span>  
  
 [!code-cpp[Classic Queue.Enqueue Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.Enqueue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.Enqueue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="eef49-273">La <see cref="T:System.Collections.Queue" /> est vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-273">The <see cref="T:System.Collections.Queue" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Queue.Enqueue(System.Object)" />
        <altmember cref="M:System.Collections.Queue.Dequeue" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.Queue Synchronized (System.Collections.Queue queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Queue Synchronized(class System.Collections.Queue queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Synchronized(System.Collections.Queue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Queue ^ Synchronized(System::Collections::Queue ^ queue);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.Queue -&gt; System.Collections.Queue" Usage="System.Collections.Queue.Synchronized queue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Queue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queue" Type="System.Collections.Queue" />
      </Parameters>
      <Docs>
        <param name="queue">
          <span data-ttu-id="eef49-274">
            <see cref="T:System.Collections.Queue" /> à synchroniser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-274">The <see cref="T:System.Collections.Queue" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eef49-275">Retourne un nouvel objet <see cref="T:System.Collections.Queue" /> thread-safe encapsulant la file d'attente d'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-275">Returns a new <see cref="T:System.Collections.Queue" /> that wraps the original queue, and is thread safe.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eef49-276">Wrapper <see cref="T:System.Collections.Queue" /> synchronisé (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-276">A <see cref="T:System.Collections.Queue" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef49-277">Le wrapper retourné par cette méthode verrouille la file d’attente avant une opération est effectuée afin qu’elle soit effectuée de manière thread-safe.</span><span class="sxs-lookup"><span data-stu-id="eef49-277">The wrapper returned by this method locks the queue before an operation is performed so that it is performed in a thread-safe manner.</span></span>  
  
 <span data-ttu-id="eef49-278">Pour garantir la sécurité des threads de le <xref:System.Collections.Queue>, toutes les opérations doivent être effectuées via ce wrapper uniquement.</span><span class="sxs-lookup"><span data-stu-id="eef49-278">To guarantee the thread safety of the <xref:System.Collections.Queue>, all operations must be done through this wrapper only.</span></span>  
  
 <span data-ttu-id="eef49-279">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="eef49-279">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="eef49-280">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="eef49-280">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="eef49-281">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="eef49-281">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eef49-282">L’exemple de code suivant montre comment verrouiller la collection en utilisant la <xref:System.Collections.Queue.SyncRoot%2A> pendant toute l’énumération.</span><span class="sxs-lookup"><span data-stu-id="eef49-282">The following code example shows how to lock the collection using the <xref:System.Collections.Queue.SyncRoot%2A> during the entire enumeration.</span></span> <span data-ttu-id="eef49-283">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="eef49-283">This method is an O(1) operation.</span></span>  
  
 [!code-cpp[Classic Queue.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Queue.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic Queue.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="eef49-284">L’exemple suivant montre comment synchroniser un <xref:System.Collections.Queue>, déterminer si un <xref:System.Collections.Queue> est synchronisé et utiliser une liste synchronisé <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="eef49-284">The following example shows how to synchronize a <xref:System.Collections.Queue>, determine if a <xref:System.Collections.Queue> is synchronized and use a synchronized <xref:System.Collections.Queue>.</span></span>  
  
 [!code-cpp[Classic Queue.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eef49-285">
            <paramref name="queue" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-285">
              <paramref name="queue" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Queue.IsSynchronized" />
        <altmember cref="P:System.Collections.Queue.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Queue.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.Queue.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eef49-286">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-286">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eef49-287">Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-287">An object that can be used to synchronize access to the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef49-288">Pour créer une version synchronisée de la <xref:System.Collections.Queue>, utilisez le <xref:System.Collections.Queue.Synchronized%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="eef49-288">To create a synchronized version of the <xref:System.Collections.Queue>, use the <xref:System.Collections.Queue.Synchronized%2A> method.</span></span> <span data-ttu-id="eef49-289">Toutefois, les classes dérivées peuvent fournir leur propre version synchronisée de la <xref:System.Collections.Queue> à l’aide de la <xref:System.Collections.Queue.SyncRoot%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="eef49-289">However, derived classes can provide their own synchronized version of the <xref:System.Collections.Queue> using the <xref:System.Collections.Queue.SyncRoot%2A> property.</span></span> <span data-ttu-id="eef49-290">Le code de synchronisation doit effectuer les opérations sur le <xref:System.Collections.Queue.SyncRoot%2A> de la <xref:System.Collections.Queue>, et non directement sur le <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="eef49-290">The synchronizing code must perform operations on the <xref:System.Collections.Queue.SyncRoot%2A> of the <xref:System.Collections.Queue>, not directly on the <xref:System.Collections.Queue>.</span></span> <span data-ttu-id="eef49-291">Cela garantit un bon fonctionnement des collections dérivées d’autres objets.</span><span class="sxs-lookup"><span data-stu-id="eef49-291">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="eef49-292">Plus précisément, il maintient une synchronisation correcte avec les autres threads qui pourraient modifier simultanément les <xref:System.Collections.Queue> objet.</span><span class="sxs-lookup"><span data-stu-id="eef49-292">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Queue> object.</span></span>  
  
 <span data-ttu-id="eef49-293">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="eef49-293">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="eef49-294">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="eef49-294">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="eef49-295">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="eef49-295">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eef49-296">L’exemple de code suivant montre comment verrouiller la collection en utilisant la <xref:System.Collections.Queue.SyncRoot%2A> pendant toute l’énumération.</span><span class="sxs-lookup"><span data-stu-id="eef49-296">The following code example shows how to lock the collection using the <xref:System.Collections.Queue.SyncRoot%2A> during the entire enumeration.</span></span> <span data-ttu-id="eef49-297">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="eef49-297">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 [!code-cpp[Classic Queue.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Queue.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic Queue.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Queue.IsSynchronized" />
        <altmember cref="M:System.Collections.Queue.Synchronized(System.Collections.Queue)" />
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual object[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToArray () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="abstract member ToArray : unit -&gt; obj[]&#xA;override this.ToArray : unit -&gt; obj[]" Usage="queue.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eef49-298">Copie les éléments <see cref="T:System.Collections.Queue" /> vers un nouveau tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-298">Copies the <see cref="T:System.Collections.Queue" /> elements to a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eef49-299">Nouveau tableau contenant les éléments copiés à partir de <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-299">A new array containing elements copied from the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef49-300">Le <xref:System.Collections.Queue> n’est pas modifié.</span><span class="sxs-lookup"><span data-stu-id="eef49-300">The <xref:System.Collections.Queue> is not modified.</span></span> <span data-ttu-id="eef49-301">L’ordre des éléments dans le nouveau tableau est le même que l’ordre des éléments à partir du début de la <xref:System.Collections.Queue> à sa fin.</span><span class="sxs-lookup"><span data-stu-id="eef49-301">The order of the elements in the new array is the same as the order of the elements from the beginning of the <xref:System.Collections.Queue> to its end.</span></span>  
  
 <span data-ttu-id="eef49-302">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Queue.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-302">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eef49-303">L’exemple suivant montre comment copier un <xref:System.Collections.Queue> dans un tableau unidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="eef49-303">The following example shows how to copy a <xref:System.Collections.Queue> into a one-dimensional array.</span></span>  
  
 [!code-cpp[Classic Queue.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberSignature Language="F#" Value="abstract member TrimToSize : unit -&gt; unit&#xA;override this.TrimToSize : unit -&gt; unit" Usage="queue.TrimToSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eef49-304">Définit la capacité au nombre réel d'éléments dans <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-304">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eef49-305">Cette méthode peut être utilisée pour réduire la surcharge mémoire d’une file d’attente si aucun nouvel élément ne doit être ajouté à la file d’attente.</span><span class="sxs-lookup"><span data-stu-id="eef49-305">This method can be used to minimize a queue's memory overhead if no new elements will be added to the queue.</span></span>  
  
 <span data-ttu-id="eef49-306">Pour réinitialiser un <xref:System.Collections.Queue> à son état initial, appelez le <xref:System.Collections.Queue.Clear%2A> méthode avant d’appeler <xref:System.Collections.Queue.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-306">To reset a <xref:System.Collections.Queue> to its initial state, call the <xref:System.Collections.Queue.Clear%2A> method before calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span> <span data-ttu-id="eef49-307">Suppression vide <xref:System.Collections.Queue> définit la capacité de la <xref:System.Collections.Queue> à la capacité par défaut.</span><span class="sxs-lookup"><span data-stu-id="eef49-307">Trimming an empty <xref:System.Collections.Queue> sets the capacity of the <xref:System.Collections.Queue> to the default capacity.</span></span>  
  
 <span data-ttu-id="eef49-308">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.Queue.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="eef49-308">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eef49-309">
            <see cref="T:System.Collections.Queue" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eef49-309">The <see cref="T:System.Collections.Queue" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Queue.Clear" />
        <altmember cref="P:System.Collections.Queue.Count" />
      </Docs>
    </Member>
  </Members>
</Type>