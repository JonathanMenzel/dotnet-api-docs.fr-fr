<Type Name="CollectionBase" FullName="System.Collections.CollectionBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="66552e875d59036ac3c8494186d0e8eb9219267d" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52198440" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CollectionBase : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit CollectionBase extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.CollectionBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CollectionBase&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class CollectionBase abstract : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type CollectionBase = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="03857-101">Fournit la classe de base <see langword="abstract" /> pour une collection fortement typée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="03857-101">Provides the <see langword="abstract" /> base class for a strongly typed collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

>  [!IMPORTANT]
>  <span data-ttu-id="03857-102">Nous ne vous recommandons d’utiliser la `CollectionBase` classe pour tout nouveau développement.</span><span class="sxs-lookup"><span data-stu-id="03857-102">We don't recommend that you use the `CollectionBase` class for new development.</span></span> <span data-ttu-id="03857-103">Au lieu de cela, nous vous recommandons d’utiliser le modèle générique <xref:System.Collections.ObjectModel.Collection%601> classe.</span><span class="sxs-lookup"><span data-stu-id="03857-103">Instead, we recommend that you use the generic <xref:System.Collections.ObjectModel.Collection%601> class.</span></span> <span data-ttu-id="03857-104">Pour plus d’informations, consultez [les collections Non génériques ne doit pas être utilisées](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) sur GitHub.</span><span class="sxs-lookup"><span data-stu-id="03857-104">For more information, see [Non-generic collections shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) on GitHub.</span></span>

<span data-ttu-id="03857-105">Un <xref:System.Collections.CollectionBase> instance est toujours modifiable.</span><span class="sxs-lookup"><span data-stu-id="03857-105">A <xref:System.Collections.CollectionBase> instance is always modifiable.</span></span> <span data-ttu-id="03857-106">Consultez <xref:System.Collections.ReadOnlyCollectionBase> pour obtenir une version en lecture seule de cette classe.</span><span class="sxs-lookup"><span data-stu-id="03857-106">See <xref:System.Collections.ReadOnlyCollectionBase> for a read-only version of this class.</span></span>  
  
 <span data-ttu-id="03857-107">La capacité d’un <xref:System.Collections.CollectionBase> est le nombre d’éléments du <xref:System.Collections.CollectionBase> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="03857-107">The capacity of a <xref:System.Collections.CollectionBase> is the number of elements the <xref:System.Collections.CollectionBase> can hold.</span></span> <span data-ttu-id="03857-108">Comme les éléments sont ajoutés à un <xref:System.Collections.CollectionBase>, la capacité est automatiquement augmentée par réallocation.</span><span class="sxs-lookup"><span data-stu-id="03857-108">As elements are added to a <xref:System.Collections.CollectionBase>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="03857-109">La capacité peut être diminuée en définissant le <xref:System.Collections.CollectionBase.Capacity%2A> propriété explicitement.</span><span class="sxs-lookup"><span data-stu-id="03857-109">The capacity can be decreased by setting the <xref:System.Collections.CollectionBase.Capacity%2A> property explicitly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03857-110">Le code suivant exemple implémente le <xref:System.Collections.CollectionBase> classe et utilise cette implémentation pour créer une collection de <xref:System.Int16> objets.</span><span class="sxs-lookup"><span data-stu-id="03857-110">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="03857-111">Statique public (<see langword="Shared" /> en Visual Basic) de ce type sont thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="03857-111">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="03857-112">Il n'est pas garanti que les membres d'instance soient thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="03857-112">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="03857-113">Cette implémentation ne fournit pas une liste synchronisé wrapper (thread-safe) pour un <see cref="T:System.Collections.CollectionBase" />, mais les classes dérivées peuvent créer leurs propres versions synchronisées de la <see cref="T:System.Collections.CollectionBase" /> à l’aide de la <see cref="P:System.Collections.ICollection.SyncRoot" /> propriété.</span>
      <span class="sxs-lookup">
        <span data-stu-id="03857-113">This implementation does not provide a synchronized (thread safe) wrapper for a <see cref="T:System.Collections.CollectionBase" />, but derived classes can create their own synchronized versions of the <see cref="T:System.Collections.CollectionBase" /> using the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span>
      </span>
      <span data-ttu-id="03857-114">L’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="03857-114">Enumerating through a collection is intrinsically not a thread safe procedure.</span>
      </span>
      <span data-ttu-id="03857-115">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span>
      <span class="sxs-lookup">
        <span data-stu-id="03857-115">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="03857-116">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span>
      <span class="sxs-lookup">
        <span data-stu-id="03857-116">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="03857-117">Cette classe de base est fournie pour faciliter aux implémenteurs de créer une collection personnalisée fortement typée.</span>
        <span class="sxs-lookup">
          <span data-stu-id="03857-117">This base class is provided to make it easier for implementers to create a strongly typed custom collection.</span>
        </span>
        <span data-ttu-id="03857-118">Il est préférable d’étendre cette classe de base au lieu de créer leurs propres.</span>
        <span class="sxs-lookup">
          <span data-stu-id="03857-118">Implementers are encouraged to extend this base class instead of creating their own.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Collections.ArrayList" />
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.ReadOnlyCollectionBase" />
    <altmember cref="N:System.Collections.Generic" />
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">
      <span data-ttu-id="03857-119">Exécution d'opérations de chaînes indépendantes de la culture</span>
      <span class="sxs-lookup">
        <span data-stu-id="03857-119">Performing Culture-Insensitive String Operations</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="03857-120">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-120">Initializes a new instance of the <see cref="T:System.Collections.CollectionBase" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CollectionBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CollectionBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="03857-121">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.CollectionBase" /> avec la capacité initiale par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-121">Initializes a new instance of the <see cref="T:System.Collections.CollectionBase" /> class with the default initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-122">La capacité d’un <xref:System.Collections.CollectionBase> est le nombre d’éléments qui le <xref:System.Collections.CollectionBase> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="03857-122">The capacity of a <xref:System.Collections.CollectionBase> is the number of elements that the <xref:System.Collections.CollectionBase> can hold.</span></span> <span data-ttu-id="03857-123">Comme les éléments sont ajoutés à un <xref:System.Collections.CollectionBase>, la capacité est augmentée automatiquement selon les besoins en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="03857-123">As elements are added to a <xref:System.Collections.CollectionBase>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="03857-124">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.CollectionBase>.</span><span class="sxs-lookup"><span data-stu-id="03857-124">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.CollectionBase>.</span></span>  
  
 <span data-ttu-id="03857-125">Ce constructeur est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="03857-125">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.CollectionBase.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CollectionBase (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CollectionBase(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.CollectionBase : int -&gt; System.Collections.CollectionBase" Usage="new System.Collections.CollectionBase capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="03857-126">Nombre d'éléments que la nouvelle liste peut initialement stocker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-126">The number of elements that the new list can initially store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03857-127">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.CollectionBase" /> avec la capacité spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-127">Initializes a new instance of the <see cref="T:System.Collections.CollectionBase" /> class with the specified capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-128">La capacité d’un <xref:System.Collections.CollectionBase> est le nombre d’éléments qui le <xref:System.Collections.CollectionBase> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="03857-128">The capacity of a <xref:System.Collections.CollectionBase> is the number of elements that the <xref:System.Collections.CollectionBase> can hold.</span></span> <span data-ttu-id="03857-129">Comme les éléments sont ajoutés à un <xref:System.Collections.CollectionBase>, la capacité est augmentée automatiquement selon les besoins en réallouant le tableau interne.</span><span class="sxs-lookup"><span data-stu-id="03857-129">As elements are added to a <xref:System.Collections.CollectionBase>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="03857-130">Si la taille de la collection peut être estimée, en spécifiant la capacité initiale évite de devoir effectuer un certain nombre d’opérations de redimensionnement lors de l’ajout d’éléments à la <xref:System.Collections.CollectionBase>.</span><span class="sxs-lookup"><span data-stu-id="03857-130">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.CollectionBase>.</span></span>  
  
 <span data-ttu-id="03857-131">Ce constructeur est un O (`n`) opération, où `n` est `capacity`.</span><span class="sxs-lookup"><span data-stu-id="03857-131">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.CollectionBase.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.CollectionBase.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03857-132">Obtient ou définit le nombre d'éléments que <see cref="T:System.Collections.CollectionBase" /> peut contenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-132">Gets or sets the number of elements that the <see cref="T:System.Collections.CollectionBase" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="03857-133">Nombre initial d'éléments que <see cref="T:System.Collections.CollectionBase" /> peut contenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-133">The number of elements that the <see cref="T:System.Collections.CollectionBase" /> can contain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-134"><xref:System.Collections.CollectionBase.Capacity%2A> est le nombre d’éléments qui le <xref:System.Collections.CollectionBase> peut stocker.</span><span class="sxs-lookup"><span data-stu-id="03857-134"><xref:System.Collections.CollectionBase.Capacity%2A> is the number of elements that the <xref:System.Collections.CollectionBase> can store.</span></span> <span data-ttu-id="03857-135"><xref:System.Collections.CollectionBase.Count%2A> est le nombre d’éléments réellement contenus dans le <xref:System.Collections.CollectionBase>.</span><span class="sxs-lookup"><span data-stu-id="03857-135"><xref:System.Collections.CollectionBase.Count%2A> is the number of elements that are actually in the <xref:System.Collections.CollectionBase>.</span></span>  
  
 <span data-ttu-id="03857-136"><xref:System.Collections.CollectionBase.Capacity%2A> est toujours supérieur ou égal à <xref:System.Collections.CollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="03857-136"><xref:System.Collections.CollectionBase.Capacity%2A> is always greater than or equal to <xref:System.Collections.CollectionBase.Count%2A>.</span></span> <span data-ttu-id="03857-137">Si <xref:System.Collections.CollectionBase.Count%2A> dépasse <xref:System.Collections.CollectionBase.Capacity%2A> lors de l’ajout d’éléments, la capacité est automatiquement augmentée en réallouant le tableau interne avant de copier les anciens éléments et d’ajouter les nouveaux éléments.</span><span class="sxs-lookup"><span data-stu-id="03857-137">If <xref:System.Collections.CollectionBase.Count%2A> exceeds <xref:System.Collections.CollectionBase.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="03857-138">La capacité peut être diminuée en définissant le <xref:System.Collections.CollectionBase.Capacity%2A> propriété explicitement.</span><span class="sxs-lookup"><span data-stu-id="03857-138">The capacity can be decreased by setting the <xref:System.Collections.CollectionBase.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="03857-139">Lorsque la valeur de <xref:System.Collections.CollectionBase.Capacity%2A> n’est défini explicitement, le tableau interne est également réalloué pour prendre en charge de la capacité spécifiée.</span><span class="sxs-lookup"><span data-stu-id="03857-139">When the value of <xref:System.Collections.CollectionBase.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="03857-140">Récupération de la valeur de cette propriété est une opération o (1) ; définition de la propriété est un O (`n`) opération, où `n` est la nouvelle capacité.</span><span class="sxs-lookup"><span data-stu-id="03857-140">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="03857-141">La valeur affectée à <see cref="P:System.Collections.CollectionBase.Capacity" /> est inférieure à <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-141">
              <see cref="P:System.Collections.CollectionBase.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="03857-142">Il n’y a pas assez de mémoire disponible sur le système.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-142">There is not enough memory available on the system.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.CollectionBase.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="collectionBase.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="03857-143">Supprime tous les objets de l'instance de <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-143">Removes all objects from the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
          <span data-ttu-id="03857-144">Cette méthode ne peut pas être substituée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-144">This method cannot be overridden.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-145"><xref:System.Collections.CollectionBase.Count%2A> est défini sur zéro.</span><span class="sxs-lookup"><span data-stu-id="03857-145"><xref:System.Collections.CollectionBase.Count%2A> is set to zero.</span></span>  
  
 <span data-ttu-id="03857-146">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.CollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="03857-146">This method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
 <span data-ttu-id="03857-147">Pour effectuer des actions personnalisées avant ou après l’effacement de la collection, substituez la <xref:System.Collections.CollectionBase.OnClear%2A> ou <xref:System.Collections.CollectionBase.OnClearComplete%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="03857-147">To perform custom actions before or after the collection is cleared, override the protected <xref:System.Collections.CollectionBase.OnClear%2A> or <xref:System.Collections.CollectionBase.OnClearComplete%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.CollectionBase.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03857-148">Obtient le nombre d'éléments contenus dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-148">Gets the number of elements contained in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
          <span data-ttu-id="03857-149">Cette propriété ne peut pas être remplacée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-149">This property cannot be overridden.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="03857-150">Nombre d'éléments contenus dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-150">The number of elements contained in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
          <span data-ttu-id="03857-151">La récupération de la valeur de cette propriété est une opération O(1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-151">Retrieving the value of this property is an O(1) operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="03857-152">Le code suivant exemple implémente le <xref:System.Collections.CollectionBase> classe et utilise cette implémentation pour créer une collection de <xref:System.Int16> objets.</span><span class="sxs-lookup"><span data-stu-id="03857-152">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="collectionBase.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="03857-153">Retourne un énumérateur qui itère au sein de l'instance <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-153">Returns an enumerator that iterates through the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="03857-154">
            <see cref="T:System.Collections.IEnumerator" /> pour l'instance du <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-154">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-155">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="03857-155">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="03857-156">L'instruction `foreach` du langage C# (`for each` en Visual Basic) se charge de la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="03857-156">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="03857-157">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="03857-157">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="03857-158">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="03857-158">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="03857-159">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="03857-159">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="03857-160"><xref:System.Collections.IEnumerator.Reset%2A> replace également l'énumérateur à cette position.</span><span class="sxs-lookup"><span data-stu-id="03857-160"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="03857-161">À cette position, l’appel <xref:System.Collections.IEnumerator.Current%2A> lève une exception.</span><span class="sxs-lookup"><span data-stu-id="03857-161">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="03857-162">Par conséquent, vous devez appeler <xref:System.Collections.IEnumerator.MoveNext%2A> pour avancer l’énumérateur jusqu’au premier élément de la collection avant de lire la valeur de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="03857-162">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="03857-163"><xref:System.Collections.IEnumerator.Current%2A> retourne le même objet tant que <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> n'est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="03857-163"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="03857-164"><xref:System.Collections.IEnumerator.MoveNext%2A> affecte l'élément suivant à <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="03857-164"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="03857-165">Si <xref:System.Collections.IEnumerator.MoveNext%2A> passe à la fin de la collection, l’énumérateur est positionnée après le dernier élément dans la collection et <xref:System.Collections.IEnumerator.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="03857-165">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="03857-166">Lorsque l’énumérateur se trouve à cette position, les appels suivants à <xref:System.Collections.IEnumerator.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="03857-166">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="03857-167">Si le dernier appel à <xref:System.Collections.IEnumerator.MoveNext%2A> retourné `false`, l’appel <xref:System.Collections.IEnumerator.Current%2A> lève une exception.</span><span class="sxs-lookup"><span data-stu-id="03857-167">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="03857-168">Pour attribuer une nouvelle fois <xref:System.Collections.IEnumerator.Current%2A> au premier élément de la collection, vous pouvez appeler <xref:System.Collections.IEnumerator.Reset%2A> suivi de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="03857-168">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="03857-169">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="03857-169">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="03857-170">Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou la suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="03857-170">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="03857-171">Si la collection est modifiée entre <xref:System.Collections.IEnumerator.MoveNext%2A> et <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> retourne l’élément auquel il est attribué, même si l’énumérateur est déjà invalidé.</span><span class="sxs-lookup"><span data-stu-id="03857-171">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="03857-172">L’énumérateur ne dispose pas d’un accès exclusif à la collection. Par conséquent, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="03857-172">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="03857-173">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="03857-173">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="03857-174">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="03857-174">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="03857-175">Alors que le <xref:System.Collections.CollectionBase.GetEnumerator%2A> méthode n’est pas visible pour les clients COM par défaut, héritage la <xref:System.Collections.CollectionBase> classe peut l’exposer et provoquer un comportement indésirable dans les clients COM.</span><span class="sxs-lookup"><span data-stu-id="03857-175">While the <xref:System.Collections.CollectionBase.GetEnumerator%2A> method is not visible to COM clients by default, inheriting the <xref:System.Collections.CollectionBase> class can expose it and can cause undesirable behavior in COM clients.</span></span>  
  
 <span data-ttu-id="03857-176">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="03857-176">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03857-177">Le code suivant exemple implémente le <xref:System.Collections.CollectionBase> classe et utilise cette implémentation pour créer une collection de <xref:System.Int16> objets.</span><span class="sxs-lookup"><span data-stu-id="03857-177">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="InnerList">
      <MemberSignature Language="C#" Value="protected System.Collections.ArrayList InnerList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList InnerList" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.InnerList" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InnerList As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ArrayList ^ InnerList { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerList : System.Collections.ArrayList" Usage="System.Collections.CollectionBase.InnerList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03857-178">Obtient <see cref="T:System.Collections.ArrayList" /> contenant la liste des éléments dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-178">Gets an <see cref="T:System.Collections.ArrayList" /> containing the list of elements in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="03857-179">
            <see cref="T:System.Collections.ArrayList" /> représentant l'instance de <see cref="T:System.Collections.CollectionBase" /> elle-même.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-179">An <see cref="T:System.Collections.ArrayList" /> representing the <see cref="T:System.Collections.CollectionBase" /> instance itself.</span>
          </span>
          <span data-ttu-id="03857-180">La récupération de la valeur de cette propriété est une opération O(1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-180">Retrieving the value of this property is an O(1) operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-181">Les méthodes On \* sont uniquement appelées sur l’instance retournée par la <xref:System.Collections.CollectionBase.List%2A> propriété, mais pas sur l’instance retournée par la <xref:System.Collections.CollectionBase.InnerList%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="03857-181">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="protected System.Collections.IList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList List" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.List" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property List As IList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IList ^ List { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.IList" Usage="System.Collections.CollectionBase.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03857-182">Obtient <see cref="T:System.Collections.IList" /> contenant la liste des éléments dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-182">Gets an <see cref="T:System.Collections.IList" /> containing the list of elements in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="03857-183">
            <see cref="T:System.Collections.IList" /> représentant l'instance de <see cref="T:System.Collections.CollectionBase" /> elle-même.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-183">An <see cref="T:System.Collections.IList" /> representing the <see cref="T:System.Collections.CollectionBase" /> instance itself.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-184">Les méthodes On \* sont uniquement appelées sur l’instance retournée par la <xref:System.Collections.CollectionBase.List%2A> propriété, mais pas sur l’instance retournée par la <xref:System.Collections.CollectionBase.InnerList%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="03857-184">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="03857-185">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="03857-185">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03857-186">Le code suivant exemple implémente le <xref:System.Collections.CollectionBase> classe et utilise cette implémentation pour créer une collection de <xref:System.Int16> objets.</span><span class="sxs-lookup"><span data-stu-id="03857-186">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClear">
      <MemberSignature Language="C#" Value="protected virtual void OnClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnClear" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClear();" />
      <MemberSignature Language="F#" Value="abstract member OnClear : unit -&gt; unit&#xA;override this.OnClear : unit -&gt; unit" Usage="collectionBase.OnClear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="03857-187">Effectue des traitements personnalisés supplémentaires pendant l’effacement du contenu de l’instance de <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-187">Performs additional custom processes when clearing the contents of the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-188">L’implémentation par défaut de cette méthode est destinée à être substituée par une classe dérivée pour effectuer une action avant de la collection est effacée.</span><span class="sxs-lookup"><span data-stu-id="03857-188">The default implementation of this method is intended to be overridden by a derived class to perform some action before the collection is cleared.</span></span>  
  
 <span data-ttu-id="03857-189">Les méthodes On \* sont uniquement appelées sur l’instance retournée par la <xref:System.Collections.CollectionBase.List%2A> propriété, mais pas sur l’instance retournée par la <xref:System.Collections.CollectionBase.InnerList%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="03857-189">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="03857-190">Si le processus échoue, la collection revient à son état précédent.</span><span class="sxs-lookup"><span data-stu-id="03857-190">If the process fails, the collection reverts back to its previous state.</span></span>  
  
 <span data-ttu-id="03857-191">L’implémentation par défaut de cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="03857-191">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="03857-192">Cette méthode permet aux implémenteurs de définir des processus qui doivent être effectuées avant de supprimer tous les éléments sous-jacent <see cref="T:System.Collections.ArrayList" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-192">This method allows implementers to define processes that must be performed before deleting all the elements from the underlying <see cref="T:System.Collections.ArrayList" />.</span>
            </span>
            <span data-ttu-id="03857-193">En définissant cette méthode, les implémenteurs peuvent ajouter des fonctionnalités aux méthodes héritées sans avoir à substituer toutes les autres méthodes.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-193">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="03857-194">
              <see cref="M:System.Collections.CollectionBase.OnClear" /> est appelé avant le comportement Clear standard, tandis que <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> est appelé après le comportement Clear standard.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-194">
                <see cref="M:System.Collections.CollectionBase.OnClear" /> is invoked before the standard Clear behavior, whereas <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> is invoked after the standard Clear behavior.</span>
            </span>
            <span data-ttu-id="03857-195">Par exemple, les implémenteurs peuvent exempter certains éléments de la suppression par un Clear global.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-195">For example, implementers can exempt certain elements from deletion by a global Clear.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnClearComplete" />
        <altmember cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnClearComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnClearComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClearComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnClearComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClearComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClearComplete();" />
      <MemberSignature Language="F#" Value="abstract member OnClearComplete : unit -&gt; unit&#xA;override this.OnClearComplete : unit -&gt; unit" Usage="collectionBase.OnClearComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="03857-196">Exécute des processus personnalisés supplémentaires après l'effacement du contenu de l'instance de <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-196">Performs additional custom processes after clearing the contents of the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-197">L’implémentation par défaut de cette méthode est destinée à être substituée par une classe dérivée pour effectuer une action après l’effacement de la collection.</span><span class="sxs-lookup"><span data-stu-id="03857-197">The default implementation of this method is intended to be overridden by a derived class to perform some action after the collection is cleared.</span></span>  
  
 <span data-ttu-id="03857-198">Les méthodes On \* sont uniquement appelées sur l’instance retournée par la <xref:System.Collections.CollectionBase.List%2A> propriété, mais pas sur l’instance retournée par la <xref:System.Collections.CollectionBase.InnerList%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="03857-198">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="03857-199">L’implémentation par défaut de cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="03857-199">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="03857-200">Cette méthode permet aux implémenteurs de définir des processus qui doivent être effectuées après la suppression de tous les éléments de sous-jacent <see cref="T:System.Collections.ArrayList" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-200">This method allows implementers to define processes that must be performed after deleting all the elements from the underlying <see cref="T:System.Collections.ArrayList" />.</span>
            </span>
            <span data-ttu-id="03857-201">En définissant cette méthode, les implémenteurs peuvent ajouter des fonctionnalités aux méthodes héritées sans avoir à substituer toutes les autres méthodes.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-201">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="03857-202">
              <see cref="M:System.Collections.CollectionBase.OnClear" /> est appelé avant le comportement Clear standard, tandis que <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> est appelé après le comportement Clear standard.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-202">
                <see cref="M:System.Collections.CollectionBase.OnClear" /> is invoked before the standard Clear behavior, whereas <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> is invoked after the standard Clear behavior.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnClear" />
        <altmember cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsert">
      <MemberSignature Language="C#" Value="protected virtual void OnInsert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInsert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInsert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInsert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnInsert : int * obj -&gt; unit&#xA;override this.OnInsert : int * obj -&gt; unit" Usage="collectionBase.OnInsert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="03857-203">Index de base zéro au niveau duquel insérer <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-203">The zero-based index at which to insert <paramref name="value" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="03857-204">Nouvelle valeur de l'élément à la position <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-204">The new value of the element at <paramref name="index" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03857-205">Exécute les processus personnalisés supplémentaires avant l'insertion d'un nouvel élément dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-205">Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-206">L’implémentation par défaut de cette méthode est destinée à être substituée par une classe dérivée pour effectuer une action avant l’insertion de l’élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="03857-206">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is inserted.</span></span>  
  
 <span data-ttu-id="03857-207">Les méthodes On \* sont uniquement appelées sur l’instance retournée par la <xref:System.Collections.CollectionBase.List%2A> propriété, mais pas sur l’instance retournée par la <xref:System.Collections.CollectionBase.InnerList%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="03857-207">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="03857-208">Si le processus échoue, la collection revient à son état précédent.</span><span class="sxs-lookup"><span data-stu-id="03857-208">If the process fails, the collection reverts back to its previous state.</span></span>  
  
 <span data-ttu-id="03857-209">L’implémentation par défaut de cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="03857-209">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03857-210">Le code suivant exemple implémente le <xref:System.Collections.CollectionBase> classe et utilise cette implémentation pour créer une collection de <xref:System.Int16> objets.</span><span class="sxs-lookup"><span data-stu-id="03857-210">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="03857-211">Cette méthode permet aux implémenteurs de définir des processus qui doivent être effectuées avant l’insertion de l’élément sous-jacent <see cref="T:System.Collections.ArrayList" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-211">This method allows implementers to define processes that must be performed before inserting the element into the underlying <see cref="T:System.Collections.ArrayList" />.</span>
            </span>
            <span data-ttu-id="03857-212">En définissant cette méthode, les implémenteurs peuvent ajouter des fonctionnalités aux méthodes héritées sans avoir à substituer toutes les autres méthodes.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-212">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="03857-213">
              <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /> est appelé avant le comportement Insert standard, tandis que <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /> est appelé après le comportement d’insertion standard.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-213">
                <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /> is invoked before the standard Insert behavior, whereas <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /> is invoked after the standard Insert behavior.</span>
            </span>
            <span data-ttu-id="03857-214">Par exemple, les implémenteurs peuvent restreindre les types d’objets peuvent être insérées dans la <see cref="T:System.Collections.ArrayList" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-214">For example, implementers can restrict which types of objects can be inserted into the <see cref="T:System.Collections.ArrayList" />.</span>
            </span>
            <span data-ttu-id="03857-215">
              <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> est appelée avant cette méthode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-215">
                <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> is called prior to this method.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsertComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnInsertComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInsertComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInsertComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInsertComplete(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnInsertComplete : int * obj -&gt; unit&#xA;override this.OnInsertComplete : int * obj -&gt; unit" Usage="collectionBase.OnInsertComplete (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="03857-216">Index de base zéro au niveau duquel insérer <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-216">The zero-based index at which to insert <paramref name="value" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="03857-217">Nouvelle valeur de l'élément à la position <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-217">The new value of the element at <paramref name="index" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03857-218">Exécute les processus personnalisés supplémentaires après l'insertion d'un nouvel élément dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-218">Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-219">L’implémentation par défaut de cette méthode est destinée à être substituée par une classe dérivée pour effectuer une action après que l’élément spécifié est inséré.</span><span class="sxs-lookup"><span data-stu-id="03857-219">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is inserted.</span></span>  
  
 <span data-ttu-id="03857-220">Les méthodes On \* sont uniquement appelées sur l’instance retournée par la <xref:System.Collections.CollectionBase.List%2A> propriété, mais pas sur l’instance retournée par la <xref:System.Collections.CollectionBase.InnerList%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="03857-220">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="03857-221">La collection revient à son état précédent si une des actions suivantes se produit :</span><span class="sxs-lookup"><span data-stu-id="03857-221">The collection reverts back to its previous state if one of the following occurs:</span></span>  
  
-   <span data-ttu-id="03857-222">Le processus échoue.</span><span class="sxs-lookup"><span data-stu-id="03857-222">The process fails.</span></span>  
  
-   <span data-ttu-id="03857-223">Cette méthode est substituée pour lever une exception.</span><span class="sxs-lookup"><span data-stu-id="03857-223">This method is overridden to throw an exception.</span></span>  
  
 <span data-ttu-id="03857-224">L’implémentation par défaut de cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="03857-224">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="03857-225">Cette méthode permet aux implémenteurs de définir des processus qui doivent être exécutés après l’insertion de l’élément sous-jacent <see cref="T:System.Collections.ArrayList" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-225">This method allows implementers to define processes that must be performed after inserting the element into the underlying <see cref="T:System.Collections.ArrayList" />.</span>
            </span>
            <span data-ttu-id="03857-226">En définissant cette méthode, les implémenteurs peuvent ajouter des fonctionnalités aux méthodes héritées sans avoir à substituer toutes les autres méthodes.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-226">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="03857-227">
              <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /> est appelé avant le comportement Insert standard, tandis que <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /> est appelé après le comportement d’insertion standard.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-227">
                <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /> is invoked before the standard Insert behavior, whereas <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /> is invoked after the standard Insert behavior.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnRemove">
      <MemberSignature Language="C#" Value="protected virtual void OnRemove (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemove(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemove (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemove(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRemove : int * obj -&gt; unit&#xA;override this.OnRemove : int * obj -&gt; unit" Usage="collectionBase.OnRemove (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="03857-228">Index de base zéro au niveau duquel <paramref name="value" /> peut être trouvé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-228">The zero-based index at which <paramref name="value" /> can be found.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="03857-229">Valeur de l'élément à supprimer de <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-229">The value of the element to remove from <paramref name="index" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03857-230">Exécute des processus personnalisés supplémentaires lors de la suppression d'un élément de l'instance de <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-230">Performs additional custom processes when removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-231">L’implémentation par défaut de cette méthode est destinée à être substituée par une classe dérivée pour effectuer une action avant la suppression de l’élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="03857-231">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is removed.</span></span>  
  
 <span data-ttu-id="03857-232">Les méthodes On \* sont uniquement appelées sur l’instance retournée par la <xref:System.Collections.CollectionBase.List%2A> propriété, mais pas sur l’instance retournée par la <xref:System.Collections.CollectionBase.InnerList%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="03857-232">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="03857-233">Si le processus échoue, la collection revient à son état précédent.</span><span class="sxs-lookup"><span data-stu-id="03857-233">If the process fails, the collection reverts back to its previous state.</span></span>  
  
 <span data-ttu-id="03857-234">L’implémentation par défaut de cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="03857-234">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03857-235">Le code suivant exemple implémente le <xref:System.Collections.CollectionBase> classe et utilise cette implémentation pour créer une collection de <xref:System.Int16> objets.</span><span class="sxs-lookup"><span data-stu-id="03857-235">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="03857-236">Cette méthode permet aux implémenteurs de définir des processus qui doivent être effectuées avant de supprimer l’élément sous-jacent <see cref="T:System.Collections.ArrayList" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-236">This method allows implementers to define processes that must be performed before removing the element from the underlying <see cref="T:System.Collections.ArrayList" />.</span>
            </span>
            <span data-ttu-id="03857-237">En définissant cette méthode, les implémenteurs peuvent ajouter des fonctionnalités aux méthodes héritées sans avoir à substituer toutes les autres méthodes.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-237">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="03857-238">
              <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /> est appelé avant le comportement Remove standard, tandis que <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /> est appelé après le comportement Remove standard.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-238">
                <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /> is invoked before the standard Remove behavior, whereas <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /> is invoked after the standard Remove behavior.</span>
            </span>
            <span data-ttu-id="03857-239">Par exemple, les implémenteurs peuvent interdire la suppression d’éléments en levant systématiquement une exception dans <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-239">For example, implementers can prevent removal of elements by always throwing an exception in <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />.</span>
            </span>
            <span data-ttu-id="03857-240">
              <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> est appelée avant cette méthode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-240">
                <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> is called prior to this method.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnClear" />
      </Docs>
    </Member>
    <Member MemberName="OnRemoveComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnRemoveComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemoveComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemoveComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemoveComplete(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRemoveComplete : int * obj -&gt; unit&#xA;override this.OnRemoveComplete : int * obj -&gt; unit" Usage="collectionBase.OnRemoveComplete (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="03857-241">Index de base zéro au niveau duquel <paramref name="value" /> peut être trouvé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-241">The zero-based index at which <paramref name="value" /> can be found.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="03857-242">Valeur de l'élément à supprimer de <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-242">The value of the element to remove from <paramref name="index" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03857-243">Exécute des processus personnalisés supplémentaires après la suppression d'un élément de l'instance de <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-243">Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-244">L’implémentation par défaut de cette méthode est destinée à être substituée par une classe dérivée pour effectuer une action après la suppression de l’élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="03857-244">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is removed.</span></span>  
  
 <span data-ttu-id="03857-245">Les méthodes On \* sont uniquement appelées sur l’instance retournée par la <xref:System.Collections.CollectionBase.List%2A> propriété, mais pas sur l’instance retournée par la <xref:System.Collections.CollectionBase.InnerList%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="03857-245">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="03857-246">La collection revient à son état précédent si une des actions suivantes se produit :</span><span class="sxs-lookup"><span data-stu-id="03857-246">The collection reverts back to its previous state if one of the following occurs:</span></span>  
  
-   <span data-ttu-id="03857-247">Le processus échoue.</span><span class="sxs-lookup"><span data-stu-id="03857-247">The process fails.</span></span>  
  
-   <span data-ttu-id="03857-248">Cette méthode est substituée pour lever une exception.</span><span class="sxs-lookup"><span data-stu-id="03857-248">This method is overridden to throw an exception.</span></span>  
  
 <span data-ttu-id="03857-249">L’implémentation par défaut de cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="03857-249">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="03857-250">Cette méthode permet aux implémenteurs de définir des processus qui doivent être effectuées après la suppression de l’élément sous-jacent <see cref="T:System.Collections.ArrayList" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-250">This method allows implementers to define processes that must be performed after removing the element from the underlying <see cref="T:System.Collections.ArrayList" />.</span>
            </span>
            <span data-ttu-id="03857-251">En définissant cette méthode, les implémenteurs peuvent ajouter des fonctionnalités aux méthodes héritées sans avoir à substituer toutes les autres méthodes.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-251">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="03857-252">
              <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /> est appelé avant le comportement Remove standard, tandis que <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /> est appelé après le comportement Remove standard.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-252">
                <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /> is invoked before the standard Remove behavior, whereas <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /> is invoked after the standard Remove behavior.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnClearComplete" />
      </Docs>
    </Member>
    <Member MemberName="OnSet">
      <MemberSignature Language="C#" Value="protected virtual void OnSet (int index, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSet(int32 index, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSet (index As Integer, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSet(int index, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="abstract member OnSet : int * obj * obj -&gt; unit&#xA;override this.OnSet : int * obj * obj -&gt; unit" Usage="collectionBase.OnSet (index, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="03857-253">Index de base zéro au niveau duquel <paramref name="oldValue" /> peut être trouvé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-253">The zero-based index at which <paramref name="oldValue" /> can be found.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="03857-254">Valeur à remplacer par <paramref name="newValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-254">The value to replace with <paramref name="newValue" />.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="03857-255">Nouvelle valeur de l'élément à la position <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-255">The new value of the element at <paramref name="index" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03857-256">Exécute des processus personnalisés supplémentaires avant la définition d'une valeur dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-256">Performs additional custom processes before setting a value in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-257">L’implémentation par défaut de cette méthode est destinée à être substituée par une classe dérivée pour effectuer une action avant que l’élément spécifié est défini.</span><span class="sxs-lookup"><span data-stu-id="03857-257">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is set.</span></span>  
  
 <span data-ttu-id="03857-258">Les méthodes On \* sont uniquement appelées sur l’instance retournée par la <xref:System.Collections.CollectionBase.List%2A> propriété, mais pas sur l’instance retournée par la <xref:System.Collections.CollectionBase.InnerList%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="03857-258">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="03857-259">Si le processus échoue, la collection revient à son état précédent.</span><span class="sxs-lookup"><span data-stu-id="03857-259">If the process fails, the collection reverts back to its previous state.</span></span>  
  
 <span data-ttu-id="03857-260">L’implémentation par défaut de cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="03857-260">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03857-261">Le code suivant exemple implémente le <xref:System.Collections.CollectionBase> classe et utilise cette implémentation pour créer une collection de <xref:System.Int16> objets.</span><span class="sxs-lookup"><span data-stu-id="03857-261">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="03857-262">Cette méthode permet aux implémenteurs de définir des processus qui doivent être effectuées avant la définition de l’élément spécifié dans sous-jacent <see cref="T:System.Collections.ArrayList" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-262">This method allows implementers to define processes that must be performed before setting the specified element in the underlying <see cref="T:System.Collections.ArrayList" />.</span>
            </span>
            <span data-ttu-id="03857-263">En définissant cette méthode, les implémenteurs peuvent ajouter des fonctionnalités aux méthodes héritées sans avoir à substituer toutes les autres méthodes.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-263">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="03857-264">
              <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /> est appelé avant le comportement standard de l’ensemble, tandis que <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> est appelé après le comportement de jeu standard.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-264">
                <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /> is invoked before the standard Set behavior, whereas <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> is invoked after the standard Set behavior.</span>
            </span>
            <span data-ttu-id="03857-265">Par exemple, les implémenteurs peuvent restreindre les valeurs peuvent être remplacées en effectuant une vérification à l’intérieur de <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-265">For example, implementers can restrict which values can be overwritten by performing a check inside <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />.</span>
            </span>
            <span data-ttu-id="03857-266">
              <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> est appelée avant cette méthode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-266">
                <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> is called prior to this method.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnSetComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnSetComplete (int index, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSetComplete(int32 index, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSetComplete (index As Integer, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSetComplete(int index, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="abstract member OnSetComplete : int * obj * obj -&gt; unit&#xA;override this.OnSetComplete : int * obj * obj -&gt; unit" Usage="collectionBase.OnSetComplete (index, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="03857-267">Index de base zéro au niveau duquel <paramref name="oldValue" /> peut être trouvé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-267">The zero-based index at which <paramref name="oldValue" /> can be found.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="03857-268">Valeur à remplacer par <paramref name="newValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-268">The value to replace with <paramref name="newValue" />.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="03857-269">Nouvelle valeur de l'élément à la position <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-269">The new value of the element at <paramref name="index" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03857-270">Exécute des processus personnalisés supplémentaires après la définition d'une valeur dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-270">Performs additional custom processes after setting a value in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-271">L’implémentation par défaut de cette méthode est destinée à être substituée par une classe dérivée pour effectuer une action après que l’élément spécifié est défini.</span><span class="sxs-lookup"><span data-stu-id="03857-271">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is set.</span></span>  
  
 <span data-ttu-id="03857-272">Les méthodes On \* sont uniquement appelées sur l’instance retournée par la <xref:System.Collections.CollectionBase.List%2A> propriété, mais pas sur l’instance retournée par la <xref:System.Collections.CollectionBase.InnerList%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="03857-272">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="03857-273">La collection revient à son état précédent si une des actions suivantes se produit :</span><span class="sxs-lookup"><span data-stu-id="03857-273">The collection reverts back to its previous state if one of the following occurs:</span></span>  
  
-   <span data-ttu-id="03857-274">Le processus échoue.</span><span class="sxs-lookup"><span data-stu-id="03857-274">The process fails.</span></span>  
  
-   <span data-ttu-id="03857-275">Cette méthode est substituée pour lever une exception.</span><span class="sxs-lookup"><span data-stu-id="03857-275">This method is overridden to throw an exception.</span></span>  
  
 <span data-ttu-id="03857-276">L’implémentation par défaut de cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="03857-276">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="03857-277">Cette méthode permet aux implémenteurs de définir des processus qui doivent être effectuées après la définition de l’élément spécifié dans sous-jacent <see cref="T:System.Collections.ArrayList" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-277">This method allows implementers to define processes that must be performed after setting the specified element in the underlying <see cref="T:System.Collections.ArrayList" />.</span>
            </span>
            <span data-ttu-id="03857-278">En définissant cette méthode, les implémenteurs peuvent ajouter des fonctionnalités aux méthodes héritées sans avoir à substituer toutes les autres méthodes.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-278">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="03857-279">
              <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /> est appelé avant le comportement standard de l’ensemble, tandis que <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> est appelé après le comportement de jeu standard.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-279">
                <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /> is invoked before the standard Set behavior, whereas <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> is invoked after the standard Set behavior.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected virtual void OnValidate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnValidate : obj -&gt; unit&#xA;override this.OnValidate : obj -&gt; unit" Usage="collectionBase.OnValidate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="03857-280">Objet à valider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-280">The object to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03857-281">Exécute des processus personnalisés supplémentaires lors de la validation d'une valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-281">Performs additional custom processes when validating a value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-282">L’implémentation par défaut de cette méthode détermine si `value` est `null`et, si tel est le cas, lève <xref:System.ArgumentNullException>.</span><span class="sxs-lookup"><span data-stu-id="03857-282">The default implementation of this method determines whether `value` is `null`, and, if so, throws <xref:System.ArgumentNullException>.</span></span> <span data-ttu-id="03857-283">Elle est conçue pour être substituée par une classe dérivée pour effectuer une action supplémentaire lorsque l’élément spécifié est validé.</span><span class="sxs-lookup"><span data-stu-id="03857-283">It is intended to be overridden by a derived class to perform additional action when the specified element is validated.</span></span>  
  
 <span data-ttu-id="03857-284">Les méthodes On \* sont uniquement appelées sur l’instance retournée par la <xref:System.Collections.CollectionBase.List%2A> propriété, mais pas sur l’instance retournée par la <xref:System.Collections.CollectionBase.InnerList%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="03857-284">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="03857-285">L’implémentation par défaut de cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="03857-285">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03857-286">Le code suivant exemple implémente le <xref:System.Collections.CollectionBase> classe et utilise cette implémentation pour créer une collection de <xref:System.Int16> objets.</span><span class="sxs-lookup"><span data-stu-id="03857-286">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="03857-287">
            <paramref name="value" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-287">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="03857-288">Cette méthode permet aux implémenteurs de définir des processus qui doivent être effectuées lors de l’exécution standard de sous-jacent <see cref="T:System.Collections.ArrayList" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-288">This method allows implementers to define processes that must be performed when executing the standard behavior of the underlying <see cref="T:System.Collections.ArrayList" />.</span>
            </span>
            <span data-ttu-id="03857-289">En définissant cette méthode, les implémenteurs peuvent ajouter des fonctionnalités aux méthodes héritées sans avoir à substituer toutes les autres méthodes.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-289">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="03857-290">
              <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> peut être utilisé pour imposer des restrictions sur le type des objets qui sont acceptés dans la collection.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-290">
                <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> can be used to impose restrictions on the type of objects that are accepted into the collection.</span>
            </span>
            <span data-ttu-id="03857-291">L’implémentation par défaut empêche <see langword="null" /> d’être ajoutés ou supprimés sous-jacent <see cref="T:System.Collections.ArrayList" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-291">The default implementation prevents <see langword="null" /> from being added to or removed from the underlying <see cref="T:System.Collections.ArrayList" />.</span>
            </span>
            <span data-ttu-id="03857-292">
              <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> est appelée avant <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />, et <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-292">
                <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> is called prior to <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />, and <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="collectionBase.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="03857-293">Index de base zéro de l'élément à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-293">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03857-294">Supprime l'élément à l'index spécifié de l'instance de <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-294">Removes the element at the specified index of the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
          <span data-ttu-id="03857-295">Cette méthode n'est pas substituable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-295">This method is not overridable.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-296">Dans des collections d’éléments contigus, telles que les listes, les éléments qui suivent l’élément supprimé remontent pour occuper l’espace libéré.</span><span class="sxs-lookup"><span data-stu-id="03857-296">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="03857-297">Si la collection est indexée, les index des éléments déplacés sont également mis à jour.</span><span class="sxs-lookup"><span data-stu-id="03857-297">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="03857-298">Ce comportement ne s’applique pas aux collections dont les éléments sont regroupés de manière conceptuelle en compartiments, comme par exemple les tables de hachage.</span><span class="sxs-lookup"><span data-stu-id="03857-298">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="03857-299">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.CollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="03857-299">This method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="03857-300">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-300">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="03857-301">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-301">-or-</span>
          </span>
          <span data-ttu-id="03857-302">
            <paramref name="index" /> est supérieur ou égal à <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-302">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="03857-303">Cette méthode appelle <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />, et <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-303">This method calls <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />, and <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="03857-304">
            <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-304">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
          <span data-ttu-id="03857-305">Le <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-305">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="03857-306">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-306">The zero-based index in <paramref name="array" /> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03857-307">Copie l'ensemble de l'objet <see cref="T:System.Collections.CollectionBase" /> vers un objet <see cref="T:System.Array" /> unidimensionnel compatible, en commençant à l'index spécifié du tableau cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-307">Copies the entire <see cref="T:System.Collections.CollectionBase" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-308">Le tableau spécifié doit être d’un type compatible.</span><span class="sxs-lookup"><span data-stu-id="03857-308">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="03857-309">Cette méthode utilise <xref:System.Array.Copy%2A?displayProperty=nameWithType> pour copier les éléments.</span><span class="sxs-lookup"><span data-stu-id="03857-309">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="03857-310">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.CollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="03857-310">This method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="03857-311">
            <paramref name="array" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-311">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="03857-312">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-312">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="03857-313">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-313">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="03857-314">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-314">-or-</span>
          </span>
          <span data-ttu-id="03857-315">Le nombre d’éléments dans le <see cref="T:System.Collections.CollectionBase" /> source est supérieur à la quantité d’espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-315">The number of elements in the source <see cref="T:System.Collections.CollectionBase" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="03857-316">Le type du <see cref="T:System.Collections.CollectionBase" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-316">The type of the source <see cref="T:System.Collections.CollectionBase" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03857-317">Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.CollectionBase" /> est synchronisé (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-317">Gets a value indicating whether access to the <see cref="T:System.Collections.CollectionBase" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="03857-318">
            <see langword="true" /> si l'accès à <see cref="T:System.Collections.CollectionBase" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-318">
              <see langword="true" /> if access to the <see cref="T:System.Collections.CollectionBase" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="03857-319">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-319">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-320">Un <xref:System.Collections.CollectionBase> instance n’est pas synchronisée.</span><span class="sxs-lookup"><span data-stu-id="03857-320">A <xref:System.Collections.CollectionBase> instance is not synchronized.</span></span> <span data-ttu-id="03857-321">Classes dérivées peuvent fournir une version synchronisée de la <xref:System.Collections.CollectionBase> à l’aide de la <xref:System.Collections.ICollection.SyncRoot%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="03857-321">Derived classes can provide a synchronized version of the <xref:System.Collections.CollectionBase> using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="03857-322">L’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="03857-322">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="03857-323">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="03857-323">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="03857-324">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="03857-324">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="03857-325">L’exemple de code suivant montre comment verrouiller la collection en utilisant la <xref:System.Collections.ICollection.SyncRoot%2A> pendant toute l’énumération :</span><span class="sxs-lookup"><span data-stu-id="03857-325">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/remarks.cpp#2)]
 [!code-csharp[System.Collections.CollectionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/remarks.cs#2)]
 [!code-vb[System.Collections.CollectionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/remarks.vb#2)]  
  
 <span data-ttu-id="03857-326">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="03857-326">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03857-327">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-327">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="03857-328">Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-328">An object that can be used to synchronize access to the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-329">Classes dérivées peuvent fournir leur propre version synchronisée de la <xref:System.Collections.CollectionBase> à l’aide de la <xref:System.Collections.ICollection.SyncRoot%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="03857-329">Derived classes can provide their own synchronized version of the <xref:System.Collections.CollectionBase> using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="03857-330">Le code de synchronisation doit effectuer les opérations sur le <xref:System.Collections.ICollection.SyncRoot%2A> de la <xref:System.Collections.CollectionBase>, et non directement sur le <xref:System.Collections.CollectionBase>.</span><span class="sxs-lookup"><span data-stu-id="03857-330">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the <xref:System.Collections.CollectionBase>, not directly on the <xref:System.Collections.CollectionBase>.</span></span> <span data-ttu-id="03857-331">Cela garantit un bon fonctionnement des collections dérivées d’autres objets.</span><span class="sxs-lookup"><span data-stu-id="03857-331">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="03857-332">Plus précisément, il maintient une synchronisation correcte avec les autres threads qui pourraient modifier simultanément les <xref:System.Collections.CollectionBase> objet.</span><span class="sxs-lookup"><span data-stu-id="03857-332">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.CollectionBase> object.</span></span>  
  
 <span data-ttu-id="03857-333">L’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="03857-333">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="03857-334">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="03857-334">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="03857-335">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</span><span class="sxs-lookup"><span data-stu-id="03857-335">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="03857-336">L’exemple de code suivant montre comment verrouiller la collection en utilisant la <xref:System.Collections.ICollection.SyncRoot%2A> pendant toute l’énumération :</span><span class="sxs-lookup"><span data-stu-id="03857-336">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/remarks.cpp#2)]
 [!code-csharp[System.Collections.CollectionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/remarks.cs#2)]
 [!code-vb[System.Collections.CollectionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/remarks.vb#2)]  
  
 <span data-ttu-id="03857-337">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="03857-337">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="03857-338">
            <see cref="T:System.Object" /> à ajouter à la fin de <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-338">The <see cref="T:System.Object" /> to be added to the end of the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03857-339">Ajoute un objet à la fin de la <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-339">Adds an object to the end of the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="03857-340">Index <see cref="T:System.Collections.CollectionBase" /> auquel <paramref name="value" /> a été ajouté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-340">The <see cref="T:System.Collections.CollectionBase" /> index at which the <paramref name="value" /> has been added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-341">Si <xref:System.Collections.CollectionBase.Count%2A> est déjà égale à la capacité, la capacité de la liste est doublée en réallouant le tableau interne et en copiant les éléments existants dans le nouveau tableau avant que le nouvel élément est ajouté automatiquement.</span><span class="sxs-lookup"><span data-stu-id="03857-341">If <xref:System.Collections.CollectionBase.Count%2A> already equals the capacity, the capacity of the list is doubled by automatically reallocating the internal array and copying the existing elements to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="03857-342">Si <xref:System.Collections.CollectionBase.Count%2A> est inférieure à la capacité, cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="03857-342">If <xref:System.Collections.CollectionBase.Count%2A> is less than the capacity, this method is an O(1) operation.</span></span> <span data-ttu-id="03857-343">Si la capacité doit être augmentée pour intégrer un nouvel élément, cette méthode devient un O (`n`) opération, où `n` est <xref:System.Collections.CollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="03857-343">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03857-344">Le code suivant exemple implémente le <xref:System.Collections.CollectionBase> classe et utilise cette implémentation pour créer une collection de <xref:System.Int16> objets.</span><span class="sxs-lookup"><span data-stu-id="03857-344">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="03857-345">
            <see cref="T:System.Collections.CollectionBase" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-345">The <see cref="T:System.Collections.CollectionBase" /> is read-only.</span>
          </span>
          <span data-ttu-id="03857-346">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-346">-or-</span>
          </span>
          <span data-ttu-id="03857-347">
            <see cref="T:System.Collections.CollectionBase" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-347">The <see cref="T:System.Collections.CollectionBase" /> has a fixed size.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="03857-348">Cette méthode appelle <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />, et <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-348">This method calls <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />, and <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Collections.CollectionBase.Count" />
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.IList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="03857-349">
            <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-349">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03857-350">Détermine si <see cref="T:System.Collections.CollectionBase" /> contient un élément spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-350">Determines whether the <see cref="T:System.Collections.CollectionBase" /> contains a specific element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="03857-351">
            <see langword="true" /> si <see cref="T:System.Collections.CollectionBase" /> contient le <paramref name="value" /> spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-351">
              <see langword="true" /> if the <see cref="T:System.Collections.CollectionBase" /> contains the specified <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-352">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.CollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="03857-352">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
 <span data-ttu-id="03857-353">Cette méthode détermine l’égalité en appelant <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="03857-353">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="03857-354">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `item` pour déterminer si `item` existe.</span><span class="sxs-lookup"><span data-stu-id="03857-354">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists.</span></span> <span data-ttu-id="03857-355">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="03857-355">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03857-356">Le code suivant exemple implémente le <xref:System.Collections.CollectionBase> classe et utilise cette implémentation pour créer une collection de <xref:System.Int16> objets.</span><span class="sxs-lookup"><span data-stu-id="03857-356">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">
          <span data-ttu-id="03857-357">Exécution d'opérations de chaînes indépendantes de la culture</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-357">Performing Culture-Insensitive String Operations</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="03857-358">
            <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-358">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03857-359">Recherche le <see cref="T:System.Object" /> spécifié et retourne l’index de base zéro de la première occurrence dans l’ensemble du <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-359">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="03857-360">Index de base zéro de la première occurrence de <paramref name="value" /> dans l'ensemble du <see cref="T:System.Collections.CollectionBase" />, s'il existe ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-360">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.CollectionBase" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-361">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.CollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="03857-361">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
 <span data-ttu-id="03857-362">Cette méthode détermine l’égalité en appelant <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="03857-362">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="03857-363">À compter de .NET Framework 2.0, cette méthode utilise des objets de la collection <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes sur `item` pour déterminer si `item` existe.</span><span class="sxs-lookup"><span data-stu-id="03857-363">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists.</span></span> <span data-ttu-id="03857-364">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de la <xref:System.Object.Equals%2A> et <xref:System.IComparable.CompareTo%2A> méthodes de la `item` paramètre sur les objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="03857-364">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03857-365">Le code suivant exemple implémente le <xref:System.Collections.CollectionBase> classe et utilise cette implémentation pour créer une collection de <xref:System.Int16> objets.</span><span class="sxs-lookup"><span data-stu-id="03857-365">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">
          <span data-ttu-id="03857-366">Exécution d'opérations de chaînes indépendantes de la culture</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-366">Performing Culture-Insensitive String Operations</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="03857-367">Index de base zéro au niveau duquel <paramref name="value" /> doit être inséré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-367">The zero-based index at which <paramref name="value" /> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="03857-368">
            <see cref="T:System.Object" /> à insérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-368">The <see cref="T:System.Object" /> to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03857-369">Insère un élément dans la classe <see cref="T:System.Collections.CollectionBase" /> au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-369">Inserts an element into the <see cref="T:System.Collections.CollectionBase" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-370">Si <xref:System.Collections.CollectionBase.Count%2A> est déjà égale à la capacité, la capacité de la liste est doublée en réallouant automatiquement le tableau interne avant le nouvel élément est inséré.</span><span class="sxs-lookup"><span data-stu-id="03857-370">If <xref:System.Collections.CollectionBase.Count%2A> already equals the capacity, the capacity of the list is doubled by automatically reallocating the internal array before the new element is inserted.</span></span>  
  
 <span data-ttu-id="03857-371">Si `index` est égal à <xref:System.Collections.CollectionBase.Count%2A>, `value` est ajouté à la fin de <xref:System.Collections.CollectionBase>.</span><span class="sxs-lookup"><span data-stu-id="03857-371">If `index` is equal to <xref:System.Collections.CollectionBase.Count%2A>, `value` is added to the end of <xref:System.Collections.CollectionBase>.</span></span>  
  
 <span data-ttu-id="03857-372">Dans des collections d'éléments contigus, telles que les listes, les éléments situés après le point d'insertion descendent afin de prendre en compte le nouvel élément.</span><span class="sxs-lookup"><span data-stu-id="03857-372">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="03857-373">Si la collection est indexée, les index des éléments déplacés sont également mis à jour.</span><span class="sxs-lookup"><span data-stu-id="03857-373">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="03857-374">Ce comportement ne s’applique pas aux collections dont les éléments sont regroupés de manière conceptuelle en compartiments, comme par exemple les tables de hachage.</span><span class="sxs-lookup"><span data-stu-id="03857-374">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="03857-375">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.CollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="03857-375">This method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03857-376">Le code suivant exemple implémente le <xref:System.Collections.CollectionBase> classe et utilise cette implémentation pour créer une collection de <xref:System.Int16> objets.</span><span class="sxs-lookup"><span data-stu-id="03857-376">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="03857-377">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-377">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="03857-378">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-378">-or-</span>
          </span>
          <span data-ttu-id="03857-379">
            <paramref name="index" /> est supérieur à <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-379">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="03857-380">
            <see cref="T:System.Collections.CollectionBase" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-380">The <see cref="T:System.Collections.CollectionBase" /> is read-only.</span>
          </span>
          <span data-ttu-id="03857-381">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-381">-or-</span>
          </span>
          <span data-ttu-id="03857-382">
            <see cref="T:System.Collections.CollectionBase" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-382">The <see cref="T:System.Collections.CollectionBase" /> has a fixed size.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="03857-383">Cette méthode appelle <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />, et <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-383">This method calls <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />, and <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
        <altmember cref="M:System.Collections.IList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03857-384">Obtient une valeur indiquant si <see cref="T:System.Collections.CollectionBase" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-384">Gets a value indicating whether the <see cref="T:System.Collections.CollectionBase" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="03857-385">
            <see langword="true" /> si <see cref="T:System.Collections.CollectionBase" /> est de taille fixe ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-385">
              <see langword="true" /> if the <see cref="T:System.Collections.CollectionBase" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="03857-386">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-386">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-387">Une collection de taille fixe ne permet pas l’ajout ou la suppression d’éléments après sa création, mais permet la modification des éléments existants.</span><span class="sxs-lookup"><span data-stu-id="03857-387">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="03857-388">Une collection avec une taille fixe est simplement une collection avec un wrapper qui empêche l’ajout et suppression d’éléments. Par conséquent, si des modifications sont apportées à la collection sous-jacente, y compris l’ajout ou la suppression d’éléments, la collection de taille fixe reflète ces modifications.</span><span class="sxs-lookup"><span data-stu-id="03857-388">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="03857-389">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="03857-389">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="03857-390">Obtient une valeur indiquant si <see cref="T:System.Collections.CollectionBase" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-390">Gets a value indicating whether the <see cref="T:System.Collections.CollectionBase" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="03857-391">
            <see langword="true" /> si <see cref="T:System.Collections.CollectionBase" /> est en lecture seule ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-391">
              <see langword="true" /> if the <see cref="T:System.Collections.CollectionBase" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="03857-392">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-392">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-393">Une collection en lecture seule n’autorise pas l’ajout, la suppression ou la modification d’éléments après sa création.</span><span class="sxs-lookup"><span data-stu-id="03857-393">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="03857-394">Une collection est en lecture seule est simplement une collection avec un wrapper qui empêche la modification de la collection ; Par conséquent, si des modifications sont apportées à la collection sous-jacente, la collection en lecture seule reflète ces modifications.</span><span class="sxs-lookup"><span data-stu-id="03857-394">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="03857-395">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="03857-395">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="03857-396">Index de base zéro de l'élément à obtenir ou à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-396">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03857-397">Obtient ou définit l'élément au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-397">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="03857-398">Élément au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-398">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-399">Cette propriété permet d’accéder à un élément spécifique de la collection à l’aide de la syntaxe suivante : `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="03857-399">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="03857-400">Récupération de la valeur de cette propriété est une opération o (1) ; définition de la propriété est également une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="03857-400">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03857-401">Le code suivant exemple implémente le <xref:System.Collections.CollectionBase> classe et utilise cette implémentation pour créer une collection de <xref:System.Int16> objets.</span><span class="sxs-lookup"><span data-stu-id="03857-401">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="03857-402">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-402">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="03857-403">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-403">-or-</span>
          </span>
          <span data-ttu-id="03857-404">
            <paramref name="index" /> est supérieur ou égal à <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-404">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="03857-405">Lorsque cette propriété est définie, les méthodes <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />, et <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> sont appelées.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-405">When this property is set, the methods <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />, and <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> are called.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Collections.CollectionBase.Count" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="03857-406">
            <see cref="T:System.Object" /> à supprimer de <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-406">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="03857-407">Supprime la première occurrence d'un objet spécifique de <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-407">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03857-408">Si le <xref:System.Collections.CollectionBase> ne contient pas l’objet spécifié, le <xref:System.Collections.CollectionBase> reste inchangé.</span><span class="sxs-lookup"><span data-stu-id="03857-408">If the <xref:System.Collections.CollectionBase> does not contain the specified object, the <xref:System.Collections.CollectionBase> remains unchanged.</span></span> <span data-ttu-id="03857-409">Aucune exception n'est levée.</span><span class="sxs-lookup"><span data-stu-id="03857-409">No exception is thrown.</span></span>  
  
 <span data-ttu-id="03857-410">Cette méthode effectue une recherche linéaire ; Par conséquent, cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.CollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="03857-410">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
 <span data-ttu-id="03857-411">Cette méthode détermine l’égalité en appelant <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="03857-411">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="03857-412">Dans des collections d’éléments contigus, telles que les listes, les éléments qui suivent l’élément supprimé remontent pour occuper l’espace libéré.</span><span class="sxs-lookup"><span data-stu-id="03857-412">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="03857-413">Si la collection est indexée, les index des éléments déplacés sont également mis à jour.</span><span class="sxs-lookup"><span data-stu-id="03857-413">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="03857-414">Ce comportement ne s’applique pas aux collections dont les éléments sont regroupés de manière conceptuelle en compartiments, comme par exemple les tables de hachage.</span><span class="sxs-lookup"><span data-stu-id="03857-414">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03857-415">Le code suivant exemple implémente le <xref:System.Collections.CollectionBase> classe et utilise cette implémentation pour créer une collection de <xref:System.Int16> objets.</span><span class="sxs-lookup"><span data-stu-id="03857-415">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="03857-416">Le paramètre <paramref name="value" /> est introuvable dans l'objet <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-416">The <paramref name="value" /> parameter was not found in the <see cref="T:System.Collections.CollectionBase" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="03857-417">
            <see cref="T:System.Collections.CollectionBase" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-417">The <see cref="T:System.Collections.CollectionBase" /> is read-only.</span>
          </span>
          <span data-ttu-id="03857-418">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-418">-or-</span>
          </span>
          <span data-ttu-id="03857-419">
            <see cref="T:System.Collections.CollectionBase" /> est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-419">The <see cref="T:System.Collections.CollectionBase" /> has a fixed size.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="03857-420">Cette méthode appelle <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />, et <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="03857-420">This method calls <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />, and <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">
          <span data-ttu-id="03857-421">Exécution d'opérations de chaînes indépendantes de la culture</span>
          <span class="sxs-lookup">
            <span data-stu-id="03857-421">Performing Culture-Insensitive String Operations</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>