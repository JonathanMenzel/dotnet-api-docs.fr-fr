<Type Name="RelatedEnd" FullName="System.Data.Objects.DataClasses.RelatedEnd">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e1df1847f51618930d9534de82fb5f25a8bddbf0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390023" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class RelatedEnd : System.Data.Objects.DataClasses.IRelatedEnd" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit RelatedEnd extends System.Object implements class System.Data.Objects.DataClasses.IRelatedEnd" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.RelatedEnd" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RelatedEnd&#xA;Implements IRelatedEnd" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelatedEnd abstract : System::Data::Objects::DataClasses::IRelatedEnd" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.Objects.DataClasses.IRelatedEnd</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente une classe de base qui implémente la fonctionnalité commune pour une terminaison connexe.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.RelatedEnd> est la classe de base des classes <xref:System.Data.Objects.DataClasses.EntityCollection%601> et <xref:System.Data.Objects.DataClasses.EntityReference%601>.  
  
 La classe <xref:System.Data.Objects.DataClasses.RelatedEnd> implémente la fonctionnalité partagée entre les classes <xref:System.Data.Objects.DataClasses.EntityCollection%601> et <xref:System.Data.Objects.DataClasses.EntityReference%601>.  
  
 Cette classe n’est pas destinée à être utilisée directement dans votre code.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AssociationChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler AssociationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler AssociationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AssociationChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ AssociationChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'une modification est apportée à une terminaison connexe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'événement <xref:System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged> est déclenché par les méthodes suivantes :  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A?displayProperty=nameWithType>  
  
 Les événements peuvent être supprimés lors d'opérations en bloc, telles que `Load`, <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> et <xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un objet <see cref="T:System.Collections.IEnumerator" /> qui itère au sein de la collection d'objets connexes.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> qui itère au sein de la collection d'objets connexes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoaded { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si tous les objets connexes ont été chargés.</summary>
        <value>
          <see langword="true" /> si la terminaison associée contient tous les objets connexes de la base de données ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appel de la <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> méthode définit la <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> indicateur `true`.  
  
 Appel de la <xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A> méthode sur une <xref:System.Data.Objects.DataClasses.EntityCollection%601> définit <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> à `false`.  
  
 Un objet <xref:System.Data.Objects.DataClasses.EntityCollection%601> ou <xref:System.Data.Objects.DataClasses.EntityReference%601> peut également être chargé si la terminaison connexe est incluse dans le chemin d'accès de la requête. Pour plus d’informations sur l’étendue, consultez [le chargement des objets connexes](http://msdn.microsoft.com/library/452347d2-7b3b-44cd-9001-231299a28cb1).  
  
 Le `Load` méthode sur <xref:System.Data.Objects.DataClasses.EntityCollection%601> et <xref:System.Data.Objects.DataClasses.EntityReference%601> charge les objets connexes à partir de la source de données ou non <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> est `true`.  
  
 Lorsqu’un objet est détaché, le <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> indicateur est modifié à partir de `false` à `true`.  
  
 Pour garantir qu’une terminaison connexe est complètement chargée avant d’effectuer le traitement, vous devez vérifier si <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> est `false`. Si <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> est `false`, vous devez appeler la <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, charge les objets connexes dans la référence ou collection locale.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Load</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, charge les objets connexes dans la terminaison connexe avec l’option de fusion par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'option de fusion par défaut est <xref:System.Data.Objects.MergeOption.AppendOnly> pour les objets suivis ou <xref:System.Data.Objects.MergeOption.NoTracking> lorsque l'objet n'est pas suivi dans l'objet <xref:System.Data.Objects.ObjectStateManager>. Pour spécifier une option de fusion autre que <xref:System.Data.Objects.MergeOption.AppendOnly>, appelez le `Load` méthode sur le <xref:System.Data.Objects.DataClasses.EntityCollection%601> ou le <xref:System.Data.Objects.DataClasses.EntityReference%601> qui accepte un spécifique <xref:System.Data.Objects.MergeOption> paramètre.  
  
 Appel de la <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> méthode définit la <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> indicateur `true`.  
  
 Le <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> méthode charge ou non les objets connexes à partir de la source de données <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> est `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Lorsque l'objet source a été récupéré à l'aide d'une requête <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> et que l'objet <see cref="T:System.Data.Objects.MergeOption" /> n'est pas <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> ou que les objets connexes sont déjà chargés.  
  
 - ou -  
  
 Lorsque l'objet source n'est pas attaché à l'objet <see cref="T:System.Data.Objects.ObjectContext" />.  
  
 - ou -  
  
 Lorsque l'objet source est suivi mais qu'il est à l'état <see cref="F:System.Data.EntityState.Added" /> ou <see cref="F:System.Data.EntityState.Deleted" /> ou que l'objet <see cref="T:System.Data.Objects.MergeOption" /> utilisé pour <see cref="M:System.Data.Objects.DataClasses.RelatedEnd.Load" /> est <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract void Load (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Load(System::Data::Objects::MergeOption mergeOption);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption">Objet <see cref="T:System.Data.Objects.MergeOption" /> à utiliser lors de la fusion d'objets en un objet <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> existant.</param>
        <summary>En cas de substitution dans une classe dérivée, charge un ou plusieurs objets à partir de la terminaison connexe avec l’option de fusion spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.EntityCollection%601> et <xref:System.Data.Objects.DataClasses.EntityReference%601> substituent cette méthode pour charger des objets connexes. `Load` est appelé pour charger explicitement des objets connexes à partir d’une terminaison connexe exposée par une propriété de navigation. Pour plus d’informations, consultez [le chargement des objets connexes](http://msdn.microsoft.com/library/452347d2-7b3b-44cd-9001-231299a28cb1).  
  
 Appel de la <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> méthode définit la <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> indicateur `true`.  
  
 Le <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> méthode charge ou non les objets connexes à partir de la source de données <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> est `true`.  
  
 L'option de fusion par défaut est <xref:System.Data.Objects.MergeOption.AppendOnly> pour les objets suivis ou <xref:System.Data.Objects.MergeOption.NoTracking> lorsque l'objet n'est pas suivi dans l'objet <xref:System.Data.Objects.ObjectStateManager>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Lorsque l'objet source a été récupéré à l'aide d'une requête <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> et que l'objet <see cref="T:System.Data.Objects.MergeOption" /> n'est pas <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> ou que les objets connexes sont déjà chargés.  
  
 - ou -  
  
 Lorsque l'objet source n'est pas attaché à l'objet <see cref="T:System.Data.Objects.ObjectContext" />.  
  
 - ou -  
  
 Lorsque l'objet source est suivi mais qu'il est à l'état <see cref="F:System.Data.EntityState.Added" /> ou <see cref="F:System.Data.EntityState.Deleted" /> ou que l'objet <see cref="T:System.Data.Objects.MergeOption" /> utilisé pour <see cref="M:System.Data.Objects.DataClasses.RelatedEnd.Load" /> est <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialized">
      <MemberSignature Language="C#" Value="public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">Flux sérialisé.</param>
        <summary>Utilisé en interne pour désérialiser des objets d'entité avec les instances <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipName">
      <MemberSignature Language="C#" Value="public string RelationshipName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de la relation à laquelle cette terminaison connexe participe.</summary>
        <value>Nom de la relation à laquelle cet objet <see cref="T:System.Data.Objects.DataClasses.RelatedEnd" /> participe. Le nom de la relation n'est pas qualifié par un espace de noms.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipSet">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.RelationshipSet RelationshipSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.RelationshipSet RelationshipSet" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipSet As RelationshipSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::RelationshipSet ^ RelationshipSet { System::Data::Metadata::Edm::RelationshipSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.RelationshipSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence aux métadonnées de la terminaison connexe.</summary>
        <value>Objet <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> qui contient les métadonnées de la terminaison d'une relation.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceRoleName">
      <MemberSignature Language="C#" Value="public string SourceRoleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceRoleName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceRoleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceRoleName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom du rôle à la terminaison source de la relation.</summary>
        <value>
          <see cref="T:System.String" /> qui correspond au nom de rôle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nom de rôle est spécifié par le `Role` attribut de la `End` élément dans l’association qui définit cette relation dans le modèle conceptuel. Pour plus d’informations, consultez [Association, élément (CSDL)](http://msdn.microsoft.com/library/c305169a-8af7-432f-9ba7-800a163aed41).  
  
   
  
## Examples  
 L’exemple de cette rubrique est basé sur le [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832), qui a été généré par le [Assistant Entity Data Model](http://msdn.microsoft.com/library/423ec9a7-5464-43b7-a7ef-9f5f000848b5).  
  
 L’exemple suivant ajoute de nouvelles `SalesOrderHeader` entités à la `Contact` entité. Ensuite, il obtient toutes les terminaisons connexes à partir de la `Contact` entité et affiche le nom de relation, nom de rôle source et le nom de rôle cible pour chaque terminaison connexe.  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Add">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ajoute un objet à la terminaison connexe.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Add">
      <MemberSignature Language="C#" Value="void IRelatedEnd.Add (System.Data.Objects.DataClasses.IEntityWithRelationships entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.Objects.DataClasses.IRelatedEnd.Add(class System.Data.Objects.DataClasses.IEntityWithRelationships entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (entity As IEntityWithRelationships) Implements IRelatedEnd.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.Objects.DataClasses.IRelatedEnd.Add(System::Data::Objects::DataClasses::IEntityWithRelationships ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="entity">Objet à ajouter à la collection. Cet objet doit implémenter l'interface <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />.</param>
        <summary>Ajoute un objet à la terminaison connexe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Data.Objects.DataClasses.RelatedEnd> est castée en interface <xref:System.Data.Objects.DataClasses.IRelatedEnd>.  
  
 Le <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23Add%2A> méthode est conservée uniquement pour la compatibilité avec les versions antérieures du .NET Framework.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Add">
      <MemberSignature Language="C#" Value="void IRelatedEnd.Add (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.Objects.DataClasses.IRelatedEnd.Add(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (entity As Object) Implements IRelatedEnd.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.Objects.DataClasses.IRelatedEnd.Add(System::Object ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Instance d'entité à ajouter à la terminaison associée.</param>
        <summary>Ajoute un objet à la terminaison connexe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l’objet d’entité source est attaché à un cache, puis toutes les fins connectées sont ajoutées au cache d’objets et leurs relations correspondantes sont également ajoutées à la <xref:System.Data.Objects.ObjectStateManager>. Le <xref:System.Data.Objects.DataClasses.RelatedEnd> de la relation est également fixe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Attach">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Attache un objet à la terminaison connexe.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Attach">
      <MemberSignature Language="C#" Value="void IRelatedEnd.Attach (System.Data.Objects.DataClasses.IEntityWithRelationships entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.Objects.DataClasses.IRelatedEnd.Attach(class System.Data.Objects.DataClasses.IEntityWithRelationships entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Sub Attach (entity As IEntityWithRelationships) Implements IRelatedEnd.Attach" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.Objects.DataClasses.IRelatedEnd.Attach(System::Data::Objects::DataClasses::IEntityWithRelationships ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Attach;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="entity">Objet qui est attaché.</param>
        <summary>Attache un objet à la terminaison connexe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Data.Objects.DataClasses.RelatedEnd> est castée en interface <xref:System.Data.Objects.DataClasses.IRelatedEnd>.  
  
 Le <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23Attach%2A> méthode est conservée uniquement pour la compatibilité avec les versions antérieures du .NET Framework.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Attach">
      <MemberSignature Language="C#" Value="void IRelatedEnd.Attach (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.Objects.DataClasses.IRelatedEnd.Attach(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Attach (entity As Object) Implements IRelatedEnd.Attach" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.Objects.DataClasses.IRelatedEnd.Attach(System::Object ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Attach;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Instance d'entité à joindre à la terminaison associée.</param>
        <summary>Attache un objet à la terminaison connexe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la terminaison connexe a déjà des entités associées à celui-ci, les entités existantes seront fusionnées avec la nouvelle entité. La nouvelle entité n’est pas supposé que le jeu complet d’objets entité associés.  
  
 L’objet d’entité source et tous les objets d’entité passés doivent être dans un <xref:System.Data.EntityState.Unchanged> ou <xref:System.Data.EntityState.Modified> état. Les éléments supprimés sont autorisés uniquement lorsque le Gestionnaire d’état est déjà le suivi de l’instance de relation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerable IRelatedEnd.CreateSourceQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerable System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery" />
      <MemberSignature Language="VB.NET" Value="Function CreateSourceQuery () As IEnumerable Implements IRelatedEnd.CreateSourceQuery" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerable ^ System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery() = System::Data::Objects::DataClasses::IRelatedEnd::CreateSourceQuery;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un objet <see cref="T:System.Collections.IEnumerable" /> qui représente les objets appartenant à la terminaison connexe.</summary>
        <returns>Objet <see cref="T:System.Collections.IEnumerable" /> qui représente les objets appartenant à la terminaison connexe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Data.Objects.DataClasses.RelatedEnd> est castée en interface <xref:System.Data.Objects.DataClasses.IRelatedEnd>.  
  
 <xref:System.Data.Objects.DataClasses.EntityCollection%601> et <xref:System.Data.Objects.DataClasses.EntityReference%601> substituent tous deux <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23CreateSourceQuery%2A> pour retourner un objet <xref:System.Data.Objects.ObjectQuery%601>. Cette requête, lorsqu'elle est exécutée, retourne le même jeu d'objets que ceux qui appartiennent à la terminaison connexe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Remove">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Supprime un objet de la terminaison connexe.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Remove">
      <MemberSignature Language="C#" Value="bool IRelatedEnd.Remove (System.Data.Objects.DataClasses.IEntityWithRelationships entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Data.Objects.DataClasses.IRelatedEnd.Remove(class System.Data.Objects.DataClasses.IEntityWithRelationships entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (entity As IEntityWithRelationships) As Boolean Implements IRelatedEnd.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Data.Objects.DataClasses.IRelatedEnd.Remove(System::Data::Objects::DataClasses::IEntityWithRelationships ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="entity">Instance d'entité à supprimer de la collection.</param>
        <summary>Supprime un objet de la collection à la terminaison connexe.</summary>
        <returns>Valeur qui indique si l'objet a été supprimé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Data.Objects.DataClasses.RelatedEnd> est castée en interface <xref:System.Data.Objects.DataClasses.IRelatedEnd>.  
  
 Le <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23Remove%2A> méthode est conservée uniquement pour la compatibilité avec les versions antérieures du .NET Framework.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Remove">
      <MemberSignature Language="C#" Value="bool IRelatedEnd.Remove (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Data.Objects.DataClasses.IRelatedEnd.Remove(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (entity As Object) As Boolean Implements IRelatedEnd.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Data.Objects.DataClasses.IRelatedEnd.Remove(System::Object ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Instance d'entité à supprimer de la terminaison associée.</param>
        <summary>Supprime un objet de la terminaison connexe si l'objet appartient à celle-ci.</summary>
        <returns>
          <see langword="true" /> si l'entité a été correctement supprimée ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l’objet d’entité source est attaché à un cache, la relation est marquée pour suppression.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetRoleName">
      <MemberSignature Language="C#" Value="public string TargetRoleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetRoleName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetRoleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetRoleName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom du rôle à la terminaison cible de la relation.</summary>
        <value>
          <see cref="T:System.String" /> qui correspond au nom de rôle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nom de rôle est spécifié par le `Role` attribut de la `End` élément dans l’association qui définit cette relation dans le modèle conceptuel. Pour plus d’informations, consultez [Association, élément (CSDL)](http://msdn.microsoft.com/library/c305169a-8af7-432f-9ba7-800a163aed41).  
  
   
  
## Examples  
 L’exemple de cette rubrique est basé sur le [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). L’exemple ajoute de nouvelles `SalesOrderHeader` entités à la `Contact` entité. Ensuite, il obtient toutes les terminaisons connexes à partir de la `Contact` entité et affiche le nom de relation, nom de rôle source et le nom de rôle cible pour chaque terminaison connexe.  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName" />
      </Docs>
    </Member>
  </Members>
</Type>