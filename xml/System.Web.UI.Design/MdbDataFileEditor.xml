<Type Name="MdbDataFileEditor" FullName="System.Web.UI.Design.MdbDataFileEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1efcb24f317e57862fa9d2860b11a38034f80883" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39851297" /></Metadata><TypeSignature Language="C#" Value="public class MdbDataFileEditor : System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MdbDataFileEditor extends System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.MdbDataFileEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class MdbDataFileEditor&#xA;Inherits UrlEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class MdbDataFileEditor : System::Web::UI::Design::UrlEditor" />
  <TypeSignature Language="F#" Value="type MdbDataFileEditor = class&#xA;    inherit UrlEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.UrlEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une interface utilisateur au moment du design pour sélectionner un fichier base de données Microsoft Access.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.Design.MdbDataFileEditor> objet est utilisé au moment du design pour sélectionner et modifier une URL pour un fichier de base de données Microsoft Access (.mdb), puis affectez l’URL à une propriété de contrôle. Par exemple, le <xref:System.Web.UI.WebControls.AccessDataSource> de contrôles utilise le <xref:System.Web.UI.Design.MdbDataFileEditor> classe au moment du design pour définir la valeur de la <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A> propriété.  
  
 Utilisez le <xref:System.ComponentModel.EditorAttribute> attribut à associer le <xref:System.Web.UI.Design.MdbDataFileEditor> avec une propriété. Lorsque la propriété associée est modifiée sur l’aire de conception, l’hôte du concepteur appelle la <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> (méthode). Le <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> méthode utilise le <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> (méthode), qui à son tour affiche une interface utilisateur pour la sélection de l’URL et retourne l’URL qui est sélectionné par l’utilisateur. Le <xref:System.Web.UI.Design.UrlEditor.GetEditStyle%2A> méthode indique le style d’affichage de l’interface utilisateur.  
  
 Dérivez une classe de la <xref:System.Web.UI.Design.MdbDataFileEditor> pour définir un éditeur personnalisé pour une propriété d’URL de base de données Access. Par exemple, une classe dérivée peut substituer le <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> (méthode), puis appelez le <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> méthode avec un personnalisé <xref:System.Web.UI.Design.MdbDataFileEditor.Filter%2A> ou <xref:System.Web.UI.Design.MdbDataFileEditor.Caption%2A> valeur.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment associer une instance de la <xref:System.Web.UI.Design.MdbDataFileEditor> classe avec une propriété qui est contenue dans un contrôle personnalisé. Lorsque vous modifiez la propriété du contrôle sur l’aire de conception, le <xref:System.Web.UI.Design.MdbDataFileEditor> classe fournit l’interface utilisateur pour sélectionner et modifier un nom de fichier de base de données Access pour la valeur de propriété.  
  
 [!code-csharp[WebDesigner.MdbDataFileEditor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebDesigner.MdbDataFileEditor/CS/simplecontrolwithfilename.cs#1)]
 [!code-vb[WebDesigner.MdbDataFileEditor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebDesigner.MdbDataFileEditor/VB/simplecontrolwithfilename.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.UrlEditor" />
    <altmember cref="T:System.ComponentModel.EditorAttribute" />
    <altmember cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MdbDataFileEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.MdbDataFileEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MdbDataFileEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.Design.MdbDataFileEditor" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="protected override string Caption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.MdbDataFileEditor.Caption" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Caption { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string" Usage="System.Web.UI.Design.MdbDataFileEditor.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la légende à afficher dans la boîte de dialogue de sélection.</summary>
        <value>Texte de légende à afficher dans la boîte de dialogue de sélection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.MdbDataFileEditor.Caption%2A> chaîne est utilisée par le <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> lors de l’appel de méthode le <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> (méthode), qui affiche la boîte de dialogue de sélection URL à l’utilisateur au moment du design.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="protected override string Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.MdbDataFileEditor.Filter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Filter { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string" Usage="System.Web.UI.Design.MdbDataFileEditor.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les options de filtrage pour l'éditeur, qui est utilisé pour filtrer les éléments indiqués dans la boîte de dialogue de sélection des URL.</summary>
        <value>Chaîne qui représente une ou plusieurs options du filtre de l'URL pour la boîte de dialogue.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.MdbDataFileEditor.Filter%2A> propriété est utilisée par le <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> lors de l’appel de méthode le <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> (méthode), qui affiche la boîte de dialogue de sélection URL à l’utilisateur au moment du design.  
  
 Le <xref:System.Web.UI.Design.MdbDataFileEditor.Filter%2A> valeur de propriété par défaut indique deux filtres d’URL pour la boîte de dialogue : un pour les fichiers de base de données Microsoft Access (*.mdb) et l’autre pour tous les fichiers (\*.\*).  
  
 Pour spécifier une chaîne de filtre personnalisé, dérivez une classe de la <xref:System.Web.UI.Design.MdbDataFileEditor> classe et substituer les <xref:System.Web.UI.Design.MdbDataFileEditor.Filter%2A> propriété pour renvoyer la chaîne de filtre personnalisé.  
  
 Une chaîne de filtre contient une ou plusieurs options de filtre. Chaque option de filtre contient une description du filtre, suivie de la barre verticale (&#124;) et le modèle de filtre. Les chaînes pour les différentes options de filtrage sont séparées par la barre verticale.  
  
 Voici un exemple de chaîne de filtrage qui contient deux options de filtre :  
  
 "`Microsoft Access Databases (*.mdb)|*.mdb|All Files (*.*)|*.*`".  
  
 Vous pouvez spécifier plusieurs modèles de filtre dans une option de filtre en séparant les modèles de filtre par des points-virgules. Voici un exemple de chaîne de filtrage dans laquelle la première option de filtre spécifie deux modèles de filtre :  
  
 "`Custom Database Files (*.db1; *.db2)|*.db1;*.db2|All Files (*.*)|*.*`".  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.UrlEditor.Filter" />
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
  </Members>
</Type>