<Type Name="ControlParser" FullName="System.Web.UI.Design.ControlParser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="af6871005f8a79aed2732a666f8619c75e5712b4" /><Meta Name="ms.sourcegitcommit" Value="2982b8c4cce02c2542285fcaf172f7544d6b80bc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="04/09/2019" /><Meta Name="ms.locfileid" Value="59353629" /></Metadata><TypeSignature Language="C#" Value="public sealed class ControlParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ControlParser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ControlParser" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ControlParser" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlParser sealed" />
  <TypeSignature Language="F#" Value="type ControlParser = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des méthodes pour la création d'un contrôle <see cref="T:System.Web.UI.Control" /> ou d'une interface <see cref="T:System.Web.UI.ITemplate" /> serveur Web à partir d'une chaîne de balisage qui représente un modèle ou un contrôle persistant.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe T:System.Web.UI.Design.ControlParser fournit des méthodes qui peuvent créer un contrôle de.Control ou d’une interface de.ITemplate en analysant une chaîne de balisage qui représente un contrôle ou un modèle de contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment obtenir le balisage HTML pour un contrôle sur une page à l’aide de la <xref:System.Web.UI.Design.ControlPersister> classe et comment instancier un contrôle à partir de celui-ci à l’aide de la <xref:System.Web.UI.Design.ControlParser> classe. L’exemple montre également comment afficher des boîtes de dialogue Microsoft Windows à partir d’un concepteur.  
  
 [!code-cpp[ControlParserPersisterExample#1](~/samples/snippets/cpp/VS_Snippets_WebNet/ControlParserPersisterExample/CPP/webcustomcontrol1.cpp#1)]
 [!code-csharp[ControlParserPersisterExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlParserPersisterExample/CS/webcustomcontrol1.cs#1)]
 [!code-vb[ControlParserPersisterExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlParserPersisterExample/VB/webcustomcontrol1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.ITemplate" />
    <altmember cref="T:System.Web.UI.Design.ControlPersister" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">Extension de la prise en charge au moment du design</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="ParseControl">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée un contrôle à partir du balisage spécifié.</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseControl">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Control ParseControl (System.ComponentModel.Design.IDesignerHost designerHost, string controlText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Control ParseControl(class System.ComponentModel.Design.IDesignerHost designerHost, string controlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlParser.ParseControl(System.ComponentModel.Design.IDesignerHost,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseControl (designerHost As IDesignerHost, controlText As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Control ^ ParseControl(System::ComponentModel::Design::IDesignerHost ^ designerHost, System::String ^ controlText);" />
      <MemberSignature Language="F#" Value="static member ParseControl : System.ComponentModel.Design.IDesignerHost * string -&gt; System.Web.UI.Control" Usage="System.Web.UI.Design.ControlParser.ParseControl (designerHost, controlText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerHost" Type="System.ComponentModel.Design.IDesignerHost" />
        <Parameter Name="controlText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="designerHost">Instance de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> qui est l'hôte du concepteur pour la page.</param>
        <param name="controlText">Balisage HTML pour le contrôle.</param>
        <summary>Crée un contrôle à partir du balisage spécifié à l'aide de l'hôte de concepteur spécifié.</summary>
        <returns><see cref="T:System.Web.UI.Control" /> que *controlText* représente ; sinon,<see langword="null" />, si l’analyseur ne peut pas générer le contrôle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ControlParser.ParseControl%2A> méthode accède à la chaîne représentant les directives register de la page Web ASP.NET utilisant les services de l’hôte du concepteur. Services de l’hôte du concepteur sont acquis par le <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> propriété de la <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> objet, ou si qui n’est pas disponible, le <xref:System.Web.UI.Design.IWebFormReferenceManager> service.  
  
 Le <xref:System.Web.UI.Design.ControlParser.ParseControl%2A> méthode lève une exception si l’analyseur ne peut pas générer le contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer un contrôle à partir du texte de balisage HTML. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.Design.ControlParser> classe.  
  
 [!code-cpp[ControlParserPersisterExample#2](~/samples/snippets/cpp/VS_Snippets_WebNet/ControlParserPersisterExample/CPP/webcustomcontrol1.cpp#2)]
 [!code-csharp[ControlParserPersisterExample#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlParserPersisterExample/CS/webcustomcontrol1.cs#2)]
 [!code-vb[ControlParserPersisterExample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlParserPersisterExample/VB/webcustomcontrol1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Un paramètre n'est pas valide.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <Member MemberName="ParseControl">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Control ParseControl (System.ComponentModel.Design.IDesignerHost designerHost, string controlText, string directives);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Control ParseControl(class System.ComponentModel.Design.IDesignerHost designerHost, string controlText, string directives) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlParser.ParseControl(System.ComponentModel.Design.IDesignerHost,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseControl (designerHost As IDesignerHost, controlText As String, directives As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Control ^ ParseControl(System::ComponentModel::Design::IDesignerHost ^ designerHost, System::String ^ controlText, System::String ^ directives);" />
      <MemberSignature Language="F#" Value="static member ParseControl : System.ComponentModel.Design.IDesignerHost * string * string -&gt; System.Web.UI.Control" Usage="System.Web.UI.Design.ControlParser.ParseControl (designerHost, controlText, directives)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerHost" Type="System.ComponentModel.Design.IDesignerHost" />
        <Parameter Name="controlText" Type="System.String" />
        <Parameter Name="directives" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="designerHost">Instance de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> qui est l'hôte du concepteur pour la page.</param>
        <param name="controlText">Texte du balisage HTML pour le contrôle.</param>
        <param name="directives">Directives de page à inclure dans le code pour le contrôle.</param>
        <summary>Crée un contrôle à partir du balisage spécifié à l'aide des directives et de l'hôte de concepteur spécifiés.</summary>
        <returns><see cref="T:System.Web.UI.Control" /> que <paramref name="controlText" /> représente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ControlParser.ParseControl%2A> méthode accède à la chaîne représentant les directives register de la page Web ASP.NET utilisant les services de l’hôte du concepteur. Services de l’hôte du concepteur sont acquis par le <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> propriété de la <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> objet, ou si qui n’est pas disponible, le <xref:System.Web.UI.Design.IWebFormReferenceManager> service.  
  
 Le <xref:System.Web.UI.Design.ControlParser.ParseControl%2A> méthode lève une exception si l’analyseur ne peut pas générer le contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer un contrôle à partir du texte de balisage HTML. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.Design.ControlParser> classe.  
  
 [!code-cpp[ControlParserPersisterExample#2](~/samples/snippets/cpp/VS_Snippets_WebNet/ControlParserPersisterExample/CPP/webcustomcontrol1.cpp#2)]
 [!code-csharp[ControlParserPersisterExample#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlParserPersisterExample/CS/webcustomcontrol1.cs#2)]
 [!code-vb[ControlParserPersisterExample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlParserPersisterExample/VB/webcustomcontrol1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Un paramètre n'est pas valide.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <Member MemberName="ParseControls">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Control[] ParseControls (System.ComponentModel.Design.IDesignerHost designerHost, string controlText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Control[] ParseControls(class System.ComponentModel.Design.IDesignerHost designerHost, string controlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlParser.ParseControls(System.ComponentModel.Design.IDesignerHost,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseControls (designerHost As IDesignerHost, controlText As String) As Control()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Web::UI::Control ^&gt; ^ ParseControls(System::ComponentModel::Design::IDesignerHost ^ designerHost, System::String ^ controlText);" />
      <MemberSignature Language="F#" Value="static member ParseControls : System.ComponentModel.Design.IDesignerHost * string -&gt; System.Web.UI.Control[]" Usage="System.Web.UI.Design.ControlParser.ParseControls (designerHost, controlText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerHost" Type="System.ComponentModel.Design.IDesignerHost" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="controlText" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="designerHost">Instance de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> qui est l'hôte du concepteur pour la page.</param>
        <param name="controlText">Chaîne qui représente une collection de balisages pour les contrôles.</param>
        <summary>Crée un tableau de contrôles à partir du balisage spécifié à l'aide de l'hôte de concepteur spécifié.</summary>
        <returns>Tableau d'éléments <see cref="T:System.Web.UI.Control" />, analysé à partir de <paramref name="controlText" /> ; sinon, <see langword="null" /> si l'analyseur ne peut pas générer les contrôles.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ControlParser.ParseControls%2A> méthode accède à la chaîne représentant les directives register de la page Web ASP.NET utilisant les services de l’hôte du concepteur. Services de l’hôte du concepteur sont acquis par le <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> propriété de la <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> objet, ou si qui n’est pas disponible, le <xref:System.Web.UI.Design.IWebFormReferenceManager> service.  
  
 Le <xref:System.Web.UI.Design.ControlParser.ParseControls%2A> méthode lève une exception si l’analyseur ne peut pas générer les contrôles à partir de la `controlText` paramètre.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="designerHost" /> est <see langword="null" />.  
  
ou 
 <paramref name="controlText" /> est <see langword="null" /> ou une chaîne vide ("").</exception>
        <altmember cref="Overload:System.Web.UI.Design.ControlParser.ParseControl" />
        <altmember cref="T:System.Web.UI.Control" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseTemplate">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée une interface <see cref="T:System.Web.UI.ITemplate" /> à partir du balisage de modèle spécifié.</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseTemplate">
      <MemberSignature Language="C#" Value="public static System.Web.UI.ITemplate ParseTemplate (System.ComponentModel.Design.IDesignerHost designerHost, string templateText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.ITemplate ParseTemplate(class System.ComponentModel.Design.IDesignerHost designerHost, string templateText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlParser.ParseTemplate(System.ComponentModel.Design.IDesignerHost,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseTemplate (designerHost As IDesignerHost, templateText As String) As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::ITemplate ^ ParseTemplate(System::ComponentModel::Design::IDesignerHost ^ designerHost, System::String ^ templateText);" />
      <MemberSignature Language="F#" Value="static member ParseTemplate : System.ComponentModel.Design.IDesignerHost * string -&gt; System.Web.UI.ITemplate" Usage="System.Web.UI.Design.ControlParser.ParseTemplate (designerHost, templateText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerHost" Type="System.ComponentModel.Design.IDesignerHost" />
        <Parameter Name="templateText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="designerHost">Instance de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> qui est l'hôte du concepteur pour la page.</param>
        <param name="templateText">Chaîne qui contient le balisage de modèle.</param>
        <summary>Crée une interface <see cref="T:System.Web.UI.ITemplate" /> à partir du balisage de modèle spécifié.</summary>
        <returns>Instance de <see cref="T:System.Web.UI.ITemplate" /> créée en analysant <paramref name="templateText" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ControlParser.ParseTemplate%2A> méthode accède à la chaîne représentant les directives register de la page Web ASP.NET utilisant les services de l’hôte du concepteur. Services de l’hôte du concepteur sont acquis par le <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> propriété de la <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> objet, ou si qui n’est pas disponible, le <xref:System.Web.UI.Design.IWebFormReferenceManager> service.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="designerHost" /> est <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <Member MemberName="ParseTemplate">
      <MemberSignature Language="C#" Value="public static System.Web.UI.ITemplate ParseTemplate (System.ComponentModel.Design.IDesignerHost designerHost, string templateText, string directives);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.ITemplate ParseTemplate(class System.ComponentModel.Design.IDesignerHost designerHost, string templateText, string directives) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlParser.ParseTemplate(System.ComponentModel.Design.IDesignerHost,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseTemplate (designerHost As IDesignerHost, templateText As String, directives As String) As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::ITemplate ^ ParseTemplate(System::ComponentModel::Design::IDesignerHost ^ designerHost, System::String ^ templateText, System::String ^ directives);" />
      <MemberSignature Language="F#" Value="static member ParseTemplate : System.ComponentModel.Design.IDesignerHost * string * string -&gt; System.Web.UI.ITemplate" Usage="System.Web.UI.Design.ControlParser.ParseTemplate (designerHost, templateText, directives)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerHost" Type="System.ComponentModel.Design.IDesignerHost" />
        <Parameter Name="templateText" Type="System.String" />
        <Parameter Name="directives" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="designerHost">Instance de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> qui est l'hôte du concepteur pour la page.</param>
        <param name="templateText">Chaîne qui contient le balisage de modèle.</param>
        <param name="directives">Toutes directives à ajouter au début du code pour le modèle.</param>
        <summary>Analyse le balisage de modèle spécifié et crée une interface <see cref="T:System.Web.UI.ITemplate" />.</summary>
        <returns>Instance de <see cref="T:System.Web.UI.ITemplate" /> créée en analysant <paramref name="templateText" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ControlParser.ParseTemplate%2A> méthode accède à la chaîne représentant les directives register de la page Web ASP.NET utilisant les services de l’hôte du concepteur. Services de l’hôte du concepteur sont acquis par le <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> propriété de la <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> objet, ou si qui n’est pas disponible, le <xref:System.Web.UI.Design.IWebFormReferenceManager> service.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="designerHost" /> est <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
  </Members>
</Type>