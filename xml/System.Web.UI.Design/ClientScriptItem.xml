<Type Name="ClientScriptItem" FullName="System.Web.UI.Design.ClientScriptItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="368c452102c15bd5d62c3ff8ced507ca29415f4e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37601487" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientScriptItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientScriptItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ClientScriptItem" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientScriptItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientScriptItem sealed" />
  <TypeSignature Language="F#" Value="type ClientScriptItem = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a client script element in a Web Form or user control at design time. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ClientScriptItem> classe représente un `script` élément contenu dans un document Web au moment du design. Une implémentation de concepteur du contrôle personnalisé peut utiliser un <xref:System.Web.UI.Design.ClientScriptItem> objet à ajouter des éléments de script client à un formulaire Web ou un contrôle utilisateur.  
  
 Au moment du design, utilisez la <xref:System.Web.UI.Design.WebFormsRootDesigner> classe pour définir ou examiner des éléments de script client qui sont contenus dans un document, comme un formulaire Web, un contrôle serveur Web, une page de contenu ou une page maître, sur l’aire de conception. Récupérer la collection d’éléments de script client qui sont contenus dans le document Web en utilisant le <xref:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument%2A> (méthode). Ajouter un élément de script client pour le document Web en utilisant le <xref:System.Web.UI.Design.WebFormsRootDesigner.AddClientScriptToDocument%2A> (méthode).  
  
 En règle générale, un `script` élément contient des instructions de script ou spécifie un emplacement externe pour les instructions de script. Le `script` élément peut éventuellement définir le langage des instructions de script. Utilisez le <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A> constructeur pour initialiser les propriétés d’un nouvel objet de script. Utilisez le <xref:System.Web.UI.Design.ClientScriptItem> propriétés à examiner le `script` attributs et le contenu de l’objet. Le <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> propriété représente le `language` attribut de la `script` élément. Le <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> propriété représente le `src` attribut. Le <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> propriété représente les instructions de script à exécuter sur le client qui sont contenus dans le `script` élément.  
  
 Utilisez la <xref:System.Web.UI.Design.ClientScriptItem> classe pour gérer des scripts qui doivent être exécutées au moment du design.  
  
 Pour gérer les éléments de script client au moment de l’exécution, utilisez la <xref:System.Web.UI.ClientScriptManager> classe. Pour plus d’informations sur l’utilisation de scripts clients au moment de l’exécution, consultez [Script Client dans ASP.NET Web Pages](http://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa).  
  
> [!NOTE]
>  Le <xref:System.Web.UI.Design.ClientScriptItem> classe représente `script` éléments au moment du design qui sont finalement analysés et exécutés dans le navigateur client. Étant donné que le `script` les éléments qui sont générés pour le <xref:System.Web.UI.Design.ClientScriptItem> objets ne sont pas exécutés sur le serveur, les éléments ne contiennent pas le `runat="server"` attribut.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ClientScriptItemCollection" />
    <altmember cref="M:System.Web.UI.Design.WebFormsRootDesigner.AddClientScriptToDocument(System.Web.UI.Design.ClientScriptItem)" />
    <altmember cref="M:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientScriptItem (string text, string source, string language, string type, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string source, string language, string type, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ClientScriptItem.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, source As String, language As String, type As String, id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientScriptItem(System::String ^ text, System::String ^ source, System::String ^ language, System::String ^ type, System::String ^ id);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ClientScriptItem : string * string * string * string * string -&gt; System.Web.UI.Design.ClientScriptItem" Usage="new System.Web.UI.Design.ClientScriptItem (text, source, language, type, id)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The contents for the <see langword="script" /> element; a string of script statements to run on the client.</param>
        <param name="source">The <see langword="src" /> attribute value for the <see langword="script" /> element, specifying an external source location for the client script contents.</param>
        <param name="language">The <see langword="language" /> attribute value for the <see langword="script" /> element, specifying the language of the script statements.</param>
        <param name="type">The type attribute value for the <see langword="script" /> element, indicating the MIME type for the associated scripting engine.</param>
        <param name="id">The ID for the <see langword="script" /> element. This argument is required by the design host (for example, [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]).</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ClientScriptItem" /> class using the provided parameters.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Initialisez les instructions pour le <xref:System.Web.UI.Design.ClientScriptItem> objet en utilisant le `text` ou `source` paramètre (mais pas les deux). Utilisez `text` pour initialiser le script à l’aide d’une chaîne d’entrée qui contient les instructions. Vous pouvez également utiliser `source` pour initialiser un script à l’aide d’un chemin d’accès qui contient les instructions de script.  
  
 Vous pouvez spécifier les paramètres d’entrée en tant que `null` ou une chaîne vide ( » ») ; la propriété correspondante est définie à l’aide de la valeur d’entrée et le `script` élément est généré sans cette propriété. À l’aide de `null` ou une chaîne vide (" ») génère les résultats suivants :  
  
-   Pour `text`, correspondant `script` élément ne contient pas d’instructions de script.  
  
-   Pour `source`, le `src` attribut n’est pas défini le `script` élément.  
  
-   Pour `language`, le `language` attribut n’est pas défini le `script` élément.  
  
     Lorsqu’un bloc de script client ne spécifie pas le langage de script, le navigateur client détermine la langue.  
  
-   Pour `type`, le `type` attribut n’est pas défini dans l’élément de script.  
  
     Lorsqu’un bloc de script client ne spécifie pas le type de script, le navigateur client détermine le type.  
  
-   Pour `id`, l’hôte de conception (par exemple, [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]) lève une <xref:System.ArgumentNullException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> is null (thrown by the design host).</exception>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Web.UI.Design.ClientScriptItem.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see langword="ID" /> attribute value for the client script element.</summary>
        <value>Le <see langword="ID" /> valeur de la <see langword="script" /> élément.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Language : string" Usage="System.Web.UI.Design.ClientScriptItem.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see langword="language" /> attribute value for the client script element.</summary>
        <value>Le nom de langage spécifié pour le <see langword="language" /> d’attribut dans le <see langword="script" /> élément.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> propriété représente le langage dans lequel les instructions de script sont écrites. Si le <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> propriété est `null` ou une chaîne vide (« »), le `language` attribut n’est pas défini le `script` élément. Lorsqu’un bloc de script client ne spécifie pas le langage de script, le navigateur client détermine la langue.  
  
 Le <xref:System.Web.UI.Design.ClientScriptItem.Language%2A> propriété est initialisée par le <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A> constructeur.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : string" Usage="System.Web.UI.Design.ClientScriptItem.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see langword="src" /> attribute value for the client script element.</summary>
        <value>Le chemin d’accès au fichier source spécifié pour le <see langword="src" /> d’attribut dans le <see langword="script" /> élément.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> propriété spécifie un emplacement de source externe pour le contenu du script client. En règle générale, les instructions de script pour un `script` élément sont spécifiées en utilisant soit le <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> ou <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> propriété.  
  
 Si le <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> propriété est `null` ou une chaîne vide (« »), le `src` attribut n’est pas défini le `script` élément.  
  
 Le <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> propriété est initialisée par le <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Web.UI.Design.ClientScriptItem.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the script statements contained in the client script element.</summary>
        <value>Les instructions de script contenues dans le <see langword="script" /> élément.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> propriété représente les instructions qui figurent dans le `script` élément. En règle générale, les instructions de script pour un `script` élément sont spécifiées en utilisant soit le <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> ou <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> propriété.  
  
 Si le <xref:System.Web.UI.Design.ClientScriptItem.Text%2A> propriété est `null` ou une chaîne vide (« »), le `script` élément ne contient pas d’instructions de script.  
  
 Le <xref:System.Web.UI.Design.ClientScriptItem.Source%2A> propriété est initialisée par le <xref:System.Web.UI.Design.ClientScriptItem.%23ctor%2A> constructeur.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Type" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ClientScriptItem.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="System.Web.UI.Design.ClientScriptItem.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see langword="type" /> attribute value for the client script element.</summary>
        <value>Le nom du type MIME associé le <see langword="script" /> élément.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Text" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Language" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Source" />
        <altmember cref="P:System.Web.UI.Design.ClientScriptItem.Id" />
      </Docs>
    </Member>
  </Members>
</Type>