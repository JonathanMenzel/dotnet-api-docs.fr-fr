<Type Name="XmlDataFileEditor" FullName="System.Web.UI.Design.XmlDataFileEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c11d55a467876f183d9c63705bcd460c5ba7ab5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30556433" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlDataFileEditor : System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDataFileEditor extends System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.XmlDataFileEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDataFileEditor&#xA;Inherits UrlEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDataFileEditor : System::Web::UI::Design::UrlEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.UrlEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une interface utilisateur au moment du design pour sélectionner un fichier de données XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.Design.XmlDataFileEditor> objet est utilisé au moment du design pour sélectionner et modifier une URL pour un fichier de données XML (.xml), puis affectez l’URL à une propriété de contrôle. Par exemple, le <xref:System.Web.UI.WebControls.XmlDataSource> de contrôles utilise la <xref:System.Web.UI.Design.XmlDataFileEditor> classe au moment du design pour définir la valeur de la <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> propriété.  
  
 Utilisez le <xref:System.ComponentModel.EditorAttribute> attribut à associer le <xref:System.Web.UI.Design.XmlDataFileEditor> avec une propriété. Lorsque la propriété associée est modifiée sur l’aire de conception, l’hôte de concepteur appelle la <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> (méthode). Le <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> utilise le <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> (méthode), qui à son tour affiche une interface utilisateur pour la sélection de l’URL et retourne l’URL est sélectionné par l’utilisateur. Le <xref:System.Web.UI.Design.UrlEditor.GetEditStyle%2A> méthode indique le style d’affichage de l’interface utilisateur.  
  
 Dérivez une classe de la <xref:System.Web.UI.Design.XmlDataFileEditor> pour définir un éditeur personnalisé pour une propriété de données XML. Par exemple, une classe dérivée peut substituer la <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> (méthode), puis appelez le <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> méthode avec un personnalisé <xref:System.Web.UI.Design.XmlDataFileEditor.Filter%2A> ou <xref:System.Web.UI.Design.XmlDataFileEditor.Caption%2A> valeur.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment associer une instance de la <xref:System.Web.UI.Design.XmlDataFileEditor> classe avec une propriété qui est contenue dans un contrôle personnalisé. Lorsque la propriété du contrôle est modifiée sur l’aire de conception, la <xref:System.Web.UI.Design.XmlDataFileEditor> classe fournit l’interface utilisateur pour sélectionner et modifier un nom de fichier XML pour la valeur de propriété.  
  
 [!code-csharp[WebDesigner.XmlDataFileEditor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebDesigner.XmlDataFileEditor/cs/simplecontrolwithfilename.cs#1)]
 [!code-vb[WebDesigner.XmlDataFileEditor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebDesigner.XmlDataFileEditor/vb/simplecontrolwithfilename.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.UrlEditor" />
    <altmember cref="T:System.ComponentModel.EditorAttribute" />
    <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataFileEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.XmlDataFileEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataFileEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.Design.XmlDataFileEditor" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="protected override string Caption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.XmlDataFileEditor.Caption" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Caption { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la légende à afficher dans la boîte de dialogue de sélection.</summary>
        <value>Texte de légende à afficher dans la boîte de dialogue de sélection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.XmlDataFileEditor.Caption%2A> propriété est utilisée par le <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> lors de l’appel de méthode le <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> (méthode), qui affiche la boîte de dialogue de sélection des URL pour l’utilisateur au moment du design.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="protected override string Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.XmlDataFileEditor.Filter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Filter { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les options de filtrage pour l'éditeur, qui est utilisé pour filtrer les éléments indiqués dans la boîte de dialogue de sélection des URL.</summary>
        <value>Chaîne qui représente une ou plusieurs options du filtre de l'URL pour la boîte de dialogue.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.XmlDataFileEditor.Filter%2A> propriété est utilisée par le <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> lors de l’appel de méthode le <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> (méthode), qui affiche la boîte de dialogue de sélection des URL pour l’utilisateur au moment du design.  
  
 Le <xref:System.Web.UI.Design.XmlDataFileEditor.Filter%2A> valeur par défaut de la propriété indique deux filtres d’URL pour la boîte de dialogue : un pour les fichiers de données XML (*.xml) et l’autre pour tous les fichiers (\*.\*).  
  
 Une chaîne de filtre contient une ou plusieurs options de filtre. Chaque option de filtre contient une description du filtre, suivie de la barre verticale (&#124;) et le modèle de filtre. Les chaînes pour les différentes options de filtrage sont séparées par la barre verticale.  
  
 Voici un exemple de chaîne de filtrage qui contient deux options de filtre :  
  
 "`XML Files (*.xml)|*.xml|All Files (*.*)|*.*`".  
  
 Vous pouvez spécifier plusieurs modèles de filtre dans une option de filtre en séparant les modèles de filtre par des points-virgules. Voici un exemple de chaîne de filtrage dans laquelle la première option du filtre spécifie deux modèles de filtre :  
  
 "`Custom XML Files (*.xd1; *.xd2)|*.xd1;*.xd2|All Files (*.*)|*.*`".  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.UrlEditor.Filter" />
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
  </Members>
</Type>