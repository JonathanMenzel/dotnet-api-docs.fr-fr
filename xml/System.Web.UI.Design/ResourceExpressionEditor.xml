<Type Name="ResourceExpressionEditor" FullName="System.Web.UI.Design.ResourceExpressionEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="46e58d7cac56dccca9dc6a90ae09a1c58eb3fef5" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52218458" /></Metadata><TypeSignature Language="C#" Value="public class ResourceExpressionEditor : System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceExpressionEditor extends System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ResourceExpressionEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceExpressionEditor&#xA;Inherits ExpressionEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceExpressionEditor : System::Web::UI::Design::ExpressionEditor" />
  <TypeSignature Language="F#" Value="type ResourceExpressionEditor = class&#xA;    inherit ExpressionEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ExpressionEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des propriétés et des méthodes pour évaluer et modifier une expression de ressource au moment du design.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ResourceExpressionEditor> classe dérive de la <xref:System.Web.UI.Design.ExpressionEditor> classe et fournit une implémentation pour évaluer et associer une référence de ressource avec une propriété du contrôle au moment du design. Par exemple, vous pouvez lier la valeur d’une propriété de contrôle à l’expression de ressource `Resources:submitText`, ce qui signifie que la valeur de propriété de contrôle est définie à l’aide de la ressource nommée `submitText`.  
  
 Héberger un concepteur visuel, tel que [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], utilise le <xref:System.Web.UI.Design.ResourceExpressionEditor> classe pour spécifier une classe de ressource, la clé et la valeur par défaut du concepteur pour une expression de ressource, puis évaluer l’expression de ressource sélectionnée pour le rendu au moment du design.  
  
 Lorsque vous parcourez le <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> propriété pour un contrôle dans la grille des propriétés au moment du design, le concepteur visuel affiche une boîte de dialogue pour définir les expressions qui fournissent la valeur d’exécution pour une propriété du contrôle. Vous pouvez sélectionner le type d’expression basé sur une liste de préfixes d’expression. Lorsque vous sélectionnez le **ressources** préfixe d’expression dans la liste, le concepteur visuel utilise le <xref:System.Web.UI.Design.ResourceExpressionEditor> méthodes permettant de définir, évaluer et convertir l’expression selon la syntaxe d’expression de ressource. Le concepteur visuel utilise le résultat de l’expression évaluée pour assigner des valeurs de propriété qui sont rendues sur l’aire de conception du contrôle.  
  
 La base de <xref:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix%2A?displayProperty=nameWithType> propriété pour un <xref:System.Web.Compilation.ResourceExpressionBuilder> retourne la chaîne `Resources`. Le <xref:System.Web.Compilation.ResourceExpressionBuilder> classe est associée au préfixe d’expression `Resources` et <xref:System.Web.UI.Design.ResourceExpressionEditor> implémentation.  
  
 Le <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> méthode évalue une expression de ressource d’entrée. Le <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> méthode retourne le <xref:System.Web.UI.Design.ExpressionEditorSheet> implémentation qui est utilisée pour sélectionner le nom de la ressource, la classe et la valeur par défaut de concepteur et pour former une expression de ressource à partir des valeurs de ressources sélectionné.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment lier le <xref:System.Web.UI.WebControls.HyperLink.Text%2A> propriété d’un <xref:System.Web.UI.WebControls.HyperLink> contrôle à une expression de ressource à l’aide de la <xref:System.Web.UI.Design.ResourceExpressionEditor> classe.  
  
1.  Dans un projet Web Forms, ajoutez un nouveau fichier de ressources nommé Strings.resx au répertoire App_LocalResources.  
  
2.  Ajoutez une chaîne nommée myLinkText au fichier de ressources Strings.resx, puis définissez la valeur sur le texte pour un <xref:System.Web.UI.WebControls.HyperLink> contrôle.  
  
     Par exemple, définissez la `myLinkText` valeur de chaîne à `This is a good link`.  
  
3.  Dans une page Web Forms, ajoutez un <xref:System.Web.UI.WebControls.HyperLink> contrôle.  
  
4.  Pour le `Hyperlink` contrôle, dans Propriétés, cliquez sur **Expressions**, puis cliquez sur le bouton de sélection (**...** ).  
  
     Le `<Hyperlinkname>` **Expressions** boîte de dialogue s’affiche.  
  
5.  Sous **propriétés pouvant être liées**, cliquez sur **texte**, puis, dans le **type d’Expression** liste, entrez **ressources**.  
  
     Propriétés de l’expression de ressource qui sont définies par le <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> apparaissent de la classe.  
  
6.  Sous **propriétés de l’Expression** définir **ClassName** à **chaînes**, qui est le nom de classe pour le fichier de ressources Strings.resx compilé et le jeu **ResourceKey**  à **myLinkText**, qui est le nom de chaîne dans Strings.resx.  
  
 Le concepteur visuel utilise le <xref:System.Web.UI.Design.ResourceExpressionEditor> pour affecter l’expression de ressource pour le `Text` propriété. La source .aspx suivante montre un exemple d’une valeur de propriété est définie à l’aide d’une expression de ressource.  
  
 [!code-aspx-csharp[ControlsUsingExpressions#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlsUsingExpressions/CS/controlsusingexpressionscs.aspx#3)]
 [!code-aspx-vb[ControlsUsingExpressions#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlsUsingExpressions/VB/controlsusingexpressionsvb.aspx#3)]
 [!code-xml[ControlsUsingExpressions#3](~/samples/snippets/common/VS_Snippets_WebNet/ControlsUsingExpressions/Common/controlsusingexpressions.xml#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceExpressionEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance d'une classe <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.Design.ResourceExpressionEditor> objet est configuré par la classe de base avec un <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> propriété définie sur `Resources`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EvaluateExpression (expression As String, parseTimeData As Object, propertyType As Type, serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EvaluateExpression(System::String ^ expression, System::Object ^ parseTimeData, Type ^ propertyType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.EvaluateExpression : string * obj * Type * IServiceProvider -&gt; obj" Usage="resourceExpressionEditor.EvaluateExpression (expression, parseTimeData, propertyType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Expression de ressource à évaluer. <paramref name="expression" /> ne comprend pas le préfixe d'expression <see langword="Resources" />.</param>
        <param name="parseTimeData">Objet fournissant des données d'analyse supplémentaires, sous la forme d'une valeur <see cref="T:System.Web.Compilation.ResourceExpressionFields" />.</param>
        <param name="propertyType">Type de la propriété du contrôle.</param>
        <param name="serviceProvider">Implémentation d'un fournisseur de services fournie par l'hôte du concepteur, utilisée pour obtenir des services supplémentaires au moment du design.</param>
        <summary>Évalue une expression de ressource et fournit la valeur au moment du design d'une propriété du contrôle.</summary>
        <returns>Objet référencé par la chaîne d'expression évaluée si l'évaluation de l'expression a réussi ; sinon, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> méthode recherche la ressource spécifiée par `expression`, puis retourne la ressource.  
  
 Le concepteur visuel utilise la <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> méthode pour évaluer une expression de ressource et fournir la valeur au moment du design d’une propriété de contrôle associé. Au moment de l’exécution, l’Analyseur de page utilise le <xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A> et <xref:System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression%2A> méthodes correspondantes <xref:System.Web.Compilation.ResourceExpressionBuilder> implémentation pour évaluer une expression et fournir la valeur de l’exécution d’une propriété de contrôle associée.  
  
 Le concepteur visuel utilise le <xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A> méthode pour analyser la chaîne d’expression au moment du design, puis appelle la <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> méthode avec les données de l’expression analysée.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionFields" />
        <altmember cref="Overload:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExpressionEditorSheet (expression As String, serviceProvider As IServiceProvider) As ExpressionEditorSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Design::ExpressionEditorSheet ^ GetExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="resourceExpressionEditor.GetExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Expression de ressource utilisée pour initialiser la feuille d'éditeur d'expression.</param>
        <param name="serviceProvider">Implémentation d'un fournisseur de services fournie par l'hôte du concepteur, utilisée pour initialiser la feuille d'éditeur d'expression.</param>
        <summary>Retourne une feuille d'éditeur d'expression de ressource, initialisée avec la chaîne d'expression d'entrée et l'implémentation du fournisseur de services.</summary>
        <returns><see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" /> qui définit les propriétés de l'expression de ressource.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> méthode retourne un éditeur d’expression mise en œuvre de la feuille pour les expressions de ressource. L’hôte de concepteur visuel utilise la feuille d’éditeur d’expression dans sa boîte de dialogue d’expressions.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
  </Members>
</Type>