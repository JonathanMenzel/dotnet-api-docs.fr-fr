<Type Name="ControlDesigner" FullName="System.Web.UI.Design.ControlDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="25b75f32f6802d179f891c33366390e6ebb5968d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36590528" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlDesigner : System.Web.UI.Design.HtmlControlDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlDesigner extends System.Web.UI.Design.HtmlControlDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlDesigner&#xA;Inherits HtmlControlDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlDesigner : System::Web::UI::Design::HtmlControlDesigner" />
  <TypeSignature Language="F#" Value="type ControlDesigner = class&#xA;    inherit HtmlControlDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.HtmlControlDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a base control designer class for extending the design-mode behavior of a Web server control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ControlDesigner> classe fournit une classe de Concepteur de contrôles de base qui peut être héritée et étendue pour assurer la prise en charge au moment du design pour un contrôle de serveur Web dans un hôte de conception, tel que [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)].  
  
 Le modèle objet pour travailler avec le rendu au moment du design est amélioré par rapport aux versions antérieures, avec les nouvelles classes de base suivantes pour fournir l’accès au modèle objet simplifié :  
  
-   <xref:System.Web.UI.Design.ControlDesigner>, qui n’est pas nouveau, mais a été considérablement amélioré.  
  
-   <xref:System.Web.UI.Design.ContainerControlDesigner>.  
  
-   <xref:System.Web.UI.Design.WebControls.CompositeControlDesigner>.  
  
## <a name="automatic-formatting"></a>Mise en forme automatique  
 Vous pouvez créer divers formats automatiques et prédéfinis qui peuvent simplifier le processus de développeurs de pages qui appliquent des modifications de style complexes à des contrôles serveur Web personnalisés. Par exemple, le <xref:System.Web.UI.Design.WebControls.TableDesigner> contrôle, qui dérive de la <xref:System.Web.UI.Design.ControlDesigner> de classe, fournit de nombreux formats automatiques parmi lesquelles choisir. Pour implémenter et fournir la mise en forme automatique dans vos contrôles personnalisés, utilisez les fonctionnalités suivantes :  
  
-   La propriété <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A>.  
  
-   Méthode <xref:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied%2A>  
  
-   La classe <xref:System.Web.UI.Design.DesignerAutoFormat>.  
  
-   La classe <xref:System.Web.UI.Design.DesignerAutoFormatStyle>.  
  
## <a name="action-lists-smart-tags"></a>Listes d’action (balises actives)  
 Listes d’actions sont des menus de tâches importantes ou largement employées qu’un développeur qui utilise un contrôle peut effectuer dans une interface utilisateur au moment du design (UI), tel que [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]. Par exemple, la vue au moment du design de votre contrôle peut fournir un menu de tâches disponibles. Cela inclut une tâche pour mettre en forme automatiquement le contrôle. Pour en savoir plus sur les listes d’action, commencez par les fonctionnalités suivantes :  
  
-   La propriété <xref:System.Web.UI.Design.ControlDesigner.ActionLists%2A>.  
  
-   La classe <xref:System.ComponentModel.Design.DesignerActionList>.  
  
-   Méthode <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>  
  
-   La classe <xref:System.ComponentModel.Design.DesignerActionListCollection>.  
  
-   La classe <xref:System.ComponentModel.Design.DesignerActionMethodItem>.  
  
-   La classe <xref:System.ComponentModel.Design.DesignerActionPropertyItem>.  
  
## <a name="control-designer-regions"></a>Zones du Concepteur de contrôles  
 Les régions sont des zones modifiables dans la vue au moment du design d’un contrôle serveur Web. Cette fonctionnalité offre similaire à WYSIWYG modification du contenu du modèle, contrôles internes, les propriétés au moment du design. Vous pouvez avoir le Concepteur de contrôles à créer des contrôles dans des régions, ou vous pouvez utiliser la boîte à outils pour faire glisser des contrôles en régions. Les zones sont gérées avec les fonctionnalités suivantes :  
  
-   Méthode <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A>  
  
-   La classe <xref:System.Web.UI.Design.DesignerRegion>.  
  
-   La classe <xref:System.Web.UI.Design.EditableDesignerRegion>.  
  
-   Méthode <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A>  
  
-   Méthode <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A>  
  
## <a name="templates"></a>Modèles  
 Le modèle pour créer une interface utilisateur pour la modification d’au moment du design des contrôles basés sur des modèles, tels que le <xref:System.Web.UI.WebControls.GridView> contrôler, a été considérablement améliorée dans les versions antérieures. Vous pouvez créer des contrôles personnalisés complexes qui incluent des modèles pour les différentes parties du contrôle et votre Concepteur de contrôles personnalisé peut aider les développeurs de pages qui modifient des modèles avec les fonctionnalités suivantes :  
  
-   La propriété <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A>.  
  
-   La propriété <xref:System.Web.UI.Design.ControlDesigner.InTemplateMode%2A>.  
  
-   La classe <xref:System.Web.UI.Design.TemplateGroup>.  
  
## <a name="design-time-rendering"></a>Rendu au moment du design  
 La <xref:System.Web.UI.Design.ControlDesigner> classe possède les méthodes suivantes pour prendre en charge le rendu au moment du design du contrôle serveur Web. La plupart de ces méthodes est les mêmes que dans les versions antérieures :  
  
-   Méthode <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A>  
  
-   Méthode <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A>  
  
-   Méthode <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A>  
  
-   Méthode <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A>  
  
-   Méthode <xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A>  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer une classe de concepteur simple qui dérive de la <xref:System.Web.UI.Design.ControlDesigner> classe. Ce concepteur de contrôles prend en charge une personnalisée `TextControl` classe et fournit une commande pour modifier la taille du texte d’un contrôle au moment du design. Le Concepteur de contrôles est associé au contrôle en spécifiant le Concepteur de contrôles dans un <xref:System.ComponentModel.DesignerAttribute> déclaration d’objet sur le `TextControl` classe. La clé pour la persistance des modifications de propriété du Concepteur de contrôles au balisage HTML se trouve dans le `ToggleTextSize` méthode personnalisé `ActionList` classe.  
  
 Pour tester l’exemple, ajoutez une référence à l’assembly System.Design.dll et compilez le code.  
  
 [!code-csharp[ControlDesignerSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlDesignerSample/cs/TextControlDesigner.cs#1)]
 [!code-vb[ControlDesignerSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlDesignerSample/vb/TextControlDesigner.vb#1)]  
[!code-aspx-csharp[ControlDesignerSample#8](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlDesignerSample/cs/TextControlDesigner.aspx#8)]
[!code-aspx-vb[ControlDesignerSample#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlDesignerSample/vb/TextControlDesigner.aspx#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.TemplateGroup" />
    <altmember cref="T:System.Web.UI.Design.DesignerAutoFormat" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
    <altmember cref="T:System.Web.UI.Design.DesignerRegion" />
    <altmember cref="T:System.Web.UI.Design.ContainerControlDesigner" />
    <altmember cref="T:System.Web.UI.Design.WebControls.CompositeControlDesigner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ControlDesigner" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActionLists : System.ComponentModel.Design.DesignerActionListCollection" Usage="System.Web.UI.Design.ControlDesigner.ActionLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the action list collection for the control designer.</summary>
        <value>Objet <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> qui contient les éléments <see cref="T:System.ComponentModel.Design.DesignerActionList" /> pour le concepteur de contrôles.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment créer un contrôle composite simple avec un <xref:System.Web.UI.WebControls.Label> et un <xref:System.Web.UI.WebControls.TextBox> (contrôle), ainsi que leurs propriétés pour définir les propriétés de texte sur les deux contrôles internes, ainsi que les <xref:System.Web.UI.WebControls.WebControl.Width%2A> et <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> propriétés de la <xref:System.Web.UI.WebControls.TextBox> contrôle. Une classe de Concepteur de contrôles associée crée trois <xref:System.ComponentModel.Design.DesignerActionMethodItem> commandes, chacun d’eux définit deux propriétés sur le contrôle et peut être restaurée avec la fonctionnalité d’annulation de l’hôte de conception.  
  
 [!code-csharp[DesignerInvokeTransactedChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerInvokeTransactedChange/CS/InvokeTransactedChangeSample.cs#1)]
 [!code-vb[DesignerInvokeTransactedChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerInvokeTransactedChange/VB/InvokeTransactedChangeSample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Pour ajouter un menu de liste d’actions à un contrôle personnalisé en mode design, le Concepteur de votre contrôle personnalisé doit substituer la <see cref="P:System.Web.UI.Design.ControlDesigner.ActionLists" /> propriété pour retourner une classe de contrôle personnalisé qui est dérivée de la <see cref="T:System.ComponentModel.Design.DesignerActionList" /> classe.</para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
      </Docs>
    </Member>
    <Member MemberName="AllowResize">
      <MemberSignature Language="C#" Value="public virtual bool AllowResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowResize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.AllowResize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowResize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowResize : bool" Usage="System.Web.UI.Design.ControlDesigner.AllowResize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the control can be resized in the design-time environment.</summary>
        <value>
          <see langword="true" />, si le contrôle peut être redimensionné ; dans le cas contraire, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.Design.ControlDesigner.AllowResize%2A> propriété dans une classe de Concepteur de contrôles personnalisés.  
  
 Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> propriété.  
  
 [!code-csharp[DesignerTemplateGroupSample#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#3)]
 [!code-vb[DesignerTemplateGroupSample#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Utilisez le <see cref="P:System.Web.UI.Design.ControlDesigner.AllowResize" /> propriété dans les classes dérivées pour activer ou désactiver les développeurs de pages de redimensionner votre contrôle dans l’hôte de conception.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AutoFormats">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.DesignerAutoFormatCollection AutoFormats { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.DesignerAutoFormatCollection AutoFormats" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.AutoFormats" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AutoFormats As DesignerAutoFormatCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Design::DesignerAutoFormatCollection ^ AutoFormats { System::Web::UI::Design::DesignerAutoFormatCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AutoFormats : System.Web.UI.Design.DesignerAutoFormatCollection" Usage="System.Web.UI.Design.ControlDesigner.AutoFormats" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignerAutoFormatCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of predefined automatic formatting schemes to display in the **Auto Format** dialog box for the associated control at design time.</summary>
        <value>Objet <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> qui contient les schémas prédéfinis pour le contrôle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un contrôle de serveur Web complet inclut non seulement le contrôle, mais également, si possible, associée à une classe de contrôle concepteur qui est dérivé de la <xref:System.Web.UI.Design.ControlDesigner> classe et une classe mise en forme qui est dérivée de la <xref:System.Web.UI.Design.DesignerAutoFormat> classe. Le <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> propriété est une collection d’instances de la <xref:System.Web.UI.Design.DesignerAutoFormat> classe. Pour obtenir un exemple de mise en forme automatique dans [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], consultez <xref:System.Web.UI.WebControls.Calendar>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment implémenter la <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> propriété dans un concepteur de contrôles personnalisés. L’implémente concepteur contrôles dérivés du <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> propriété en ajoutant trois instances d’un format automatique personnalisé qui sont dérivés de la <xref:System.Web.UI.Design.DesignerAutoFormat> classe.  
  
 [!code-csharp[DesignerAutoFormat#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerAutoFormat/CS/DesignerAutoFormat.cs#1)]
 [!code-vb[DesignerAutoFormat#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerAutoFormat/VB/DesignerAutoFormat.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Contrôles qui exposent automatiquement les mises en forme automatiques obtiennent les commandes de liste et le contexte pour leurs formats à une tâche. Lorsque vous utilisez des formats automatique, utilisez le <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> propriété pour définir les propriétés dans votre fonction de rappel.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormat" />
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateErrorDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates HTML markup to display an error message at design time.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreateErrorDesignTimeHtml (string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreateErrorDesignTimeHtml(string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateErrorDesignTimeHtml (errorMessage As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreateErrorDesignTimeHtml(System::String ^ errorMessage);" />
      <MemberSignature Language="F#" Value="member this.CreateErrorDesignTimeHtml : string -&gt; string" Usage="controlDesigner.CreateErrorDesignTimeHtml errorMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="errorMessage">The error message to include in the generated HTML markup.</param>
        <summary>Creates HTML markup to display a specified error message at design time.</summary>
        <returns>An HTML markup string that contains the specified error message.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> méthode pour créer le balisage HTML pour afficher un message d’erreur pour un contrôle au moment du design. La valeur de `errorMessage` spécifie une chaîne localisée qui est affichée à l’utilisateur du contrôle au moment du design.  
  
 Le <xref:System.Web.UI.Design.ControlDesigner> implémentation de classe de la <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> méthode retourne une table avec deux lignes, comme suit :  
  
-   La première ligne contient le nom de type et le nom de site pour le <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> propriété de la <xref:System.Web.UI.Design.ControlDesigner> objet.  
  
-   La deuxième ligne contient la chaîne du message d’erreur en entrée.  
  
 Pour générer le balisage HTML pour un message d’erreur associé à une exception, utilisez la <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%28System.String%2CSystem.Exception%29> de surcharge. Pour générer le balisage HTML pour une exception sans spécifier de message d’erreur localisé, utilisez le <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Le <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)" /> surcharge est fonctionnellement équivalente à l’appel du <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" /> méthode avec la valeur de e <see langword="null" />.</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      </Docs>
    </Member>
    <Member MemberName="CreateErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreateErrorDesignTimeHtml (string errorMessage, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreateErrorDesignTimeHtml(string errorMessage, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateErrorDesignTimeHtml (errorMessage As String, e As Exception) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreateErrorDesignTimeHtml(System::String ^ errorMessage, Exception ^ e);" />
      <MemberSignature Language="F#" Value="member this.CreateErrorDesignTimeHtml : string * Exception -&gt; string" Usage="controlDesigner.CreateErrorDesignTimeHtml (errorMessage, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="errorMessage">The error message to include in the generated HTML string.</param>
        <param name="e">The exception to include in the generated HTML string.</param>
        <summary>Creates the HTML markup to display a specified exception error message at design time.</summary>
        <returns>HTML markup that contains the specified <paramref name="errorMessage" /> and <paramref name="e" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> méthode pour fournir un balisage HTML simple qui peut être utilisé pour afficher les détails de l’erreur et d’exception pour un contrôle au moment du design. La valeur de `errorMessage` spécifie une chaîne localisée qui est affichée à l’utilisateur du contrôle au moment du design.  
  
 Le <xref:System.Web.UI.Design.ControlDesigner> implémentation de classe de la <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> méthode retourne une table avec deux lignes, comme suit :  
  
-   La première ligne contient le nom de type et le nom de site pour le <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> propriété de la <xref:System.Web.UI.Design.ControlDesigner> objet.  
  
-   La deuxième ligne contient le message d’erreur d’entrée et le <xref:System.Exception.Message%2A> chaîne de l’exception.  
  
 Pour générer le balisage HTML pour un message d’erreur sans spécifier d’exception, utilisez la <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%28System.String%29> de surcharge. Pour générer le balisage HTML pour une exception sans spécifier de message d’erreur localisé, utilisez le <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Le <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" /> méthode doit être appelée à partir de la <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" /> ou <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> méthode lorsque des exceptions se produisent.</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePlaceHolderDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Provides a simple rectangular placeholder representation that displays the type and ID of the control.</summary>
        <block subset="none" type="overrides">
          <para>Le modèle de conception classique consiste à obtenir le balisage HTML par le biais du contrôle associé et si une erreur s’est produite, appelez ensuite la <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> (méthode). Si aucune balise n’est retournée par le contrôle, appelez le <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> méthode, si elle n’est pas substituée pour fournir la balise spécifique, appelle la <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> méthode, qui doit contenir des informations sur le type et l’ID du contrôle.</para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePlaceHolderDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreatePlaceHolderDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreatePlaceHolderDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreatePlaceHolderDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreatePlaceHolderDesignTimeHtml();" />
      <MemberSignature Language="F#" Value="member this.CreatePlaceHolderDesignTimeHtml : unit -&gt; string" Usage="controlDesigner.CreatePlaceHolderDesignTimeHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Provides a simple rectangular placeholder representation that displays the type and ID of the control.</summary>
        <returns>A string that contains design-time HTML markup providing basic information about the control.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Le modèle de conception classique consiste à obtenir le balisage HTML par le biais du contrôle associé et si une erreur s’est produite, appelez ensuite la <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> (méthode). Si aucune balise n’est retournée par le contrôle, appelez le <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> méthode, si elle n’est pas substituée pour fournir la balise spécifique, appelle la <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> méthode, qui doit contenir des informations sur le type et l’ID du contrôle.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreatePlaceHolderDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreatePlaceHolderDesignTimeHtml (string instruction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreatePlaceHolderDesignTimeHtml(string instruction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreatePlaceHolderDesignTimeHtml (instruction As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreatePlaceHolderDesignTimeHtml(System::String ^ instruction);" />
      <MemberSignature Language="F#" Value="member this.CreatePlaceHolderDesignTimeHtml : string -&gt; string" Usage="controlDesigner.CreatePlaceHolderDesignTimeHtml instruction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instruction" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instruction">A string that contains text and markup to add to the HTML output.</param>
        <summary>Provides a simple rectangular placeholder representation that displays the type and ID of the control, and also additional specified instructions or information.</summary>
        <returns>A string that contains design-time HTML markup providing information about the control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> méthode dans un concepteur de contrôles basé sur un modèle. Une chaîne est ensuite passée en tant que le `instruction` paramètre dans un appel à la <xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A> (méthode), qui fournit le balisage HTML au moment du design.  
  
 Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> propriété.  
  
 [!code-csharp[DesignerTemplateGroupSample#4](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#4)]
 [!code-vb[DesignerTemplateGroupSample#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Le modèle de conception classique consiste à obtenir le balisage HTML par le biais du contrôle associé et si une erreur s’est produite, appelez ensuite la <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> (méthode). Si aucune balise n’est retournée par le contrôle, appelez le <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> méthode, si elle n’est pas substituée pour fournir la balise spécifique, appelle la <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> méthode, qui doit contenir des informations sur le type et l’ID du contrôle.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateViewControl">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control CreateViewControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control CreateViewControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreateViewControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateViewControl () As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ CreateViewControl();" />
      <MemberSignature Language="F#" Value="abstract member CreateViewControl : unit -&gt; System.Web.UI.Control&#xA;override this.CreateViewControl : unit -&gt; System.Web.UI.Control" Usage="controlDesigner.CreateViewControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a copy of the associated control for viewing or rendering on the design surface.</summary>
        <returns>A Web server control.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindingsEnabled">
      <MemberSignature Language="C#" Value="protected virtual bool DataBindingsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataBindingsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DataBindingsEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DataBindingsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DataBindingsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindingsEnabled : bool" Usage="System.Web.UI.Design.ControlDesigner.DataBindingsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether data binding is supported by the containing region for the associated control.</summary>
        <value>
          <see langword="true" />, si le conteneur pour le contrôle prend en charge la liaison de données ; dans le cas contraire, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.EditableDesignerRegion.SupportsDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="DesignerState">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.ControlDesignerState DesignerState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.ControlDesignerState DesignerState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DesignerState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DesignerState As ControlDesignerState" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Design::ControlDesignerState ^ DesignerState { System::Web::UI::Design::ControlDesignerState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignerState : System.Web.UI.Design.ControlDesignerState" Usage="System.Web.UI.Design.ControlDesigner.DesignerState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ControlDesignerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an object that is used to persist data for the associated control at design time.</summary>
        <value>A <see cref="P:System.Web.UI.Design.ControlDesigner.DesignerState" /> propriété implémente <see cref="T:System.Collections.IDictionary" /> et utilise le <see cref="T:System.ComponentModel.Design.IComponentDesignerStateService" /> pour rendre persistantes les données d’état pour le contrôle associé au moment du design.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les valeurs pour le <xref:System.Web.UI.Design.ControlDesigner.DesignerState%2A> propriété sont conservées même si l’utilisateur passe du mode Design au mode Source, recharge le document ou ferme et rouvre l’hôte de conception.  
  
 Vous pouvez obtenir et définir des valeurs dans l’objet retourné comme vous le feriez dans un IDictionary objet, avec les valeurs sont automatiquement conservée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeElementView">
      <MemberSignature Language="C#" Value="protected object DesignTimeElementView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DesignTimeElementView" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DesignTimeElementView" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DesignTimeElementView As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ DesignTimeElementView { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeElementView : obj" Usage="System.Web.UI.Design.ControlDesigner.DesignTimeElementView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Error: This property can no longer be referenced, and is included to support existing compiled applications. The design-time element view architecture is no longer used. http://go.microsoft.com/fwlink/?linkid=14202", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the view-control object for the control designer.</summary>
        <value>
          <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Le <xref:System.Web.UI.Design.ControlDesigner.DesignTimeElementView%2A> propriété est obsolète et il n’existe aucune solution de remplacement pour la fonctionnalité.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeHtmlRequiresLoadComplete">
      <MemberSignature Language="C#" Value="public virtual bool DesignTimeHtmlRequiresLoadComplete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeHtmlRequiresLoadComplete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DesignTimeHtmlRequiresLoadComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeHtmlRequiresLoadComplete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeHtmlRequiresLoadComplete : bool" Usage="System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is SetViewFlags(ViewFlags.DesignTimeHtmlRequiresLoadComplete, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the design host must finish loading before the <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method can be called.</summary>
        <value>
          <see langword="true" />, si le chargement doit être terminé avant le <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> méthode peut être appelée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’implémentation par défaut de la <xref:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete%2A> propriété renvoie `false`.  
  
> [!NOTE]
>  La propriété <xref:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete%2A> est obsolète. Utilisez la <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> méthode pour les fonctionnalités de Concepteur de contrôles équivalentes.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ViewFlags" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetBounds();" />
      <MemberSignature Language="F#" Value="member this.GetBounds : unit -&gt; System.Drawing.Rectangle" Usage="controlDesigner.GetBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the coordinates of the rectangle representing the boundaries for the control as displayed on the design surface.</summary>
        <returns>A <see cref="T:System.Drawing.Rectangle" /> object representing the boundaries for the control on the design surface relative to the control, not the document.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Design.IControlDesignerView.GetBounds(System.Web.UI.Design.DesignerRegion)" />
        <altmember cref="M:System.Web.UI.Design.DesignerRegion.GetBounds" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves the HTML markup that is used to represent the control at design time.</summary>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual string GetDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDesignTimeHtml();" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeHtml : unit -&gt; string&#xA;override this.GetDesignTimeHtml : unit -&gt; string" Usage="controlDesigner.GetDesignTimeHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the HTML markup that is used to represent the control at design time.</summary>
        <returns>The HTML markup used to represent the control at design time.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> méthode dans un concepteur de contrôles personnalisés. Si la propriété de texte pour le contrôle associé est vide, le <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> les appels de méthode le <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> (méthode). Dans le cas contraire, la <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> méthode crée et restitue un contrôle Hyperlink.  
  
 [!code-csharp[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/CS/SimpleControlDesigner.cs#5)]
 [!code-vb[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/VB/simplecontroldesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Si vous créez un contrôle conteneur personnalisé, assurez-vous que vous restituez le contrôle et tous les contrôles enfants au moment du design, indépendamment du fait que la <see cref="P:System.Web.UI.Control.Visible" /> est définie sur <see langword="true" /> ou <see langword="false" />.</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual string GetDesignTimeHtml (System.Web.UI.Design.DesignerRegionCollection regions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDesignTimeHtml(class System.Web.UI.Design.DesignerRegionCollection regions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDesignTimeHtml (regions As DesignerRegionCollection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDesignTimeHtml(System::Web::UI::Design::DesignerRegionCollection ^ regions);" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeHtml : System.Web.UI.Design.DesignerRegionCollection -&gt; string&#xA;override this.GetDesignTimeHtml : System.Web.UI.Design.DesignerRegionCollection -&gt; string" Usage="controlDesigner.GetDesignTimeHtml regions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regions" Type="System.Web.UI.Design.DesignerRegionCollection" />
      </Parameters>
      <Docs>
        <param name="regions">A collection of control designer regions for the associated control.</param>
        <summary>Retrieves the HTML markup to display the control and populates the collection with the current control designer regions.</summary>
        <returns>The design-time HTML markup for the associated control, including all control designer regions.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’hôte de conception appelle la <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> méthode pour obtenir le balisage HTML au moment du design et la liste actuelle du contrôle de zones du concepteur. À l’aide de l’aide de DesignerRegionCollection, l’hôte de conception peut alors demander le balisage pour chaque zone du concepteur contrôles modifiables.  
  
 Le <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> méthode est fournie pour un concepteur de contrôles dérivés, tels que les <xref:System.Web.UI.Design.WebControls.GridViewDesigner> (classe), qui doit traiter le contenu de la région avant d’appeler le <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer à l’aide du balisage HTML la <xref:System.Web.UI.Design.DesignerRegionCollection> collection.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#5](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#5)]
 [!code-vb[SimpleMultiRegionControlDesigner#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.WebControls.GridViewDesigner" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeResourceProviderFactory">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.DesignTimeResourceProviderFactory GetDesignTimeResourceProviderFactory (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.DesignTimeResourceProviderFactory GetDesignTimeResourceProviderFactory(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDesignTimeResourceProviderFactory (serviceProvider As IServiceProvider) As DesignTimeResourceProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::DesignTimeResourceProviderFactory ^ GetDesignTimeResourceProviderFactory(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetDesignTimeResourceProviderFactory : IServiceProvider -&gt; System.Web.UI.Design.DesignTimeResourceProviderFactory" Usage="System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignTimeResourceProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> object that can retrieve global and local services.</param>
        <summary>Returns an appropriate resource provider factory, depending on the globalization settings in the configuration file for the site.</summary>
        <returns>A <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> object, if any are defined in the configuration file; otherwise, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une fabrique de fournisseurs de ressources crée des fournisseurs de ressources et les writers de ressources, selon les paramètres actuels dans la section System.Web/Globalization du fichier de configuration (soit les fichiers Machine.config ou Web.config pour les ressources locales et globales ). Si aucun paramètre de globalisation n’est trouvées, le `serviceProvider` paramètre est utilisé pour créer un <xref:System.Web.UI.Design.DesignTimeResourceProviderFactory> de l’objet à l’aide de l’implémentation par défaut pour l’hôte de conception.  
  
 En règle générale, les développeurs de contrôles ne doit pas remplacer le <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" />
        <altmember cref="T:System.Web.Compilation.ResourceProviderFactory" />
        <altmember cref="T:System.Web.Compilation.IResourceProvider" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public virtual string GetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEditableDesignerRegionContent (region As EditableDesignerRegion) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetEditableDesignerRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region);" />
      <MemberSignature Language="F#" Value="abstract member GetEditableDesignerRegionContent : System.Web.UI.Design.EditableDesignerRegion -&gt; string&#xA;override this.GetEditableDesignerRegionContent : System.Web.UI.Design.EditableDesignerRegion -&gt; string" Usage="controlDesigner.GetEditableDesignerRegionContent region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
      </Parameters>
      <Docs>
        <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object to get content for.</param>
        <summary>Returns the content for an editable region of the design-time view of the associated control.</summary>
        <returns>The persisted content for the region, if the control designer supports editable regions; otherwise, an empty string ("").</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’implémentation par défaut de la <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A> méthode retourne une chaîne vide (« »).  
  
 Les classes dérivées de la <xref:System.Web.UI.Design.ControlDesigner> classe permettre prendre en charge la modification basée sur les région sur l’aire de conception et remplacez le <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A> méthode pour retourner le contenu de la région spécifiée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment obtenir une référence à l’hôte de conception, puis utilise la référence pour créer un <xref:System.Web.UI.Design.ControlParser> objet qui crée le balisage HTML de `region` et son contenu.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#6](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#6)]
 [!code-vb[SimpleMultiRegionControlDesigner#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEmptyDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected virtual string GetEmptyDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetEmptyDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetEmptyDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetEmptyDesignTimeHtml();" />
      <MemberSignature Language="F#" Value="abstract member GetEmptyDesignTimeHtml : unit -&gt; string&#xA;override this.GetEmptyDesignTimeHtml : unit -&gt; string" Usage="controlDesigner.GetEmptyDesignTimeHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the HTML markup to represent a Web server control at design time that will have no visual representation at run time.</summary>
        <returns>The HTML markup used to represent a control at design time that would otherwise have no visual representation. The default is a rectangle that contains the type and ID of the component.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le comportement par défaut de la <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> méthode consiste à retourner une chaîne qui contient le nom du composant. Le <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> méthode doit être appelée dans l’implémentation de la <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> méthode lorsqu’il n’existe pas de balisage HTML au moment du design.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> méthode dans un concepteur de contrôles personnalisés. Si le `Text` propriété pour le contrôle associé est vide, le <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> les appels de méthode <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> méthode. Dans le cas contraire, le <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> méthode crée et restitue un `Hyperlink` contrôle.  
  
 [!code-csharp[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/CS/SimpleControlDesigner.cs#5)]
 [!code-vb[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/VB/simplecontroldesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected virtual string GetErrorDesignTimeHtml (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetErrorDesignTimeHtml(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetErrorDesignTimeHtml (e As Exception) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetErrorDesignTimeHtml(Exception ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GetErrorDesignTimeHtml : Exception -&gt; string&#xA;override this.GetErrorDesignTimeHtml : Exception -&gt; string" Usage="controlDesigner.GetErrorDesignTimeHtml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">The exception that occurred.</param>
        <summary>Retrieves the HTML markup that provides information about the specified exception.</summary>
        <returns>The design-time HTML markup for the specified exception.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A> méthode est généralement appelée, si une exception est levée dans le <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment générer le balisage HTML d’au moment du design pour le contrôle lorsqu’une erreur se produit et appeler le <xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A> (méthode).  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginDesigner#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginDesigner/CS/LoginDesigner.cs#2)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginDesigner#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginDesigner/VB/LoginDesigner.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Le modèle de conception classique consiste à obtenir le balisage HTML par le biais du contrôle associé et si une erreur s’est produite, appelez ensuite la <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> (méthode). Si aucune balise n’est retournée par le contrôle, appelez le <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> méthode, si elle n’est pas substituée pour fournir la balise spécifique, appelle la <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> méthode, qui doit contenir des informations sur le type et l’ID du contrôle.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml" />
      </Docs>
    </Member>
    <Member MemberName="GetPersistenceContent">
      <MemberSignature Language="C#" Value="public virtual string GetPersistenceContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPersistenceContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPersistenceContent () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPersistenceContent();" />
      <MemberSignature Language="F#" Value="abstract member GetPersistenceContent : unit -&gt; string&#xA;override this.GetPersistenceContent : unit -&gt; string" Usage="controlDesigner.GetPersistenceContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the persistable inner HTML markup of the control at design time.</summary>
        <returns>A string representing the persistable inner HTML markup for the associated control. The default is <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Remplacer la <see cref="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent" /> méthode pour fournir une gestion personnalisée de la persistance de contenu interne pour l’hôte de conception.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ControlPersister" />
      </Docs>
    </Member>
    <Member MemberName="GetPersistInnerHtml">
      <MemberSignature Language="C#" Value="public virtual string GetPersistInnerHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPersistInnerHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPersistInnerHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPersistInnerHtml();" />
      <MemberSignature Language="F#" Value="abstract member GetPersistInnerHtml : unit -&gt; string&#xA;override this.GetPersistInnerHtml : unit -&gt; string" Usage="controlDesigner.GetPersistInnerHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is GetPersistenceContent(). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the persistable inner HTML markup of the control.</summary>
        <returns>The persistable inner HTML markup of the control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Le <xref:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml%2A> méthode est obsolète. Utilisez la <xref:System.Web.UI.Design.ControlDesigner.GetPersistenceContent%2A> méthode pour les fonctionnalités de Concepteur de contrôles équivalentes.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetViewRendering">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves an object that contains the design-time markup for the content and regions of the associated control.</summary>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public System.Web.UI.Design.ViewRendering GetViewRendering ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.Design.ViewRendering GetViewRendering() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViewRendering () As ViewRendering" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::Design::ViewRendering ^ GetViewRendering();" />
      <MemberSignature Language="F#" Value="member this.GetViewRendering : unit -&gt; System.Web.UI.Design.ViewRendering" Usage="controlDesigner.GetViewRendering " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves an object that contains the design-time markup for the content and regions of the associated control.</summary>
        <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ViewRendering GetViewRendering (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ViewRendering GetViewRendering(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ViewRendering ^ GetViewRendering(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="static member GetViewRendering : System.Web.UI.Control -&gt; System.Web.UI.Design.ViewRendering" Usage="System.Web.UI.Design.ControlDesigner.GetViewRendering control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">A <see cref="T:System.Web.UI.Control" /> object.</param>
        <summary>Retrieves an object that contains the design-time markup for the content and regions of the specified control.</summary>
        <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ViewRendering GetViewRendering (System.Web.UI.Design.ControlDesigner designer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ViewRendering GetViewRendering(class System.Web.UI.Design.ControlDesigner designer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Design.ControlDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetViewRendering (designer As ControlDesigner) As ViewRendering" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ViewRendering ^ GetViewRendering(System::Web::UI::Design::ControlDesigner ^ designer);" />
      <MemberSignature Language="F#" Value="static member GetViewRendering : System.Web.UI.Design.ControlDesigner -&gt; System.Web.UI.Design.ViewRendering" Usage="System.Web.UI.Design.ControlDesigner.GetViewRendering designer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
      </Parameters>
      <Docs>
        <param name="designer">A control designer that derives from <see cref="T:System.Web.UI.Design.ControlDesigner" />.</param>
        <summary>Retrieves an object that contains the design-time markup for the content and regions of the associated control for the specified control designer.</summary>
        <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="HidePropertiesInTemplateMode">
      <MemberSignature Language="C#" Value="protected internal virtual bool HidePropertiesInTemplateMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidePropertiesInTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property HidePropertiesInTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HidePropertiesInTemplateMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HidePropertiesInTemplateMode : bool" Usage="System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the properties of the associated control are hidden when the control is in template mode.</summary>
        <value>
          <see langword="true" />, si les propriétés du contrôle associé sont masquées lorsque le contrôle est en mode de modèle ; dans le cas contraire, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La propriété ID n’est jamais masquée. Le <xref:System.Web.UI.Design.ControlDesigner.PreFilterProperties%2A> utilise le <xref:System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode%2A> propriété pour déterminer si les propriétés, autres que la propriété ID, doivent être masquées dans les grilles de propriétés pendant que le contrôle est en mode de modification de modèle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public virtual string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.Design.ControlDesigner.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the ID string for the control.</summary>
        <value>La chaîne d’ID pour le contrôle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ControlDesigner.ID%2A> propriété est utilisée en interne dans le Concepteur de contrôles et en interaction avec la fenêtre Propriétés. Le <xref:System.Web.UI.Design.ControlDesigner.ID%2A> propriété occulte l’exécution <xref:System.Web.UI.Control.ID%2A> propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.Initialize : System.ComponentModel.IComponent -&gt; unit" Usage="controlDesigner.Initialize component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">The control being designed.</param>
        <summary>Initializes the control designer and loads the specified component.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> méthode est appelée par l’hôte de conception pour effectuer les actions suivantes :  
  
-   Charger le Concepteur de contrôles avec le composant de conception.  
  
-   Configurer la vue sur le contrôle à l’aide de la <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> (méthode).  
  
-   Vérifiez que le contrôle associé est du type approprié.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser une classe de contrôle et une classe de Concepteur de contrôles qui substituent les <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> méthode pour initialiser les variables internes.  
  
 [!code-csharp[System.Web.UI.Design.ControlDesigner_Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/CS/SimpleControlDesigner.cs#1)]
 [!code-vb[System.Web.UI.Design.ControlDesigner_Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/VB/simplecontroldesigner.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="InTemplateMode">
      <MemberSignature Language="C#" Value="protected bool InTemplateMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool InTemplateMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InTemplateMode : bool" Usage="System.Web.UI.Design.ControlDesigner.InTemplateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the control is in either template viewing or editing mode in the design host. The <see cref="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" /> property is read-only.</summary>
        <value>
          <see langword="true" />, si le contrôle est dans l’affichage ou le mode ; édition de modèle dans le cas contraire, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un contrôle serveur Web est en mode modèle lorsqu’un modèle en lecture seule est actuellement en cours d’affichage ou un modèle modifiable est en cours de modification dans un hôte de conception tels que [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)].  
  
 Le <xref:System.Web.UI.Design.ControlDesigner> classe fournit une valeur par défaut <xref:System.Web.UI.Design.ViewEventHandler> objet à mettre à jour le <xref:System.Web.UI.Design.ControlDesigner.InTemplateMode%2A> valeur lorsque le mode modèles change pour le contrôle associé. Les concepteurs personnalisés qui sont dérivés de la <xref:System.Web.UI.Design.TemplatedControlDesigner> classe peut substituer le <xref:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged%2A> méthode pour effectuer un traitement supplémentaire lorsque des changements de mode pour un contrôle dans l’hôte de conception de modification de modèle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />
        <altmember cref="M:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Invalidates the control as displayed on the design surface and causes the design host to call the <see cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" /> method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appel de <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> méthode appelle également <xref:System.Web.UI.Design.ControlDesigner.Invalidate%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="controlDesigner.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invalidates the whole area of the control that is displayed on the design surface and signals the control designer to redraw the control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour activer le Concepteur de contrôles gérer les événements de dessin, utilisez la <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> méthode dans le <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> (méthode).  
  
 Le <xref:System.Web.UI.Design.ControlDesigner.Invalidate%2A> méthode fournit à l’hôte de conception permet d’indiquer le Concepteur de contrôles de redessiner le contrôle. Essentiellement, cela revient à appeler <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> (méthode), car elle force l’ensemble du contrôle est redessiné.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Invalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Rectangle -&gt; unit" Usage="controlDesigner.Invalidate rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> object that represents the area to invalidate, relative to the upper-left corner of the control.</param>
        <summary>Invalidates the specified area of the control that is displayed on the design surface and signals the control designer to redraw the control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour activer le Concepteur de contrôles gérer les événements de dessin, utilisez la <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> méthode dans le <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> (méthode).  
  
 Le <xref:System.Web.UI.Design.ControlDesigner.Invalidate%2A> méthode fournit à l’hôte de conception permet d’indiquer le Concepteur de contrôles de redessiner une partie spécifique du contrôle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeTransactedChange">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeTransactedChange(class System.ComponentModel.IComponent component, class System.Web.UI.Design.TransactedChangeCallback callback, object context, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeTransactedChange (component As IComponent, callback As TransactedChangeCallback, context As Object, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeTransactedChange(System::ComponentModel::IComponent ^ component, System::Web::UI::Design::TransactedChangeCallback ^ callback, System::Object ^ context, System::String ^ description);" />
      <MemberSignature Language="F#" Value="static member InvokeTransactedChange : System.ComponentModel.IComponent * System.Web.UI.Design.TransactedChangeCallback * obj * string -&gt; unit" Usage="System.Web.UI.Design.ControlDesigner.InvokeTransactedChange (component, callback, context, description)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component">The control associated with the control designer.</param>
        <param name="callback">A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
        <param name="context">An object that contains the argument for callback.</param>
        <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
        <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’implémentation de la <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> méthode avertit l’hôte de conception, qui est déterminée par le <xref:System.Web.UI.Control.Site%2A> propriété de `component`, une modification se produit dans le contrôle associé et, si la modification n’est pas annulée par l’hôte de conception appelle la spécifié `callback` à l’aide de la `context`, puis avertit l’hôte de conception que la modification a été effectuée.  
  
 Si l’hôte de conception ou le contrôle associé lève statique `Canceled` champ d’exception d’une <xref:System.ComponentModel.Design.CheckoutException> exception, la transaction est annulée sans appel `callback`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer un contrôle composite simple avec un <xref:System.Web.UI.WebControls.Label> et un <xref:System.Web.UI.WebControls.TextBox> (contrôle), ainsi que leurs propriétés pour définir le texte d’étiquette et également le <xref:System.Web.UI.WebControls.TextBox.Text%2A>, <xref:System.Web.UI.WebControls.WebControl.Width%2A>, et <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> propriétés de le <xref:System.Web.UI.WebControls.TextBox> contrôle. Une classe de Concepteur de contrôles associée crée trois <xref:System.ComponentModel.Design.DesignerActionMethodItem> commandes, chacun d’eux définit deux propriétés sur le contrôle. À l’aide de la <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> (méthode), vous pouvez utiliser la fonctionnalité d’annulation de l’hôte de conception, telles que [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], pour restaurer chaque transaction terminée en tant qu’unité.  
  
 [!code-csharp[DesignerInvokeTransactedChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerInvokeTransactedChange/CS/InvokeTransactedChangeSample.cs#1)]
 [!code-vb[DesignerInvokeTransactedChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerInvokeTransactedChange/VB/InvokeTransactedChangeSample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="component" /> is <see langword="null" />.  -or-  <paramref name="callback" /> is <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.CheckoutException" />
        <altmember cref="T:System.Web.UI.Design.TransactedChangeCallback" />
      </Docs>
    </Member>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeTransactedChange(class System.ComponentModel.IComponent component, class System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeTransactedChange (component As IComponent, callback As TransactedChangeCallback, context As Object, description As String, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeTransactedChange(System::ComponentModel::IComponent ^ component, System::Web::UI::Design::TransactedChangeCallback ^ callback, System::Object ^ context, System::String ^ description, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="static member InvokeTransactedChange : System.ComponentModel.IComponent * System.Web.UI.Design.TransactedChangeCallback * obj * string * System.ComponentModel.MemberDescriptor -&gt; unit" Usage="System.Web.UI.Design.ControlDesigner.InvokeTransactedChange (component, callback, context, description, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="component">The control associated with the control designer.</param>
        <param name="callback">A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
        <param name="context">An object that contains the argument for callback.</param>
        <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
        <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> object (typically, either an <see cref="T:System.ComponentModel.EventDescriptor" /> or a <see cref="T:System.ComponentModel.PropertyDescriptor" /> object) that describes the member of the associated control that is being invoked as part of the transaction.</param>
        <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’implémentation de la <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> méthode avertit l’hôte de conception, qui est déterminée par le <xref:System.Web.UI.Control.Site%2A> propriété de `component`, qui a une modification est apportée à l’objet `member` (propriété ou méthode) du contrôle associé et, si le modification n’est pas annulée par l’hôte de conception, appelle spécifié `callback` à l’aide de la `context` comme argument, puis avertit l’hôte de conception que la modification a été effectuée.  
  
 Si l’hôte de conception ou le contrôle associé lève statique `Canceled` champ d’exception d’une <xref:System.ComponentModel.Design.CheckoutException> exception, la transaction est annulée sans appel `callback`.  
  
   
  
## Examples  
 Pour obtenir un exemple de code, consultez <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%28System.ComponentModel.IComponent%2CSystem.Web.UI.Design.TransactedChangeCallback%2CSystem.Object%2CSystem.String%29>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="component" /> is <see langword="null" />.  -or-  <paramref name="callback" /> is <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Web.UI.Design.TransactedChangeCallback" />
      </Docs>
    </Member>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (IServiceProvider serviceProvider, System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeTransactedChange(class System.IServiceProvider serviceProvider, class System.ComponentModel.IComponent component, class System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.IServiceProvider,System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeTransactedChange (serviceProvider As IServiceProvider, component As IComponent, callback As TransactedChangeCallback, context As Object, description As String, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeTransactedChange(IServiceProvider ^ serviceProvider, System::ComponentModel::IComponent ^ component, System::Web::UI::Design::TransactedChangeCallback ^ callback, System::Object ^ context, System::String ^ description, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="static member InvokeTransactedChange : IServiceProvider * System.ComponentModel.IComponent * System.Web.UI.Design.TransactedChangeCallback * obj * string * System.ComponentModel.MemberDescriptor -&gt; unit" Usage="System.Web.UI.Design.ControlDesigner.InvokeTransactedChange (serviceProvider, component, callback, context, description, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> object representing the design host that provides control designer services for the associated control.</param>
        <param name="component">The control associated with the control designer.</param>
        <param name="callback">A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
        <param name="context">An object that contains the argument for callback.</param>
        <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
        <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> object (typically either an <see cref="T:System.ComponentModel.EventDescriptor" /> or a <see cref="T:System.ComponentModel.PropertyDescriptor" /> object) that describes the member of the associated control that is being invoked as part of the transaction.</param>
        <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’implémentation de la <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> méthode avertit l’hôte de conception, qui est représentée par `serviceProvider`, qui a une modification est apportée à l’objet `member` (propriété ou méthode) du contrôle associé et, si la modification n’est pas annulée par le hôte de conception, appelle spécifié `callback` à l’aide de la `context` comme argument, puis avertit l’hôte de conception que la modification a été effectuée.  
  
 Si l’hôte de conception ou le contrôle associé lève statique `Canceled` champ d’exception d’une <xref:System.ComponentModel.Design.CheckoutException> exception, la transaction est annulée sans appel `callback`.  
  
   
  
## Examples  
 Pour obtenir un exemple de code, consultez <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="component" /> is <see langword="null" />.  -or-  <paramref name="callback" /> is <see langword="null" />.  -or-  <paramref name="serviceProvider" /> is <see langword="null" />.</exception>
        <altmember cref="T:System.IServiceProvider" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Web.UI.Design.TransactedChangeCallback" />
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool with get, set" Usage="System.Web.UI.Design.ControlDesigner.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is to use Tag.SetDirty() and Tag.IsDirty. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the Web server control has been marked as changed.</summary>
        <value>
          <see langword="true" />, si le contrôle serveur Web a été modifié depuis sa dernière persistant ou chargé ; dans le cas contraire, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  La propriété <xref:System.Web.UI.Design.ControlDesigner.IsDirty%2A> est obsolète. Utilisez le <xref:System.Web.UI.Design.IControlDesignerTag.IsDirty%2A> propriété et la <xref:System.Web.UI.Design.IControlDesignerTag.SetDirty%2A> méthode sur le <xref:System.Web.UI.Design.ControlDesigner.Tag%2A> propriété pour les fonctionnalités de Concepteur de contrôles équivalentes.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.IControlDesignerTag.IsDirty" />
        <altmember cref="M:System.Web.UI.Design.IControlDesignerTag.SetDirty(System.Boolean)" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
      </Docs>
    </Member>
    <Member MemberName="IsPropertyBound">
      <MemberSignature Language="C#" Value="public bool IsPropertyBound (string propName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsPropertyBound(string propName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.IsPropertyBound(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsPropertyBound (propName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsPropertyBound(System::String ^ propName);" />
      <MemberSignature Language="F#" Value="member this.IsPropertyBound : string -&gt; bool" Usage="controlDesigner.IsPropertyBound propName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is DataBindings.Contains(string). The DataBindings collection allows more control of the databindings associated with the control. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propName">The property to test for data binding.</param>
        <summary>Retrieves a value indicating whether the specified property on the associated control is data-bound.</summary>
        <returns>
          <see langword="true" />, if the property is data-bound; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Le <xref:System.Web.UI.Design.ControlDesigner.IsPropertyBound%2A> méthode est obsolète. Utilisez le <xref:System.Web.UI.DataBindingCollection.Contains%2A> méthode sur le <xref:System.Web.UI.Design.HtmlControlDesigner.DataBindings%2A> propriété pour les fonctionnalités de Concepteur de contrôles équivalentes.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataBindingCollection.Contains(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Localize">
      <MemberSignature Language="C#" Value="public void Localize (System.Web.UI.Design.IDesignTimeResourceWriter resourceWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Localize(class System.Web.UI.Design.IDesignTimeResourceWriter resourceWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Localize (resourceWriter As IDesignTimeResourceWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Localize(System::Web::UI::Design::IDesignTimeResourceWriter ^ resourceWriter);" />
      <MemberSignature Language="F#" Value="member this.Localize : System.Web.UI.Design.IDesignTimeResourceWriter -&gt; unit" Usage="controlDesigner.Localize resourceWriter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceWriter" Type="System.Web.UI.Design.IDesignTimeResourceWriter" />
      </Parameters>
      <Docs>
        <param name="resourceWriter">An object derived from the <see cref="T:System.Web.UI.Design.IDesignTimeResourceWriter" /> object that is used to write resources into the design-time response stream.</param>
        <summary>Uses the provided resource writer to persist the localizable properties of the associated control to a resource in the design host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ControlDesigner.Localize%2A> méthode est appelée par l’hôte de conception pour créer des entrées de ressource pour chaque propriété qui est marquée avec un <xref:System.ComponentModel.LocalizableAttribute> objet et des propriétés qui utilisent une expression de ressource explicite en tant que valeur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAutoFormatApplied">
      <MemberSignature Language="C#" Value="public virtual void OnAutoFormatApplied (System.Web.UI.Design.DesignerAutoFormat appliedAutoFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAutoFormatApplied(class System.Web.UI.Design.DesignerAutoFormat appliedAutoFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnAutoFormatApplied (appliedAutoFormat As DesignerAutoFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnAutoFormatApplied(System::Web::UI::Design::DesignerAutoFormat ^ appliedAutoFormat);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoFormatApplied : System.Web.UI.Design.DesignerAutoFormat -&gt; unit&#xA;override this.OnAutoFormatApplied : System.Web.UI.Design.DesignerAutoFormat -&gt; unit" Usage="controlDesigner.OnAutoFormatApplied appliedAutoFormat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appliedAutoFormat" Type="System.Web.UI.Design.DesignerAutoFormat" />
      </Parameters>
      <Docs>
        <param name="appliedAutoFormat">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object that defines a style.</param>
        <summary>Called when a predefined, automatic formatting scheme has been applied to the associated control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied%2A> méthode est appelée après une <xref:System.Web.UI.Design.DesignerAutoFormat> objet a appliqué un format prédéfini pour le contrôle associé. A <xref:System.Web.UI.Design.DesignerAutoFormat> objet définit les mise en forme schéma automatique nom et du style de paramètres sont appliqués au contrôle.  
  
 Les classes dérivées de la <xref:System.Web.UI.Design.ControlDesigner> classe remplacement le <xref:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied%2A> méthode pour effectuer un traitement supplémentaire lorsqu’un schéma de mise en forme automatique est appliqué au contrôle associé.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.AutoFormats" />
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormat" />
      </Docs>
    </Member>
    <Member MemberName="OnBindingsCollectionChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingsCollectionChanged (string propName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingsCollectionChanged(string propName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBindingsCollectionChanged (propName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBindingsCollectionChanged(System::String ^ propName);" />
      <MemberSignature Language="F#" Value="override this.OnBindingsCollectionChanged : string -&gt; unit" Usage="controlDesigner.OnBindingsCollectionChanged propName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is to handle the Changed event on the DataBindings collection. The DataBindings collection allows more control of the databindings associated with the control. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propName">The property to test for changes in its bindings collection.</param>
        <summary>Called when the data-binding collection changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged%2A> méthode est appelée lorsque la collection de liaison de données a été modifiée par un appelant externe.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged%2A> méthode est obsolète. Utilisez le <xref:System.Web.UI.DataBindingCollection.Changed> événement sur le <xref:System.Web.UI.Design.HtmlControlDesigner.DataBindings%2A> collection pour les fonctionnalités de Concepteur de contrôles équivalentes.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.DataBindingCollection.Changed" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (System.Web.UI.Design.DesignerRegionMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.Web.UI.Design.DesignerRegionMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As DesignerRegionMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(System::Web::UI::Design::DesignerRegionMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : System.Web.UI.Design.DesignerRegionMouseEventArgs -&gt; unit&#xA;override this.OnClick : System.Web.UI.Design.DesignerRegionMouseEventArgs -&gt; unit" Usage="controlDesigner.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.Design.DesignerRegionMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> object that specifies the location and, possibly, the control designer region that the user clicked.</param>
        <summary>Called by the design host when the user clicks the associated control at design time.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent> événement est déclenché par l’hôte de conception pour certaines actions effectuées sur un contrôle dans l’aire de conception. Par exemple, un événement est déclenché pour les conditions suivantes :  
  
-   L’utilisateur clique sur le contrôle.  
  
-   Le Concepteur de contrôles peint sur l’aire de conception.  
  
-   L’utilisateur entre ou sort du mode pour le contrôle d’édition de modèle.  
  
 Le <xref:System.Web.UI.Design.ControlDesigner> classe fournit un délégué par défaut pour gérer les <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent?displayProperty=nameWithType> événement. Les classes dérivées de <xref:System.Web.UI.Design.ControlDesigner> remplacer le <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> méthode pour traiter les événements qui sont déclenchés lorsque l’utilisateur clique sur un contrôle.  
  
 Le <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> méthode permet aux classes dérivées de gérer l’événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 L’implémentation par défaut de la <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> méthode est retournée sans effectuer de traitement.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un gestionnaire pour le <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> événement dans une zone interactive du contrôle et utiliser un <xref:System.Web.UI.Design.DesignerRegionMouseEventArgs> objet pour identifier la région que l’utilisateur clique.  
  
 Cet exemple de code fait partie d’un exemple de code plus grand pour la <xref:System.Web.UI.Design.EditableDesignerRegion> classe.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#4](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#4)]
 [!code-vb[SimpleMultiRegionControlDesigner#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Remplacer la <see cref="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)" /> méthode dans une classe dérivant de la <see cref="T:System.Web.UI.Design.ControlDesigner" /> classe pour gérer au moment du design les événements click sur le contrôle. Si <paramref name="e" /> n’est ne pas null, la région où vous avez cliquée, si elle existe, est spécifié dans le <see cref="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Region" /> propriété.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ViewEventHandler" />
        <altmember cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" />
        <altmember cref="T:System.Web.UI.Design.DesignerRegion" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public virtual void OnComponentChanged (object sender, System.ComponentModel.Design.ComponentChangedEventArgs ce);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanged(object sender, class System.ComponentModel.Design.ComponentChangedEventArgs ce) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnComponentChanged (sender As Object, ce As ComponentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnComponentChanged(System::Object ^ sender, System::ComponentModel::Design::ComponentChangedEventArgs ^ ce);" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanged : obj * System.ComponentModel.Design.ComponentChangedEventArgs -&gt; unit&#xA;override this.OnComponentChanged : obj * System.ComponentModel.Design.ComponentChangedEventArgs -&gt; unit" Usage="controlDesigner.OnComponentChanged (sender, ce)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="ce" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">The source of the event.</param>
        <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data.</param>
        <summary>Called when the associated control changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> méthode est appelée lorsqu’une propriété sur le contrôle associé est modifiée. Il permet à l’implémenteur d’effectuer tout traitement qui peut être requise après une modification de propriété. Appel de la <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> méthode provoque l’hôte de conception appeler le <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> (méthode). L’implémentation de base de la <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> méthode conserve également le contrôle dans le balisage de page.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Remplacer la <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> méthode pour fournir un traitement supplémentaire avant de rendre le contrôle et avant d’actualiser le balisage HTML au moment du design.  Lors de la substitution du <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> méthode dans une classe dérivée, assurez-vous que vous appelez le <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> méthode pour la classe de base afin que les délégués inscrits reçoivent l’événement.</para>
        </block>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanging">
      <MemberSignature Language="C#" Value="public virtual void OnComponentChanging (object sender, System.ComponentModel.Design.ComponentChangingEventArgs ce);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanging(object sender, class System.ComponentModel.Design.ComponentChangingEventArgs ce) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnComponentChanging (sender As Object, ce As ComponentChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnComponentChanging(System::Object ^ sender, System::ComponentModel::Design::ComponentChangingEventArgs ^ ce);" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanging : obj * System.ComponentModel.Design.ComponentChangingEventArgs -&gt; unit&#xA;override this.OnComponentChanging : obj * System.ComponentModel.Design.ComponentChangingEventArgs -&gt; unit" Usage="controlDesigner.OnComponentChanging (sender, ce)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="ce" Type="System.ComponentModel.Design.ComponentChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">The object that is the source of the event.</param>
        <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data.</param>
        <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event for the associated control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque soit la <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> ou <xref:System.Web.UI.Design.ControlDesigner.Localize%2A> méthode est appelée, le <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging> événement se produit avant que des modifications sont apportées au contrôle associé. Une fois les modifications terminées, la <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> méthode se produit.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)" />
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnControlResize">
      <MemberSignature Language="C#" Value="protected virtual void OnControlResize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnControlResize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnControlResize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnControlResize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnControlResize();" />
      <MemberSignature Language="F#" Value="abstract member OnControlResize : unit -&gt; unit&#xA;override this.OnControlResize : unit -&gt; unit" Usage="controlDesigner.OnControlResize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is OnComponentChanged(). OnComponentChanged is called when any property of the control is changed. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the associated Web server control has been resized in the design host at design time.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Le <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> méthode est obsolète. Utilisez la <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> méthode pour les fonctionnalités de Concepteur de contrôles équivalentes.  
  
 Le <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> méthode généralement est appelée uniquement par l’environnement au moment du design lorsqu’une action utilisateur entraîne le contrôle serveur Web associé doit être redimensionné. Le <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> méthode peut être appelée plusieurs fois pendant une opération de redimensionnement pour afficher la taille mise à jour du contrôle avant que le redimensionnement est terminé. Les propriétés de largeur et la hauteur du contrôle sont mises à jour avant la <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> méthode est appelée.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="controlDesigner.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> object that specifies the graphics and rectangle boundaries used to draw the control.</param>
        <summary>Called when the control designer draws the associated control on the design surface, if the <see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" /> value is <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent> événement est déclenché par l’hôte de conception pour certaines actions effectuées sur un contrôle dans l’aire de conception. Par exemple, un événement est déclenché pour les conditions suivantes :  
  
-   L’utilisateur clique sur le contrôle.  
  
-   La conception hôte demandes balisage HTML pour restituer le contrôle associé sur l’aire de conception.  
  
-   L’utilisateur entre ou sort du mode pour le contrôle d’édition de modèle.  
  
 Le <xref:System.Web.UI.Design.ControlDesigner> classe fournit un délégué par défaut pour gérer les <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent?displayProperty=nameWithType> événement. Les classes dérivées de <xref:System.Web.UI.Design.ControlDesigner> doit définir le <xref:System.Web.UI.Design.ViewFlags.CustomPaint?displayProperty=nameWithType> valeur et remplacez le <xref:System.Web.UI.Design.ControlDesigner.OnPaint%2A> méthode pour traiter les événements qui sont déclenchés lorsque l’hôte de conception dessine le contrôle sur l’aire de conception.  
  
 Le <xref:System.Web.UI.Design.ControlDesigner.OnPaint%2A> méthode permet aux classes dérivées de gérer l’événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 L’implémentation par défaut de la <xref:System.Web.UI.Design.ControlDesigner.OnPaint%2A> méthode est retournée sans effectuer de traitement.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Remplacer la <see cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" /> méthode dans une classe dérivant de la <see cref="T:System.Web.UI.Design.ControlDesigner" /> classe pour gérer les événements de peinture d’un contrôle dans l’aire de conception. Toutefois, l’événement se produit uniquement si le <see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" /> valeur a été définie avec la <see cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" /> (méthode).</para>
        </block>
        <altmember cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />
        <altmember cref="T:System.Web.UI.Design.ViewEventHandler" />
        <altmember cref="T:System.Web.UI.Design.IControlDesignerView" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="override this.PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="controlDesigner.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">The properties for the class of the component.</param>
        <summary>Adds properties to or removes properties from the Properties grid in a design host at design time or provides new design-time properties that might correspond to properties on the associated control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Avec la <xref:System.Web.UI.Design.ControlDesigner.PreFilterProperties%2A> (méthode), vous pouvez ajouter des éléments au dictionnaire de propriétés qu’un concepteur de contrôles expose via une <xref:System.ComponentModel.TypeDescriptor> objet.  
  
 Les clés dans le dictionnaire de propriétés sont les noms des propriétés. Les objets sont de type <xref:System.ComponentModel.PropertyDescriptor>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Vous pouvez modifier directement le dictionnaire qui est accessible via le paramètre de propriétés, ou vous pouvez la laisser inchangée. Si vous remplacez le <see cref="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" /> méthode, appelez l’implémentation de base avant d’effectuer votre propre filtrage.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaiseResizeEvent">
      <MemberSignature Language="C#" Value="public void RaiseResizeEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseResizeEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseResizeEvent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseResizeEvent();" />
      <MemberSignature Language="F#" Value="member this.RaiseResizeEvent : unit -&gt; unit" Usage="controlDesigner.RaiseResizeEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because resizing is handled by the OnComponentChanged() method. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Raises the <see cref="M:System.Web.UI.Design.ControlDesigner.OnControlResize" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent%2A> méthode est obsolète et il n’existe aucune solution de remplacement pour cette fonctionnalité.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.Design.ControlDesigner.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is to inherit from ContainerControlDesigner instead and to use an EditableDesignerRegion. Regions allow for better control of the content in the designer. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the properties of the control are read-only at design time.</summary>
        <value>
          <see langword="true" />, si les propriétés du contrôle sont en lecture seule au moment du design ; dans le cas contraire, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.UI.Design.ControlDesigner> classe est en lecture seule, par nature. Les fonctionnalités de lecture/écriture sont fournies en ajoutant un <xref:System.Web.UI.Design.DesignerRegion> objet ou à l’aide des classes de base, telles que la <xref:System.Web.UI.Design.ContainerControlDesigner> classe.  
  
> [!NOTE]
>  La propriété <xref:System.Web.UI.Design.ControlDesigner.ReadOnly%2A> est obsolète. Dériver à partir de la <xref:System.Web.UI.Design.ContainerControlDesigner> classe à laquelle vous pouvez ajouter des zones du concepteur modifiables ou à partir de la <xref:System.Web.UI.Design.TemplatedControlDesigner> objet auquel vous pouvez créer des zones du concepteur modifiables dans les modèles de.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
        <altmember cref="T:System.Web.UI.Design.ContainerControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClone">
      <MemberSignature Language="C#" Value="public void RegisterClone (object original, object clone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClone(object original, object clone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.RegisterClone(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterClone (original As Object, clone As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClone(System::Object ^ original, System::Object ^ clone);" />
      <MemberSignature Language="F#" Value="member this.RegisterClone : obj * obj -&gt; unit" Usage="controlDesigner.RegisterClone (original, clone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Object" />
        <Parameter Name="clone" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="original">The control associated with the control designer.</param>
        <param name="clone">The cloned copy of the associated control.</param>
        <summary>Registers internal data in a cloned control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque fois qu’un élément est cloné, il peut y avoir des structures de données internes, tels que `meta:` les attributs qui doivent être inclus dans le contrôle cloné par le Concepteur de contrôles. Un développeur de pages peut ajouter `meta:` attributs dans le balisage d’un contrôle et il n’existe aucun moyen, ni une raison, à distinguer ce que ces balises pour le contrôle. Par conséquent, si votre Concepteur de contrôles offre un moyen de modifier des propriétés complexes ou des formats avant d’appliquer des modifications à une page, créez un clone du contrôle, passez le contrôle d’origine et le clone à cette <xref:System.Web.UI.Design.ControlDesigner.RegisterClone%2A> (méthode), puis, lorsque les modifications sont rendues persistantes dans la balise, tous les `meta:` attributs sont également conservés.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="original" /> is null.  -or-  <paramref name="clone" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="RootDesigner">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.WebFormsRootDesigner RootDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.WebFormsRootDesigner RootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RootDesigner As WebFormsRootDesigner" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Design::WebFormsRootDesigner ^ RootDesigner { System::Web::UI::Design::WebFormsRootDesigner ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootDesigner : System.Web.UI.Design.WebFormsRootDesigner" Usage="System.Web.UI.Design.ControlDesigner.RootDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.WebFormsRootDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the control designer for the Web Forms page that contains the associated control.</summary>
        <value>A <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> objet qui peut être utilisé au moment du design pour accéder aux composants sur la page Web Forms qui contient le contrôle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> propriété représente le Concepteur de contrôles de la page Web Forms qui contient le contrôle. Utilisez le <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> propriété pour accéder et de manipuler la page Web Forms conteneur au moment du design.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
      </Docs>
    </Member>
    <Member MemberName="SetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public virtual void SetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region, string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetEditableDesignerRegionContent (region As EditableDesignerRegion, content As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetEditableDesignerRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region, System::String ^ content);" />
      <MemberSignature Language="F#" Value="abstract member SetEditableDesignerRegionContent : System.Web.UI.Design.EditableDesignerRegion * string -&gt; unit&#xA;override this.SetEditableDesignerRegionContent : System.Web.UI.Design.EditableDesignerRegion * string -&gt; unit" Usage="controlDesigner.SetEditableDesignerRegionContent (region, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="region">An editable design region contained within the control.</param>
        <param name="content">The content to assign for the editable design region.</param>
        <summary>Specifies the content for an editable region of the control at design time.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les classes dérivées de la <xref:System.Web.UI.Design.ControlDesigner> classe permettre prendre en charge la modification basée sur les région sur l’aire de conception et remplacez le <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A> pour définir le contenu de la région spécifiée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment obtenir une référence à l’hôte de conception, puis utilise la référence pour créer un <xref:System.Web.UI.Design.ControlParser> objet qui active `content` dans une instance de la <xref:System.Web.UI.ITemplate> interface et lui affecte le <xref:System.Web.UI.ITemplate> d’instance pour le vue appropriée.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#7](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#7)]
 [!code-vb[SimpleMultiRegionControlDesigner#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
        <altmember cref="T:System.Web.UI.Design.EditableDesignerRegion" />
      </Docs>
    </Member>
    <Member MemberName="SetRegionContent">
      <MemberSignature Language="C#" Value="protected void SetRegionContent (System.Web.UI.Design.EditableDesignerRegion region, string content);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetRegionContent(class System.Web.UI.Design.EditableDesignerRegion region, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetRegionContent (region As EditableDesignerRegion, content As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region, System::String ^ content);" />
      <MemberSignature Language="F#" Value="member this.SetRegionContent : System.Web.UI.Design.EditableDesignerRegion * string -&gt; unit" Usage="controlDesigner.SetRegionContent (region, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="region">An editable design region contained within the design-time view of the control.</param>
        <param name="content">The content to assign for the editable design region.</param>
        <summary>Specifies the content for an editable region in the design-time view of the control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalement, le <xref:System.Web.UI.Design.ControlDesigner.SetRegionContent%2A> méthode n’est pas substituée dans les concepteurs dérivés. La classe de base force l’hôte de conception appeler le <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A> méthode pour la région. Remplacer la <xref:System.Web.UI.Design.ControlDesigner.SetRegionContent%2A> méthode lorsque les données personnalisées sont requises pour le contrôle avant d’appeler <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A> (méthode).  
  
 Utilisez la <xref:System.Web.UI.Design.ControlDesigner.SetRegionContent%2A> méthode pour insérer le balisage HTML dans une région du contrôle.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.IControlDesignerView.SupportsRegions" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="SetViewFlags">
      <MemberSignature Language="C#" Value="protected void SetViewFlags (System.Web.UI.Design.ViewFlags viewFlags, bool setFlag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetViewFlags(valuetype System.Web.UI.Design.ViewFlags viewFlags, bool setFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetViewFlags(System::Web::UI::Design::ViewFlags viewFlags, bool setFlag);" />
      <MemberSignature Language="F#" Value="member this.SetViewFlags : System.Web.UI.Design.ViewFlags * bool -&gt; unit" Usage="controlDesigner.SetViewFlags (viewFlags, setFlag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewFlags" Type="System.Web.UI.Design.ViewFlags" />
        <Parameter Name="setFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="viewFlags">A <see cref="T:System.Web.UI.Design.ViewFlags" /> value.</param>
        <param name="setFlag">
          <see langword="true" /> to set the flag, <see langword="false" /> to remove the flag.</param>
        <summary>Assigns the specified bitwise <see cref="T:System.Web.UI.Design.ViewFlags" /> enumeration to the specified flag value.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il existe plusieurs indicateurs qui peuvent être définies. Par exemple, utiliser le <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> pour définir le <xref:System.Web.UI.Design.ViewFlags.DesignTimeHtmlRequiresLoadComplete> valeur de la <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> propriété du Concepteur de contrôles, au lieu de l’élément obsolète <xref:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser la <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> méthode pour indiquer que le modèle est en mode édition.  
  
 [!code-csharp[DesignerTemplateGroupSample#5](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#5)]
 [!code-vb[DesignerTemplateGroupSample#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
        <altmember cref="T:System.Web.UI.Design.ViewFlags" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.IControlDesignerTag Tag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.IControlDesignerTag Tag" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.Tag" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Tag As IControlDesignerTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Design::IControlDesignerTag ^ Tag { System::Web::UI::Design::IControlDesignerTag ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Tag : System.Web.UI.Design.IControlDesignerTag" Usage="System.Web.UI.Design.ControlDesigner.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.IControlDesignerTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an object representing the HTML markup element for the associated control.</summary>
        <value>Un <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> objet qui représente l’élément de balisage HTML pour le contrôle associé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En règle générale, le <xref:System.Web.UI.Design.ControlDesigner.Tag%2A> propriété est utilisée uniquement pour la communication entre l’hôte de conception et le Concepteur de contrôles et n’est pas utilisée par les développeurs de contrôles.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.IControlDesignerTag" />
      </Docs>
    </Member>
    <Member MemberName="TemplateGroups">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.TemplateGroupCollection TemplateGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.TemplateGroupCollection TemplateGroups" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TemplateGroups As TemplateGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Design::TemplateGroupCollection ^ TemplateGroups { System::Web::UI::Design::TemplateGroupCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TemplateGroups : System.Web.UI.Design.TemplateGroupCollection" Usage="System.Web.UI.Design.ControlDesigner.TemplateGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.TemplateGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
        <value>Collection d'objets <see cref="T:System.Web.UI.Design.TemplateGroup" />. La valeur par défaut correspond à une <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment créer une classe de Concepteur de contrôles qui dérive de la <xref:System.Web.UI.Design.ControlDesigner> classe. Ce concepteur de contrôles prend en charge un contrôle avec quatre modèles possibles.  
  
 Pour l’essayer, compilez le code et puis, dans une hôte de conception tels que [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], affichez la page en mode Design. Sélectionnez le contrôle et cliquez sur la liste des actions pour sélectionner un modèle à modifier, puis utilisez la fonctionnalité de glisser-déposer pour déplacer les contrôles dans le modèle.  
  
 [!code-csharp[DesignerTemplateGroupSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#1)]
 [!code-vb[DesignerTemplateGroupSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#1)]  
[!code-aspx-vb[DesignerTemplateGroupSample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.aspx#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Vous pouvez modifier le <see cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" /> collection directement, ou vous pouvez la laisser inchangée. Si vous substituez la <see cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" /> propriété, appelez l’implémentation de base avant d’ajouter des groupes de modèles à la collection.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.TemplateGroup" />
        <altmember cref="T:System.Web.UI.Design.TemplateDefinition" />
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="UpdateDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual void UpdateDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateDesignTimeHtml ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateDesignTimeHtml();" />
      <MemberSignature Language="F#" Value="abstract member UpdateDesignTimeHtml : unit -&gt; unit&#xA;override this.UpdateDesignTimeHtml : unit -&gt; unit" Usage="controlDesigner.UpdateDesignTimeHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Refreshes the design-time HTML markup for the associated Web server control by calling the <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> méthode est appelée par l’hôte de conception pour mettre à jour l’affichage du contrôle serveur Web associé au moment du design, telles que lorsque le contrôle a été modifié. En outre, un concepteur de contrôles peut appeler le <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> méthode après avoir modifié les valeurs du contrôle pour mettre à jour l’affichage du contrôle.  
  
> [!NOTE]
>  Si vous appelez le <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> événement ou à l’aide de la <xref:System.ComponentModel.PropertyDescriptor> objet pour définir les propriétés, les <xref:System.ComponentModel.Design.IComponentChangeService> appelle l’interface le <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> méthode pour vous.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment répondre à une `Click` événement dans un concepteur de contrôles pour modifier le focus entre différentes zones d’un contrôle multizone et utilise le <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> pour mettre à jour l’apparence du contrôle dans l’hôte de conception.  
  
 Cet exemple de code fait partie d’un exemple plus complet pour la <xref:System.Web.UI.Design.EditableDesignerRegion> classe.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#4](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#4)]
 [!code-vb[SimpleMultiRegionControlDesigner#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="UsePreviewControl">
      <MemberSignature Language="C#" Value="protected virtual bool UsePreviewControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePreviewControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property UsePreviewControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool UsePreviewControl { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UsePreviewControl : bool" Usage="System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the control designer uses a temporary preview control to generate the design-time HTML markup.</summary>
        <value>
          <see langword="true" /> si le concepteur de contrôles utilise une copie temporaire du contrôle pour l’aperçu au moment du design ; sinon, <see langword="false" />, si le concepteur de contrôles utilise la propriété <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> pour le contrôle contenu dans le concepteur de contrôles.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> propriété `true`, le <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> propriété retourne une copie temporaire du contrôle. Modifications apportées au contrôle temporaire ne sont pas conservées dans le document.  
  
 Si le <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> propriété est `false`, le <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> propriété retourne une instance de la <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> propriété du contrôle. Modifications apportées à l’instance du contrôle sont conservées.  
  
 Le <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> définition dans le <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> objet est utilisé pour définir la valeur de la <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> propriété. Par conséquent, le <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> détermine le type de contrôle qui est retourné par la <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> propriété dans la base de <xref:System.Web.UI.Design.ControlDesigner> classe. Si le <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> n’est pas spécifié dans la déclaration de Concepteur de contrôles, les <xref:System.Web.UI.Design.ControlDesigner> comportement de l’objet qui équivaut à spécifier le <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> la propriété `false`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Les concepteurs personnalisés qui sont dérivés de la <see cref="T:System.Web.UI.Design.ControlDesigner" /> classe peut substituer la <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> propriété et ignorer le <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> objet. En règle générale, pour indiquer que le <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> propriété retourne toujours une copie temporaire du contrôle, substituez le <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> propriété toujours retourner <see langword="true" />. Pour indiquer que le <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> propriété retourne toujours une instance du contrôle, substituez le <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> propriété toujours retourner <see langword="false" />. Par exemple, le <see cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" /> classe dérive de la <see cref="T:System.Web.UI.Design.ControlDesigner" /> et renvoie toujours <see langword="true" /> pour le <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> propriété.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
        <altmember cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="ViewControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ViewControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ViewControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ViewControl { System::Web::UI::Control ^ get(); void set(System::Web::UI::Control ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ViewControl : System.Web.UI.Control with get, set" Usage="System.Web.UI.Design.ControlDesigner.ViewControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Web server control that can be used for previewing the design-time HTML markup.</summary>
        <value>A <see cref="T:System.Web.UI.Control" /> objet utilisé par la classe de base pour générer le balisage HTML au moment du design.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> propriété utilise le <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> propriété pour déterminer sa valeur de retour.  
  
 Si le <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> propriété `true`, le <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> propriété retourne une copie temporaire du contrôle. Modifications apportées au contrôle temporaire ne sont pas conservées.  
  
 Si le <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> propriété est `false`, le <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> propriété retourne une instance de la <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> propriété du contrôle. Modifications apportées à l’instance du contrôle sont conservées.  
  
 Le <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> définition dans le <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> objet est utilisé pour définir la valeur de la <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> propriété. Par conséquent, le <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> détermine le type de contrôle qui est retourné par la <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> propriété dans la base de <xref:System.Web.UI.Design.ControlDesigner> classe. Si le <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> n’est pas spécifié dans la déclaration de Concepteur de contrôles, les <xref:System.Web.UI.Design.ControlDesigner> comportement de l’objet qui équivaut à spécifier le <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> la propriété `false`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment marquer un concepteur de contrôles avec le <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> attribut. L’exemple de code dérive un contrôle de serveur Web à partir de la <xref:System.Web.UI.WebControls.Label> classe et associe le contrôle à une implémentation de Concepteur de contrôles personnalisés. La déclaration de classe de Concepteur de contrôles est marquée avec la `SupportsPreviewControl` attribut la valeur `true`. Le Concepteur de contrôles substitue le <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> (méthode), puis affiche le <xref:System.Web.UI.WebControls.Label.Text%2A> propriété du contrôle en italique au moment du design.  
  
 [!code-csharp[System.Web.UI.Design.SupportsPreviewControlAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.SupportsPreviewControlAttribute/CS/supportspreviewdesigner.cs#1)]
 [!code-vb[System.Web.UI.Design.SupportsPreviewControlAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.SupportsPreviewControlAttribute/VB/supportspreviewdesigner.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
        <altmember cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="ViewControlCreated">
      <MemberSignature Language="C#" Value="public virtual bool ViewControlCreated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ViewControlCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ViewControlCreated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ViewControlCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ViewControlCreated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ViewControlCreated : bool with get, set" Usage="System.Web.UI.Design.ControlDesigner.ViewControlCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether a <see langword="View" /> control has been created for display on the design surface.</summary>
        <value>
          <see langword="true" />, si un contrôle a été créé pour l’affichage sur l’aire de conception ; dans le cas contraire, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="protected virtual bool Visible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.Visible" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Visible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool" Usage="System.Web.UI.Design.ControlDesigner.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the control is visible at design time.</summary>
        <value>
          <see langword="true" /> dans tous les cas.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>