<Type Name="ExpressionsCollectionConverter" FullName="System.Web.UI.Design.ExpressionsCollectionConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5fb5166107901319acae718b4db94b84473f6e8c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37601077" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExpressionsCollectionConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpressionsCollectionConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionsCollectionConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpressionsCollectionConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionsCollectionConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type ExpressionsCollectionConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit un convertisseur de type pour les collections de liaisons d'expressions.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ExpressionsCollectionConverter> classe convertit un <xref:System.Web.UI.ExpressionBindingCollection> en chaîne pour la grille d’édition de propriété au moment du design, qui apparaît toujours comme une chaîne vide ( » »).  
  
 Un hôte de concepteur, tel que [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], utilise le <xref:System.Web.Compilation.ExpressionBuilder> et <xref:System.Web.UI.Design.ExpressionEditor> classe implémentations avec le <xref:System.Web.UI.Design.ExpressionsCollectionEditor> et <xref:System.Web.UI.Design.ExpressionsCollectionConverter> classes pour définir les liaisons d’expressions pour les propriétés de contrôle au moment du design et le <xref:System.Web.UI.Design.ControlPersister> à conserver les expressions pour le moment de l’exécution. Chaînes d’expressions font référence à une ressource localisable, un paramètre d’application, une chaîne de connexion ou un type d’expression personnalisée. La chaîne d’expression est liée à la propriété de contrôle au moment du design et ensuite utilisée au moment de l’exécution pour déterminer la valeur de la propriété.  
  
> [!NOTE]
>  Vous ne devez jamais accéder directement un convertisseur de type. Cette implémentation de <xref:System.ComponentModel.TypeConverter> est destiné uniquement pour une utilisation par un <xref:System.Web.UI.ExpressionBindingCollection> objet au moment du design.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
    <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.Web.UI.ExpressionBindingCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionsCollectionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionsCollectionConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionsCollectionConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.Design.ExpressionsCollectionConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Vous ne devez jamais accéder directement un convertisseur de type. Cette implémentation de <xref:System.ComponentModel.TypeConverter> est destiné uniquement pour une utilisation par un <xref:System.Web.UI.ExpressionBindingCollection> objet au moment du design.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionsCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="expressionsCollectionConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui indique le composant ou le contrôle auquel appartient la collection de liaisons d'expressions.</param>
        <param name="culture">Objet <see cref="T:System.Globalization.CultureInfo" /> pouvant fournir des informations de culture supplémentaires.</param>
        <param name="value">Objet à convertir.</param>
        <param name="destinationType">Type vers lequel effectuer la conversion.</param>
        <summary>Convertit une collection de liaisons d'expressions au type spécifié.</summary>
        <returns>Si <paramref name="destinationType" /> n'est pas de type <see cref="T:System.String" />, objet créé par la conversion de type ; sinon, si <paramref name="destinationType" /> est une chaîne, chaîne vide ("").</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Vous ne devez jamais accéder directement un convertisseur de type. Cette implémentation de <xref:System.ComponentModel.TypeConverter> est destiné uniquement pour une utilisation par un <xref:System.Web.UI.ExpressionBindingCollection> objet au moment du design.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <altmember cref="T:System.Web.UI.ExpressionBindingCollection" />
      </Docs>
    </Member>
  </Members>
</Type>