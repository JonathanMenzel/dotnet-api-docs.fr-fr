<Type Name="TemplatedControlDesigner" FullName="System.Web.UI.Design.TemplatedControlDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="03e0e84d8069e80c2858c1bac67554a469f07fbb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30590323" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TemplatedControlDesigner : System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TemplatedControlDesigner extends System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.TemplatedControlDesigner" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TemplatedControlDesigner&#xA;Inherits ControlDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplatedControlDesigner abstract : System::Web::UI::Design::ControlDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ControlDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Étend le comportement au moment du design des contrôles serveur basés sur des modèles.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment créer une classe de Concepteur de contrôles qui utilise des modèles et dérive de la <xref:System.Web.UI.Design.ControlDesigner> classe.  
  
 Pour exécuter l’exemple, compilez le code et puis dans une hôte de conception tels que [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], affichez la page en mode Design. Sélectionnez le contrôle et cliquez sur la liste des actions pour sélectionner un modèle à modifier, puis utilisez la fonctionnalité de glisser-déposer pour déplacer les contrôles dans le modèle.  
  
> [!NOTE]
>  Votre projet doit avoir une référence à la `System.Design` assembly.  
  
 [!code-csharp[DesignerTemplateGroupSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#1)]
 [!code-vb[DesignerTemplateGroupSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#1)]  
[!code-aspx-vb[DesignerTemplateGroupSample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.aspx#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Bien que cette classe n’est pas obsolète, il est inutile, car les fonctionnalités de modification de modèle ont été intégrées à <see cref="T:System.Web.UI.Design.ControlDesigner" />.</para>
    </block>
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplatedControlDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplatedControlDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="ActiveTemplateEditingFrame">
      <MemberSignature Language="C#" Value="public System.Web.UI.Design.ITemplateEditingFrame ActiveTemplateEditingFrame { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.ITemplateEditingFrame ActiveTemplateEditingFrame" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplatedControlDesigner.ActiveTemplateEditingFrame" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveTemplateEditingFrame As ITemplateEditingFrame" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Design::ITemplateEditingFrame ^ ActiveTemplateEditingFrame { System::Web::UI::Design::ITemplateEditingFrame ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this property is not recommended because template editing is handled in ControlDesigner. To support template editing expose template data in the TemplateGroups property and call SetViewFlags(ViewFlags.TemplateEditing, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ITemplateEditingFrame</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le frame de modification de modèle actif.</summary>
        <value>
          <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> qui est le frame de modification de modèle actuellement actif.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  La propriété <xref:System.Web.UI.Design.TemplatedControlDesigner.ActiveTemplateEditingFrame%2A> est obsolète. Utilisez le <xref:System.Web.UI.Design.TemplatedControlDesigner.TemplateGroups%2A> propriété pour exposer ou énumérer des modèles dans un concepteur de contrôles basés sur un modèle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanEnterTemplateMode">
      <MemberSignature Language="C#" Value="public bool CanEnterTemplateMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEnterTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplatedControlDesigner.CanEnterTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanEnterTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanEnterTemplateMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si ce concepteur autorise ou non l'affichage ou la modification des modèles.</summary>
        <value>
          <see langword="true" /> si le concepteur autorisera l'affichage ou la modification des modèles ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTemplateEditingFrame">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.Design.ITemplateEditingFrame CreateTemplateEditingFrame (System.Web.UI.Design.TemplateEditingVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Design.ITemplateEditingFrame CreateTemplateEditingFrame(class System.Web.UI.Design.TemplateEditingVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateTemplateEditingFrame (verb As TemplateEditingVerb) As ITemplateEditingFrame" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Web::UI::Design::ITemplateEditingFrame ^ CreateTemplateEditingFrame(System::Web::UI::Design::TemplateEditingVerb ^ verb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because template editing is handled in ControlDesigner. To support template editing expose template data in the TemplateGroups property and call SetViewFlags(ViewFlags.TemplateEditing, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ITemplateEditingFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.Web.UI.Design.TemplateEditingVerb" />
      </Parameters>
      <Docs>
        <param name="verb">Verbe de modification du modèle pour lequel un frame de modification de modèle doit être créé.</param>
        <summary>En cas de substitution dans une classe dérivée, crée un frame de modification de modèle pour le verbe spécifié.</summary>
        <returns>Nouveau frame de modification de modèle.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindingsEnabled">
      <MemberSignature Language="C#" Value="protected override bool DataBindingsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataBindingsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplatedControlDesigner.DataBindingsEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DataBindingsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DataBindingsEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le concepteur autorise la liaison de données.</summary>
        <value>
          <see langword="true" />, si le concepteur autorise la liaison de données ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.EditableDesignerRegion.SupportsDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="EnterTemplateMode">
      <MemberSignature Language="C#" Value="public void EnterTemplateMode (System.Web.UI.Design.ITemplateEditingFrame newTemplateEditingFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnterTemplateMode(class System.Web.UI.Design.ITemplateEditingFrame newTemplateEditingFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.EnterTemplateMode(System.Web.UI.Design.ITemplateEditingFrame)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterTemplateMode (newTemplateEditingFrame As ITemplateEditingFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnterTemplateMode(System::Web::UI::Design::ITemplateEditingFrame ^ newTemplateEditingFrame);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because template editing is handled in ControlDesigner. To support template editing expose template data in the TemplateGroups property and call SetViewFlags(ViewFlags.TemplateEditing, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newTemplateEditingFrame" Type="System.Web.UI.Design.ITemplateEditingFrame" />
      </Parameters>
      <Docs>
        <param name="newTemplateEditingFrame">Objet frame de modification de modèle à ouvrir dans le concepteur.</param>
        <summary>Ouvre un objet modèle de frame particulier en vue d'une modification dans le concepteur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Le <xref:System.Web.UI.Design.TemplatedControlDesigner.EnterTemplateMode%2A> méthode est obsolète. Utilisez le <xref:System.Web.UI.Design.TemplatedControlDesigner.TemplateGroups%2A> propriété pour manipuler des modèles dans un concepteur de contrôles basés sur un modèle.  
  
 Si vous déjà en mode modèle et un autre modèle frame de modification, cette méthode appelle <xref:System.Web.UI.Design.TemplatedControlDesigner.ExitTemplateMode%2A> pour enregistrer tous ses modèles et fermer le frame.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitTemplateMode">
      <MemberSignature Language="C#" Value="public void ExitTemplateMode (bool fSwitchingTemplates, bool fNested, bool fSave);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExitTemplateMode(bool fSwitchingTemplates, bool fNested, bool fSave) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.ExitTemplateMode(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitTemplateMode (fSwitchingTemplates As Boolean, fNested As Boolean, fSave As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExitTemplateMode(bool fSwitchingTemplates, bool fNested, bool fSave);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because template editing is handled in ControlDesigner. To support template editing expose template data in the TemplateGroups property and call SetViewFlags(ViewFlags.TemplateEditing, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fSwitchingTemplates" Type="System.Boolean" />
        <Parameter Name="fNested" Type="System.Boolean" />
        <Parameter Name="fSave" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fSwitchingTemplates">
          <see langword="true" /> lors du passage d'un frame de modification de modèle à un autre ; sinon, <see langword="false" />.</param>
        <param name="fNested">
          <see langword="true" /> si ce concepteur est imbriqué (un ou plusieurs niveaux) à l'intérieur d'un autre contrôle dont le concepteur est aussi en mode de modification de modèle ; sinon, <see langword="false" />.</param>
        <param name="fSave">
          <see langword="true" /> si les modèles doivent être enregistrés à la sortie ; sinon, <see langword="false" />.</param>
        <summary>Ferme le frame de modification de modèle actuellement actif après enregistrement des modifications éventuelles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Le <xref:System.Web.UI.Design.TemplatedControlDesigner.ExitTemplateMode%2A> méthode est obsolète. Utilisez le <xref:System.Web.UI.Design.TemplatedControlDesigner.TemplateGroups%2A> propriété pour manipuler des modèles dans un concepteur de contrôles basés sur un modèle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCachedTemplateEditingVerbs">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.Design.TemplateEditingVerb[] GetCachedTemplateEditingVerbs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Design.TemplateEditingVerb[] GetCachedTemplateEditingVerbs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.GetCachedTemplateEditingVerbs" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetCachedTemplateEditingVerbs () As TemplateEditingVerb()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::Web::UI::Design::TemplateEditingVerb ^&gt; ^ GetCachedTemplateEditingVerbs();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because template editing is handled in ControlDesigner. To support template editing expose template data in the TemplateGroups property and call SetViewFlags(ViewFlags.TemplateEditing, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.TemplateEditingVerb[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient les verbes de modification de modèle mis en cache.</summary>
        <returns>Tableau d'objets <see cref="T:System.Web.UI.Design.TemplateEditingVerb" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Le <xref:System.Web.UI.Design.TemplatedControlDesigner.GetCachedTemplateEditingVerbs%2A> méthode est obsolète. Utilisez le <xref:System.Web.UI.Design.TemplatedControlDesigner.TemplateGroups%2A> propriété pour manipuler des modèles dans un concepteur de contrôles basés sur un modèle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplateContainerDataItemProperty">
      <MemberSignature Language="C#" Value="public virtual string GetTemplateContainerDataItemProperty (string templateName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTemplateContainerDataItemProperty(string templateName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContainerDataItemProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTemplateContainerDataItemProperty (templateName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetTemplateContainerDataItemProperty(System::String ^ templateName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because template editing is handled in ControlDesigner. To support template editing expose template data in the TemplateGroups property and call SetViewFlags(ViewFlags.TemplateEditing, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="templateName">Nom du modèle.</param>
        <summary>Obtient la propriété d'élément de données du conteneur du modèle.</summary>
        <returns>Chaîne représentant les données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Le <xref:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContainerDataItemProperty%2A> méthode est obsolète. Utilisez le <xref:System.Web.UI.Design.TemplateGroup.Templates%2A> propriété de la <xref:System.Web.UI.Design.TemplatedControlDesigner.TemplateGroups%2A> des éléments de collection pour examiner les métadonnées de modèle dans un concepteur de contrôles basés sur un modèle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplateContainerDataSource">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerable GetTemplateContainerDataSource (string templateName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerable GetTemplateContainerDataSource(string templateName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContainerDataSource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTemplateContainerDataSource (templateName As String) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerable ^ GetTemplateContainerDataSource(System::String ^ templateName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because template editing is handled in ControlDesigner. To support template editing expose template data in the TemplateGroups property and call SetViewFlags(ViewFlags.TemplateEditing, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="templateName">Nom du modèle.</param>
        <summary>Obtient la source de données du conteneur du modèle.</summary>
        <returns>Source de données du conteneur du modèle spécifié.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplateContent">
      <MemberSignature Language="C#" Value="public abstract string GetTemplateContent (System.Web.UI.Design.ITemplateEditingFrame editingFrame, string templateName, out bool allowEditing);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTemplateContent(class System.Web.UI.Design.ITemplateEditingFrame editingFrame, string templateName, [out] bool&amp; allowEditing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTemplateContent (editingFrame As ITemplateEditingFrame, templateName As String, ByRef allowEditing As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetTemplateContent(System::Web::UI::Design::ITemplateEditingFrame ^ editingFrame, System::String ^ templateName, [Runtime::InteropServices::Out] bool % allowEditing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because template editing is handled in ControlDesigner. To support template editing expose template data in the TemplateGroups property and call SetViewFlags(ViewFlags.TemplateEditing, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editingFrame" Type="System.Web.UI.Design.ITemplateEditingFrame" />
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="allowEditing" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="editingFrame">Frame de modification de modèle dont le contenu doit être récupéré.</param>
        <param name="templateName">Nom du modèle.</param>
        <param name="allowEditing">
          <see langword="true" /> si le contenu du modèle peut être modifié ; <see langword="false" /> si le contenu est en lecture seule.</param>
        <summary>En cas de substitution dans une classe dérivée, obtient le contenu du modèle.</summary>
        <returns>Contenu du modèle.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplateEditingVerbs">
      <MemberSignature Language="C#" Value="public System.Web.UI.Design.TemplateEditingVerb[] GetTemplateEditingVerbs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.Design.TemplateEditingVerb[] GetTemplateEditingVerbs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateEditingVerbs" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTemplateEditingVerbs () As TemplateEditingVerb()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Web::UI::Design::TemplateEditingVerb ^&gt; ^ GetTemplateEditingVerbs();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because template editing is handled in ControlDesigner. To support template editing expose template data in the TemplateGroups property and call SetViewFlags(ViewFlags.TemplateEditing, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.TemplateEditingVerb[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient les verbes de modification de modèle disponibles pour le concepteur.</summary>
        <returns>Verbes de modification de modèle disponibles pour le concepteur.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplateFromText">
      <MemberSignature Language="C#" Value="protected System.Web.UI.ITemplate GetTemplateFromText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.UI.ITemplate GetTemplateFromText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateFromText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTemplateFromText (text As String) As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::ITemplate ^ GetTemplateFromText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Texte à partir duquel un modèle doit être récupéré.</param>
        <summary>Crée un modèle à partir du texte spécifié.</summary>
        <returns>
          <see cref="T:System.Web.UI.ITemplate" /> créé à partir du texte spécifié.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTemplatePropertyParentType">
      <MemberSignature Language="C#" Value="public virtual Type GetTemplatePropertyParentType (string templateName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetTemplatePropertyParentType(string templateName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplatePropertyParentType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTemplatePropertyParentType (templateName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetTemplatePropertyParentType(System::String ^ templateName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because template editing is handled in ControlDesigner. To support template editing expose template data in the TemplateGroups property and call SetViewFlags(ViewFlags.TemplateEditing, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="templateName">Nom du modèle pour lequel le type du parent doit être retourné.</param>
        <summary>Obtient le type du parent de la propriété du modèle.</summary>
        <returns>Type de l'objet qui possède la propriété du modèle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Le <xref:System.Web.UI.Design.TemplatedControlDesigner.GetTemplatePropertyParentType%2A> méthode est obsolète. Utilisez le <xref:System.Web.UI.Design.TemplateGroup.Templates%2A> propriété de la <xref:System.Web.UI.Design.TemplatedControlDesigner.TemplateGroups%2A> des éléments de collection pour examiner les métadonnées de modèle dans un concepteur de contrôles basés sur un modèle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextFromTemplate">
      <MemberSignature Language="C#" Value="protected string GetTextFromTemplate (System.Web.UI.ITemplate template);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetTextFromTemplate(class System.Web.UI.ITemplate template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.GetTextFromTemplate(System.Web.UI.ITemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTextFromTemplate (template As ITemplate) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetTextFromTemplate(System::Web::UI::ITemplate ^ template);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="template" Type="System.Web.UI.ITemplate" />
      </Parameters>
      <Docs>
        <param name="template">
          <see cref="T:System.Web.UI.ITemplate" /> à convertir en texte.</param>
        <summary>Obtient une chaîne de texte qui représente le modèle spécifié.</summary>
        <returns>Chaîne représentant le modèle spécifié.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="template" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Élément de contrôle en cours de conception.</param>
        <summary>Initialise le concepteur et charge le composant spécifié.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InTemplateMode">
      <MemberSignature Language="C#" Value="public bool InTemplateMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplatedControlDesigner.InTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InTemplateMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is System.Web.UI.Design.ControlDesigner.InTemplateMode. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le document du concepteur est en mode modèles.</summary>
        <value>
          <see langword="true" /> si le document du concepteur est en mode modèles ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  La propriété <xref:System.Web.UI.Design.TemplatedControlDesigner.InTemplateMode%2A?displayProperty=nameWithType> est obsolète. Utilisez le <xref:System.Web.UI.Design.ControlDesigner.InTemplateMode%2A?displayProperty=nameWithType> propriété pour les fonctionnalités de Concepteur de contrôles équivalentes.  
  
 Un document est en mode modèle lorsqu’un modèle est actuellement affiché ou modifié dans le Concepteur de formulaires.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBehaviorAttached">
      <MemberSignature Language="C#" Value="protected override void OnBehaviorAttached ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBehaviorAttached() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.OnBehaviorAttached" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBehaviorAttached ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBehaviorAttached();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ControlDesigner.Tag. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fournit une possibilité de traitement supplémentaire lorsqu'un comportement est attaché au concepteur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Le <xref:System.Web.UI.Design.TemplatedControlDesigner.OnBehaviorAttached%2A> méthode est obsolète. Utilisez le <xref:System.Web.UI.Design.IControlDesignerTag.SetAttribute%2A> et <xref:System.Web.UI.Design.IControlDesignerTag.GetAttribute%2A> méthodes sur le <xref:System.Web.UI.Design.ControlDesigner.Tag%2A> propriété à mapper les propriétés aux styles.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public override void OnComponentChanged (object sender, System.ComponentModel.Design.ComponentChangedEventArgs ce);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnComponentChanged(object sender, class System.ComponentModel.Design.ComponentChangedEventArgs ce) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnComponentChanged (sender As Object, ce As ComponentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnComponentChanged(System::Object ^ sender, System::ComponentModel::Design::ComponentChangedEventArgs ^ ce);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="ce" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Objet qui envoie l'événement.</param>
        <param name="ce">
          <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> qui fournit des données pour l'événement.</param>
        <summary>Délégué pour gérer l'événement component changed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée lorsqu’une propriété a été modifiée. Il permet à l’implémenteur d’effectuer tout traitement éventuellement nécessaire après une modification de propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetParent">
      <MemberSignature Language="C#" Value="public override void OnSetParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnSetParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.OnSetParent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnSetParent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnSetParent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fournit une possibilité de traitement supplémentaire lorsque le parent de ce concepteur est modifié.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTemplateModeChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTemplateModeChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTemplateModeChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTemplateModeChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fournit une possibilité de traitement supplémentaire lorsque le mode du modèle est modifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent> événement est déclenché par l’hôte du concepteur pour certaines actions effectuées sur un contrôle dans l’aire de conception. Par exemple, un événement est déclenché lorsque l’utilisateur entre ou quitte le mode d’un contrôle d’édition de modèle.  
  
 Le <xref:System.Web.UI.Design.TemplatedControlDesigner> classe fournit un délégué par défaut pour gérer les <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent> événement. Les classes dérivées de la <xref:System.Web.UI.Design.TemplatedControlDesigner> remplacer le <xref:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged%2A> méthode pour traiter les événements qui sont déclenchés lorsque le mode modèles change pour le contrôle associé.  
  
 Le <xref:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged%2A> méthode permet aux classes dérivées de gérer l’événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 Le délégué par défaut exécute les mises à jour qui sont requises pour un événement de changement de mode de modèle dans la base de <xref:System.Web.UI.Design.TemplatedControlDesigner> classe, puis appelle la <xref:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged%2A> (méthode). La base de <xref:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged%2A> méthode dans la <xref:System.Web.UI.Design.TemplatedControlDesigner> classe retourne sans effectuer un traitement supplémentaire pour l’événement. Si une classe dérivée de la <xref:System.Web.UI.Design.TemplatedControlDesigner> et remplace la base de <xref:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged%2A> (méthode), le délégué par défaut appelle la méthode de substitution dans la classe dérivée.  
  
 Utilisez le <xref:System.Web.UI.Design.ControlDesigner.InTemplateMode%2A> propriété pour déterminer si le Concepteur de contrôles est actuellement en mode de modification de modèle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Le délégué par défaut fourni par le <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> classe effectue toutes les mises à jour nécessaires pour la classe de base avant d’appeler le <see cref="M:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged" /> (méthode). Remplacer la <see cref="M:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged" /> méthode dans les classes dérivées de la <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> pour effectuer un traitement supplémentaire pour les événements de modification de mode modèles sur les contrôles dans l’aire de conception.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ViewEventHandler" />
        <altmember cref="T:System.Web.UI.Design.TemplateModeChangedEventArgs" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" />
      </Docs>
    </Member>
    <Member MemberName="SaveActiveTemplateEditingFrame">
      <MemberSignature Language="C#" Value="protected void SaveActiveTemplateEditingFrame ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SaveActiveTemplateEditingFrame() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.SaveActiveTemplateEditingFrame" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SaveActiveTemplateEditingFrame ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SaveActiveTemplateEditingFrame();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enregistre le frame de modification de modèle actif.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTemplateContent">
      <MemberSignature Language="C#" Value="public abstract void SetTemplateContent (System.Web.UI.Design.ITemplateEditingFrame editingFrame, string templateName, string templateContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTemplateContent(class System.Web.UI.Design.ITemplateEditingFrame editingFrame, string templateName, string templateContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetTemplateContent (editingFrame As ITemplateEditingFrame, templateName As String, templateContent As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetTemplateContent(System::Web::UI::Design::ITemplateEditingFrame ^ editingFrame, System::String ^ templateName, System::String ^ templateContent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because template editing is handled in ControlDesigner. To support template editing expose template data in the TemplateGroups property and call SetViewFlags(ViewFlags.TemplateEditing, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editingFrame" Type="System.Web.UI.Design.ITemplateEditingFrame" />
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="templateContent" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="editingFrame">Frame de modification de modèle dont le contenu doit être fourni.</param>
        <param name="templateName">Nom du modèle.</param>
        <param name="templateContent">Contenu à affecter au modèle.</param>
        <summary>En cas de substitution dans une classe dérivée, assigne le contenu spécifié au contenu du modèle spécifié.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateGroups">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Design.TemplateGroupCollection TemplateGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.TemplateGroupCollection TemplateGroups" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.TemplatedControlDesigner.TemplateGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TemplateGroups As TemplateGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Design::TemplateGroupCollection ^ TemplateGroups { System::Web::UI::Design::TemplateGroupCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.TemplateGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection de groupes de modèles, chacun contenant une définition de modèle.</summary>
        <value>Collection d'éléments <see cref="T:System.Web.UI.Design.TemplateGroup" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDesignTimeHtml">
      <MemberSignature Language="C#" Value="public override void UpdateDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TemplatedControlDesigner.UpdateDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateDesignTimeHtml ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateDesignTimeHtml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Met à jour le code HTML de design.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous devez appeler cette méthode pour actualiser l’affichage au moment du design si les frames de modèles ont été modifiés sans appeler des méthodes qui mettent à jour automatiquement le code HTML au moment du design.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>