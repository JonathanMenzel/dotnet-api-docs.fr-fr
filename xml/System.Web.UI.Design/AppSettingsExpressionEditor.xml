<Type Name="AppSettingsExpressionEditor" FullName="System.Web.UI.Design.AppSettingsExpressionEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00a4710d6a75a68d0d9e099bfcfa3ad46093a087" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36391293" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AppSettingsExpressionEditor : System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppSettingsExpressionEditor extends System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.AppSettingsExpressionEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class AppSettingsExpressionEditor&#xA;Inherits ExpressionEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppSettingsExpressionEditor : System::Web::UI::Design::ExpressionEditor" />
  <TypeSignature Language="F#" Value="type AppSettingsExpressionEditor = class&#xA;    inherit ExpressionEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ExpressionEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des propriétés et des méthodes pour évaluer et modifier une expression de paramètre d'application dans un fichier de configuration au moment du design.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.AppSettingsExpressionEditor> classe est dérivée de la <xref:System.Web.UI.Design.ExpressionEditor> classe et fournit une implémentation pour évaluer et associer une référence de paramètre d’application avec une propriété de contrôle au moment du design. Par exemple, vous pouvez lier la valeur d’une propriété de contrôle à l’expression de paramètre d’application `AppSettings:mySettingKeyName`, ce qui signifie que la valeur de propriété du contrôle est définie à l’aide de la `mySettingKeyName` valeur dans la `appSettings` section du fichier de configuration Web.  
  
 Hôte d’un concepteur visuel, tel que [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], utilise le <xref:System.Web.UI.Design.AppSettingsExpressionEditor> classe pour sélectionner un paramètre d’application à partir de la `appSettings` section de configuration, puis évalue l’expression sélectionnée pour le rendu au moment du design.  
  
 Lorsque vous accédez à la <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> propriété pour un contrôle dans la grille des propriétés au moment du design, le concepteur visuel affiche une boîte de dialogue pour définir les expressions qui fournissent la valeur d’exécution pour une propriété du contrôle. Vous pouvez sélectionner le type d’expression basé sur une liste de préfixes d’expression. Lorsque vous sélectionnez le **AppSettings** préfixe d’expression dans la liste, l’hôte de concepteur visuel utilise associé <xref:System.Web.UI.Design.ExpressionEditorSheet> objet pour fournir des fonctionnalités d’édition au moment du design `appSettings` expressions et utilise <xref:System.Web.UI.Design.AppSettingsExpressionEditor>méthodes pour évaluer et convertir la chaîne d’expression selon la syntaxe d’une expression de paramètre d’application. L’hôte de concepteur visuel utilise le résultat de l’expression évaluée pour assigner des valeurs de propriété qui sont rendues sur l’aire de conception du contrôle.  
  
 Le <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> propriété pour un <xref:System.Web.UI.Design.AppSettingsExpressionEditor> objet retourne la chaîne `AppSettings`. Le <xref:System.Web.Compilation.AppSettingsExpressionBuilder> classe est associé au préfixe d’expression `AppSettings` et <xref:System.Web.UI.Design.AppSettingsExpressionEditor> implémentation.  
  
 Le <xref:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression%2A> méthode évalue une chaîne d’expression de paramètre d’entrée d’application. Le <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> méthode retourne la <xref:System.Web.UI.Design.ExpressionEditorSheet> implémentation qui est utilisée pour entrer et de modifier des expressions de paramètre d’application.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment lier le <xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A> propriété d’un <xref:System.Web.UI.WebControls.HyperLink> contrôle à une expression de paramètre application à l’aide du <xref:System.Web.UI.Design.AppSettingsExpressionEditor> objet.  
  
1.  Dans un projet Web Forms, ajoutez `MyHyperLinkSetting` à la `<appSettings>` section du fichier web.config.  
  
     [!code-xml[ControlsUsingExpressions#5](~/samples/snippets/common/VS_Snippets_WebNet/ControlsUsingExpressions/Common/controlsusingexpressions.xml#5)]  
  
2.  Sur une page Web Forms, ajoutez un <xref:System.Web.UI.WebControls.HyperLink> contrôle.  
  
3.  Pour le `Hyperlink` contrôle, dans les propriétés, cliquez sur **Expressions**, puis cliquez sur le bouton de sélection (**... **).  
  
     Le `<Hyperlinkname>` **Expression** boîte de dialogue s’affiche.  
  
4.  Sous **propriétés pouvant être liées**, cliquez sur **NavigateUrl**, dans le **type d’Expression** , cliquez sur **AppSettings**, puis sous ** Propriétés de l’expression**, dans le **AppSetting** , tapez **MyHyperLinkSetting**.  
  
 Le concepteur visuel utilise la <xref:System.Web.UI.Design.AppSettingsExpressionEditor> pour assigner l’expression pour le `NavigateUrl` propriété.  
  
 La source aspx suivante montre un exemple d’une valeur de propriété définie à l’aide d’une expression de paramètre d’application.  
  
 [!code-aspx-csharp[ControlsUsingExpressions#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlsUsingExpressions/CS/controlsusingexpressionscs.aspx#2)]
 [!code-aspx-vb[ControlsUsingExpressions#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlsUsingExpressions/VB/controlsusingexpressionsvb.aspx#2)]
 [!code-xml[ControlsUsingExpressions#2](~/samples/snippets/common/VS_Snippets_WebNet/ControlsUsingExpressions/Common/controlsusingexpressions.xml#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Configuration.Configuration.AppSettings" />
    <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
    <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
    <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppSettingsExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.AppSettingsExpressionEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppSettingsExpressionEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une instance de la <xref:System.Web.UI.Design.AppSettingsExpressionEditor> classe est configurée par la classe de base avec le <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> propriété `AppSettings`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Configuration.AppSettings" />
        <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EvaluateExpression (expression As String, parseTimeData As Object, propertyType As Type, serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EvaluateExpression(System::String ^ expression, System::Object ^ parseTimeData, Type ^ propertyType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.EvaluateExpression : string * obj * Type * IServiceProvider -&gt; obj" Usage="appSettingsExpressionEditor.EvaluateExpression (expression, parseTimeData, propertyType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Chaîne d'expression de paramètre d'application à évaluer. <c>expression</c> n’inclut pas le préfixe d’expression <see langword="AppSettings" />.</param>
        <param name="parseTimeData">Objet contenant des informations d’analyse supplémentaires pour évaluer <c>expression</c>.</param>
        <param name="propertyType">Type de propriété du contrôle.</param>
        <param name="serviceProvider">Implémentation d'un fournisseur de services fournie par l'hôte du concepteur, utilisée pour obtenir des services supplémentaires au moment du design.</param>
        <summary>Évalue une chaîne d'expression de paramètre d'application et fournit la valeur au moment du design d'une propriété du contrôle.</summary>
        <returns>Objet référencé par <paramref name="expression" />, si l'évaluation de l'expression a réussi ; sinon, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression%2A> méthode recherche le paramètre d’application qui est spécifié par `expression`, puis retourne la valeur du paramètre d’application.  
  
 Le concepteur visuel utilise le <xref:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression%2A> pour évaluer une expression de paramètre d’application et fournir la valeur au moment du design pour une propriété du contrôle associé. Le concepteur visuel appelle la <xref:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression%2A> méthode avec la chaîne d’expression et utilise l’expression évaluée pour résultat pour assigner des valeurs de propriété qui sont rendues sur l’aire de conception du contrôle.  
  
 Au moment de l’exécution, l’Analyseur de page utilise le <xref:System.Web.Compilation.AppSettingsExpressionBuilder.EvaluateExpression%2A> et <xref:System.Web.Compilation.AppSettingsExpressionBuilder.GetCodeExpression%2A> méthodes correspondantes <xref:System.Web.Compilation.AppSettingsExpressionBuilder> implémentation pour évaluer une expression et fournir la valeur au moment de l’exécution pour une propriété du contrôle associé.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Configuration.AppSettings" />
        <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.AppSettingsExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExpressionEditorSheet (expression As String, serviceProvider As IServiceProvider) As ExpressionEditorSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Design::ExpressionEditorSheet ^ GetExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="appSettingsExpressionEditor.GetExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Chaîne d'expression définie pour une propriété du contrôle, utilisée pour initialiser la feuille d'éditeur d'expression. <c>expression</c> n’inclut pas le préfixe d’expression <see langword="AppSettings" />.</param>
        <param name="serviceProvider">Implémentation d'un fournisseur de services fournie par l'hôte du concepteur, utilisée pour obtenir des services supplémentaires au moment du design.</param>
        <summary>Retourne une feuille d'éditeur d'expression pour une expression de paramètre d'application.</summary>
        <returns>Implémentation <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> qui définit les propriétés de l'expression de paramètre d'application.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.AppSettingsExpressionEditor.GetExpressionEditorSheet%2A> méthode retourne un éditeur simple implémentation de la feuille, qui utilise une chaîne d’entrée unique pour former l’expression.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Configuration.AppSettings" />
        <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>