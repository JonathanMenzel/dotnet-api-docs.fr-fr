<Type Name="DataSourceDesigner" FullName="System.Web.UI.Design.DataSourceDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80d70e896cd843cdfc7d4f87632d514b9023bca7" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46660948" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataSourceDesigner : System.Web.UI.Design.ControlDesigner, System.Web.UI.Design.IDataSourceDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataSourceDesigner extends System.Web.UI.Design.ControlDesigner implements class System.Web.UI.Design.IDataSourceDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.DataSourceDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class DataSourceDesigner&#xA;Inherits ControlDesigner&#xA;Implements IDataSourceDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceDesigner : System::Web::UI::Design::ControlDesigner, System::Web::UI::Design::IDataSourceDesigner" />
  <TypeSignature Language="F#" Value="type DataSourceDesigner = class&#xA;    inherit ControlDesigner&#xA;    interface IDataSourceDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ControlDesigner</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.Design.IDataSourceDesigner</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fournit la prise en charge au moment du design dans un hôte de conception pour la classe <see cref="T:System.Web.UI.DataSourceControl" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.DataSourceDesigner> classe est la classe de base pour les concepteurs de source de données, telle que la <xref:System.Web.UI.Design.WebControls.SqlDataSourceDesigner>, <xref:System.Web.UI.Design.WebControls.AccessDataSourceDesigner>, et <xref:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner> classes. Si vous créez un nouveau contrôle de source de données, vous pouvez également créer un concepteur de contrôles personnalisés pour votre contrôle et dérivez-le de le <xref:System.Web.UI.Design.DataSourceDesigner> classe.  
  
 Le <xref:System.Web.UI.Design.DataSourceDesigner> classe a deux méthodes d’événement : le <xref:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged%2A> et <xref:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed%2A> méthodes. Ces deux événements peuvent être temporairement désactivés avec le <xref:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents%2A> (méthode), qui définit le <xref:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents%2A> propriété. Les méthodes d’événement peuvent être activées à nouveau avec le <xref:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents%2A> (méthode).  
  
 Il existe deux méthodes statiques que vous pouvez utiliser pour évaluer l’équivalence des schémas ou des vues sans créer d’instance de la classe :  
  
-   Le <xref:System.Web.UI.Design.DataSourceDesigner.SchemasEquivalent%2A> méthode compare deux schémas.  
  
-   Le <xref:System.Web.UI.Design.DataSourceDesigner.ViewSchemasEquivalent%2A> méthode compare les schémas de deux vues.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un contrôle de source de données personnalisées avec plusieurs autres petites classes personnalisées, comme indiqué dans le tableau suivant.  
  
|Classe personnalisée|Dérivé de|  
|------------------|------------------|  
|`CustomDataSource`|<xref:System.Web.UI.WebControls.ObjectDataSource>|  
|`CustomDataSourceDesigner`|<xref:System.Web.UI.Design.DataSourceDesigner>|  
|`CustomDataSourceView`|<xref:System.Web.UI.WebControls.ObjectDataSourceView>|  
|`CustomDesignDataSourceView`|<xref:System.Web.UI.Design.DesignerDataSourceView>|  
|`BookListViewSchema`|<xref:System.Web.UI.Design.IDataSourceViewSchema>|  
|`CustomIDFieldSchema`|<xref:System.Web.UI.Design.IDataSourceFieldSchema>|  
|`CustomTitleFieldSchema`|<xref:System.Web.UI.Design.IDataSourceFieldSchema>|  
|`BookItem` (Une structure de données à deux champs.)||  
  
 Après la compilation de l’exemple de code, ouvrez la page .aspx en mode Design et définissez le `DataSourceID` ID à la propriété du contrôle de source de données personnalisées.  
  
 [!code-csharp[DataSourceDesignerSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataSourceDesignerSample/CS/DataSourceDesignerSample.cs#1)]
 [!code-vb[DataSourceDesignerSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataSourceDesignerSample/VB/DataSourceDesignerSample.vb#1)]  
[!code-aspx-csharp[DataSourceDesignerSample#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataSourceDesignerSample/CS/DataSourceDesignerSample.aspx#6)]
[!code-aspx-vb[DataSourceDesignerSample#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataSourceDesignerSample/VB/DataSourceDesignerSample.aspx#6)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Pour fournir des commandes pour le menu de liste d’actions au moment du design dans une classe dérivée, vous devez substituer la <see cref="P:System.Web.UI.Design.DataSourceDesigner.ActionLists" /> propriété à retourner un personnalisé <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> objet avec des éléments personnalisés qui sont dérivés de la <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objet.</para>
    </block>
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <related type="Article" href="http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2">Extension de la prise en charge au moment du design</related>
    <related type="Article" href="http://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataSourceDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.Design.DataSourceDesigner" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.DataSourceDesigner.%23ctor%2A> constructeur est appelé par l’hôte de conception au moment du design.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="http://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.DataSourceDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActionLists : System.ComponentModel.Design.DesignerActionListCollection" Usage="System.Web.UI.Design.DataSourceDesigner.ActionLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une liste des éléments utilisés pour créer un menu de liste d'actions au moment du design.</summary>
        <value>Objet <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> qui contient les éléments de la liste d'actions pour le Concepteur de contrôles.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment créer un contrôle composite simple avec un <xref:System.Web.UI.WebControls.Label> contrôle et un <xref:System.Web.UI.WebControls.TextBox> contrôle, ainsi que les propriétés pour définir le `Text` propriétés sur les deux contrôles internes, ainsi que le <xref:System.Web.UI.WebControls.WebControl.Width%2A> et <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> propriétés de la <xref:System.Web.UI.WebControls.TextBox> contrôle. Une classe de Concepteur de contrôles associée crée trois <xref:System.ComponentModel.Design.DesignerActionMethodItem> commandes chaque qui définit deux propriétés sur le contrôle, et dont les paramètres pouvant être restaurées avec la fonctionnalité d’annulation dans l’hôte de conception. Bien que l’exemple de code n’utilise pas un personnalisé <xref:System.Web.UI.DataSourceControl> de l’objet, il montre comment substituer la <xref:System.Web.UI.Design.DataSourceDesigner.ActionLists%2A> propriété.  
  
 [!code-csharp[DesignerInvokeTransactedChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerInvokeTransactedChange/CS/InvokeTransactedChangeSample.cs#1)]
 [!code-vb[DesignerInvokeTransactedChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerInvokeTransactedChange/VB/InvokeTransactedChangeSample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous créez une classe personnalisée qui est dérivée de la <see cref="T:System.Web.UI.Design.DataSourceDesigner" /> (classe), vous devez substituer la <see cref="P:System.Web.UI.Design.DataSourceDesigner.ActionLists" /> propriété. Dans votre méthode de substitution, tout d’abord appeler la classe de base pour créer la valeur par défaut <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> de l’objet, puis ajoutez une liste d’actions qui sont spécifiques à votre classe personnalisée.</para>
        </block>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ActionLists" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
        <related type="Article" href="http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="http://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <Member MemberName="CanConfigure">
      <MemberSignature Language="C#" Value="public virtual bool CanConfigure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanConfigure" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.DataSourceDesigner.CanConfigure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanConfigure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanConfigure { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanConfigure : bool" Usage="System.Web.UI.Design.DataSourceDesigner.CanConfigure" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si la méthode <see cref="M:System.Web.UI.Design.DataSourceDesigner.Configure" /> peut être appelée.</summary>
        <value>
          <see langword="true" /> si <see cref="M:System.Web.UI.Design.DataSourceDesigner.Configure" /> peut être appelée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.Design.DataSourceDesigner.CanConfigure%2A> propriété dans une classe personnalisée pour activer ou désactiver la configuration au moment du design pour une source de données spécifique.  
  
 Un hôte de conception comme [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] utilise le <xref:System.Web.UI.Design.DataSourceDesigner.CanConfigure%2A> propriété afin de déterminer si une commande pour configurer la source de données apparaît dans le menu de liste d’actions au moment du design.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="http://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <Member MemberName="CanRefreshSchema">
      <MemberSignature Language="C#" Value="public virtual bool CanRefreshSchema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRefreshSchema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRefreshSchema As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRefreshSchema { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRefreshSchema : bool" Usage="System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si la méthode <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> peut être appelée.</summary>
        <value>
          <see langword="true" /> si <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> peut être appelé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema%2A> propriété dans une classe dérivée pour activer ou désactiver la possibilité d’actualiser le schéma au moment du design pour une source de données spécifique. Si votre application nécessite une structure de données invariant et le schéma ne changera jamais, vous souhaitez que le <xref:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema%2A> propriété à retourner `false`.  
  
 Un hôte de conception comme [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] utilise le <xref:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema%2A> propriété pour déterminer si une commande pour actualiser le schéma apparaît dans le menu de liste d’actions au moment du design.  
  
 Dans une hôte de conception tel que [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], vous pouvez voir le <xref:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema%2A> propriété en action en effectuant le processus suivant :  
  
1.  Sur votre page, placez un <xref:System.Web.UI.WebControls.SqlDataSource> ou un <xref:System.Web.UI.WebControls.AccessDataSource> contrôle.  
  
2.  En mode conception, sur la liste d’actions, cliquez sur **configurer**.  
  
3.  Supprimez quelques champs de la source de données.  
  
4.  Dans la liste d’actions, cliquez sur **actualiser le schéma**.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="http://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public virtual void Configure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Configure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.Configure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Configure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Configure();" />
      <MemberSignature Language="F#" Value="abstract member Configure : unit -&gt; unit&#xA;override this.Configure : unit -&gt; unit" Usage="dataSourceDesigner.Configure " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceDesigner.Configure</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lance l'utilitaire de configuration de source de données dans l'hôte de conception.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.DataSourceDesigner.Configure%2A> méthode n’est pas prise en charge dans les <xref:System.Web.UI.Design.DataSourceDesigner> classe ; Toutefois, il peut être remplacé par les concepteurs de source de données personnalisée héritant de la <xref:System.Web.UI.Design.DataSourceDesigner> classe.  
  
 Dans une hôte de conception tel que [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], vous pouvez voir le <xref:System.Web.UI.Design.DataSourceDesigner.Configure%2A> méthode en action en effectuant le processus suivant :  
  
1.  Placer un <xref:System.Web.UI.WebControls.SqlDataSource> ou un <xref:System.Web.UI.WebControls.AccessDataSource> sur votre page.  
  
2.  En mode conception, sur la liste d’actions, en cliquant sur **configurer**.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Une tentative d'appel de cette méthode dans la classe de base a été effectuée.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="http://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'une propriété quelconque de la source de données associée est modifiée.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged(System.EventArgs)" />
        <related type="Article" href="http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="http://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public override string GetDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.GetDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDesignTimeHtml();" />
      <MemberSignature Language="F#" Value="override this.GetDesignTimeHtml : unit -&gt; string" Usage="dataSourceDesigner.GetDesignTimeHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère le balisage HTML pour afficher le contrôle de source de données associé au moment du design.</summary>
        <returns>Balisage pour l'affichage au moment du design.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’implémentation par défaut de la <xref:System.Web.UI.Design.DataSourceDesigner.GetDesignTimeHtml%2A> méthode retourne le résultat de la base de <xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A?displayProperty=nameWithType> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" />
        <related type="Article" href="http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="http://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.DesignerDataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.DesignerDataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetView (viewName As String) As DesignerDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Design::DesignerDataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetView : string -&gt; System.Web.UI.Design.DesignerDataSourceView&#xA;override this.GetView : string -&gt; System.Web.UI.Design.DesignerDataSourceView" Usage="dataSourceDesigner.GetView viewName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignerDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nom de la vue.</param>
        <summary>Récupère un objet <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> identifié par le nom de vue.</summary>
        <returns>Cette implémentation retourne toujours <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans les classes dérivées, si `viewName` n’existe pas, le <xref:System.Web.UI.Design.DataSourceDesigner.GetView%2A> méthode doit retourner `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DesignerDataSourceView" />
        <related type="Article" href="http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="http://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="public virtual string[] GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetViewNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="abstract member GetViewNames : unit -&gt; string[]&#xA;override this.GetViewNames : unit -&gt; string[]" Usage="dataSourceDesigner.GetViewNames " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un tableau des noms de vues disponibles dans cette source de données.</summary>
        <returns>Tableau des noms de vues.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2">Extension de la prise en charge au moment du design</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceChanged : EventArgs -&gt; unit" Usage="dataSourceDesigner.OnDataSourceChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objet <see cref="T:System.EventArgs" /> fourni par l'objet appelant.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> lorsque les propriétés de la source de données ont changé et que la valeur <see cref="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" /> est <see langword="false" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged%2A> méthode notifie le Concepteur de chaque contrôle est lié à la source de données associée d’actualiser son contrôle dans l’hôte de conception. Le <xref:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged%2A> méthode peut être supprimée avec la <xref:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents%2A> méthode ou en appelant le <xref:System.Web.UI.Design.DataSourceDesigner.RefreshSchema%2A> méthode avec un argument de `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" />
        <altmember cref="M:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents" />
        <related type="Article" href="http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="http://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <Member MemberName="OnSchemaRefreshed">
      <MemberSignature Language="C#" Value="protected virtual void OnSchemaRefreshed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSchemaRefreshed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSchemaRefreshed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSchemaRefreshed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSchemaRefreshed : EventArgs -&gt; unit&#xA;override this.OnSchemaRefreshed : EventArgs -&gt; unit" Usage="dataSourceDesigner.OnSchemaRefreshed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objet <see cref="T:System.EventArgs" />.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" /> lorsque le schéma de la source de données a changé et que la valeur <see cref="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" /> est <see langword="false" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed%2A> méthode notifie le Concepteur de chaque contrôle est lié à la source de données associée qui les champs du schéma ont été modifiés. Le <xref:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed%2A> méthode peut être supprimée avec la <xref:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents%2A> méthode ou en appelant le <xref:System.Web.UI.Design.DataSourceDesigner.RefreshSchema%2A> propriété avec un argument de `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents" />
        <altmember cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" />
        <related type="Article" href="http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="http://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <Member MemberName="RefreshSchema">
      <MemberSignature Language="C#" Value="public virtual void RefreshSchema (bool preferSilent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshSchema(bool preferSilent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RefreshSchema (preferSilent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RefreshSchema(bool preferSilent);" />
      <MemberSignature Language="F#" Value="abstract member RefreshSchema : bool -&gt; unit&#xA;override this.RefreshSchema : bool -&gt; unit" Usage="dataSourceDesigner.RefreshSchema preferSilent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preferSilent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="preferSilent">
          <see langword="true" /> pour autoriser les événements lors de l'actualisation du schéma ; <see langword="false" /> pour désactiver les événements <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> et <see cref="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" /> lors de l'actualisation du schéma.</param>
        <summary>Actualise le schéma de la source de données, en supprimant éventuellement des événements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode <xref:System.Web.UI.Design.DataSourceDesigner.RefreshSchema%2A> n'est pas prise en charge dans la classe <xref:System.Web.UI.Design.DataSourceDesigner>. Toutefois, il est pris en charge dans les classes dérivées, telles que la <xref:System.Web.UI.Design.WebControls.XmlDataSourceDesigner> classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Une tentative d'appel de cette méthode dans la classe de base a été effectuée.</exception>
        <altmember cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)" />
        <altmember cref="M:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed(System.EventArgs)" />
        <related type="Article" href="http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="http://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <Member MemberName="ResumeDataSourceEvents">
      <MemberSignature Language="C#" Value="public virtual void ResumeDataSourceEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeDataSourceEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResumeDataSourceEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResumeDataSourceEvents();" />
      <MemberSignature Language="F#" Value="abstract member ResumeDataSourceEvents : unit -&gt; unit&#xA;override this.ResumeDataSourceEvents : unit -&gt; unit" Usage="dataSourceDesigner.ResumeDataSourceEvents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restaure les événements de source de données après que ceux-ci ont été supprimés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Événements de source de données peuvent être supprimés en définissant le <xref:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents%2A> propriété `false` ou en appelant le <xref:System.Web.UI.Design.DataSourceDesigner.RefreshSchema%2A> méthode avec un argument de `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Une tentative d'appel de cette méthode dans la classe de base a été effectuée.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="http://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <Member MemberName="SchemaRefreshed">
      <MemberSignature Language="C#" Value="public event EventHandler SchemaRefreshed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SchemaRefreshed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SchemaRefreshed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ SchemaRefreshed;" />
      <MemberSignature Language="F#" Value="member this.SchemaRefreshed : EventHandler " Usage="member this.SchemaRefreshed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit après l'actualisation du schéma.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed(System.EventArgs)" />
        <related type="Article" href="http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="http://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <Member MemberName="SchemasEquivalent">
      <MemberSignature Language="C#" Value="public static bool SchemasEquivalent (System.Web.UI.Design.IDataSourceSchema schema1, System.Web.UI.Design.IDataSourceSchema schema2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SchemasEquivalent(class System.Web.UI.Design.IDataSourceSchema schema1, class System.Web.UI.Design.IDataSourceSchema schema2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.SchemasEquivalent(System.Web.UI.Design.IDataSourceSchema,System.Web.UI.Design.IDataSourceSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SchemasEquivalent (schema1 As IDataSourceSchema, schema2 As IDataSourceSchema) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SchemasEquivalent(System::Web::UI::Design::IDataSourceSchema ^ schema1, System::Web::UI::Design::IDataSourceSchema ^ schema2);" />
      <MemberSignature Language="F#" Value="static member SchemasEquivalent : System.Web.UI.Design.IDataSourceSchema * System.Web.UI.Design.IDataSourceSchema -&gt; bool" Usage="System.Web.UI.Design.DataSourceDesigner.SchemasEquivalent (schema1, schema2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema1" Type="System.Web.UI.Design.IDataSourceSchema" />
        <Parameter Name="schema2" Type="System.Web.UI.Design.IDataSourceSchema" />
      </Parameters>
      <Docs>
        <param name="schema1">Premier schéma à comparer (dérivé du <see cref="T:System.Web.UI.Design.IDataSourceSchema" />).</param>
        <param name="schema2">Deuxième schéma à comparer.</param>
        <summary>Fournit une valeur qui indique si deux schémas sont équivalents.</summary>
        <returns>
          <see langword="true" /> si les deux schémas sont équivalents ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Comparaison des deux schémas est basée sur les vues, ainsi que les noms et les types de champs qui sont contenus dans les vues. Le <xref:System.Web.UI.Design.DataSourceDesigner.SchemasEquivalent%2A> méthode peut être utilisée sans instance de la <xref:System.Web.UI.Design.DataSourceDesigner> classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.IDataSourceSchema" />
        <related type="Article" href="http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="http://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <Member MemberName="SuppressDataSourceEvents">
      <MemberSignature Language="C#" Value="public virtual void SuppressDataSourceEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SuppressDataSourceEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SuppressDataSourceEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SuppressDataSourceEvents();" />
      <MemberSignature Language="F#" Value="abstract member SuppressDataSourceEvents : unit -&gt; unit&#xA;override this.SuppressDataSourceEvents : unit -&gt; unit" Usage="dataSourceDesigner.SuppressDataSourceEvents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Diffère tous les événements de source de données jusqu'à l'appel de la méthode <see cref="M:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="http://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <Member MemberName="SuppressingDataSourceEvents">
      <MemberSignature Language="C#" Value="protected bool SuppressingDataSourceEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressingDataSourceEvents" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SuppressingDataSourceEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool SuppressingDataSourceEvents { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SuppressingDataSourceEvents : bool" Usage="System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si l'événement <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> ou la méthode <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> se produit.</summary>
        <value>
          <see langword="true" /> si des événements sont en cours de suppression ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents%2A> propriété peut être définie en appelant le <xref:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents%2A> ou <xref:System.Web.UI.Design.DataSourceDesigner.RefreshSchema%2A> méthode avec un argument de `true`.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="http://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
    <Member MemberName="ViewSchemasEquivalent">
      <MemberSignature Language="C#" Value="public static bool ViewSchemasEquivalent (System.Web.UI.Design.IDataSourceViewSchema viewSchema1, System.Web.UI.Design.IDataSourceViewSchema viewSchema2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ViewSchemasEquivalent(class System.Web.UI.Design.IDataSourceViewSchema viewSchema1, class System.Web.UI.Design.IDataSourceViewSchema viewSchema2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.ViewSchemasEquivalent(System.Web.UI.Design.IDataSourceViewSchema,System.Web.UI.Design.IDataSourceViewSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ViewSchemasEquivalent (viewSchema1 As IDataSourceViewSchema, viewSchema2 As IDataSourceViewSchema) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ViewSchemasEquivalent(System::Web::UI::Design::IDataSourceViewSchema ^ viewSchema1, System::Web::UI::Design::IDataSourceViewSchema ^ viewSchema2);" />
      <MemberSignature Language="F#" Value="static member ViewSchemasEquivalent : System.Web.UI.Design.IDataSourceViewSchema * System.Web.UI.Design.IDataSourceViewSchema -&gt; bool" Usage="System.Web.UI.Design.DataSourceDesigner.ViewSchemasEquivalent (viewSchema1, viewSchema2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewSchema1" Type="System.Web.UI.Design.IDataSourceViewSchema" />
        <Parameter Name="viewSchema2" Type="System.Web.UI.Design.IDataSourceViewSchema" />
      </Parameters>
      <Docs>
        <param name="viewSchema1">Première vue à comparer (dérivée du <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />).</param>
        <param name="viewSchema2">Deuxième vue à comparer.</param>
        <summary>Fournit une valeur qui détermine si deux vues de schéma sont équivalentes.</summary>
        <returns>
          <see langword="true" /> si les deux vues sont équivalentes ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.DataSourceDesigner.ViewSchemasEquivalent%2A> méthode peut être utilisée sans instance de la <xref:System.Web.UI.Design.DataSourceDesigner> classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.IDataSourceViewSchema" />
        <related type="Article" href="http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2">Extension de la prise en charge au moment du design</related>
        <related type="Article" href="http://msdn.microsoft.com/library/68f85054-2253-47f5-a4f2-3f1ac8c9f27b">Comment : étendre l'apparence et le comportement des contrôles en mode design</related>
      </Docs>
    </Member>
  </Members>
</Type>