<Type Name="ResourceExpressionEditorSheet" FullName="System.Web.UI.Design.ResourceExpressionEditorSheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b50d989a8967ce135aa653b93842234f86451eab" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55400031" /></Metadata><TypeSignature Language="C#" Value="public class ResourceExpressionEditorSheet : System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceExpressionEditorSheet extends System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceExpressionEditorSheet&#xA;Inherits ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceExpressionEditorSheet : System::Web::UI::Design::ExpressionEditorSheet" />
  <TypeSignature Language="F#" Value="type ResourceExpressionEditorSheet = class&#xA;    inherit ExpressionEditorSheet" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ExpressionEditorSheet</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente une feuille d'édition au moment du design pour les propriétés d'une expression de ressource dans l'interface utilisateur d'un hôte concepteur au moment du design.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le concepteur visuel utilise le <xref:System.Web.UI.Design.ResourceExpressionEditor> classe avec la <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> classe pour sélectionner les propriétés individuelles d’une expression de référence de ressource et de combiner les valeurs de propriété de ressource sélectionnée expression dans une expression de ressource.  
  
 La méthode <xref:System.Web.UI.Design.ConnectionStringsExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=nameWithType> retourne un objet <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>. Dans la boîte de dialogue expressions lorsque vous sélectionnez une propriété de contrôle et le liez à une expression de ressource, le concepteur visuel appelle le <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> (méthode). Le concepteur visuel utilise retourné <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> objet en invitant à indiquer le <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey%2A> et <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey%2A> propriétés. Une fois que les propriétés de l’expression de ressource sont sélectionnées, le concepteur visuel appelle la <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.GetExpression%2A> méthode pour combiner les propriétés dans une chaîne d’expression de ressource.  
  
 Le <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey%2A> propriété doit être spécifiée dans une expression de ressource ; il indexe la valeur de ressource. Le <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey%2A> propriété est facultative. Il fait référence au nom de clé ou un fichier de classe qui définit la ressource dans le dossier de ressources globales.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment lier le <xref:System.Web.UI.WebControls.HyperLink.Text%2A> propriété d’un <xref:System.Web.UI.WebControls.HyperLink> contrôle à une expression de ressource à l’aide de la <xref:System.Web.UI.Design.ResourceExpressionEditor>. Pour utiliser l’exemple :  
  
1.  Dans un projet de site Web, ajoutez un nouveau fichier de ressources nommé Strings.resx au dossier App_GlobalResources.  
  
2.  Ajoutez une chaîne nommée `myLinkText` à la ressource Strings.resx de fichiers et définissez la valeur sur le texte pour un <xref:System.Web.UI.WebControls.HyperLink> contrôle. Par exemple, définissez la `myLinkText` valeur de chaîne à `This is a link`.  
  
3.  Dans une page Web ASP.NET, ajoutez un <xref:System.Web.UI.WebControls.HyperLink> contrôle.  
  
4.  Dans la grille des propriétés pour le `Hyperlink` contrôler, cliquez sur **Expressions**, puis cliquez sur le bouton de sélection (**...)**  pour afficher la boîte de dialogue expression liaison.  
  
5.  Sélectionnez le `Text` propriété d’un contrôle et ensemble **Type d’Expression** à la `Resources` type d’expression. Le concepteur visuel affiche les propriétés de l’expression de ressource définies par le <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> objet.  
  
6.  Définir le **propriétés de l’Expression** comme suit :  
  
    -   Définissez **ClassKey** à `Strings`, le nom de classe pour le fichier de ressources Strings.resx compilé.  
  
    -   Définissez **ResourceKey** à `myLinkText`, le nom de chaîne dans Strings.resx.  
  
 Le concepteur visuel utilise le <xref:System.Web.UI.Design.ResourceExpressionEditor> objet pour affecter l’expression de ressource pour le `Text` propriété. La source aspx suivante montre un exemple d’une valeur de propriété définie à l’aide d’une expression de ressource :  
  
 [!code-aspx-csharp[ControlsUsingExpressions#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlsUsingExpressions/CS/controlsusingexpressionscs.aspx#3)]
 [!code-aspx-vb[ControlsUsingExpressions#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlsUsingExpressions/VB/controlsusingexpressionsvb.aspx#3)]
 [!code-xml[ControlsUsingExpressions#3](~/samples/snippets/common/VS_Snippets_WebNet/ControlsUsingExpressions/Common/controlsusingexpressions.xml#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As String, serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ResourceExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ResourceExpressionEditorSheet" Usage="new System.Web.UI.Design.ResourceExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Expression de ressource utilisée pour initialiser la feuille d'éditeur d'expression.</param>
        <param name="serviceProvider">Implémentation d'un fournisseur de services fournie par l'hôte du concepteur, utilisée pour obtenir des services supplémentaires au moment du design.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Initial <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey%2A> et <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey%2A> les valeurs de propriété sont définies à l’aide de l’entrée `expression` chaîne. Le <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> propriété est définie à l’aide de l’entrée `serviceProvider` implémentation.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
      </Docs>
    </Member>
    <Member MemberName="ClassKey">
      <MemberSignature Language="C#" Value="public string ClassKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ClassKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClassKey : string with get, set" Usage="System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la clé qui correspond au nom de fichier de la ressource dans le dossier de ressources globales du projet.</summary>
        <value>Clé d'un fichier de ressources dans le dossier de ressources globales.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], les fichiers de ressources globales sont situés dans le dossier App_GlobalResources.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public override string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetExpression();" />
      <MemberSignature Language="F#" Value="override this.GetExpression : unit -&gt; string" Usage="resourceExpressionEditorSheet.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une expression de ressource qui est formée par les valeurs des propriétés de la feuille d'éditeur d'expression.</summary>
        <returns>Chaîne de l'expression de ressource pour les paramètres actuels dans la feuille.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ResourceExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Design.ResourceExpressionEditorSheet.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si la chaîne d'expression de ressource est valide.</summary>
        <value><see langword="true" /> si la chaîne d'expression de ressource est valide ; sinon <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette implémentation de base retourne toujours `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="ResourceKey">
      <MemberSignature Language="C#" Value="public string ResourceKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResourceKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResourceKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResourceKey : string with get, set" Usage="System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.Design.ResourceExpressionEditorSheet/ResourceKeyTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de la ressource qui est utilisé comme clé pour rechercher la valeur de la ressource.</summary>
        <value>Nom de la ressource.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey%2A> propriété est requise pour une expression de ressource ; elle indique le nom de la ressource. Le nom de la ressource est utilisé au moment de l’exécution pour rechercher une ressource et l’affecter à une propriété de contrôle.  
  
 Par exemple, si le <xref:System.Web.UI.WebControls.Label.Text%2A> propriété pour un <xref:System.Web.UI.WebControls.Label> contrôle est assigné à l’expression de ressource `<%$ Resources:Strings, labelText $>`, l’expression de ressource est évaluée et la <xref:System.Web.UI.WebControls.Label.Text%2A> champ est assigné à la `labelText` valeur de ressource dans le `Strings` classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
      </Docs>
    </Member>
  </Members>
</Type>