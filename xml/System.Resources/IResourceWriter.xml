<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IResourceWriter.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58dba7d85f9728eb6e1fdc317242b5776a5a86af0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8dba7d85f9728eb6e1fdc317242b5776a5a86af0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Resources.IResourceWriter">
          <source>Provides the base functionality for writing resources to an output file or stream.</source>
          <target state="translated">Fournit la fonctionnalité de base qui permet d'écrire les ressources dans un fichier ou dans un flux de sortie.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.IResourceWriter">
          <source>Resource writers are used to write resources to files in a particular file format.</source>
          <target state="translated">Writers de ressources sont utilisées pour écrire des ressources dans des fichiers dans un format de fichier particulier.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.IResourceWriter">
          <source>Implement this interface if you want to control the way in which a resource file is written (for example, to store resources in something other than a .txt, .resx, or binary .resources file).</source>
          <target state="translated">Implémentez cette interface si vous souhaitez contrôler le mode dans lequel un fichier de ressources est écrit (par exemple, pour stocker des ressources dans un élément autre qu’un fichier .txt, .resx ou fichier .resources binaire).</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.IResourceWriter">
          <source>Otherwise, use the default <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class, which writes resources to a binary .resources file, or the <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> class, which writes resources to an XML resource (.resx) file.</source>
          <target state="translated">Sinon, utilisez la valeur par défaut <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> (classe), qui écrit les ressources dans un fichier .resources binaire, ou le <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> (classe), qui écrit les ressources dans un fichier de ressources (.resx) XML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Resources.IResourceWriter">
          <source>Adds a resource to the list of resources to be written to an output file or output stream.</source>
          <target state="translated">Ajoute une ressource à la liste des ressources à écrire dans un fichier ou dans un flux de sortie.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])">
          <source>Name of a resource.</source>
          <target state="translated">Nom de la ressource.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])">
          <source>Value of a resource as an 8-bit unsigned integer array.</source>
          <target state="translated">Valeur d'une ressource en tant que tableau d'entiers non signés 8 bits.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])">
          <source>Adds an 8-bit unsigned integer array as a named resource to the list of resources to be written.</source>
          <target state="translated">Ajoute un tableau d'entiers non signés 8 bits en tant que ressource nommée à la liste des ressources à écrire.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The resources are not written until the <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> method is called.</source>
          <target state="translated">Les ressources ne sont pas écrites jusqu'à ce que le <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> méthode est appelée.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="name" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)">
          <source>The name of the resource.</source>
          <target state="translated">Nom de la ressource.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)">
          <source>The value of the resource.</source>
          <target state="translated">Valeur de la ressource.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)">
          <source>Adds a named resource of type <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to the list of resources to be written.</source>
          <target state="translated">Ajoute une ressource nommée de type <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> à la liste des ressources à écrire.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)">
          <source>The resource is not written until the <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> method is called.</source>
          <target state="translated">La ressource n’est pas écrite tant que la <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> méthode est appelée.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)">
          <source><ph id="ph1">`value`</ph> might have to be serializable, so you might have to provide a type converter, depending on which resource writer is used.</source>
          <target state="translated"><ph id="ph1">`value`</ph> peut-être être sérialisable, vous devrez peut-être fournir un convertisseur de type, selon le writer de ressource est utilisé.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="name" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)">
          <source>The name of the resource.</source>
          <target state="translated">Nom de la ressource.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)">
          <source>The value of the resource.</source>
          <target state="translated">Valeur de la ressource.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)">
          <source>Adds a named resource of type <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to the list of resources to be written.</source>
          <target state="translated">Ajoute une ressource nommée de type <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> à la liste des ressources à écrire.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)">
          <source>The resource is not written until the <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> method is called.</source>
          <target state="translated">La ressource n’est pas écrite tant que la <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> méthode est appelée.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="name" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.Close">
          <source>Closes the underlying resource file or stream, ensuring all the data has been written to the file.</source>
          <target state="translated">Ferme le fichier de ressources ou le flux sous-jacent en vérifiant que toutes les données ont été écrites dans le fichier.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.Close">
          <source>If necessary, <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph> will call the <ph id="ph2">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> method to output the resources to the underlying file or stream before closing it.</source>
          <target state="translated">Si nécessaire, <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph> appellera la <ph id="ph2">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> méthode pour afficher les ressources dans le fichier ou le flux sous-jacent avant de le fermer.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.Generate">
          <source>Writes all the resources added by the <ph id="ph1">&lt;see cref="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)" /&gt;</ph> method to the output file or stream.</source>
          <target state="translated">Écrit toutes les ressources ajoutées par la méthode <ph id="ph1">&lt;see cref="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)" /&gt;</ph> au fichier ou flux de sortie.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.Generate">
          <source><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> does not close the output file or output stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> ne fermez pas le fichier de sortie ou le flux de sortie.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.Generate">
          <source>Instead, consider calling the <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">Au lieu de cela, il vaut mieux appeler le <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.Generate">
          <source><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> is useful when you want to create a resource file, but you don't want to close the output stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> est utile lorsque vous souhaitez créer un fichier de ressources, mais vous ne souhaitez pas fermer le flux de sortie.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.Generate">
          <source><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> can be called only once.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> peut être appelée qu’une seule fois.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.Generate">
          <source>After you call <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph>, all <ph id="ph2">&lt;xref:System.Resources.IResourceWriter&gt;</ph> methods other than <ph id="ph3">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph> will throw an exception.</source>
          <target state="translated">Après avoir appelé <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph>, tous les <ph id="ph2">&lt;xref:System.Resources.IResourceWriter&gt;</ph> méthodes autres que <ph id="ph3">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph> lève une exception.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>