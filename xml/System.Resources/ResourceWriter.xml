<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ResourceWriter.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57c8904a91116396045e9b5669d9767d0e81cdc42.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c8904a91116396045e9b5669d9767d0e81cdc42</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceWriter">
          <source>Writes resources in the system-default format to an output file or an output stream.</source>
          <target state="translated">Écrit les ressources au format par défaut du système dans un fichier ou un flux de sortie.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceWriter">
          <source>This class cannot be inherited.</source>
          <target state="translated">Cette classe ne peut pas être héritée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> provides a default implementation of the <ph id="ph2">&lt;xref:System.Resources.IResourceWriter&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> Fournit une implémentation par défaut de la <ph id="ph2">&lt;xref:System.Resources.IResourceWriter&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>It enables you to programmatically create a binary resource (.resources) file.</source>
          <target state="translated">Il vous permet de créer par programmation un fichier de ressources binaires (.resources).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>Resources are specified as name and value pairs using the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> method.</source>
          <target state="translated">Les ressources sont spécifiées en tant que paires nom / valeur à l’aide de la <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>Resource names are case-sensitive when used for lookups, but to more easily support authoring tools and help eliminate bugs, <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> will not allow a .resources file to have names that vary only by case.</source>
          <target state="translated">Les noms de ressources respectent la casse lorsqu’il est utilisé pour les recherches, mais plus facilement prennent en charge les outils de création et aider à éliminer les bogues, <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> ne permet pas un fichier .resources d’avoir des noms qui varient uniquement par la casse.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class enables you to create string, object, and binary resources.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> classe permet de vous permet de créer une chaîne, l’objet et les ressources binaires.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>Binary resources can be written to the resource file as a byte array or a stream.</source>
          <target state="translated">Ressources binaires peuvent être écrites au fichier de ressources en tant que tableau d’octets ou un flux de données.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Ce type implémente le <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Lorsque vous avez fini d’utiliser le type, vous devez la supprimer directement ou indirectement.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Pour supprimer le type directement, vous devez appeler sa <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> méthode dans un <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloc.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Pour la supprimer indirectement, utiliser une construction de langage telles que <ph id="ph1">`using`</ph> (en c#) ou <ph id="ph2">`Using`</ph> (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Pour plus d’informations, consultez la section « Utilisant un objet qui implémente IDisposable » dans la <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> rubrique de l’interface.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>To create a resources file, create a <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> with a unique file name, call <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> at least once, call <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> to write the resources file to disk, and then call <ph id="ph4">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> to close the file.</source>
          <target state="translated">Pour créer un fichier de ressources, créez un <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> avec un nom de fichier unique, appelez <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> au moins une fois, appelez <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> pour écrire le fichier de ressources sur le disque, puis appelez <ph id="ph4">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> pour fermer le fichier.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>Calling <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> will implicitly call <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> if you do not explicitly call <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph>.</source>
          <target state="translated">Appel de <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> appelle implicitement <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> si vous n’avez pas explicitement appelez <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>The resources will not necessarily be written in the same order they were added.</source>
          <target state="translated">Les ressources ne seront pas nécessairement être écrite dans le même ordre qu’ils ont été ajoutés.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>To retrieve resources from a binary .resources file created by the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class, you can use the <ph id="ph2">&lt;xref:System.Resources.ResourceManager&gt;</ph> class, which lets you retrieve named resources, or the <ph id="ph3">&lt;xref:System.Resources.ResourceReader&gt;</ph> class, which lets you enumerate all the resources in the file.</source>
          <target state="translated">Pour récupérer des ressources à partir d’un fichier .resources binaire créé par le <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> (classe), vous pouvez utiliser la <ph id="ph2">&lt;xref:System.Resources.ResourceManager&gt;</ph> (classe), qui vous permet de récupérer des ressources nommés, ou le <ph id="ph3">&lt;xref:System.Resources.ResourceReader&gt;</ph> (classe), qui vous permet d’énumérer toutes les ressources dans le fichier.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>The following example writes several strings into the myResources.resources file.</source>
          <target state="translated">L’exemple suivant écrit plusieurs chaînes dans le fichier myResources.resources.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)">
          <source>The output stream.</source>
          <target state="translated">Flux de sortie.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> class that writes the resources to the provided stream.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> qui écrit les ressources dans le flux fourni.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)">
          <source>The following code example defines a new instance of the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class that writes to a specified stream.</source>
          <target state="translated">L’exemple de code suivant définit une nouvelle instance de la <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> classe qui écrit dans un flux de données spécifié.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)">
          <source>The code adds resources to the writer and writes the resources to the stream.</source>
          <target state="translated">Le code ajoute des ressources au writer et écrit les ressources dans le flux de données.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> parameter is not writable.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> n'est pas accessible en écriture.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.String)">
          <source>The output file name.</source>
          <target state="translated">Nom du fichier de sortie.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> class that writes the resources to the specified file.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> qui écrit les ressources dans le fichier spécifié.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.#ctor(System.String)">
          <source>The following code example defines a new instance of the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class that will write to a specified file.</source>
          <target state="translated">L’exemple de code suivant définit une nouvelle instance de la <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> classe chargée d’écrire dans un fichier spécifié.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.#ctor(System.String)">
          <source>The code adds resources to the writer and writes the resources to the file.</source>
          <target state="translated">Le code ajoute des ressources au writer et écrit les ressources dans le fichier.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceWriter">
          <source>Adds a resource to the list of resources to be written.</source>
          <target state="translated">Ajoute une ressource à la liste de ressources à écrire.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The name of the resource.</source>
          <target state="translated">Nom de la ressource.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>Value of the resource as an 8-bit unsigned integer array.</source>
          <target state="translated">Valeur de la ressource en tant que tableau d'entiers non signés 8 bits.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>Adds a named resource specified as a byte array to the list of resources to be written.</source>
          <target state="translated">Ajoute une ressource nommée, spécifiée en tant que tableau d'octets, à la liste des ressources à écrire.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The resource is not written until <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> is called.</source>
          <target state="translated">La ressource n’est pas écrite tant que <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>You can retrieve the resources written by the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29&gt;</ph> method by calling the <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Vous pouvez récupérer les ressources écrites par le <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29&gt;</ph> en appelant le <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29&gt;</ph> method to add a graphics image that has been read as an array of bytes to a <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> object.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29&gt;</ph> méthode pour ajouter une image qui a été lu en tant que tableau d’octets à un <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (or a name that varies only by capitalization) has already been added to this <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (ou un nom dont seule la casse diffère) a déjà été ajouté à ce <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="name" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>This <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> has been closed and its hash table is unavailable.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> a été fermé et sa table de hachage n'est pas disponible.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>The name of the resource to add.</source>
          <target state="translated">Nom de la ressource à ajouter.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>The value of the resource to add.</source>
          <target state="translated">La valeur de la ressource à ajouter.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>The resource must support the <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph> property.</source>
          <target state="translated">La ressource doit prendre en charge la propriété <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>Adds a named resource specified as a stream to the list of resources to be written.</source>
          <target state="translated">Ajoute une ressource nommée, spécifiée en tant que flux, à la liste des ressources à écrire.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>You can specify any stream that supports the <ph id="ph1">&lt;xref:System.IO.Stream.Length%2A?displayProperty=nameWithType&gt;</ph> property for <ph id="ph2">`value`</ph>.</source>
          <target state="translated">Vous pouvez spécifier n’importe quel flux qui prend en charge la <ph id="ph1">&lt;xref:System.IO.Stream.Length%2A?displayProperty=nameWithType&gt;</ph> propriété <ph id="ph2">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>You can retrieve the resources written by the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29&gt;</ph> method by calling the <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Vous pouvez récupérer les ressources écrites par le <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29&gt;</ph> en appelant le <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29&gt;</ph> method to add a graphics image that has been saved to a <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph> object to a <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> object.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29&gt;</ph> méthode pour ajouter une image qui a été enregistrée dans un <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph> de l’objet à un <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (or a name that varies only by capitalization) has already been added to this <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (ou un nom dont seule la casse diffère) a déjà été ajouté à ce <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>The stream does not support the <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph> property.</source>
          <target state="translated">Le flux ne prend pas en charge la propriété <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="value" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>This <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> has been closed.</source>
          <target state="translated">Ce <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> a été fermé.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>The name of the resource.</source>
          <target state="translated">Nom de la ressource.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>The value of the resource.</source>
          <target state="translated">Valeur de la ressource.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>Adds a named resource specified as an object to the list of resources to be written.</source>
          <target state="translated">Ajoute une ressource nommée, spécifiée en tant qu'objet, à la liste des ressources à écrire.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source><ph id="ph1">`value`</ph> must be serializable.</source>
          <target state="translated"><ph id="ph1">`value`</ph> doit être sérialisable.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>The resource is not written until the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> method is called.</source>
          <target state="translated">La ressource n’est pas écrite tant que la <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> méthode est appelée.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>You can retrieve the resources written by the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29&gt;</ph> method by calling the <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Vous pouvez récupérer les ressources écrites par le <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29&gt;</ph> en appelant le <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29&gt;</ph> method to add object data to a binary resources file.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29&gt;</ph> pour ajouter des données d’objet à un fichier de ressources binaire.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source><ph id="ph1">`DonorColumns`</ph> is a custom class whose fields contain the names of columns to be displayed in the user interface.</source>
          <target state="translated"><ph id="ph1">`DonorColumns`</ph> est une classe personnalisée dont les champs contiennent les noms des colonnes à afficher dans l’interface utilisateur.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>Note that the class is marked with the <ph id="ph1">&lt;xref:System.SerializableAttribute&gt;</ph> attribute.</source>
          <target state="translated">Notez que la classe est marquée avec le <ph id="ph1">&lt;xref:System.SerializableAttribute&gt;</ph> attribut.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>Ordinarily, the class would be defined in a separate assembly, and a reference to it would be provided to the compiler at compile time.</source>
          <target state="translated">En règle générale, la classe serait être définie dans un assembly distinct, et une référence à celui-ci serait fournie au compilateur au moment de la compilation.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (or a name that varies only by capitalization) has already been added to this <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (ou un nom dont seule la casse diffère) a déjà été ajouté à ce <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="name" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>This <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> has been closed and its hash table is unavailable.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> a été fermé et sa table de hachage n'est pas disponible.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>The name of the resource.</source>
          <target state="translated">Nom de la ressource.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>The value of the resource.</source>
          <target state="translated">Valeur de la ressource.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>Adds a string resource to the list of resources to be written.</source>
          <target state="translated">Ajoute une ressource de chaîne à la liste de ressources à écrire.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>The resource is not written until <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> is called.</source>
          <target state="translated">La ressource n’est pas écrite tant que <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>You can retrieve the resources written by the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.String%29&gt;</ph> method by calling the <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Vous pouvez récupérer les ressources écrites par le <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.String%29&gt;</ph> en appelant le <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> method to add string resources to a <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> object.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> méthode pour ajouter des ressources de type chaîne à un <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (or a name that varies only by capitalization) has already been added to this ResourceWriter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (ou un nom dont seule la casse diffère) a déjà été ajouté à ce ResourceWriter.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="name" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>This <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> has been closed and its hash table is unavailable.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> a été fermé et sa table de hachage n'est pas disponible.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>The name of the resource to add.</source>
          <target state="translated">Nom de la ressource à ajouter.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>The value of the resource to add.</source>
          <target state="translated">La valeur de la ressource à ajouter.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>The resource must support the <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph> property.</source>
          <target state="translated">La ressource doit prendre en charge la propriété <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to close the stream after the <ph id="ph2">&lt;see cref="M:System.Resources.ResourceWriter.Generate" /&gt;</ph> method is called; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour fermer le flux après l'appel de la méthode <ph id="ph2">&lt;see cref="M:System.Resources.ResourceWriter.Generate" /&gt;</ph> ; sinon <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>Adds a named resource specified as a stream to the list of resources to be written, and specifies whether the stream should be closed after the <ph id="ph1">&lt;see cref="M:System.Resources.ResourceWriter.Generate" /&gt;</ph> method is called.</source>
          <target state="translated">Ajoute une ressource nommée, spécifiée en tant que flux, à la liste des ressources à écrire et spécifie si le flux doit être fermé après l'appel de la méthode <ph id="ph1">&lt;see cref="M:System.Resources.ResourceWriter.Generate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>You can specify any stream that supports the <ph id="ph1">&lt;xref:System.IO.Stream.Length%2A?displayProperty=nameWithType&gt;</ph> property for <ph id="ph2">`value`</ph>.</source>
          <target state="translated">Vous pouvez spécifier n’importe quel flux qui prend en charge la <ph id="ph1">&lt;xref:System.IO.Stream.Length%2A?displayProperty=nameWithType&gt;</ph> propriété <ph id="ph2">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>You can retrieve the resources written by the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29&gt;</ph> method by calling the <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Vous pouvez récupérer les ressources écrites par le <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29&gt;</ph> en appelant le <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29&gt;</ph> method to add a graphics image that has been saved to a <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph> object to a <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> object.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29&gt;</ph> méthode pour ajouter une image qui a été enregistrée dans un <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph> de l’objet à un <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (or a name that varies only by capitalization) has already been added to this <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (ou un nom dont seule la casse diffère) a déjà été ajouté à ce <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>The stream does not support the <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph> property.</source>
          <target state="translated">Le flux ne prend pas en charge la propriété <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="value" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>This <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> has been closed.</source>
          <target state="translated">Ce <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> a été fermé.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>A name that identifies the resource that contains the added data.</source>
          <target state="translated">Nom qui identifie la ressource contenant les données ajoutées.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The type name of the added data.</source>
          <target state="translated">Nom du type des données ajoutées.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>A byte array that contains the binary representation of the added data.</source>
          <target state="translated">Tableau d’octets qui contient la représentation binaire des données ajoutées.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>Adds a unit of data as a resource to the list of resources to be written.</source>
          <target state="translated">Ajoute une unité de données comme ressource dans la liste de ressources à écrire.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>Use the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> method to add a resource in binary form (that is, as an array of bytes) to the list of resources to be written.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> pour ajouter une ressource sous forme binaire (autrement dit, en tant que tableau d’octets) à la liste des ressources à écrire.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>You must specify the name of the resource, the type name of the data contained in the resource, and the binary representation of the data itself.</source>
          <target state="translated">Vous devez spécifier le nom de la ressource, le nom de type de données contenues dans la ressource et la représentation binaire des données elles-mêmes.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>After you have added each resource you require, use the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> method to write the list of resources to the resources file or stream that was specified in the <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Après avoir ajouté chaque ressource requise, utilisez le <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> méthode pour écrire la liste des ressources dans le fichier de ressources ou un flux qui a été spécifiée dans le <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.%23ctor%2A&gt;</ph> constructeur.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source><ph id="ph1">`typeName`</ph> is a string that represents the data type of the resource.</source>
          <target state="translated"><ph id="ph1">`typeName`</ph> est une chaîne qui représente le type de données de la ressource.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>It can be any of the following values:</source>
          <target state="translated">Il peut être une des valeurs suivantes :</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The string representation of a <ph id="ph1">`ResourceTypeCode`</ph> enumeration member that indicates the data type of the resource.</source>
          <target state="translated">La représentation sous forme de chaîne d’un <ph id="ph1">`ResourceTypeCode`</ph> membre d’énumération qui indique le type de données de la ressource.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source><ph id="ph1">`ResourceTypeCode`</ph> is a private enumeration that is used by  to indicate that a special binary format is used to store one of 19 common data types.</source>
          <target state="translated"><ph id="ph1">`ResourceTypeCode`</ph> est une énumération privée qui est utilisée par pour indiquer qu’un format binaire spécial est utilisé pour stocker un des types de données courants 19.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>These include the .NET Framework primitive data types (<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>, <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Char&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.Double&gt;</ph>, <ph id="ph6">&lt;xref:System.Int16&gt;</ph>, <ph id="ph7">&lt;xref:System.Int32&gt;</ph>, <ph id="ph8">&lt;xref:System.Int64&gt;</ph>, <ph id="ph9">&lt;xref:System.Single&gt;</ph>, <ph id="ph10">&lt;xref:System.SByte&gt;</ph>, <ph id="ph11">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph12">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph13">&lt;xref:System.UInt64&gt;</ph>), as well as <ph id="ph14">&lt;xref:System.String&gt;</ph>, <ph id="ph15">&lt;xref:System.DateTime&gt;</ph>, and <ph id="ph16">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">Ceux-ci comprennent les types de données primitifs .NET Framework (<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>, <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Char&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.Double&gt;</ph>, <ph id="ph6">&lt;xref:System.Int16&gt;</ph>, <ph id="ph7">&lt;xref:System.Int32&gt;</ph>, <ph id="ph8">&lt;xref:System.Int64&gt;</ph>, <ph id="ph9">&lt;xref:System.Single&gt;</ph>, <ph id="ph10">&lt;xref:System.SByte&gt;</ph>, <ph id="ph11">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph12">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph13">&lt;xref:System.UInt64&gt;</ph>), ainsi que <ph id="ph14">&lt;xref:System.String&gt;</ph>, <ph id="ph15">&lt;xref:System.DateTime&gt;</ph>, et <ph id="ph16">&lt;xref:System.TimeSpan&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>In addition, the <ph id="ph1">`ResourceTypeCode`</ph> enumeration includes the values shown in the following table.</source>
          <target state="translated">En outre, le <ph id="ph1">`ResourceTypeCode`</ph> énumération inclut les valeurs indiquées dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source><ph id="ph1">`ResourceTypeCode`</ph> value</source>
          <target state="translated">Valeur <ph id="ph1">`ResourceTypeCode`</ph></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The data is a byte array.</source>
          <target state="translated">Les données sont un tableau d’octets.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The data is a null reference.</source>
          <target state="translated">Les données sont une référence null.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The data is stored in a stream.</source>
          <target state="translated">Les données sont stockées dans un flux de données.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>A string that contains the fully qualified name of the type whose binary data is assigned to the <ph id="ph1">`serializedData`</ph> argument (for example, <ph id="ph2">`System.String`</ph>).</source>
          <target state="translated">Chaîne qui contient le nom qualifié complet du type dont les données binaires sont assignées à la <ph id="ph1">`serializedData`</ph> argument (par exemple, <ph id="ph2">`System.String`</ph>).</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type.</source>
          <target state="translated">En outre, pour les types qui ne font pas partie de la bibliothèque de classes .NET Framework, la chaîne inclut le nom, la version, la culture et la clé publique de l’assembly qui contient le type.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>For example, the following string indicates that the serialized data represents an instance of the <ph id="ph1">`Person`</ph> type in the <ph id="ph2">`Extensions`</ph> namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.</source>
          <target state="translated">Par exemple, la chaîne suivante indique que les données sérialisées représentent une instance de la <ph id="ph1">`Person`</ph> de type dans le <ph id="ph2">`Extensions`</ph> espace de noms, qui se trouve dans la version 1.0 d’un assembly nommé utilitaire qui a aucune clé publique et aucune culture désignée.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>A parallel method for reading resource data written with the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> method is <ph id="ph2">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Une méthode parallèle pour la lecture des données de ressources écrites avec le <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> méthode est <ph id="ph2">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> method to write two integer values to a .resources file, and then uses a <ph id="ph2">&lt;xref:System.Resources.ResourceReader&gt;</ph> object to retrieve them.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> méthode écrire entier deux valeurs à un fichier .resources, puis utilise une <ph id="ph2">&lt;xref:System.Resources.ResourceReader&gt;</ph> objet pour les récupérer.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph>, <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="serializedData" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph>, <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> ou <ph id="ph3">&lt;paramref name="serializedData" /&gt;</ph> est <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (or a name that varies only by capitalization) has already been added to this <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (ou un nom qui diffère uniquement par les majuscules) a déjà été ajouté à cet objet <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> object is not initialized.</source>
          <target state="translated">L’objet <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> actuel n’est pas initialisé.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The probable cause is that the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> object is closed.</source>
          <target state="translated">La cause probable est que l’objet <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Close">
          <source>Saves the resources to the output stream and then closes it.</source>
          <target state="translated">Enregistre les ressources dans le flux de sortie puis ferme ce dernier.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Close">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> is called implicitly by <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph>, if required.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> est appelé implicitement par <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph>, si nécessaire.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Close">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> method to write all resource objects in a <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class to the output stream.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> méthode pour écrire les ressources de tous les objets dans un <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> classe dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Close">
          <source>The code then shuts down the writer.</source>
          <target state="translated">Le code puis s’arrête l’enregistreur.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Close">
          <source>An I/O error has occurred.</source>
          <target state="translated">Une erreur d’E/S s’est produite.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Close">
          <source>An error has occurred during serialization of the object.</source>
          <target state="translated">Une erreur s'est produite pendant la sérialisation de l'objet.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Dispose">
          <source>Allows users to close the resource file or stream, explicitly releasing resources.</source>
          <target state="translated">Permet aux utilisateurs de fermer le fichier ou le flux de ressources, libérant de ce fait les ressources de manière explicite.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Dispose">
          <source>The implementation of this method is the same as <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph>.</source>
          <target state="translated">L’implémentation de cette méthode est identique à <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Dispose">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Dispose%2A&gt;</ph> method to write all resource objects in a <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class to the output stream.</source>
          <target state="translated">Le code suivant exemple utilise le <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Dispose%2A&gt;</ph> méthode pour écrire les ressources de tous les objets dans un <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> classe dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Dispose">
          <source>The code then shuts down the writer and make the writer's resources available for other processes.</source>
          <target state="translated">Ensuite, le code s’arrête l’enregistreur et rendre les ressources du writer disponibles pour d’autres processus.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Dispose">
          <source>An I/O error has occurred.</source>
          <target state="translated">Une erreur d’E/S s’est produite.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Dispose">
          <source>An error has occurred during serialization of the object.</source>
          <target state="translated">Une erreur s'est produite pendant la sérialisation de l'objet.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Generate">
          <source>Saves all resources to the output stream in the system default format.</source>
          <target state="translated">Enregistre toutes les ressources au format par défaut du système dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Generate">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> method is called implicitly by the <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> method if it is not called by your application code.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> méthode est appelée implicitement par la <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> méthode si elle n’est pas appelée par votre code d’application.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Generate">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> can only be called once, after all calls to <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> have been made.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> peut être appelé une seule fois, après tous les appels à <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> ont été apportées.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Generate">
          <source>If an exception occurs while writing the resources, the output stream will be closed to prevent writing invalid information.</source>
          <target state="translated">Si une exception se produit lors de l’écriture des ressources, le flux de sortie est fermé pour empêcher l’écriture des informations non valides.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Generate">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> does not close the output stream in normal cases.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> ne fermez pas le flux de sortie dans les cas normaux.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Generate">
          <source>Unless you are combining extra data with your .resources file or need access to the stream afterwards, you should call <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph>, or simply call <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph>.</source>
          <target state="translated">Sauf si vous combinez des données supplémentaires avec votre fichier .resources ou accès au flux par la suite, vous devez appeler <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> après avoir appelé <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph>, ou simplement appeler <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Generate">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> method to write all resource objects in a <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class to the output stream</source>
          <target state="translated">Le code suivant exemple utilise le <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> méthode pour écrire les ressources de tous les objets dans un <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> classe dans le flux de sortie</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Generate">
          <source>An I/O error occurred.</source>
          <target state="translated">Une erreur d'E/S s'est produite.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Generate">
          <source>An error occurred during serialization of the object.</source>
          <target state="translated">Une erreur s'est produite pendant la sérialisation de l'objet.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Generate">
          <source>This <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> has been closed and its hash table is unavailable.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> a été fermé et sa table de hachage n'est pas disponible.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Resources.ResourceWriter.TypeNameConverter">
          <source>Gets or sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework prior to the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> by using qualified assembly names.</source>
          <target state="translated">Obtient ou définit un délégué qui permet d’écrire des assemblys de ressources qui ciblent des versions du .NET Framework antérieures à <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> en utilisant des noms d’assemblys qualifiés.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResourceWriter.TypeNameConverter">
          <source>The type that is encapsulated by the delegate.</source>
          <target state="translated">Type encapsulé par le délégué.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResourceWriter.TypeNameConverter">
          <source><ph id="ph1">[!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)]</ph> and MSBuild set this property if you target an earlier version of the .NET Framework.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)]</ph> et MSBuild définissent cette propriété si vous ciblez une version antérieure du .NET Framework.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>