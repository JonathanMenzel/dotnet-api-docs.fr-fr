<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ResourceSet.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a1c004c2cbe90a3788b82697a631822576eef92f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1c004c2cbe90a3788b82697a631822576eef92f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceSet">
          <source>Stores all the resources localized for one particular culture, ignoring all other cultures, including any fallback rules.</source>
          <target state="translated">Stocke toutes les ressources localisées pour une culture spécifique, en ignorant toutes les autres cultures, y compris les règles de secours.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceSet">
          <source><bpt id="p1">**</bpt>Security Note<ept id="p1">**</ept>: Calling methods in this class with untrusted data is a security risk.</source>
          <target state="translated"><bpt id="p1">**</bpt>Note de sécurité<ept id="p1">**</ept> : L’appel de méthodes dans cette classe avec des données non approuvées constitue un risque pour la sécurité.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceSet">
          <source>Call the methods in the class only with trusted data.</source>
          <target state="translated">Appelez les méthodes dans la classe uniquement avec des données approuvées.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceSet">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Risques de sécurité liés aux données non approuvées<ept id="p1">](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceSet">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph> class enumerates over an <ph id="ph2">&lt;xref:System.Resources.IResourceReader&gt;</ph>, loading every name and value, and storing them in a <ph id="ph3">&lt;xref:System.Collections.Hashtable&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph> classe énumère un <ph id="ph2">&lt;xref:System.Resources.IResourceReader&gt;</ph>, le chargement de chaque nom et la valeur et les stocker dans un <ph id="ph3">&lt;xref:System.Collections.Hashtable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceSet">
          <source>A custom <ph id="ph1">&lt;xref:System.Resources.IResourceReader&gt;</ph> can be used.</source>
          <target state="translated">Personnalisé <ph id="ph1">&lt;xref:System.Resources.IResourceReader&gt;</ph> peut être utilisé.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceSet">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph> object that represents the resources of a specific culture by calling the <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Vous pouvez instancier un <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph> objet qui représente les ressources d’une culture spécifique en appelant le <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceSet">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Ce type implémente le <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceSet">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Lorsque vous avez fini d’utiliser le type, vous devez la supprimer directement ou indirectement.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceSet">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Pour supprimer le type directement, vous devez appeler sa <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> méthode dans un <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloc.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceSet">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Pour la supprimer indirectement, utiliser une construction de langage telles que <ph id="ph1">`using`</ph> (en c#) ou <ph id="ph2">`Using`</ph> (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceSet">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Pour plus d’informations, consultez la section « Utilisant un objet qui implémente IDisposable » dans la <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> rubrique de l’interface.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceSet">
          <source>Derived classes of <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> that use their own resource reader and writer should override <ph id="ph2">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultReader" /&gt;</ph>, and <ph id="ph3">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /&gt;</ph>, to provide the appropriate functionality for interpreting the resource set.</source>
          <target state="translated">Les classes dérivées de <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> qui utilisent leur propre lecteur et writer doit substituer <ph id="ph2">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultReader" /&gt;</ph>, et <ph id="ph3">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /&gt;</ph>, pour fournir la fonctionnalité appropriée permettant d’interpréter le jeu de ressources.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceSet">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> class.</source>
          <target state="translated">Crée une instance de la classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> class with default properties.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> avec des propriétés par défaut.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> of resources to be read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> de ressources à lire.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
          <source>The stream should refer to an existing resources file.</source>
          <target state="translated">Le flux doit faire référence à un fichier de ressources existant.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> class using the system default <ph id="ph2">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> that reads resources from the given stream.</source>
          <target state="translated">Crée une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> à l'aide du <ph id="ph2">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> système par défaut qui lit les ressources du flux donné.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is not readable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> ne peut pas être lu.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
          <source>for providing serialization services.</source>
          <target state="translated">pour fournir des services de sérialisation.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
          <source>Associated enumeration:   <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> action de sécurité : <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requiert une confiance totale pour l’appelant immédiat.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)">
          <source>The reader that will be used.</source>
          <target state="translated">Lecteur qui sera utilisé.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> class using the specified resource reader.</source>
          <target state="translated">Crée une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> à l'aide du lecteur de ressources spécifié.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)">
          <source>You can use this constructor to support custom resource formats using a user-provided <ph id="ph1">&lt;xref:System.Resources.IResourceReader&gt;</ph>.</source>
          <target state="translated">Vous pouvez utiliser ce constructeur pour prendre en charge les formats de ressources personnalisés à l’aide d’un fourni par l’utilisateur <ph id="ph1">&lt;xref:System.Resources.IResourceReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)">
          <source>The <ph id="ph1">&lt;paramref name="reader" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="reader" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.String)">
          <source>Resource file to read.</source>
          <target state="translated">Fichier de ressources à lire.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.String)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> class using the system default <ph id="ph2">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> that opens and reads resources from the given file.</source>
          <target state="translated">Crée une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> à l'aide du <ph id="ph2">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> système par défaut qui ouvre et lit les ressources du fichier donné.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.#ctor(System.String)">
          <source>The following code example defines a new instance of the <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph> class for a specific file, iterates through the resources used by that file, and displays their contents to the console.</source>
          <target state="translated">L’exemple de code suivant définit une nouvelle instance de la <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph> classe pour un fichier spécifique, parcourt les ressources utilisées par ce fichier et affiche leur contenu dans la console.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.Close">
          <source>Closes and releases any resources used by this <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</source>
          <target state="translated">Ferme et libère toutes les ressources utilisées par ce <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Close">
          <source>All calls to methods on the <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph> after a call to this method might fail.</source>
          <target state="translated">Tous les appels aux méthodes sur le <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph> après un appel à cette méthode peut échouer.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Close">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceSet.Close%2A&gt;</ph> can be safely called multiple times.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceSet.Close%2A&gt;</ph> peut être appelée en toute sécurité plusieurs fois.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Close">
          <source>The current implementation of <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Close%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph> (<ph id="ph3">`true`</ph>).</source>
          <target state="translated">L’implémentation actuelle de <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Close%2A&gt;</ph> appelle <ph id="ph2">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph> (<ph id="ph3">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Close">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Close%2A&gt;</ph> method to release all resources used by the calling <ph id="ph2">&lt;xref:System.Resources.ResourceSet&gt;</ph> instance.</source>
          <target state="translated">Le code suivant exemple utilise le <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Close%2A&gt;</ph> méthode pour libérer toutes les ressources utilisées par l’appelant <ph id="ph2">&lt;xref:System.Resources.ResourceSet&gt;</ph> instance.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceSet">
          <source>Releases resources used by the current <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> instance.</source>
          <target state="translated">Libère les ressources utilisées par l'instance actuelle de <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.Dispose">
          <source>Disposes of the resources (other than memory) used by the current instance of <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</source>
          <target state="translated">Libère les ressources (autres que la mémoire) utilisées par l'instance actuelle de <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Resources.ResourceSet&gt;</ph>.</source>
          <target state="translated">Appelez la méthode <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph> une fois que vous avez terminé d'utiliser <ph id="ph2">&lt;xref:System.Resources.ResourceSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Resources.ResourceSet&gt;</ph> in an unusable state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph> rend le <ph id="ph2">&lt;xref:System.Resources.ResourceSet&gt;</ph> inutilisable.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Resources.ResourceSet&gt;</ph> so the memory it was occupying can be reclaimed by garbage collection.</source>
          <target state="translated">Après avoir appelé <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph>, vous devez libérer toutes les références à la <ph id="ph2">&lt;xref:System.Resources.ResourceSet&gt;</ph> afin que la mémoire occupée puisse être récupérée par le garbage collection.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Dispose">
          <source>The current method is the implementation of <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La méthode actuelle est l’implémentation de <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Dispose">
          <source>This implementation calls <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph> (<ph id="ph2">`true`</ph>).</source>
          <target state="translated">Cette implémentation appelle <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph> (<ph id="ph2">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.Dispose(System.Boolean)">
          <source>Indicates whether the objects contained in the current instance should be explicitly closed.</source>
          <target state="translated">Indique si les objets contenus dans l'instance actuelle doivent être fermés de manière explicite.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.Dispose(System.Boolean)">
          <source>Releases resources (other than memory) associated with the current instance, closing internal managed objects if requested.</source>
          <target state="translated">Libère les ressources (autres que la mémoire) associées à l’instance actuelle, en fermant les objets internes managés si nécessaire.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Dispose(System.Boolean)">
          <source>If the <ph id="ph1">`dispose`</ph> parameter is <ph id="ph2">`true`</ph>, the current method frees all the resources associated with it as well as with all objects associated with it.</source>
          <target state="translated">Si le <ph id="ph1">`dispose`</ph> paramètre est <ph id="ph2">`true`</ph>, la méthode en cours libère toutes les ressources ainsi que tous les objets associés.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Dispose(System.Boolean)">
          <source>If <ph id="ph1">`dispose`</ph> is <ph id="ph2">`false`</ph>, the current method frees only the resources allocated to it, and ignores any objects associated with it.</source>
          <target state="translated">Si <ph id="ph1">`dispose`</ph> est <ph id="ph2">`false`</ph>, la méthode en cours libère uniquement les ressources qui lui sont allouées et ignore tous les objets associés.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetDefaultReader">
          <source>Returns the preferred resource reader class for this kind of <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</source>
          <target state="translated">Retourne la classe du lecteur de ressources préféré pour ce type de <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetDefaultReader">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> for the preferred resource reader for this kind of <ph id="ph2">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</source>
          <target state="translated">Retourne le <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> du lecteur de ressources préféré pour ce type de <ph id="ph2">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetDefaultReader">
          <source>Derived classes of <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> using their own resource reader should override <ph id="ph2">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultReader" /&gt;</ph>, and <ph id="ph3">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /&gt;</ph>.</source>
          <target state="translated">Les classes dérivées de <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> à l’aide de leur propre lecteur de ressources doit substituer <ph id="ph2">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultReader" /&gt;</ph>, et <ph id="ph3">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetDefaultWriter">
          <source>Returns the preferred resource writer class for this kind of <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</source>
          <target state="translated">Retourne la classe du writer de ressource préféré pour ce type de <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetDefaultWriter">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> for the preferred resource writer for this kind of <ph id="ph2">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</source>
          <target state="translated">Retourne le <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> du writer de ressource préféré pour ce type de <ph id="ph2">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetDefaultWriter">
          <source>Derived classes of <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> using their own resource reader should override <ph id="ph2">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultReader" /&gt;</ph>, and <ph id="ph3">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /&gt;</ph>.</source>
          <target state="translated">Les classes dérivées de <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> à l’aide de leur propre lecteur de ressources doit substituer <ph id="ph2">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultReader" /&gt;</ph>, et <ph id="ph3">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> that can iterate through the <ph id="ph2">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</source>
          <target state="translated">Retourne <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> qui peut itérer au sein de <ph id="ph2">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for this <ph id="ph2">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> pour ce <ph id="ph2">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>Enumerators only allow reading the data in the collection.</source>
          <target state="translated">Les énumérateurs permettent uniquement de lire les données dans la collection.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>Enumerators cannot be used to modify the underlying collection.</source>
          <target state="translated">Les énumérateurs ne peuvent pas être utilisés pour modifier la collection sous-jacente.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> replace également l'énumérateur à cette position.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>At this position, calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">À cette position, l’appel <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> lève une exception.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Par conséquent, vous devez appeler <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> pour avancer l'énumérateur jusqu'au premier élément de la collection avant de lire la valeur de <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> retourne le même objet tant que <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> n'est pas appelé.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> affecte l'élément suivant à <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Une fois la collection terminée, l'énumérateur est placé après le dernier élément de la collection et l'appel à <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retourne la valeur <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">Si le dernier appel à <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retourné <ph id="ph2">`false`</ph>, l’appel <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> lève une exception.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Pour attribuer une nouvelle fois <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> au premier élément de la collection, vous pouvez appeler <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> suivi de <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un énumérateur est valide tant que la collection demeure inchangée.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Si des modifications sont apportées à la collection, telles que l’ajout, modification ou suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> lève une <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> will return the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Si la collection est modifiée entre <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> retourne l'élément auquel il est attribué, même si l'énumérateur est déjà invalidé.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>You can use the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=nameWithType&gt;</ph> property to access the value stored in the current element.</source>
          <target state="translated">Vous pouvez utiliser le <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=nameWithType&gt;</ph> propriété pour accéder à la valeur stockée dans l’élément actuel.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>Use the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType&gt;</ph> property to access the key of the current element.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType&gt;</ph> propriété pour accéder à la clé de l’élément actuel.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>Use the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> property to access the value of the current element.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> propriété pour accéder à la valeur de l’élément actuel.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Comme l’énumérateur ne dispose pas d’un accès exclusif à la collection, l’énumération d’une collection n’est pas intrinsèquement une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Même lorsqu’une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui amène l’énumérateur à lever une exception.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>The following example demonstrates how to create a <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph><ph id="ph2">`rs`</ph> for the file <ph id="ph3">`items.resources`</ph>.</source>
          <target state="translated">L’exemple suivant montre comment créer un <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph> <ph id="ph2">`rs`</ph> pour le fichier <ph id="ph3">`items.resources`</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>Next, the <ph id="ph1">&lt;xref:System.Resources.ResourceSet.GetEnumerator%2A&gt;</ph> method is used to create an <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> for <ph id="ph3">`rs`</ph>.</source>
          <target state="translated">Ensuite, le <ph id="ph1">&lt;xref:System.Resources.ResourceSet.GetEnumerator%2A&gt;</ph> méthode est utilisée pour créer un <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> pour <ph id="ph3">`rs`</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> iterates through <ph id="ph2">`rs`</ph> and displays the contents to the console.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> itère <ph id="ph2">`rs`</ph> et affiche le contenu dans la console.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>The resource set has been closed or disposed.</source>
          <target state="translated">L'ensemble de ressources a été fermé ou supprimé.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceSet">
          <source>Returns a resource object with the specified name.</source>
          <target state="translated">Retourne un objet de ressource avec le nom spécifié.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String)">
          <source>Case-sensitive name of the resource to search for.</source>
          <target state="translated">Nom de la ressource à rechercher. Ce nom respecte la casse.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String)">
          <source>Searches for a resource object with the specified name.</source>
          <target state="translated">Recherche un objet de ressource avec le nom spécifié.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String)">
          <source>The requested resource.</source>
          <target state="translated">Ressource demandée.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String)">
          <source>The name of the resource object is case sensitive.</source>
          <target state="translated">Le nom de l’objet de ressource respecte la casse.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String)">
          <source>For a case-insensitive search, use <ph id="ph1">&lt;xref:System.Resources.ResourceSet.GetObject%2A&gt;</ph>.</source>
          <target state="translated">Pour une recherche sans respecter la casse, utilisez <ph id="ph1">&lt;xref:System.Resources.ResourceSet.GetObject%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="name" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String)">
          <source>The object has been closed or disposed.</source>
          <target state="translated">L'objet a été fermé ou supprimé.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>Name of the resource to search for.</source>
          <target state="translated">Nom de la ressource à rechercher.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>Indicates whether the case of the specified name should be ignored.</source>
          <target state="translated">Indique si la casse du nom spécifié doit être ignorée.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>Searches for a resource object with the specified name in a case-insensitive manner, if requested.</source>
          <target state="translated">Recherche un objet de ressource avec le nom spécifié sans respecter la casse, si nécessaire.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>The requested resource.</source>
          <target state="translated">Ressource demandée.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>If the value of the <ph id="ph1">`ignoreCase`</ph> parameter is <ph id="ph2">`true`</ph>, a resource with the name "Resource" is equivalent to the resource with the name "resource".</source>
          <target state="translated">Si la valeur de la <ph id="ph1">`ignoreCase`</ph> paramètre est <ph id="ph2">`true`</ph>, une ressource portant le nom « Ressource » est équivalente à la ressource portant le nom « resource ».</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>Note, however, that this method always performs case-insensitive string comparisons using <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Toutefois, notez que cette méthode effectue toujours des comparaisons de chaînes sans respecter la casse à l’aide de <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>The advantage is that results of case-insensitive string comparisons performed by this method are the same on all computers regardless of culture.</source>
          <target state="translated">L’avantage est que les résultats des comparaisons de chaînes sans respecter la casse effectuées par cette méthode sont les mêmes sur tous les ordinateurs, quelle que soit la culture.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>The disadvantage is that the results are not consistent with the casing rules of all cultures.</source>
          <target state="translated">L’inconvénient est que les résultats ne sont pas cohérentes avec les règles de casse de toutes les cultures.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>For example, the Turkish alphabet has two versions of the character I: one with a dot and one without a dot.</source>
          <target state="translated">Par exemple, l’alphabet turc a deux versions du caractère i : une avec un point et une sans le point.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>In Turkish, the character I (Unicode 0049) is considered the uppercase version of a different character ı (Unicode 0131).</source>
          <target state="translated">En turc, le caractère I (Unicode 0049) est considéré comme la version majuscule d’un caractère différent ı (Unicode 0131).</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>The character i (Unicode 0069) is considered the lowercase version of yet another character İ (Unicode 0130).</source>
          <target state="translated">Le caractère i (Unicode 0069) est considéré comme la version minuscule d’un autre caractère (Unicode 0130).</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>According to these casing rules, a case-insensitive string comparison of the characters i (Unicode 0069) and I (Unicode 0049) should fail for the culture "tr-TR" (Turkish in Turkey).</source>
          <target state="translated">Conformément à ces règles de casse, une comparaison de chaînes sans respecter la casse des caractères i (Unicode 0069) et I (Unicode 0049) doit échouer pour la culture « tr-TR » (turc de Turquie).</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>Using the <ph id="ph1">`GetObject`</ph> method with <ph id="ph2">`ignoreCase`</ph> set to <ph id="ph3">`true`</ph>, this comparison succeeds.</source>
          <target state="translated">À l’aide de la <ph id="ph1">`GetObject`</ph> méthode avec <ph id="ph2">`ignoreCase`</ph> la valeur <ph id="ph3">`true`</ph>, cette comparaison réussit.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="name" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>The object has been closed or disposed.</source>
          <target state="translated">L'objet a été fermé ou supprimé.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceSet">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> resource with a specified name.</source>
          <target state="translated">Retourne une ressource <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> avec un nom spécifié.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String)">
          <source>Name of the resource to search for.</source>
          <target state="translated">Nom de la ressource à rechercher.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String)">
          <source>Searches for a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> resource with the specified name.</source>
          <target state="translated">Recherche une ressource <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> avec le nom spécifié.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String)">
          <source>The value of a resource, if the value is a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Valeur d'une ressource, si la valeur est <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="name" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String)">
          <source>The resource specified by <ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">La ressource spécifiée par <ph id="ph1">&lt;paramref name="name" /&gt;</ph> n'est pas <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String)">
          <source>The object has been closed or disposed.</source>
          <target state="translated">L'objet a été fermé ou supprimé.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>Name of the resource to search for.</source>
          <target state="translated">Nom de la ressource à rechercher.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>Indicates whether the case of the case of the specified name should be ignored.</source>
          <target state="translated">Indique si la casse du nom spécifié doit être ignorée.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>Searches for a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> resource with the specified name in a case-insensitive manner, if requested.</source>
          <target state="translated">Recherche une ressource <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> avec le nom spécifié sans respecter la casse, si nécessaire.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>The value of a resource, if the value is a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">Valeur d'une ressource, si la valeur est <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>If the value of the <ph id="ph1">`ignoreCase`</ph> parameter is <ph id="ph2">`true`</ph>, a resource with the name "Resource" is equivalent to the resource with the name "resource".</source>
          <target state="translated">Si la valeur de la <ph id="ph1">`ignoreCase`</ph> paramètre est <ph id="ph2">`true`</ph>, une ressource portant le nom « Ressource » est équivalente à la ressource portant le nom « resource ».</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>Note, however, that this method always performs case-insensitive string comparisons using <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Toutefois, notez que cette méthode effectue toujours des comparaisons de chaînes sans respecter la casse à l’aide de <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>The advantage is that results of case-insensitive string comparisons performed by this method are the same on all computers regardless of culture.</source>
          <target state="translated">L’avantage est que les résultats des comparaisons de chaînes sans respecter la casse effectuées par cette méthode sont les mêmes sur tous les ordinateurs, quelle que soit la culture.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>The disadvantage is that the results are not consistent with the casing rules of all cultures.</source>
          <target state="translated">L’inconvénient est que les résultats ne sont pas cohérentes avec les règles de casse de toutes les cultures.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>For example, the Turkish alphabet has two versions of the character I: one with a dot and one without a dot.</source>
          <target state="translated">Par exemple, l’alphabet turc a deux versions du caractère i : une avec un point et une sans le point.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>In Turkish, the character I (Unicode 0049) is considered the uppercase version of a different character ı (Unicode 0131).</source>
          <target state="translated">En turc, le caractère I (Unicode 0049) est considéré comme la version majuscule d’un caractère différent ı (Unicode 0131).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>The character i (Unicode 0069) is considered the lowercase version of yet another character İ (Unicode 0130).</source>
          <target state="translated">Le caractère i (Unicode 0069) est considéré comme la version minuscule d’un autre caractère (Unicode 0130).</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>According to these casing rules, a case-insensitive string comparison of the characters i (Unicode 0069) and I (Unicode 0049) should fail for the culture "tr-TR" (Turkish in Turkey).</source>
          <target state="translated">Conformément à ces règles de casse, une comparaison de chaînes sans respecter la casse des caractères i (Unicode 0069) et I (Unicode 0049) doit échouer pour la culture « tr-TR » (turc de Turquie).</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>Using the <ph id="ph1">`GetString`</ph> method with <ph id="ph2">`ignoreCase`</ph> set to <ph id="ph3">`true`</ph>, this comparison succeeds.</source>
          <target state="translated">À l’aide de la <ph id="ph1">`GetString`</ph> méthode avec <ph id="ph2">`ignoreCase`</ph> la valeur <ph id="ph3">`true`</ph>, cette comparaison réussit.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="name" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>The resource specified by <ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">La ressource spécifiée par <ph id="ph1">&lt;paramref name="name" /&gt;</ph> n'est pas <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>The object has been closed or disposed.</source>
          <target state="translated">L'objet a été fermé ou supprimé.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="F:System.Resources.ResourceSet.Reader">
          <source>Indicates the <ph id="ph1">&lt;see cref="T:System.Resources.IResourceReader" /&gt;</ph> used to read the resources.</source>
          <target state="translated">Indique le <ph id="ph1">&lt;see cref="T:System.Resources.IResourceReader" /&gt;</ph> utilisé pour lire les ressources.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.ReadResources">
          <source>Reads all the resources and stores them in a <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> indicated in the <ph id="ph2">&lt;see cref="F:System.Resources.ResourceSet.Table" /&gt;</ph> property.</source>
          <target state="translated">Lit toutes les ressources et les stocke dans un <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> indiqué dans la propriété <ph id="ph2">&lt;see cref="F:System.Resources.ResourceSet.Table" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.ReadResources">
          <source>Derived classes of <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> should explicitly call <ph id="ph2">&lt;see cref="M:System.Resources.ResourceSet.ReadResources" /&gt;</ph> to load all the resources from the <ph id="ph3">&lt;see cref="T:System.Resources.IResourceReader" /&gt;</ph> into <ph id="ph4">&lt;see cref="F:System.Resources.ResourceSet.Table" /&gt;</ph>, generally either in the constructor or lazily on the first call to either <ph id="ph5">&lt;see cref="M:System.Resources.ResourceSet.GetString(System.String)" /&gt;</ph> or <ph id="ph6">&lt;see cref="M:System.Resources.ResourceSet.GetObject(System.String)" /&gt;</ph>.</source>
          <target state="translated">Les classes dérivées de <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> doit appeler explicitement <ph id="ph2">&lt;see cref="M:System.Resources.ResourceSet.ReadResources" /&gt;</ph> charger toutes les ressources à partir de la <ph id="ph3">&lt;see cref="T:System.Resources.IResourceReader" /&gt;</ph> dans <ph id="ph4">&lt;see cref="F:System.Resources.ResourceSet.Table" /&gt;</ph>, généralement dans le constructeur ou tardivement sur le premier appel à <ph id="ph5">&lt;see cref="M:System.Resources.ResourceSet.GetString(System.String)" /&gt;</ph> ou <ph id="ph6">&lt;see cref="M:System.Resources.ResourceSet.GetObject(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.ReadResources">
          <source>However, if your resource set and IResourceReader already have information about each other and have a more efficient way to load just a few select resources, this step can be skipped.</source>
          <target state="translated">Toutefois, si votre jeu de ressources et IResourceReader disposent déjà d’informations sur chacune des autres et aient un moyen plus efficace pour charger uniquement quelques sélectionner des ressources, cette étape peut être ignorée.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.ReadResources">
          <source>To minimize working set, write your resource set in such a way that it queries your IResourceReader for only the resource values requested by your application.</source>
          <target state="translated">Pour réduire la plage de travail, écrivez votre ressource définie de manière à ce qu’il demande votre IResourceReader pour seulement les valeurs de ressources demandées par votre application.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> object to avoid a race condition with <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Retourne un objet <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> pour éviter une condition de concurrence critique avec <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is not intended to be used directly from your code.</source>
          <target state="translated">Ce membre n'est pas destiné à être utilisé directement à partir de votre code.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator for the current <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> object.</source>
          <target state="translated">Énumérateur de l'objet <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="F:System.Resources.ResourceSet.Table">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> in which the resources are stored.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> dans lequel les ressources sont stockées.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>