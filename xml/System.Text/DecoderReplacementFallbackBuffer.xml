<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DecoderReplacementFallbackBuffer.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5010b14781ff6c1be527d5d15e28d0cba66ffd747.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">010b14781ff6c1be527d5d15e28d0cba66ffd747</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.DecoderReplacementFallbackBuffer">
          <source>Represents a substitute output string that is emitted when the original input byte sequence cannot be decoded.</source>
          <target state="translated">Représente la chaîne de sortie de substitution qui est émise lorsque la séquence d'octets en entrée ne peut pas être décodée.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Text.DecoderReplacementFallbackBuffer">
          <source>This class cannot be inherited.</source>
          <target state="translated">Cette classe ne peut pas être héritée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderReplacementFallbackBuffer">
          <source>It might not be possible to convert an encoded byte sequence to an equivalent character if no suitable decoding exists.</source>
          <target state="translated">Il se peut qu’il ne soit pas possible de convertir une séquence d’octets encodée en un caractère équivalent si aucun décodage adapté n’existe pas.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderReplacementFallbackBuffer">
          <source>A common reason for a decoding to fail is that the conversion operation uses a code page that cannot represent the character to decode.</source>
          <target state="translated">Une raison courante de l’échec du décodage est que l’opération de conversion utilise une page de codes qui ne peut pas représenter le caractère à décoder.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderReplacementFallbackBuffer">
          <source>If the input byte sequence cannot be converted to an output character, a <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallback?displayProperty=nameWithType&gt;</ph> object provides a replacement string that is substituted for the output character.</source>
          <target state="translated">Si la séquence d’octets d’entrée ne peut pas être convertie en un caractère de sortie, un <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallback?displayProperty=nameWithType&gt;</ph> objet fournit une chaîne de remplacement qui se substitue au caractère de sortie.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderReplacementFallbackBuffer">
          <source>The replacement string initializes the value of the <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> object, and the value of the <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> object initializes the value of a <ph id="ph3">&lt;xref:System.Text.DecoderReplacementFallbackBuffer&gt;</ph> object.</source>
          <target state="translated">La chaîne de remplacement initialise la valeur de la <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> objet et la valeur de la <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> objet initialise la valeur d’un <ph id="ph3">&lt;xref:System.Text.DecoderReplacementFallbackBuffer&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderReplacementFallbackBuffer">
          <source>The value of a <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallbackBuffer&gt;</ph> object is called the replacement fallback buffer.</source>
          <target state="translated">La valeur d’un <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallbackBuffer&gt;</ph> objet est appelé à la mémoire tampon de remplacement de secours.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderReplacementFallbackBuffer">
          <source>The conversion operation uses the replacement fallback buffer to emit a replacement string instead of a decoded character, then continues to process the remainder of the input.</source>
          <target state="translated">L’opération de conversion utilise la mémoire tampon de remplacement de secours pour émettre une chaîne de remplacement au lieu d’un caractère décodé, puis continue à traiter le reste de l’entrée.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderReplacementFallbackBuffer.#ctor(System.Text.DecoderReplacementFallback)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Text.DecoderReplacementFallback" /&gt;</ph> object that contains a replacement string.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Text.DecoderReplacementFallback" /&gt;</ph> qui contient une chaîne de remplacement.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderReplacementFallbackBuffer.#ctor(System.Text.DecoderReplacementFallback)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.DecoderReplacementFallbackBuffer" /&gt;</ph> class using the value of a <ph id="ph2">&lt;see cref="T:System.Text.DecoderReplacementFallback" /&gt;</ph> object.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Text.DecoderReplacementFallbackBuffer" /&gt;</ph> avec la valeur d'un objet <ph id="ph2">&lt;see cref="T:System.Text.DecoderReplacementFallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderReplacementFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>An input byte sequence.</source>
          <target state="translated">Séquence d'octets en entrée.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderReplacementFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>This parameter is ignored unless an exception is thrown.</source>
          <target state="translated">Ce paramètre est ignoré à moins qu'une exception ne soit levée.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderReplacementFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>The index position of the byte in <bpt id="p1">&lt;c&gt;</bpt>bytesUnknown<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Position d’index de l’octet dans <bpt id="p1">&lt;c&gt;</bpt>bytesUnknown<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderReplacementFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>This parameter is ignored in this operation.</source>
          <target state="translated">Ce paramètre est ignoré dans cette opération.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderReplacementFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>Prepares the replacement fallback buffer to use the current replacement string.</source>
          <target state="translated">Prépare la mémoire tampon de secours de remplacement pour utiliser la chaîne de remplacement en cours.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderReplacementFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the replacement string is not empty; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the replacement string is empty.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la chaîne de remplacement n'est pas vide ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> si la chaîne de remplacement est vide.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderReplacementFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph> methods call <ph id="ph3">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A&gt;</ph> if they encounter an unknown input byte sequence that cannot be decoded.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph> appel de méthodes <ph id="ph3">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A&gt;</ph> si elles rencontrent une séquence inconnue d’octets d’entrée qui ne peut pas être décodée.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderReplacementFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>If the return value of <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the calling method can invoke the <ph id="ph3">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.GetNextChar%2A&gt;</ph> method to obtain each character of the fallback buffer.</source>
          <target state="translated">Si la valeur de retour de <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A&gt;</ph> est <ph id="ph2">`true`</ph>, la méthode appelante peut appeler le <ph id="ph3">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.GetNextChar%2A&gt;</ph> méthode pour obtenir chaque caractère de la mémoire tampon de secours.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderReplacementFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>This method is called again before the <ph id="ph1">&lt;see cref="M:System.Text.DecoderReplacementFallbackBuffer.GetNextChar" /&gt;</ph> method has read all the characters in the replacement fallback buffer.</source>
          <target state="translated">Cette méthode est encore appelée avant que la méthode <ph id="ph1">&lt;see cref="M:System.Text.DecoderReplacementFallbackBuffer.GetNextChar" /&gt;</ph> n'ait lu tous les caractères dans la mémoire tampon de remplacement de secours.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderReplacementFallbackBuffer.GetNextChar">
          <source>Retrieves the next character in the replacement fallback buffer.</source>
          <target state="translated">Récupère le caractère suivant de la mémoire tampon de remplacement de secours.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderReplacementFallbackBuffer.GetNextChar">
          <source>The next character in the replacement fallback buffer.</source>
          <target state="translated">Caractère suivant de la mémoire tampon de remplacement de secours.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderReplacementFallbackBuffer.GetNextChar">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType&gt;</ph> methods call <ph id="ph3">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A&gt;</ph> if they encounter an unknown surrogate pair or character in their input.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph> et <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType&gt;</ph> appel de méthodes <ph id="ph3">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A&gt;</ph> si elles rencontrent un caractère en entrée ou une paire de substitution inconnue.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderReplacementFallbackBuffer.GetNextChar">
          <source>If the return value of <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the calling method can invoke <ph id="ph3">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.GetNextChar%2A&gt;</ph> to obtain each character of the replacement fallback buffer.</source>
          <target state="translated">Si la valeur de retour de <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A&gt;</ph> est <ph id="ph2">`true`</ph>, la méthode appelante peut appeler <ph id="ph3">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.GetNextChar%2A&gt;</ph> pour obtenir chaque caractère de la mémoire tampon de remplacement de secours.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderReplacementFallbackBuffer.MovePrevious">
          <source>Causes the next call to <ph id="ph1">&lt;see cref="M:System.Text.DecoderReplacementFallbackBuffer.GetNextChar" /&gt;</ph> to access the character position in the replacement fallback buffer prior to the current character position.</source>
          <target state="translated">Provoque l'appel suivant à <ph id="ph1">&lt;see cref="M:System.Text.DecoderReplacementFallbackBuffer.GetNextChar" /&gt;</ph> pour accéder à la position de caractère dans la mémoire tampon de remplacement de secours précédant la position de caractère en cours.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderReplacementFallbackBuffer.MovePrevious">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="M:System.Text.DecoderReplacementFallbackBuffer.MovePrevious" /&gt;</ph> operation was successful; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'opération <ph id="ph2">&lt;see cref="M:System.Text.DecoderReplacementFallbackBuffer.MovePrevious" /&gt;</ph> a réussi ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Text.DecoderReplacementFallbackBuffer.Remaining">
          <source>Gets the number of characters in the replacement fallback buffer that remain to be processed.</source>
          <target state="translated">Obtient le nombre de caractères dans la mémoire tampon de remplacement de secours qu'il reste à traiter.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.DecoderReplacementFallbackBuffer.Remaining">
          <source>The number of characters in the replacement fallback buffer that have not yet been processed.</source>
          <target state="translated">Nombre de caractères de la mémoire tampon de remplacement de secours n'ayant pas encore été traités.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.DecoderReplacementFallbackBuffer.Remaining">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> if the <ph id="ph3">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.Remaining%2A&gt;</ph> property is nonzero.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.Fallback%2A&gt;</ph> méthode retourne <ph id="ph2">`true`</ph> si le <ph id="ph3">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.Remaining%2A&gt;</ph> propriété est différente de zéro.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderReplacementFallbackBuffer.Reset">
          <source>Initializes all internal state information and data in the <ph id="ph1">&lt;see cref="T:System.Text.DecoderReplacementFallbackBuffer" /&gt;</ph> object.</source>
          <target state="translated">Initialise toutes les données et les informations d'état internes de l'objet <ph id="ph1">&lt;see cref="T:System.Text.DecoderReplacementFallbackBuffer" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderReplacementFallbackBuffer.Reset">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.Reset%2A&gt;</ph> method discards any persisted state information and data that govern the emitting of a replacement string.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.Reset%2A&gt;</ph> méthode ignore les informations d’état persistant et les données qui régissent l’émission d’une chaîne de remplacement.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderReplacementFallbackBuffer.Reset">
          <source>Unpredictable results occur if the decoding operation continues after the <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.Reset%2A&gt;</ph> method is invoked.</source>
          <target state="translated">Résultats inattendus se produisent si l’opération de décodage se poursuit après le <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallbackBuffer.Reset%2A&gt;</ph> méthode est appelée.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>