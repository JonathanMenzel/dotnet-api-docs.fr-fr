<Type Name="DecoderFallbackBuffer" FullName="System.Text.DecoderFallbackBuffer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a5ee1975a51e97cb188a7330accd71e9d9d0ce13" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37609537" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DecoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DecoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.DecoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DecoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DecoderFallbackBuffer abstract" />
  <TypeSignature Language="F#" Value="type DecoderFallbackBuffer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une mémoire tampon qui permet à un gestionnaire de secours de retourner une autre chaîne à un décodeur lorsqu'il ne peut pas décoder une séquence d'octets en entrée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un encodage définit un mappage entre un caractère Unicode et une séquence d’octets encodée. Une opération de décodage, qui convertit une séquence d’octets d’entrée en un caractère de sortie, échoue si aucun mappage n’est défini pour une séquence d’octets particulière.  
  
 Le .NET Framework fournit un mécanisme, appelé secours, si une conversion ne peut pas être effectuée de gestion. Tous les gestionnaires de secours de décodeur doivent implémenter les éléments suivants :  
  
-   Un décodeur de secours, qui est représenté par une classe dérivée de la <xref:System.Text.DecoderFallback> classe.  
  
-   Un tampon de secours de décodeur, qui est représenté par un type dérivé la <xref:System.Text.DecoderFallbackBuffer> classe qui peut retourner une chaîne à l’opération de conversion.  
  
 Solutions de secours peuvent utiliser trois stratégies pour gérer les échecs de conversion :  
  
-   Le mappage ajusté. La mémoire tampon de secours de décodeur peut retourner une chaîne qui représente une approximation de la séquence d’octets d’entrée. Le .NET Framework ne fournit pas ajustée publique <xref:System.Text.DecoderFallbackBuffer> implémentation.  
  
-   Remplacement. La mémoire tampon de secours de décodeur peut retourner une chaîne, par exemple un point d’interrogation (« ? »), qui indique qu’il est impossible de décoder une séquence d’octets. Dans le .NET Framework, le <xref:System.Text.DecoderReplacementFallback> et <xref:System.Text.DecoderReplacementFallbackBuffer> classes fournissent une implémentation de mémoire tampon de secours de remplacement publique. Le constructeur de la <xref:System.Text.DecoderReplacementFallback> classe vous permet de définir la chaîne de remplacement.  
  
-   Exception. Le <xref:System.Text.DecoderFallbackBuffer> implémentation lève une exception, ce qui indique qu’une séquence d’octets ne peut pas être décodée et met fin à l’opération de décodage. Dans ce cas, le Gestionnaire de secours doit fournir un <xref:System.Text.DecoderFallbackBuffer> implémentation, bien qu’elle ne retourne pas une chaîne au décodeur. Dans le .NET Framework, le <xref:System.Text.DecoderExceptionFallback> et <xref:System.Text.DecoderExceptionFallbackBuffer> classes fournissent une implémentation de secours d’exception publics qui lève un <xref:System.Text.DecoderFallbackException> quand une séquence d’octets ne peut pas être décodée.  
  
 La mémoire tampon dans un <xref:System.Text.DecoderFallbackBuffer> implémentation représente la chaîne entière à retourner au décodeur en réponse à un décodeur de secours. En règle générale, les implémentations incluent également des informations d’état, telles que l’index du caractère suivant à retourner pour le décodeur et le nombre de caractères restants à retourner. Étant donné que <xref:System.Text.DecoderFallbackBuffer> est une classe abstraite, elle nécessite des classes dérivées d’implémenter les membres suivants au minimum :  
  
-   Le <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> (méthode), qui est appelée par le décodeur lorsqu’il ne peut pas décoder une séquence d’octets. Le décodeur passe deux éléments d’information à l’implémentation de la mémoire tampon de secours : un tableau contenant les octets ne peuvent pas être décodés et l’index du premier octet dans le tableau d’octets d’entrée. Dans un gestionnaire d’exceptions de secours de décodeur, l’exception est levée dans cette méthode. Sinon, la méthode retourne `true` si elle fournit une procédure de secours, ou `false` si elle n’est pas le cas.  
  
-   Le <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> (méthode), qui est appelée à plusieurs reprises par le décodeur si le <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> retourne de la méthode `true`. Dans les appels successifs, le gestionnaire doit retourner chaque caractère dans sa mémoire tampon. Quand elle a retourné tous les caractères, elle doit retourner U + 0000. Un gestionnaire d’exceptions secours retourne toujours U + 0000.  
  
-   Le <xref:System.Text.DecoderFallbackBuffer.MovePrevious%2A> (méthode), qui tente de déplacer le pointeur à la position précédente dans la mémoire tampon et indique si le déplacement a réussi. Un gestionnaire d’exceptions retourne toujours `false`.  
  
-   Le <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> propriété, qui indique le nombre de caractères restants à retourner au décodeur. Un gestionnaire d’exceptions secours retourne toujours la valeur zéro.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.DecoderFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DecoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DecoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.DecoderFallbackBuffer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (byte[] bytesUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(unsigned int8[] bytesUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (bytesUnknown As Byte(), index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(cli::array &lt;System::Byte&gt; ^ bytesUnknown, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : byte[] * int -&gt; bool" Usage="decoderFallbackBuffer.Fallback (bytesUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytesUnknown" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytesUnknown">Tableau d'octets en entrée.</param>
        <param name="index">Position d’index d’un octet dans <c>bytesUnknown</c>.</param>
        <summary>En cas de substitution dans une classe dérivée, prépare la mémoire tampon de secours à la gestion de la séquence d'octets spécifiée en entrée.</summary>
        <returns>
          <see langword="true" /> si la mémoire tampon de secours peut traiter <paramref name="bytesUnknown" /> ; <see langword="false" /> si la mémoire tampon de secours ignore <paramref name="bytesUnknown" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType>, <xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType>, et <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> appel de méthodes <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> si elles rencontrent une séquence d’octets en entrée inconnus qui ne peut pas être décodée. La valeur de retour `true` indique que la mémoire tampon de secours peut traiter la séquence d’octets d’entrée, ce qui provoque la méthode d’appel appeler le <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> méthode pour obtenir chaque caractère de la mémoire tampon de secours. Car il ne traite pas les octets individuels, le <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> méthode dans un gestionnaire d’exceptions secours lève une exception.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberSignature Language="F#" Value="abstract member GetNextChar : unit -&gt; char" Usage="decoderFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, récupère le caractère suivant de la mémoire tampon de secours.</summary>
        <returns>Caractère suivant de la mémoire tampon de secours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une opération de décodage appelle le <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> méthode si l’opération rencontre une séquence d’octets inconnu dans l’entrée. Si le <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> méthode retourne `true`, une chaîne de substitution peuvent être insérés dans la sortie au lieu de décoder l’entrée inconnue. L’opération de décodage appelle le <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> méthode à plusieurs reprises et obtient la chaîne de remplacement d’un caractère à la fois. Lorsque tous les caractères dans la mémoire tampon de secours ont été retournés au décodeur, la méthode doit retourner U + 0000.  
  
 Pour un gestionnaire d’exceptions de secours, le <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> méthode doit retourner U + 0000.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberSignature Language="F#" Value="abstract member MovePrevious : unit -&gt; bool" Usage="decoderFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, provoque l'appel suivant à la méthode <see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /> pour accéder à la position de caractère de la mémoire tampon précédant la position de caractère en cours.</summary>
        <returns>
          <see langword="true" /> si l'opération <see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /> a réussi ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un gestionnaire d’exceptions secours doit retourner `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.DecoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.DecoderFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, obtient le nombre de caractères de l'objet <see cref="T:System.Text.DecoderFallbackBuffer" /> en cours qu'il reste à traiter.</summary>
        <value>Nombre de caractères de la mémoire tampon de secours n'ayant pas encore été traités.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> retourne de la méthode `true` si <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> est une valeur différente de zéro.  
  
 Pour un gestionnaire d’exceptions de secours, le <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> méthode doit retourner zéro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="decoderFallbackBuffer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialise toutes les données et informations d'état relatives à cette mémoire tampon de secours.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Après avoir appelé la <see cref="M:System.Text.DecoderFallbackBuffer.Reset" /> (méthode), le <see cref="P:System.Text.DecoderFallbackBuffer.Remaining" /> propriété doit retourner 0, la <see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /> méthode doit retourner U + 0000 et la <see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /> méthode doit retourner <see langword="false" />.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>