<Type Name="Decoder" FullName="System.Text.Decoder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="13b84f63684da5556905ba4fdf5eed7f591aa9bd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36408122" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Decoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Decoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.Decoder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Decoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class Decoder abstract" />
  <TypeSignature Language="F#" Value="type Decoder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d2676-101">Converts a sequence of encoded bytes into a set of characters.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d2676-101">Converts a sequence of encoded bytes into a set of characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2676-102">Pour obtenir une instance d’une implémentation de la <xref:System.Text.Decoder> (classe), l’application doit utiliser le <xref:System.Text.Encoding.GetDecoder%2A> méthode d’un <xref:System.Text.Encoding> implémentation.</span><span class="sxs-lookup"><span data-stu-id="d2676-102">To obtain an instance of an implementation of the <xref:System.Text.Decoder> class, the application should use the <xref:System.Text.Encoding.GetDecoder%2A> method of an <xref:System.Text.Encoding> implementation.</span></span>  
  
 <span data-ttu-id="d2676-103">Le <xref:System.Text.Decoder.GetCharCount%2A> méthode détermine le nombre de caractères entraînant le décodage d’une séquence d’octets et la <xref:System.Text.Decoder.GetChars%2A> méthode effectue le décodage réel.</span><span class="sxs-lookup"><span data-stu-id="d2676-103">The <xref:System.Text.Decoder.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Decoder.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="d2676-104">Il existe plusieurs versions de ces deux méthodes disponibles dans la <xref:System.Text.Decoder> classe.</span><span class="sxs-lookup"><span data-stu-id="d2676-104">There are several versions of both of these methods available in the <xref:System.Text.Decoder> class.</span></span> <span data-ttu-id="d2676-105">Pour plus d'informations, consultez <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d2676-105">For more information, see <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d2676-106">A <xref:System.Text.Decoder> objet conserve les informations d’état entre les appels successifs à `GetChars` ou <xref:System.Text.Decoder.Convert%2A> méthodes afin qu’il peut décoder correctement les séquences d’octets qui s’étendent sur des blocs.</span><span class="sxs-lookup"><span data-stu-id="d2676-106">A <xref:System.Text.Decoder> object maintains state information between successive calls to `GetChars` or <xref:System.Text.Decoder.Convert%2A> methods so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="d2676-107">Le <xref:System.Text.Decoder> également conserve les octets de fin à la fin des blocs de données et les octets de fin dans la prochaine opération de décodage.</span><span class="sxs-lookup"><span data-stu-id="d2676-107">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="d2676-108">Par conséquent, <xref:System.Text.Encoding.GetDecoder%2A> et <xref:System.Text.Encoding.GetEncoder%2A> sont utiles pour les opérations de transmission et de fichiers réseau, car celles-ci traitent souvent des blocs de données au lieu d’un flux de données complète.</span><span class="sxs-lookup"><span data-stu-id="d2676-108">Therefore, <xref:System.Text.Encoding.GetDecoder%2A> and <xref:System.Text.Encoding.GetEncoder%2A> are useful for network transmission and file operations because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2676-109">Lorsque l’application est faite avec un flux de données, elle doit s’assurer que les informations d’état sont vidées en définissant le `flush` paramètre `true` dans l’appel de méthode approprié.</span><span class="sxs-lookup"><span data-stu-id="d2676-109">When the application is done with a stream of data, it should make sure that the state information is flushed by setting the `flush` parameter to `true` in the appropriate method call.</span></span> <span data-ttu-id="d2676-110">Si une exception se produit ou si l’application inverse les flux, il doit appeler <xref:System.Text.Decoder.Reset%2A> pour effacer l’état interne de la `Decoder` objet.</span><span class="sxs-lookup"><span data-stu-id="d2676-110">If an exception occurs or if the application switches streams, it should call <xref:System.Text.Decoder.Reset%2A> to clear the internal state of the `Decoder` object.</span></span>  
  
## <a name="version-considerations"></a><span data-ttu-id="d2676-111">Considérations relatives à la version</span><span class="sxs-lookup"><span data-stu-id="d2676-111">Version Considerations</span></span>  
 <span data-ttu-id="d2676-112">A <xref:System.Text.Decoder> ou <xref:System.Text.Encoder> objet peut être sérialisé pendant une opération de conversion.</span><span class="sxs-lookup"><span data-stu-id="d2676-112">A <xref:System.Text.Decoder> or <xref:System.Text.Encoder> object can be serialized during a conversion operation.</span></span> <span data-ttu-id="d2676-113">L’état de l’objet est conservé s’il est désérialisé dans la même version du .NET Framework, mais est perdu s’il est désérialisé dans une autre version.</span><span class="sxs-lookup"><span data-stu-id="d2676-113">The state of the object is retained if it is deserialized in the same version of the .NET Framework, but lost if it is deserialized in another version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2676-114">L’exemple suivant illustre l’utilisation d’un <xref:System.Text.Decoder> pour convertir les deux tableaux d’octets différents en un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="d2676-114">The following example demonstrates the use of a <xref:System.Text.Decoder> to convert two different byte arrays into a character array.</span></span> <span data-ttu-id="d2676-115">Parmi les octets du caractère s’étend sur les tableaux.</span><span class="sxs-lookup"><span data-stu-id="d2676-115">One of the character's bytes spans the arrays.</span></span> <span data-ttu-id="d2676-116">Cela est similaire à ce qu’un <xref:System.IO.StreamReader> fait d’objet en interne lorsque la lecture d’un flux de données.</span><span class="sxs-lookup"><span data-stu-id="d2676-116">This is similar to what a <xref:System.IO.StreamReader> object does internally when reading a stream.</span></span>  
  
 [!code-cpp[Classic Decoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Decoder Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Decoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Decoder Example/CS/source.cs#1)]
 [!code-vb[Classic Decoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Decoder Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="d2676-117">
        <para>Lorsque votre application hérite de cette classe, il doit substituer tous les membres.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="d2676-117">
          <para>When your application inherits from this class, it must override all the members.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Decoder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Decoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d2676-118">Initializes a new instance of the <see cref="T:System.Text.Decoder" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-118">Initializes a new instance of the <see cref="T:System.Text.Decoder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2676-119">Pour obtenir une instance d’une implémentation de cette classe, l’application doit utiliser le <xref:System.Text.Encoding.GetDecoder%2A> méthode d’un <xref:System.Text.Encoding> mise en œuvre.</span><span class="sxs-lookup"><span data-stu-id="d2676-119">To obtain an instance of an implementation of this class, the application should use the <xref:System.Text.Encoding.GetDecoder%2A> method of a <xref:System.Text.Encoding> implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2676-120">L’exemple suivant illustre deux techniques pour initialiser un nouveau <xref:System.Text.Decoder> instance.</span><span class="sxs-lookup"><span data-stu-id="d2676-120">The following example demonstrates two techniques for initializing a new <xref:System.Text.Decoder> instance.</span></span>  
  
 [!code-cpp[System.Text.Decoder.ctor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Decoder.ctor Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.Decoder.ctor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Decoder.ctor Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.Decoder.ctor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Decoder.ctor Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d2676-121">Converts an encoded byte sequence to a string or array of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-121">Converts an encoded byte sequence to a string or array of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars, bool flush, out int bytesUsed, out int charsUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars, bool flush, [out] int32&amp; bytesUsed, [out] int32&amp; charsUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.Convert(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char), flush As Boolean, ByRef bytesUsed As Integer, ByRef charsUsed As Integer, ByRef completed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(ReadOnlySpan&lt;System::Byte&gt; bytes, Span&lt;char&gt; chars, bool flush, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberSignature Language="F#" Value="abstract member Convert : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; * bool *  *  *  -&gt; unit&#xA;override this.Convert : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; * bool *  *  *  -&gt; unit" Usage="decoder.Convert (bytes, chars, flush, bytesUsed, charsUsed, completed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="flush" Type="System.Boolean" />
        <Parameter Name="bytesUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="charsUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="completed" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <param name="flush">To be added.</param>
        <param name="bytesUsed">To be added.</param>
        <param name="charsUsed">To be added.</param>
        <param name="completed">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (byte* bytes, int byteCount, char* chars, int charCount, bool flush, out int bytesUsed, out int charsUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount, bool flush, [out] int32&amp; bytesUsed, [out] int32&amp; charsUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(System::Byte* bytes, int byteCount, char* chars, int charCount, bool flush, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberSignature Language="F#" Value="abstract member Convert : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int * bool *  *  *  -&gt; unit&#xA;override this.Convert : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int * bool *  *  *  -&gt; unit" Usage="decoder.Convert (bytes, byteCount, chars, charCount, flush, bytesUsed, charsUsed, completed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
        <Parameter Name="bytesUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="charsUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="completed" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="d2676-122">The address of a buffer that contains the byte sequences to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-122">The address of a buffer that contains the byte sequences to convert.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="d2676-123">The number of bytes in <c>bytes</c> to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-123">The number of bytes in <c>bytes</c> to convert.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="d2676-124">The address of a buffer to store the converted characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-124">The address of a buffer to store the converted characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="d2676-125">The maximum number of characters in <c>chars</c> to use in the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-125">The maximum number of characters in <c>chars</c> to use in the conversion.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="d2676-126">
            <see langword="true" /> to indicate no further data is to be converted; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-126">
              <see langword="true" /> to indicate no further data is to be converted; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="bytesUsed">
          <span data-ttu-id="d2676-127">When this method returns, contains the number of bytes that were produced by the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-127">When this method returns, contains the number of bytes that were produced by the conversion.</span>
          </span>
          <span data-ttu-id="d2676-128">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-128">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="charsUsed">
          <span data-ttu-id="d2676-129">When this method returns, contains the number of characters from <c>chars</c> that were used in the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-129">When this method returns, contains the number of characters from <c>chars</c> that were used in the conversion.</span>
          </span>
          <span data-ttu-id="d2676-130">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-130">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="completed">
          <span data-ttu-id="d2676-131">When this method returns, contains <see langword="true" /> if all the characters specified by <c>byteCount</c> were converted; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-131">When this method returns, contains <see langword="true" /> if all the characters specified by <c>byteCount</c> were converted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d2676-132">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-132">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2676-133">Converts a buffer of encoded bytes to UTF-16 encoded characters and stores the result in another buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-133">Converts a buffer of encoded bytes to UTF-16 encoded characters and stores the result in another buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2676-134">N’oubliez pas que le <xref:System.Text.Decoder> objet enregistre l’état entre les appels à <xref:System.Text.Decoder.Convert%2A>.</span><span class="sxs-lookup"><span data-stu-id="d2676-134">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.Convert%2A>.</span></span> <span data-ttu-id="d2676-135">Lorsque l’application est faite avec un flux de données, elle doit affecter la `flush` paramètre `true` pour vous assurer que les informations d’état sont vidées.</span><span class="sxs-lookup"><span data-stu-id="d2676-135">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="d2676-136">Avec ce paramètre, le décodeur ignore les octets non valides à la fin du bloc de données et efface la mémoire tampon interne.</span><span class="sxs-lookup"><span data-stu-id="d2676-136">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span> <span data-ttu-id="d2676-137">Les données traitées restantes qui fait partie d’une unité logique, telles que le substitut étendu d’une paire de substitution sont converties selon les paramètres de secours actifs.</span><span class="sxs-lookup"><span data-stu-id="d2676-137">Any remaining processed data that is part of a logical unit, such as the high surrogate of a surrogate pair, is converted according to the current fallback settings.</span></span>  
  
 <span data-ttu-id="d2676-138">Le `Convert` méthode est conçue pour être utilisée dans une boucle pour décoder une quantité arbitraire d’entrées, telles que les données lues à partir d’un fichier ou un flux.</span><span class="sxs-lookup"><span data-stu-id="d2676-138">The `Convert` method is designed to be used in a loop to decode an arbitrary amount of input, such as data read from a file or stream.</span></span> <span data-ttu-id="d2676-139">Elle stocke la sortie de l’opération de décodage dans un tampon de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="d2676-139">It stores the output of the decoding operation in a fixed-size buffer.</span></span> <span data-ttu-id="d2676-140"><xref:System.Text.Decoder.GetChars%2A> lève une exception si la mémoire tampon de sortie n’est pas assez grand, mais <xref:System.Text.Decoder.Convert%2A> remplira autant d’espace que possible et retourne les octets lus et les caractères écrits.</span><span class="sxs-lookup"><span data-stu-id="d2676-140"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="d2676-141">Consultez également le <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> rubrique pour plus de commentaires.</span><span class="sxs-lookup"><span data-stu-id="d2676-141">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 <span data-ttu-id="d2676-142">Le `completed` paramètre de sortie indique si toutes les données dans la mémoire tampon d’entrée a été convertie et stockée dans le tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="d2676-142">The `completed` output parameter indicates whether all the data in the input buffer was converted and stored in the output buffer.</span></span> <span data-ttu-id="d2676-143">Ce paramètre est défini sur `false` si le nombre d’octets spécifié par le `byteCount` paramètre ne peut pas être converti sans dépasser le nombre de caractères spécifié par le `charCount` paramètre.</span><span class="sxs-lookup"><span data-stu-id="d2676-143">This parameter is set to `false` if the number of bytes specified by the `byteCount` parameter cannot be converted without exceeding the number of characters specified by the `charCount` parameter.</span></span> <span data-ttu-id="d2676-144">Dans ce cas, l’application doit utiliser le contenu de la mémoire tampon de sortie ou fournir une nouvelle mémoire tampon de sortie, incrément le `bytes` paramètre par le nombre d’octets spécifié par le `bytesUsed` paramètre, puis appelez le `Convert` méthode à nouveau à traiter l’entrée restante.</span><span class="sxs-lookup"><span data-stu-id="d2676-144">In that situation, the application should use the contents of the output buffer or provide a new output buffer, increment the `bytes` parameter by the number of bytes specified by the `bytesUsed` parameter, then call the `Convert` method again to process the remaining input.</span></span>  
  
 <span data-ttu-id="d2676-145">Le `completed` paramètre peut également être défini sur `false`, même si le `bytesUsed` et `byteCount` paramètres sont égaux.</span><span class="sxs-lookup"><span data-stu-id="d2676-145">The `completed` parameter can also be set to `false`, even though the `bytesUsed` and `byteCount` parameters are equal.</span></span> <span data-ttu-id="d2676-146">Cette situation se produit s’il existe toujours des données dans le <xref:System.Text.Decoder> objet n’a pas été stockée dans le `bytes` mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="d2676-146">This situation occurs if there is still data in the <xref:System.Text.Decoder> object that has not been stored in the `bytes` buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2676-147">
            <paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-147">
              <paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d2676-148">
            <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-148">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2676-149">The output buffer is too small to contain any of the converted input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-149">The output buffer is too small to contain any of the converted input.</span>
          </span>
          <span data-ttu-id="d2676-150">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Decoder.GetCharCount" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-150">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Decoder.GetCharCount" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="d2676-151">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-151">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="d2676-152">Requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-152">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="d2676-153">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-153">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex, int charCount, bool flush, out int bytesUsed, out int charsUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex, int32 charCount, bool flush, [out] int32&amp; bytesUsed, [out] int32&amp; charsUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer, charCount As Integer, flush As Boolean, ByRef bytesUsed As Integer, ByRef charsUsed As Integer, ByRef completed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, bool flush, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberSignature Language="F#" Value="abstract member Convert : byte[] * int * int * char[] * int * int * bool *  *  *  -&gt; unit&#xA;override this.Convert : byte[] * int * int * char[] * int * int * bool *  *  *  -&gt; unit" Usage="decoder.Convert (bytes, byteIndex, byteCount, chars, charIndex, charCount, flush, bytesUsed, charsUsed, completed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
        <Parameter Name="bytesUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="charsUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="completed" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="d2676-154">A byte array to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-154">A byte array to convert.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="d2676-155">The first element of <c>bytes</c> to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-155">The first element of <c>bytes</c> to convert.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="d2676-156">The number of elements of <c>bytes</c> to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-156">The number of elements of <c>bytes</c> to convert.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="d2676-157">An array to store the converted characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-157">An array to store the converted characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="d2676-158">The first element of <c>chars</c> in which data is stored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-158">The first element of <c>chars</c> in which data is stored.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="d2676-159">The maximum number of elements of <c>chars</c> to use in the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-159">The maximum number of elements of <c>chars</c> to use in the conversion.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="d2676-160">
            <see langword="true" /> to indicate that no further data is to be converted; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-160">
              <see langword="true" /> to indicate that no further data is to be converted; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="bytesUsed">
          <span data-ttu-id="d2676-161">When this method returns, contains the number of bytes that were used in the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-161">When this method returns, contains the number of bytes that were used in the conversion.</span>
          </span>
          <span data-ttu-id="d2676-162">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-162">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="charsUsed">
          <span data-ttu-id="d2676-163">When this method returns, contains the number of characters from <c>chars</c> that were produced by the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-163">When this method returns, contains the number of characters from <c>chars</c> that were produced by the conversion.</span>
          </span>
          <span data-ttu-id="d2676-164">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-164">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="completed">
          <span data-ttu-id="d2676-165">When this method returns, contains <see langword="true" /> if all the characters specified by <c>byteCount</c> were converted; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-165">When this method returns, contains <see langword="true" /> if all the characters specified by <c>byteCount</c> were converted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d2676-166">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-166">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2676-167">Converts an array of encoded bytes to UTF-16 encoded characters and stores the result in a character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-167">Converts an array of encoded bytes to UTF-16 encoded characters and stores the result in a character array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2676-168">N’oubliez pas que le <xref:System.Text.Decoder> objet enregistre l’état entre les appels à <xref:System.Text.Decoder.Convert%2A>.</span><span class="sxs-lookup"><span data-stu-id="d2676-168">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.Convert%2A>.</span></span> <span data-ttu-id="d2676-169">Lorsque l’application est faite avec un flux de données, elle doit affecter la `flush` paramètre `true` pour vous assurer que les informations d’état sont vidées.</span><span class="sxs-lookup"><span data-stu-id="d2676-169">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="d2676-170">Avec ce paramètre, le décodeur ignore les octets non valides à la fin du bloc de données et efface la mémoire tampon interne.</span><span class="sxs-lookup"><span data-stu-id="d2676-170">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span> <span data-ttu-id="d2676-171">Les données traitées restantes qui fait partie d’une unité logique, telles que le substitut étendu d’une paire de substitution sont converties selon les paramètres de secours actifs.</span><span class="sxs-lookup"><span data-stu-id="d2676-171">Any remaining processed data that is part of a logical unit, such as the high surrogate of a surrogate pair, is converted according to the current fallback settings.</span></span>  
  
 <span data-ttu-id="d2676-172">Le `Convert` méthode est conçue pour être utilisée dans une boucle pour décoder une quantité arbitraire d’entrées, telles que les données lues à partir d’un fichier ou un flux.</span><span class="sxs-lookup"><span data-stu-id="d2676-172">The `Convert` method is designed to be used in a loop to decode an arbitrary amount of input, such as data read from a file or stream.</span></span> <span data-ttu-id="d2676-173">Elle stocke la sortie de l’opération de décodage dans un tampon de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="d2676-173">It stores the output of the decoding operation in a fixed-size buffer.</span></span> <span data-ttu-id="d2676-174"><xref:System.Text.Decoder.GetChars%2A> lève une exception si la mémoire tampon de sortie n’est pas assez grand, mais <xref:System.Text.Decoder.Convert%2A> remplira autant d’espace que possible et retourne les octets lus et les caractères écrits.</span><span class="sxs-lookup"><span data-stu-id="d2676-174"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="d2676-175">Consultez également le <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> rubrique pour plus de commentaires.</span><span class="sxs-lookup"><span data-stu-id="d2676-175">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 <span data-ttu-id="d2676-176">Le `completed` paramètre de sortie indique si toutes les données dans la mémoire tampon d’entrée a été convertie et stockée dans le tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="d2676-176">The `completed` output parameter indicates whether all the data in the input buffer was converted and stored in the output buffer.</span></span> <span data-ttu-id="d2676-177">Ce paramètre est défini sur `false` si le nombre d’octets spécifié par le `byteCount` paramètre ne peut pas être converti sans dépasser le nombre de caractères spécifié par le `charCount` paramètre.</span><span class="sxs-lookup"><span data-stu-id="d2676-177">This parameter is set to `false` if the number of bytes specified by the `byteCount` parameter cannot be converted without exceeding the number of characters specified by the `charCount` parameter.</span></span> <span data-ttu-id="d2676-178">Dans ce cas, l’application doit utiliser le contenu de la mémoire tampon de sortie ou fournir une nouvelle mémoire tampon de sortie, incrément le `bytes` paramètre par le nombre d’octets spécifié par le `bytesUsed` paramètre, puis appelez le `Convert` méthode à nouveau à traiter l’entrée restante.</span><span class="sxs-lookup"><span data-stu-id="d2676-178">In that situation, the application should use the contents of the output buffer or provide a new output buffer, increment the `bytes` parameter by the number of bytes specified by the `bytesUsed` parameter, then call the `Convert` method again to process the remaining input.</span></span>  
  
 <span data-ttu-id="d2676-179">Le `completed` paramètre peut également être défini sur `false`, même si le `bytesUsed` et `byteCount` paramètres sont égaux.</span><span class="sxs-lookup"><span data-stu-id="d2676-179">The `completed` parameter can also be set to `false`, even though the `bytesUsed` and `byteCount` parameters are equal.</span></span> <span data-ttu-id="d2676-180">Cette situation se produit s’il existe toujours des données dans le <xref:System.Text.Decoder> objet n’a pas été stockée dans le `bytes` mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="d2676-180">This situation occurs if there is still data in the <xref:System.Text.Decoder> object that has not been stored in the `bytes` buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2676-181">Le code suivant exemple utilise le <xref:System.Text.Encoder.Convert%2A> méthode pour convertir un fichier de caractères UTF-16 et UTF-8.</span><span class="sxs-lookup"><span data-stu-id="d2676-181">The following code example uses the <xref:System.Text.Encoder.Convert%2A> method to convert a file of UTF-16 characters to UTF-8.</span></span> <span data-ttu-id="d2676-182">Il utilise ensuite la <xref:System.Text.Decoder.Convert%2A> méthode pour convertir les caractères UTF-8 vers des caractères UTF-16.</span><span class="sxs-lookup"><span data-stu-id="d2676-182">It then uses the <xref:System.Text.Decoder.Convert%2A> method to convert the UTF-8 characters back to UTF-16 characters.</span></span>  
  
 [!code-csharp[sys.txt.EncoderDecoder.convert#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.EncoderDecoder.convert/cs/edCvt.cs#1)]
 [!code-vb[sys.txt.EncoderDecoder.convert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.EncoderDecoder.convert/vb/edCvt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2676-183">
            <paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-183">
              <paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d2676-184">
            <paramref name="charIndex" />, <paramref name="charCount" />, <paramref name="byteIndex" />, or <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-184">
              <paramref name="charIndex" />, <paramref name="charCount" />, <paramref name="byteIndex" />, or <paramref name="byteCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="d2676-185">-or-  The length of <paramref name="chars" /> - <paramref name="charIndex" /> is less than <paramref name="charCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-185">-or-  The length of <paramref name="chars" /> - <paramref name="charIndex" /> is less than <paramref name="charCount" />.</span>
          </span>
          <span data-ttu-id="d2676-186">-or-  The length of <paramref name="bytes" /> - <paramref name="byteIndex" /> is less than <paramref name="byteCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-186">-or-  The length of <paramref name="bytes" /> - <paramref name="byteIndex" /> is less than <paramref name="byteCount" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2676-187">The output buffer is too small to contain any of the converted input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-187">The output buffer is too small to contain any of the converted input.</span>
          </span>
          <span data-ttu-id="d2676-188">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Decoder.GetCharCount" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-188">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Decoder.GetCharCount" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="d2676-189">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-189">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public System.Text.DecoderFallback Fallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.DecoderFallback Fallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.Decoder.Fallback" />
      <MemberSignature Language="VB.NET" Value="Public Property Fallback As DecoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::DecoderFallback ^ Fallback { System::Text::DecoderFallback ^ get(); void set(System::Text::DecoderFallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Fallback : System.Text.DecoderFallback with get, set" Usage="System.Text.Decoder.Fallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.DecoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2676-190">Gets or sets a <see cref="T:System.Text.DecoderFallback" /> object for the current <see cref="T:System.Text.Decoder" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-190">Gets or sets a <see cref="T:System.Text.DecoderFallback" /> object for the current <see cref="T:System.Text.Decoder" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2676-191">Objet <see cref="T:System.Text.DecoderFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-191">A <see cref="T:System.Text.DecoderFallback" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2676-192">Le <xref:System.Text.DecoderFallback> objet représente un gestionnaire d’erreurs qui est appelé lorsqu’une séquence d’octets encodée ne peut pas être convertie en un caractère.</span><span class="sxs-lookup"><span data-stu-id="d2676-192">The <xref:System.Text.DecoderFallback> object represents an error handler that is invoked when an encoded byte sequence cannot be converted to a character.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2676-193">The value in a set operation is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-193">The value in a set operation is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2676-194">A new value cannot be assigned in a set operation because the current <see cref="T:System.Text.DecoderFallbackBuffer" /> object contains data that has not been decoded yet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-194">A new value cannot be assigned in a set operation because the current <see cref="T:System.Text.DecoderFallbackBuffer" /> object contains data that has not been decoded yet.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="P:System.Text.Encoder.FallbackBuffer" />
      </Docs>
    </Member>
    <Member MemberName="FallbackBuffer">
      <MemberSignature Language="C#" Value="public System.Text.DecoderFallbackBuffer FallbackBuffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.DecoderFallbackBuffer FallbackBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Text.Decoder.FallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FallbackBuffer As DecoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::DecoderFallbackBuffer ^ FallbackBuffer { System::Text::DecoderFallbackBuffer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FallbackBuffer : System.Text.DecoderFallbackBuffer" Usage="System.Text.Decoder.FallbackBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.DecoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2676-195">Gets the <see cref="T:System.Text.DecoderFallbackBuffer" /> object associated with the current <see cref="T:System.Text.Decoder" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-195">Gets the <see cref="T:System.Text.DecoderFallbackBuffer" /> object associated with the current <see cref="T:System.Text.Decoder" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2676-196">Objet <see cref="T:System.Text.DecoderFallbackBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-196">A <see cref="T:System.Text.DecoderFallbackBuffer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2676-197">Le <xref:System.Text.DecoderFallbackBuffer> objet représente les données utilisées par le <xref:System.Text.DecoderFallback> objet.</span><span class="sxs-lookup"><span data-stu-id="d2676-197">The <xref:System.Text.DecoderFallbackBuffer> object represents data used by the <xref:System.Text.DecoderFallback> object.</span></span> <span data-ttu-id="d2676-198">Le <xref:System.Text.DecoderFallback> objet représente un gestionnaire d’erreurs qui est appelé lorsqu’une séquence d’octets encodée ne peut pas être convertie en un caractère.</span><span class="sxs-lookup"><span data-stu-id="d2676-198">The <xref:System.Text.DecoderFallback> object represents an error handler that is invoked when an encoded byte sequence cannot be converted to a character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="P:System.Text.Encoder.Fallback" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d2676-199">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-199">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (ReadOnlySpan&lt;byte&gt; bytes, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetCharCount(System.ReadOnlySpan{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As ReadOnlySpan(Of Byte), flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(ReadOnlySpan&lt;System::Byte&gt; bytes, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : ReadOnlySpan&lt;byte&gt; * bool -&gt; int&#xA;override this.GetCharCount : ReadOnlySpan&lt;byte&gt; * bool -&gt; int" Usage="decoder.GetCharCount (bytes, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="flush">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte* bytes, int count, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(System::Byte* bytes, int count, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : nativeptr&lt;byte&gt; * int * bool -&gt; int&#xA;override this.GetCharCount : nativeptr&lt;byte&gt; * int * bool -&gt; int" Usage="decoder.GetCharCount (bytes, count, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="d2676-200">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-200">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="d2676-201">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-201">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="d2676-202">
            <see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-202">
              <see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2676-203">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-203">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          </span>
          <span data-ttu-id="d2676-204">A parameter indicates whether to clear the internal state of the decoder after the calculation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-204">A parameter indicates whether to clear the internal state of the decoder after the calculation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2676-205">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-205">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2676-206">Cette méthode n’affecte pas l’état du décodeur.</span><span class="sxs-lookup"><span data-stu-id="d2676-206">This method does not affect the state of the decoder.</span></span>  
  
 <span data-ttu-id="d2676-207">Pour calculer la taille de tableau exact qui <xref:System.Text.Decoder.GetChars%2A> requiert pour stocker les caractères obtenus, l’application doit utiliser <xref:System.Text.Decoder.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="d2676-207">To calculate the exact array size that <xref:System.Text.Decoder.GetChars%2A> requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="d2676-208">Si `GetChars` est appelée avec `flush` la valeur `false`, le décodeur stocke les octets de fin à la fin du bloc de données dans une mémoire tampon interne et les utilise dans la prochaine opération de décodage.</span><span class="sxs-lookup"><span data-stu-id="d2676-208">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="d2676-209">L’application doit appeler `GetCharCount` sur un bloc de données juste avant d’appeler `GetChars` sur le même bloc, afin que les octets de fin du bloc précédent soient inclus dans le calcul.</span><span class="sxs-lookup"><span data-stu-id="d2676-209">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2676-210">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" /> in Visual Basic .NET).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-210">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" /> in Visual Basic .NET).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d2676-211">
            <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-211">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="d2676-212">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-212">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="d2676-213">Requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-213">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="d2676-214">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-214">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public abstract int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : byte[] * int * int -&gt; int" Usage="decoder.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="d2676-215">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-215">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="d2676-216">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-216">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="d2676-217">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-217">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2676-218">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-218">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2676-219">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-219">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2676-220">Cette méthode n’affecte pas l’état du décodeur.</span><span class="sxs-lookup"><span data-stu-id="d2676-220">This method does not affect the state of the decoder.</span></span>  
  
 <span data-ttu-id="d2676-221">Pour calculer la taille de tableau exact qui <xref:System.Text.Decoder.GetChars%2A> requiert pour stocker les caractères obtenus, l’application doit utiliser <xref:System.Text.Decoder.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="d2676-221">To calculate the exact array size that <xref:System.Text.Decoder.GetChars%2A> requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="d2676-222">Si `GetChars` est appelée avec `flush` la valeur `false`, le décodeur stocke les octets de fin à la fin du bloc de données dans une mémoire tampon interne et les utilise dans la prochaine opération de décodage.</span><span class="sxs-lookup"><span data-stu-id="d2676-222">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="d2676-223">L’application doit appeler `GetCharCount` sur un bloc de données juste avant d’appeler `GetChars` sur le même bloc, afin que les octets de fin du bloc précédent soient inclus dans le calcul.</span><span class="sxs-lookup"><span data-stu-id="d2676-223">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2676-224">L’exemple de code suivant montre comment utiliser la <xref:System.Text.Decoder.GetCharCount%2A> méthode pour calculer le nombre de caractères requis pour décoder la plage d’octets dans le tableau spécifiée.</span><span class="sxs-lookup"><span data-stu-id="d2676-224">The following code example demonstrates how to use the <xref:System.Text.Decoder.GetCharCount%2A> method to calculate the number of characters required to decode the specified range of bytes in the array.</span></span>  
  
 [!code-cpp[System.Text.Decoder.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Decoder.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.Decoder.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Decoder.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.Decoder.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Decoder.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2676-225">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-225">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d2676-226">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-226">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="d2676-227">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-227">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="d2676-228">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-228">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte[] bytes, int index, int count, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As Byte(), index As Integer, count As Integer, flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : byte[] * int * int * bool -&gt; int&#xA;override this.GetCharCount : byte[] * int * int * bool -&gt; int" Usage="decoder.GetCharCount (bytes, index, count, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="d2676-229">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-229">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="d2676-230">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-230">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="d2676-231">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-231">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="d2676-232">
            <see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-232">
              <see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2676-233">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-233">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
          <span data-ttu-id="d2676-234">A parameter indicates whether to clear the internal state of the decoder after the calculation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-234">A parameter indicates whether to clear the internal state of the decoder after the calculation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2676-235">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-235">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2676-236">Cette méthode n’affecte pas l’état du décodeur.</span><span class="sxs-lookup"><span data-stu-id="d2676-236">This method does not affect the state of the decoder.</span></span>  
  
 <span data-ttu-id="d2676-237">Pour calculer la taille de tableau exact qui <xref:System.Text.Decoder.GetChars%2A> requiert pour stocker les caractères obtenus, l’application doit utiliser <xref:System.Text.Decoder.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="d2676-237">To calculate the exact array size that <xref:System.Text.Decoder.GetChars%2A> requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="d2676-238">Si `GetChars` est appelée avec `flush` la valeur `false`, le décodeur stocke les octets de fin à la fin du bloc de données dans une mémoire tampon interne et les utilise dans la prochaine opération de décodage.</span><span class="sxs-lookup"><span data-stu-id="d2676-238">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="d2676-239">L’application doit appeler `GetCharCount` sur un bloc de données juste avant d’appeler `GetChars` sur le même bloc, afin que les octets de fin du bloc précédent soient inclus dans le calcul.</span><span class="sxs-lookup"><span data-stu-id="d2676-239">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2676-240">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-240">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d2676-241">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-241">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="d2676-242">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-242">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="d2676-243">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-243">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d2676-244">When overridden in a derived class, decodes a sequence of bytes into a set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-244">When overridden in a derived class, decodes a sequence of bytes into a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char), flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(ReadOnlySpan&lt;System::Byte&gt; bytes, Span&lt;char&gt; chars, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; * bool -&gt; int&#xA;override this.GetChars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; * bool -&gt; int" Usage="decoder.GetChars (bytes, chars, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <param name="flush">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (byte* bytes, int byteCount, char* chars, int charCount, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int * bool -&gt; int&#xA;override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int * bool -&gt; int" Usage="decoder.GetChars (bytes, byteCount, chars, charCount, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="d2676-245">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-245">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="d2676-246">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-246">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="d2676-247">A pointer to the location at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-247">A pointer to the location at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="d2676-248">The maximum number of characters to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-248">The maximum number of characters to write.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="d2676-249">
            <see langword="true" /> to clear the internal state of the decoder after the conversion; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-249">
              <see langword="true" /> to clear the internal state of the decoder after the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2676-250">When overridden in a derived class, decodes a sequence of bytes starting at the specified byte pointer and any bytes in the internal buffer into a set of characters that are stored starting at the specified character pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-250">When overridden in a derived class, decodes a sequence of bytes starting at the specified byte pointer and any bytes in the internal buffer into a set of characters that are stored starting at the specified character pointer.</span>
          </span>
          <span data-ttu-id="d2676-251">A parameter indicates whether to clear the internal state of the decoder after the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-251">A parameter indicates whether to clear the internal state of the decoder after the conversion.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2676-252">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-252">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2676-253">N’oubliez pas que le <xref:System.Text.Decoder> objet enregistre l’état entre les appels à <xref:System.Text.Decoder.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="d2676-253">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.GetChars%2A>.</span></span> <span data-ttu-id="d2676-254">Lorsque l’application est faite avec un flux de données, elle doit affecter la `flush` paramètre `true` pour vous assurer que les informations d’état sont vidées.</span><span class="sxs-lookup"><span data-stu-id="d2676-254">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="d2676-255">Avec ce paramètre, le décodeur ignore les octets non valides à la fin du bloc de données et efface la mémoire tampon interne.</span><span class="sxs-lookup"><span data-stu-id="d2676-255">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span>  
  
 <span data-ttu-id="d2676-256">Pour calculer la taille de la mémoire tampon exacte qui `GetChars` requiert pour stocker les caractères obtenus, l’application doit utiliser <xref:System.Text.Decoder.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="d2676-256">To calculate the exact buffer size that `GetChars` requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="d2676-257">Si `GetChars` est appelée avec `flush` la valeur `false`, le décodeur stocke les octets de fin à la fin du bloc de données dans une mémoire tampon interne et les utilise dans la prochaine opération de décodage.</span><span class="sxs-lookup"><span data-stu-id="d2676-257">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="d2676-258">L’application doit appeler `GetCharCount` sur un bloc de données juste avant d’appeler `GetChars` sur le même bloc, afin que les octets de fin du bloc précédent soient inclus dans le calcul.</span><span class="sxs-lookup"><span data-stu-id="d2676-258">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 <span data-ttu-id="d2676-259">Si votre application consiste à convertir les nombreux segments d’un flux d’entrée, envisagez d’utiliser le <xref:System.Text.Decoder.Convert%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d2676-259">If your application is to convert many segments of an input stream, consider using the <xref:System.Text.Decoder.Convert%2A> method.</span></span> <span data-ttu-id="d2676-260"><xref:System.Text.Decoder.GetChars%2A> lève une exception si la mémoire tampon de sortie n’est pas assez grand, mais <xref:System.Text.Decoder.Convert%2A> remplira autant d’espace que possible et retourne les octets lus et les caractères écrits.</span><span class="sxs-lookup"><span data-stu-id="d2676-260"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="d2676-261">Consultez également le <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> rubrique pour plus de commentaires.</span><span class="sxs-lookup"><span data-stu-id="d2676-261">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2676-262">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-262">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="d2676-263">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-263">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d2676-264">
            <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-264">
              <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2676-265">
            <paramref name="charCount" /> is less than the resulting number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-265">
              <paramref name="charCount" /> is less than the resulting number of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="d2676-266">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-266">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="d2676-267">Requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-267">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="d2676-268">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-268">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public abstract int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="decoder.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="d2676-269">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-269">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="d2676-270">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-270">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="d2676-271">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-271">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="d2676-272">The character array to contain the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-272">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="d2676-273">The index at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-273">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2676-274">When overridden in a derived class, decodes a sequence of bytes from the specified byte array and any bytes in the internal buffer into the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-274">When overridden in a derived class, decodes a sequence of bytes from the specified byte array and any bytes in the internal buffer into the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2676-275">The actual number of characters written into <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-275">The actual number of characters written into <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2676-276">N’oubliez pas que le <xref:System.Text.Decoder> objet enregistre l’état entre les appels à <xref:System.Text.Decoder.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="d2676-276">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.GetChars%2A>.</span></span> <span data-ttu-id="d2676-277">Lorsque l’application est faite avec un flux de données, elle doit affecter la `flush` paramètre `true` pour vous assurer que les informations d’état sont vidées.</span><span class="sxs-lookup"><span data-stu-id="d2676-277">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="d2676-278">Avec ce paramètre, le décodeur ignore les octets non valides à la fin du bloc de données et efface la mémoire tampon interne.</span><span class="sxs-lookup"><span data-stu-id="d2676-278">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span>  
  
 <span data-ttu-id="d2676-279">Pour calculer la taille de tableau exact qui `GetChars` requiert pour stocker les caractères obtenus, l’application doit utiliser <xref:System.Text.Decoder.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="d2676-279">To calculate the exact array size that `GetChars` requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="d2676-280">Si `GetChars` est appelée avec `flush` la valeur `false`, le décodeur stocke les octets de fin à la fin du bloc de données dans une mémoire tampon interne et les utilise dans la prochaine opération de décodage.</span><span class="sxs-lookup"><span data-stu-id="d2676-280">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="d2676-281">L’application doit appeler `GetCharCount` sur un bloc de données juste avant d’appeler `GetChars` sur le même bloc, afin que les octets de fin du bloc précédent soient inclus dans le calcul.</span><span class="sxs-lookup"><span data-stu-id="d2676-281">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 <span data-ttu-id="d2676-282">Si votre application consiste à convertir les nombreux segments d’un flux d’entrée, envisagez d’utiliser le <xref:System.Text.Decoder.Convert%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d2676-282">If your application is to convert many segments of an input stream, consider using the <xref:System.Text.Decoder.Convert%2A> method.</span></span> <span data-ttu-id="d2676-283"><xref:System.Text.Decoder.GetChars%2A> lève une exception si la mémoire tampon de sortie n’est pas assez grand, mais <xref:System.Text.Decoder.Convert%2A> remplira autant d’espace que possible et retourne les octets lus et les caractères écrits.</span><span class="sxs-lookup"><span data-stu-id="d2676-283"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="d2676-284">Consultez également le <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> rubrique pour plus de commentaires.</span><span class="sxs-lookup"><span data-stu-id="d2676-284">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2676-285">L’exemple suivant montre comment décoder une plage d’éléments à partir d’un tableau d’octets et les stocker dans un tableau de caractères Unicode.</span><span class="sxs-lookup"><span data-stu-id="d2676-285">The following example demonstrates how to decode a range of elements from a byte array and store them in a Unicode character array.</span></span> <span data-ttu-id="d2676-286">Le <xref:System.Text.Decoder.GetCharCount%2A> méthode est utilisée pour calculer le nombre de caractères nécessaires pour stocker des éléments décodés dans le tableau `bytes`.</span><span class="sxs-lookup"><span data-stu-id="d2676-286">The <xref:System.Text.Decoder.GetCharCount%2A> method is used to calculate the number of characters needed to store the decoded elements in the array `bytes`.</span></span> <span data-ttu-id="d2676-287">Le <xref:System.Text.Decoder.GetChars%2A> méthode décode les éléments spécifiés dans le tableau d’octets et les stocke dans le nouveau tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="d2676-287">The <xref:System.Text.Decoder.GetChars%2A> method decodes the specified elements in the byte array and stores them in the new character array.</span></span>  
  
 [!code-cpp[System.Text.Decoder.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Decoder.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.Decoder.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Decoder.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.Decoder.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Decoder.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2676-288">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-288">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="d2676-289">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-289">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d2676-290">
            <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-290">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="d2676-291">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-291">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="d2676-292">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-292">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2676-293">
            <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-293">
              <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="d2676-294">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-294">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer, flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : byte[] * int * int * char[] * int * bool -&gt; int&#xA;override this.GetChars : byte[] * int * int * char[] * int * bool -&gt; int" Usage="decoder.GetChars (bytes, byteIndex, byteCount, chars, charIndex, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="d2676-295">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-295">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="d2676-296">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-296">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="d2676-297">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-297">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="d2676-298">The character array to contain the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-298">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="d2676-299">The index at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-299">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="d2676-300">
            <see langword="true" /> to clear the internal state of the decoder after the conversion; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-300">
              <see langword="true" /> to clear the internal state of the decoder after the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2676-301">When overridden in a derived class, decodes a sequence of bytes from the specified byte array and any bytes in the internal buffer into the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-301">When overridden in a derived class, decodes a sequence of bytes from the specified byte array and any bytes in the internal buffer into the specified character array.</span>
          </span>
          <span data-ttu-id="d2676-302">A parameter indicates whether to clear the internal state of the decoder after the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-302">A parameter indicates whether to clear the internal state of the decoder after the conversion.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d2676-303">The actual number of characters written into the <paramref name="chars" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-303">The actual number of characters written into the <paramref name="chars" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2676-304">N’oubliez pas que le <xref:System.Text.Decoder> objet enregistre l’état entre les appels à <xref:System.Text.Decoder.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="d2676-304">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.GetChars%2A>.</span></span> <span data-ttu-id="d2676-305">Lorsque l’application est faite avec un flux de données, elle doit affecter la `flush` paramètre `true` pour vous assurer que les informations d’état sont vidées.</span><span class="sxs-lookup"><span data-stu-id="d2676-305">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="d2676-306">Avec ce paramètre, le décodeur ignore les octets non valides à la fin du bloc de données et efface la mémoire tampon interne.</span><span class="sxs-lookup"><span data-stu-id="d2676-306">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span>  
  
 <span data-ttu-id="d2676-307">Pour calculer la taille de tableau exact qui `GetChars` requiert pour stocker les caractères obtenus, l’application doit utiliser <xref:System.Text.Decoder.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="d2676-307">To calculate the exact array size that `GetChars` requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="d2676-308">Si `GetChars` est appelée avec `flush` la valeur `false`, le décodeur stocke les octets de fin à la fin du bloc de données dans une mémoire tampon interne et les utilise dans la prochaine opération de décodage.</span><span class="sxs-lookup"><span data-stu-id="d2676-308">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="d2676-309">L’application doit appeler `GetCharCount` sur un bloc de données juste avant d’appeler `GetChars` sur le même bloc, afin que les octets de fin du bloc précédent soient inclus dans le calcul.</span><span class="sxs-lookup"><span data-stu-id="d2676-309">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 <span data-ttu-id="d2676-310">Si votre application consiste à convertir les nombreux segments d’un flux d’entrée, envisagez d’utiliser le <xref:System.Text.Decoder.Convert%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d2676-310">If your application is to convert many segments of an input stream, consider using the <xref:System.Text.Decoder.Convert%2A> method.</span></span> <span data-ttu-id="d2676-311"><xref:System.Text.Decoder.GetChars%2A> lève une exception si la mémoire tampon de sortie n’est pas assez grand, mais <xref:System.Text.Decoder.Convert%2A> remplira autant d’espace que possible et retourne les octets lus et les caractères écrits.</span><span class="sxs-lookup"><span data-stu-id="d2676-311"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="d2676-312">Consultez également le <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> rubrique pour plus de commentaires.</span><span class="sxs-lookup"><span data-stu-id="d2676-312">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2676-313">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-313">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="d2676-314">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-314">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d2676-315">
            <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-315">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="d2676-316">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-316">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="d2676-317">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-317">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d2676-318">
            <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-318">
              <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="d2676-319">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-319">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="decoder.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d2676-320">When overridden in a derived class, sets the decoder back to its initial state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2676-320">When overridden in a derived class, sets the decoder back to its initial state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2676-321">Cette méthode efface l’état interne de la <xref:System.Text.Decoder> objet.</span><span class="sxs-lookup"><span data-stu-id="d2676-321">This method clears the internal state of the <xref:System.Text.Decoder> object.</span></span> <span data-ttu-id="d2676-322">La méthode efface toutes les informations d’état conservées à partir d’un appel précédent à <xref:System.Text.Decoder.GetChars%2A> ou <xref:System.Text.Decoder.Convert%2A>, y compris les octets à la fin du bloc de données précédent.</span><span class="sxs-lookup"><span data-stu-id="d2676-322">The method clears any state information preserved from a previous call to <xref:System.Text.Decoder.GetChars%2A> or <xref:System.Text.Decoder.Convert%2A>, including trailing bytes at the end of the previous data block.</span></span>  
  
 <span data-ttu-id="d2676-323">Votre application doit appeler la <xref:System.Text.Decoder.Reset%2A> méthode s’il souhaite réutiliser le même décodeur même après une exception est levée par <xref:System.Text.Decoder.GetChars%2A>, <xref:System.Text.Decoder.Convert%2A>, ou <xref:System.Text.Decoder.GetCharCount%2A>, ou si le décodeur inverse les flux et commence à décoder un autre flux.</span><span class="sxs-lookup"><span data-stu-id="d2676-323">Your application should call the <xref:System.Text.Decoder.Reset%2A> method if it wants to reuse the same decoder even after an exception is thrown by <xref:System.Text.Decoder.GetChars%2A>, <xref:System.Text.Decoder.Convert%2A>, or <xref:System.Text.Decoder.GetCharCount%2A>, or if the decoder switches streams and begins to decode another stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>