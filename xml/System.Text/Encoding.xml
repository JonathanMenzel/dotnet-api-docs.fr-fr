<Type Name="Encoding" FullName="System.Text.Encoding">
  <TypeSignature Language="C#" Value="public abstract class Encoding : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Encoding extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Text.Encoding" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Encoding&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Encoding abstract : ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="63ca9-101">Représente un encodage de caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-101">Represents a character encoding.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-102">L'encodage est le processus de transformation d'un jeu de caractères Unicode en une séquence d'octets.</span><span class="sxs-lookup"><span data-stu-id="63ca9-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="63ca9-103">En revanche, le décodage est le processus de transformation d’une séquence d’octets codés en un jeu de caractères Unicode.</span><span class="sxs-lookup"><span data-stu-id="63ca9-103">In contrast, decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span> <span data-ttu-id="63ca9-104">Pour plus d’informations sur les Formats (formats UTF) et d’autres encodages pris en charge par <xref:System.Text.Encoding>, consultez [l’encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="63ca9-104">For information about the Unicode Transformation Formats (UTFs) and other encodings supported by <xref:System.Text.Encoding>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="63ca9-105">Notez que <xref:System.Text.Encoding> est destiné à opérer sur des caractères Unicode à la place des données binaires arbitraires, tels que des tableaux d’octets.</span><span class="sxs-lookup"><span data-stu-id="63ca9-105">Note that <xref:System.Text.Encoding> is intended to operate on Unicode characters instead of arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="63ca9-106">Si vous devez encoder des données arbitraires en texte, vous devez utiliser un protocole tel qu’uuencode, qui est implémentée par les méthodes telles que <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-106">If you must encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="63ca9-107">Le .NET Framework fournit les implémentations suivantes de la <xref:System.Text.Encoding> classe pour prendre en charge les encodages Unicode et autres :</span><span class="sxs-lookup"><span data-stu-id="63ca9-107">The .NET Framework provides the following implementations of the <xref:System.Text.Encoding> class to support current Unicode encodings and other encodings:</span></span>  
  
-   <span data-ttu-id="63ca9-108"><xref:System.Text.ASCIIEncoding> encode les caractères Unicode comme des caractères ASCII 7 bits uniques.</span><span class="sxs-lookup"><span data-stu-id="63ca9-108"><xref:System.Text.ASCIIEncoding> encodes Unicode characters as single 7-bit ASCII characters.</span></span> <span data-ttu-id="63ca9-109">Cet encodage ne prend en charge que les valeurs de caractère comprises entre U + 0000 et U + 007F.</span><span class="sxs-lookup"><span data-stu-id="63ca9-109">This encoding only supports character values between U+0000 and U+007F.</span></span> <span data-ttu-id="63ca9-110">Page de codes 20127.</span><span class="sxs-lookup"><span data-stu-id="63ca9-110">Code page 20127.</span></span> <span data-ttu-id="63ca9-111">Également disponible via le <xref:System.Text.Encoding.ASCII%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="63ca9-111">Also available through the <xref:System.Text.Encoding.ASCII%2A> property.</span></span>  
  
-   <span data-ttu-id="63ca9-112"><xref:System.Text.UTF7Encoding> encode les caractères Unicode à l’aide de l’encodage UTF-7.</span><span class="sxs-lookup"><span data-stu-id="63ca9-112"><xref:System.Text.UTF7Encoding> encodes Unicode characters using the UTF-7 encoding.</span></span> <span data-ttu-id="63ca9-113">Cet encodage prend en charge toutes les valeurs de caractères Unicode.</span><span class="sxs-lookup"><span data-stu-id="63ca9-113">This encoding supports all Unicode character values.</span></span> <span data-ttu-id="63ca9-114">Page de codes 65000.</span><span class="sxs-lookup"><span data-stu-id="63ca9-114">Code page 65000.</span></span> <span data-ttu-id="63ca9-115">Également disponible via le <xref:System.Text.Encoding.UTF7%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="63ca9-115">Also available through the <xref:System.Text.Encoding.UTF7%2A> property.</span></span>  
  
-   <span data-ttu-id="63ca9-116"><xref:System.Text.UTF8Encoding> encode les caractères Unicode à l’aide de l’encodage UTF-8.</span><span class="sxs-lookup"><span data-stu-id="63ca9-116"><xref:System.Text.UTF8Encoding> encodes Unicode characters using the UTF-8 encoding.</span></span> <span data-ttu-id="63ca9-117">Cet encodage prend en charge toutes les valeurs de caractères Unicode.</span><span class="sxs-lookup"><span data-stu-id="63ca9-117">This encoding supports all Unicode character values.</span></span> <span data-ttu-id="63ca9-118">Page de codes 65001.</span><span class="sxs-lookup"><span data-stu-id="63ca9-118">Code page 65001.</span></span> <span data-ttu-id="63ca9-119">Également disponible via le <xref:System.Text.Encoding.UTF8%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="63ca9-119">Also available through the <xref:System.Text.Encoding.UTF8%2A> property.</span></span>  
  
-   <span data-ttu-id="63ca9-120"><xref:System.Text.UnicodeEncoding> encode les caractères Unicode à l’aide de l’encodage UTF-16.</span><span class="sxs-lookup"><span data-stu-id="63ca9-120"><xref:System.Text.UnicodeEncoding> encodes Unicode characters using the UTF-16 encoding.</span></span> <span data-ttu-id="63ca9-121">Les ordres des octets little endian et big endian sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-121">Both little endian and big endian byte orders are supported.</span></span> <span data-ttu-id="63ca9-122">Également disponible via le <xref:System.Text.Encoding.Unicode%2A> propriété et le <xref:System.Text.Encoding.BigEndianUnicode%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="63ca9-122">Also available through the <xref:System.Text.Encoding.Unicode%2A> property and the <xref:System.Text.Encoding.BigEndianUnicode%2A> property.</span></span>  
  
-   <span data-ttu-id="63ca9-123"><xref:System.Text.UTF32Encoding> encode les caractères Unicode à l’aide de l’encodage UTF-32.</span><span class="sxs-lookup"><span data-stu-id="63ca9-123"><xref:System.Text.UTF32Encoding> encodes Unicode characters using the UTF-32 encoding.</span></span> <span data-ttu-id="63ca9-124">À la fois little endian (page de codes 12000) et octet big endian (page de codes 12001) orders sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-124">Both little endian (code page 12000) and big endian (code page 12001) byte orders are supported.</span></span> <span data-ttu-id="63ca9-125">Également disponible via le <xref:System.Text.Encoding.UTF32%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="63ca9-125">Also available through the <xref:System.Text.Encoding.UTF32%2A> property.</span></span>  
  
 <span data-ttu-id="63ca9-126">La <xref:System.Text.Encoding> classe est principalement destinée à effectuer une conversion entre différents encodages et Unicode.</span><span class="sxs-lookup"><span data-stu-id="63ca9-126">The <xref:System.Text.Encoding> class is primarily intended to convert between different encodings and Unicode.</span></span> <span data-ttu-id="63ca9-127">Une des classes Unicode dérivées est souvent le bon choix pour votre application.</span><span class="sxs-lookup"><span data-stu-id="63ca9-127">Often one of the derived Unicode classes is the correct choice for your app.</span></span>  
  
 <span data-ttu-id="63ca9-128">Utilisez le <xref:System.Text.Encoding.GetEncoding%2A> méthode pour obtenir d’autres encodages et appelez le <xref:System.Text.Encoding.GetEncodings%2A> méthode pour obtenir une liste de tous les encodages.</span><span class="sxs-lookup"><span data-stu-id="63ca9-128">Use the <xref:System.Text.Encoding.GetEncoding%2A> method to obtain other encodings, and call the <xref:System.Text.Encoding.GetEncodings%2A> method to get a list of all encodings.</span></span>  
  
 <span data-ttu-id="63ca9-129">Le tableau suivant répertorie les encodages pris en charge par le .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="63ca9-129">The following table lists the encodings supported by the .NET Framework.</span></span> <span data-ttu-id="63ca9-130">Il répertorie le numéro de page de codes de chaque codage et les valeurs du codage <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> et <xref:System.Text.EncodingInfo.DisplayName%2A?displayProperty=nameWithType> propriétés.</span><span class="sxs-lookup"><span data-stu-id="63ca9-130">It lists each encoding's code page number and the values of the encoding's <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> and <xref:System.Text.EncodingInfo.DisplayName%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="63ca9-131">Un astérisque dans la dernière colonne indique que la page de codes est prise en charge par le .NET Framework, quel que soit la plateforme sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="63ca9-131">An asterisk in the last column indicates that the code page is natively supported by the .NET Framework, regardless of the underlying platform.</span></span> <span data-ttu-id="63ca9-132">Notez que le code pages dont <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> propriété correspond à une norme internationale ne sont pas nécessairement conformes à l’intégralité de cette norme.</span><span class="sxs-lookup"><span data-stu-id="63ca9-132">Note that code pages whose <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> property corresponds to an international standard do not necessarily comply in full with that standard.</span></span>  
  
|<span data-ttu-id="63ca9-133">Page de codes</span><span class="sxs-lookup"><span data-stu-id="63ca9-133">Code page</span></span>|<span data-ttu-id="63ca9-134">Name</span><span class="sxs-lookup"><span data-stu-id="63ca9-134">Name</span></span>|<span data-ttu-id="63ca9-135">Nom affiché</span><span class="sxs-lookup"><span data-stu-id="63ca9-135">Display name</span></span>|<span data-ttu-id="63ca9-136">Prise en charge de .NET framework</span><span class="sxs-lookup"><span data-stu-id="63ca9-136">.NET Framework support</span></span>|  
|---------------|----------|------------------|----------------------------|  
|<span data-ttu-id="63ca9-137">37</span><span class="sxs-lookup"><span data-stu-id="63ca9-137">37</span></span>|<span data-ttu-id="63ca9-138">IBM037</span><span class="sxs-lookup"><span data-stu-id="63ca9-138">IBM037</span></span>|<span data-ttu-id="63ca9-139">IBM EBCDIC (États-Unis-Canada)</span><span class="sxs-lookup"><span data-stu-id="63ca9-139">IBM EBCDIC (US-Canada)</span></span>||  
|<span data-ttu-id="63ca9-140">437</span><span class="sxs-lookup"><span data-stu-id="63ca9-140">437</span></span>|<span data-ttu-id="63ca9-141">IBM437</span><span class="sxs-lookup"><span data-stu-id="63ca9-141">IBM437</span></span>|<span data-ttu-id="63ca9-142">OEM États-Unis</span><span class="sxs-lookup"><span data-stu-id="63ca9-142">OEM United States</span></span>||  
|<span data-ttu-id="63ca9-143">500</span><span class="sxs-lookup"><span data-stu-id="63ca9-143">500</span></span>|<span data-ttu-id="63ca9-144">IBM500</span><span class="sxs-lookup"><span data-stu-id="63ca9-144">IBM500</span></span>|<span data-ttu-id="63ca9-145">IBM EBCDIC (International)</span><span class="sxs-lookup"><span data-stu-id="63ca9-145">IBM EBCDIC (International)</span></span>||  
|<span data-ttu-id="63ca9-146">708</span><span class="sxs-lookup"><span data-stu-id="63ca9-146">708</span></span>|<span data-ttu-id="63ca9-147">ASMO-708</span><span class="sxs-lookup"><span data-stu-id="63ca9-147">ASMO-708</span></span>|<span data-ttu-id="63ca9-148">Arabe (ASMO 708)</span><span class="sxs-lookup"><span data-stu-id="63ca9-148">Arabic (ASMO 708)</span></span>||  
|<span data-ttu-id="63ca9-149">720</span><span class="sxs-lookup"><span data-stu-id="63ca9-149">720</span></span>|<span data-ttu-id="63ca9-150">DOS-720</span><span class="sxs-lookup"><span data-stu-id="63ca9-150">DOS-720</span></span>|<span data-ttu-id="63ca9-151">Arabe (DOS)</span><span class="sxs-lookup"><span data-stu-id="63ca9-151">Arabic (DOS)</span></span>||  
|<span data-ttu-id="63ca9-152">737</span><span class="sxs-lookup"><span data-stu-id="63ca9-152">737</span></span>|<span data-ttu-id="63ca9-153">ibm737</span><span class="sxs-lookup"><span data-stu-id="63ca9-153">ibm737</span></span>|<span data-ttu-id="63ca9-154">Grec (DOS)</span><span class="sxs-lookup"><span data-stu-id="63ca9-154">Greek (DOS)</span></span>||  
|<span data-ttu-id="63ca9-155">775</span><span class="sxs-lookup"><span data-stu-id="63ca9-155">775</span></span>|<span data-ttu-id="63ca9-156">ibm775</span><span class="sxs-lookup"><span data-stu-id="63ca9-156">ibm775</span></span>|<span data-ttu-id="63ca9-157">Baltique (DOS)</span><span class="sxs-lookup"><span data-stu-id="63ca9-157">Baltic (DOS)</span></span>||  
|<span data-ttu-id="63ca9-158">850</span><span class="sxs-lookup"><span data-stu-id="63ca9-158">850</span></span>|<span data-ttu-id="63ca9-159">ibm850</span><span class="sxs-lookup"><span data-stu-id="63ca9-159">ibm850</span></span>|<span data-ttu-id="63ca9-160">Europe occidentale (DOS)</span><span class="sxs-lookup"><span data-stu-id="63ca9-160">Western European (DOS)</span></span>||  
|<span data-ttu-id="63ca9-161">852</span><span class="sxs-lookup"><span data-stu-id="63ca9-161">852</span></span>|<span data-ttu-id="63ca9-162">ibm852</span><span class="sxs-lookup"><span data-stu-id="63ca9-162">ibm852</span></span>|<span data-ttu-id="63ca9-163">Europe centrale (DOS)</span><span class="sxs-lookup"><span data-stu-id="63ca9-163">Central European (DOS)</span></span>||  
|<span data-ttu-id="63ca9-164">855</span><span class="sxs-lookup"><span data-stu-id="63ca9-164">855</span></span>|<span data-ttu-id="63ca9-165">IBM855</span><span class="sxs-lookup"><span data-stu-id="63ca9-165">IBM855</span></span>|<span data-ttu-id="63ca9-166">OEM cyrillique</span><span class="sxs-lookup"><span data-stu-id="63ca9-166">OEM Cyrillic</span></span>||  
|<span data-ttu-id="63ca9-167">857</span><span class="sxs-lookup"><span data-stu-id="63ca9-167">857</span></span>|<span data-ttu-id="63ca9-168">ibm857</span><span class="sxs-lookup"><span data-stu-id="63ca9-168">ibm857</span></span>|<span data-ttu-id="63ca9-169">Turc (DOS)</span><span class="sxs-lookup"><span data-stu-id="63ca9-169">Turkish (DOS)</span></span>||  
|<span data-ttu-id="63ca9-170">858</span><span class="sxs-lookup"><span data-stu-id="63ca9-170">858</span></span>|<span data-ttu-id="63ca9-171">IBM00858</span><span class="sxs-lookup"><span data-stu-id="63ca9-171">IBM00858</span></span>|<span data-ttu-id="63ca9-172">OEM multilingue Latin I</span><span class="sxs-lookup"><span data-stu-id="63ca9-172">OEM Multilingual Latin I</span></span>||  
|<span data-ttu-id="63ca9-173">860</span><span class="sxs-lookup"><span data-stu-id="63ca9-173">860</span></span>|<span data-ttu-id="63ca9-174">IBM860</span><span class="sxs-lookup"><span data-stu-id="63ca9-174">IBM860</span></span>|<span data-ttu-id="63ca9-175">Portugais (DOS)</span><span class="sxs-lookup"><span data-stu-id="63ca9-175">Portuguese (DOS)</span></span>||  
|<span data-ttu-id="63ca9-176">861</span><span class="sxs-lookup"><span data-stu-id="63ca9-176">861</span></span>|<span data-ttu-id="63ca9-177">ibm861</span><span class="sxs-lookup"><span data-stu-id="63ca9-177">ibm861</span></span>|<span data-ttu-id="63ca9-178">Islandais (DOS)</span><span class="sxs-lookup"><span data-stu-id="63ca9-178">Icelandic (DOS)</span></span>||  
|<span data-ttu-id="63ca9-179">862</span><span class="sxs-lookup"><span data-stu-id="63ca9-179">862</span></span>|<span data-ttu-id="63ca9-180">DOS-862</span><span class="sxs-lookup"><span data-stu-id="63ca9-180">DOS-862</span></span>|<span data-ttu-id="63ca9-181">Hébreu (DOS)</span><span class="sxs-lookup"><span data-stu-id="63ca9-181">Hebrew (DOS)</span></span>||  
|<span data-ttu-id="63ca9-182">863</span><span class="sxs-lookup"><span data-stu-id="63ca9-182">863</span></span>|<span data-ttu-id="63ca9-183">IBM863</span><span class="sxs-lookup"><span data-stu-id="63ca9-183">IBM863</span></span>|<span data-ttu-id="63ca9-184">Français canadien (DOS)</span><span class="sxs-lookup"><span data-stu-id="63ca9-184">French Canadian (DOS)</span></span>||  
|<span data-ttu-id="63ca9-185">864</span><span class="sxs-lookup"><span data-stu-id="63ca9-185">864</span></span>|<span data-ttu-id="63ca9-186">IBM864</span><span class="sxs-lookup"><span data-stu-id="63ca9-186">IBM864</span></span>|<span data-ttu-id="63ca9-187">Arabe (864)</span><span class="sxs-lookup"><span data-stu-id="63ca9-187">Arabic (864)</span></span>||  
|<span data-ttu-id="63ca9-188">865</span><span class="sxs-lookup"><span data-stu-id="63ca9-188">865</span></span>|<span data-ttu-id="63ca9-189">IBM865</span><span class="sxs-lookup"><span data-stu-id="63ca9-189">IBM865</span></span>|<span data-ttu-id="63ca9-190">Langues scandinaves (DOS)</span><span class="sxs-lookup"><span data-stu-id="63ca9-190">Nordic (DOS)</span></span>||  
|<span data-ttu-id="63ca9-191">866</span><span class="sxs-lookup"><span data-stu-id="63ca9-191">866</span></span>|<span data-ttu-id="63ca9-192">cp866</span><span class="sxs-lookup"><span data-stu-id="63ca9-192">cp866</span></span>|<span data-ttu-id="63ca9-193">Cyrillique (DOS)</span><span class="sxs-lookup"><span data-stu-id="63ca9-193">Cyrillic (DOS)</span></span>||  
|<span data-ttu-id="63ca9-194">869</span><span class="sxs-lookup"><span data-stu-id="63ca9-194">869</span></span>|<span data-ttu-id="63ca9-195">ibm869</span><span class="sxs-lookup"><span data-stu-id="63ca9-195">ibm869</span></span>|<span data-ttu-id="63ca9-196">Grec moderne (DOS)</span><span class="sxs-lookup"><span data-stu-id="63ca9-196">Greek, Modern (DOS)</span></span>||  
|<span data-ttu-id="63ca9-197">870</span><span class="sxs-lookup"><span data-stu-id="63ca9-197">870</span></span>|<span data-ttu-id="63ca9-198">IBM870</span><span class="sxs-lookup"><span data-stu-id="63ca9-198">IBM870</span></span>|<span data-ttu-id="63ca9-199">IBM EBCDIC (multilingue Latin-2)</span><span class="sxs-lookup"><span data-stu-id="63ca9-199">IBM EBCDIC (Multilingual Latin-2)</span></span>||  
|<span data-ttu-id="63ca9-200">874</span><span class="sxs-lookup"><span data-stu-id="63ca9-200">874</span></span>|<span data-ttu-id="63ca9-201">Windows-874</span><span class="sxs-lookup"><span data-stu-id="63ca9-201">windows-874</span></span>|<span data-ttu-id="63ca9-202">Thaï (Windows)</span><span class="sxs-lookup"><span data-stu-id="63ca9-202">Thai (Windows)</span></span>||  
|<span data-ttu-id="63ca9-203">875</span><span class="sxs-lookup"><span data-stu-id="63ca9-203">875</span></span>|<span data-ttu-id="63ca9-204">cp875</span><span class="sxs-lookup"><span data-stu-id="63ca9-204">cp875</span></span>|<span data-ttu-id="63ca9-205">IBM EBCDIC (grec moderne)</span><span class="sxs-lookup"><span data-stu-id="63ca9-205">IBM EBCDIC (Greek Modern)</span></span>||  
|<span data-ttu-id="63ca9-206">932</span><span class="sxs-lookup"><span data-stu-id="63ca9-206">932</span></span>|<span data-ttu-id="63ca9-207">Shift_JIS</span><span class="sxs-lookup"><span data-stu-id="63ca9-207">shift_jis</span></span>|<span data-ttu-id="63ca9-208">Japonais (Shift-JIS)</span><span class="sxs-lookup"><span data-stu-id="63ca9-208">Japanese (Shift-JIS)</span></span>||  
|<span data-ttu-id="63ca9-209">936</span><span class="sxs-lookup"><span data-stu-id="63ca9-209">936</span></span>|<span data-ttu-id="63ca9-210">gb2312</span><span class="sxs-lookup"><span data-stu-id="63ca9-210">gb2312</span></span>|<span data-ttu-id="63ca9-211">Chinois simplifié (GB2312)</span><span class="sxs-lookup"><span data-stu-id="63ca9-211">Chinese Simplified (GB2312)</span></span>|<span data-ttu-id="63ca9-212">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-212">✓</span></span>|  
|<span data-ttu-id="63ca9-213">949</span><span class="sxs-lookup"><span data-stu-id="63ca9-213">949</span></span>|<span data-ttu-id="63ca9-214">ks_c_5601-1987</span><span class="sxs-lookup"><span data-stu-id="63ca9-214">ks_c_5601-1987</span></span>|<span data-ttu-id="63ca9-215">Coréen</span><span class="sxs-lookup"><span data-stu-id="63ca9-215">Korean</span></span>||  
|<span data-ttu-id="63ca9-216">950</span><span class="sxs-lookup"><span data-stu-id="63ca9-216">950</span></span>|<span data-ttu-id="63ca9-217">Big5</span><span class="sxs-lookup"><span data-stu-id="63ca9-217">big5</span></span>|<span data-ttu-id="63ca9-218">Chinois traditionnel (Big5)</span><span class="sxs-lookup"><span data-stu-id="63ca9-218">Chinese Traditional (Big5)</span></span>||  
|<span data-ttu-id="63ca9-219">1026</span><span class="sxs-lookup"><span data-stu-id="63ca9-219">1026</span></span>|<span data-ttu-id="63ca9-220">IBM1026</span><span class="sxs-lookup"><span data-stu-id="63ca9-220">IBM1026</span></span>|<span data-ttu-id="63ca9-221">IBM EBCDIC (turc Latin-5)</span><span class="sxs-lookup"><span data-stu-id="63ca9-221">IBM EBCDIC (Turkish Latin-5)</span></span>||  
|<span data-ttu-id="63ca9-222">1047</span><span class="sxs-lookup"><span data-stu-id="63ca9-222">1047</span></span>|<span data-ttu-id="63ca9-223">IBM01047</span><span class="sxs-lookup"><span data-stu-id="63ca9-223">IBM01047</span></span>|<span data-ttu-id="63ca9-224">IBM Latin-1</span><span class="sxs-lookup"><span data-stu-id="63ca9-224">IBM Latin-1</span></span>||  
|<span data-ttu-id="63ca9-225">1140</span><span class="sxs-lookup"><span data-stu-id="63ca9-225">1140</span></span>|<span data-ttu-id="63ca9-226">IBM01140</span><span class="sxs-lookup"><span data-stu-id="63ca9-226">IBM01140</span></span>|<span data-ttu-id="63ca9-227">IBM EBCDIC (États-Unis-Canada-Europe)</span><span class="sxs-lookup"><span data-stu-id="63ca9-227">IBM EBCDIC (US-Canada-Euro)</span></span>||  
|<span data-ttu-id="63ca9-228">1141</span><span class="sxs-lookup"><span data-stu-id="63ca9-228">1141</span></span>|<span data-ttu-id="63ca9-229">IBM01141</span><span class="sxs-lookup"><span data-stu-id="63ca9-229">IBM01141</span></span>|<span data-ttu-id="63ca9-230">IBM EBCDIC (Allemagne-Euro)</span><span class="sxs-lookup"><span data-stu-id="63ca9-230">IBM EBCDIC (Germany-Euro)</span></span>||  
|<span data-ttu-id="63ca9-231">1142</span><span class="sxs-lookup"><span data-stu-id="63ca9-231">1142</span></span>|<span data-ttu-id="63ca9-232">IBM01142</span><span class="sxs-lookup"><span data-stu-id="63ca9-232">IBM01142</span></span>|<span data-ttu-id="63ca9-233">IBM EBCDIC (Danemark-Norvège-Euro)</span><span class="sxs-lookup"><span data-stu-id="63ca9-233">IBM EBCDIC (Denmark-Norway-Euro)</span></span>||  
|<span data-ttu-id="63ca9-234">1143</span><span class="sxs-lookup"><span data-stu-id="63ca9-234">1143</span></span>|<span data-ttu-id="63ca9-235">IBM01143</span><span class="sxs-lookup"><span data-stu-id="63ca9-235">IBM01143</span></span>|<span data-ttu-id="63ca9-236">IBM EBCDIC (Finlande-Suède-Euro)</span><span class="sxs-lookup"><span data-stu-id="63ca9-236">IBM EBCDIC (Finland-Sweden-Euro)</span></span>||  
|<span data-ttu-id="63ca9-237">1144</span><span class="sxs-lookup"><span data-stu-id="63ca9-237">1144</span></span>|<span data-ttu-id="63ca9-238">IBM01144</span><span class="sxs-lookup"><span data-stu-id="63ca9-238">IBM01144</span></span>|<span data-ttu-id="63ca9-239">IBM EBCDIC (Italie-Euro)</span><span class="sxs-lookup"><span data-stu-id="63ca9-239">IBM EBCDIC (Italy-Euro)</span></span>||  
|<span data-ttu-id="63ca9-240">1145</span><span class="sxs-lookup"><span data-stu-id="63ca9-240">1145</span></span>|<span data-ttu-id="63ca9-241">IBM01145</span><span class="sxs-lookup"><span data-stu-id="63ca9-241">IBM01145</span></span>|<span data-ttu-id="63ca9-242">IBM EBCDIC (Espagne-Euro)</span><span class="sxs-lookup"><span data-stu-id="63ca9-242">IBM EBCDIC (Spain-Euro)</span></span>||  
|<span data-ttu-id="63ca9-243">1146</span><span class="sxs-lookup"><span data-stu-id="63ca9-243">1146</span></span>|<span data-ttu-id="63ca9-244">IBM01146</span><span class="sxs-lookup"><span data-stu-id="63ca9-244">IBM01146</span></span>|<span data-ttu-id="63ca9-245">IBM EBCDIC (Royaume Uni-Europe)</span><span class="sxs-lookup"><span data-stu-id="63ca9-245">IBM EBCDIC (UK-Euro)</span></span>||  
|<span data-ttu-id="63ca9-246">1147</span><span class="sxs-lookup"><span data-stu-id="63ca9-246">1147</span></span>|<span data-ttu-id="63ca9-247">IBM01147</span><span class="sxs-lookup"><span data-stu-id="63ca9-247">IBM01147</span></span>|<span data-ttu-id="63ca9-248">IBM EBCDIC (France-Europe)</span><span class="sxs-lookup"><span data-stu-id="63ca9-248">IBM EBCDIC (France-Euro)</span></span>||  
|<span data-ttu-id="63ca9-249">1148</span><span class="sxs-lookup"><span data-stu-id="63ca9-249">1148</span></span>|<span data-ttu-id="63ca9-250">IBM01148</span><span class="sxs-lookup"><span data-stu-id="63ca9-250">IBM01148</span></span>|<span data-ttu-id="63ca9-251">IBM EBCDIC (International-Euro)</span><span class="sxs-lookup"><span data-stu-id="63ca9-251">IBM EBCDIC (International-Euro)</span></span>||  
|<span data-ttu-id="63ca9-252">1149</span><span class="sxs-lookup"><span data-stu-id="63ca9-252">1149</span></span>|<span data-ttu-id="63ca9-253">IBM01149</span><span class="sxs-lookup"><span data-stu-id="63ca9-253">IBM01149</span></span>|<span data-ttu-id="63ca9-254">IBM EBCDIC (islandais-Euro)</span><span class="sxs-lookup"><span data-stu-id="63ca9-254">IBM EBCDIC (Icelandic-Euro)</span></span>||  
|<span data-ttu-id="63ca9-255">1200</span><span class="sxs-lookup"><span data-stu-id="63ca9-255">1200</span></span>|<span data-ttu-id="63ca9-256">UTF-16</span><span class="sxs-lookup"><span data-stu-id="63ca9-256">utf-16</span></span>|<span data-ttu-id="63ca9-257">Unicode</span><span class="sxs-lookup"><span data-stu-id="63ca9-257">Unicode</span></span>|<span data-ttu-id="63ca9-258">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-258">✓</span></span>|  
|<span data-ttu-id="63ca9-259">1201</span><span class="sxs-lookup"><span data-stu-id="63ca9-259">1201</span></span>|<span data-ttu-id="63ca9-260">unicodeFFFE</span><span class="sxs-lookup"><span data-stu-id="63ca9-260">unicodeFFFE</span></span>|<span data-ttu-id="63ca9-261">Unicode (Big endian)</span><span class="sxs-lookup"><span data-stu-id="63ca9-261">Unicode (Big endian)</span></span>|<span data-ttu-id="63ca9-262">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-262">✓</span></span>|  
|<span data-ttu-id="63ca9-263">1250</span><span class="sxs-lookup"><span data-stu-id="63ca9-263">1250</span></span>|<span data-ttu-id="63ca9-264">Windows-1250</span><span class="sxs-lookup"><span data-stu-id="63ca9-264">windows-1250</span></span>|<span data-ttu-id="63ca9-265">Europe centrale (Windows)</span><span class="sxs-lookup"><span data-stu-id="63ca9-265">Central European (Windows)</span></span>||  
|<span data-ttu-id="63ca9-266">1251</span><span class="sxs-lookup"><span data-stu-id="63ca9-266">1251</span></span>|<span data-ttu-id="63ca9-267">Windows-1251</span><span class="sxs-lookup"><span data-stu-id="63ca9-267">windows-1251</span></span>|<span data-ttu-id="63ca9-268">Cyrillique (Windows)</span><span class="sxs-lookup"><span data-stu-id="63ca9-268">Cyrillic (Windows)</span></span>||  
|<span data-ttu-id="63ca9-269">1252</span><span class="sxs-lookup"><span data-stu-id="63ca9-269">1252</span></span>|<span data-ttu-id="63ca9-270">Windows-1252</span><span class="sxs-lookup"><span data-stu-id="63ca9-270">Windows-1252</span></span>|<span data-ttu-id="63ca9-271">Europe occidentale (Windows)</span><span class="sxs-lookup"><span data-stu-id="63ca9-271">Western European (Windows)</span></span>|<span data-ttu-id="63ca9-272">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-272">✓</span></span>|  
|<span data-ttu-id="63ca9-273">1253</span><span class="sxs-lookup"><span data-stu-id="63ca9-273">1253</span></span>|<span data-ttu-id="63ca9-274">windows-1253</span><span class="sxs-lookup"><span data-stu-id="63ca9-274">windows-1253</span></span>|<span data-ttu-id="63ca9-275">Grec (Windows)</span><span class="sxs-lookup"><span data-stu-id="63ca9-275">Greek (Windows)</span></span>||  
|<span data-ttu-id="63ca9-276">1254</span><span class="sxs-lookup"><span data-stu-id="63ca9-276">1254</span></span>|<span data-ttu-id="63ca9-277">Windows-1254</span><span class="sxs-lookup"><span data-stu-id="63ca9-277">windows-1254</span></span>|<span data-ttu-id="63ca9-278">Turc (Windows)</span><span class="sxs-lookup"><span data-stu-id="63ca9-278">Turkish (Windows)</span></span>||  
|<span data-ttu-id="63ca9-279">1255</span><span class="sxs-lookup"><span data-stu-id="63ca9-279">1255</span></span>|<span data-ttu-id="63ca9-280">Windows-1255</span><span class="sxs-lookup"><span data-stu-id="63ca9-280">windows-1255</span></span>|<span data-ttu-id="63ca9-281">Hébreu (Windows)</span><span class="sxs-lookup"><span data-stu-id="63ca9-281">Hebrew (Windows)</span></span>||  
|<span data-ttu-id="63ca9-282">1256</span><span class="sxs-lookup"><span data-stu-id="63ca9-282">1256</span></span>|<span data-ttu-id="63ca9-283">Windows-1256</span><span class="sxs-lookup"><span data-stu-id="63ca9-283">windows-1256</span></span>|<span data-ttu-id="63ca9-284">Arabe (Windows)</span><span class="sxs-lookup"><span data-stu-id="63ca9-284">Arabic (Windows)</span></span>||  
|<span data-ttu-id="63ca9-285">1257</span><span class="sxs-lookup"><span data-stu-id="63ca9-285">1257</span></span>|<span data-ttu-id="63ca9-286">Windows-1257</span><span class="sxs-lookup"><span data-stu-id="63ca9-286">windows-1257</span></span>|<span data-ttu-id="63ca9-287">Baltique (Windows)</span><span class="sxs-lookup"><span data-stu-id="63ca9-287">Baltic (Windows)</span></span>||  
|<span data-ttu-id="63ca9-288">1258</span><span class="sxs-lookup"><span data-stu-id="63ca9-288">1258</span></span>|<span data-ttu-id="63ca9-289">windows-1258</span><span class="sxs-lookup"><span data-stu-id="63ca9-289">windows-1258</span></span>|<span data-ttu-id="63ca9-290">Vietnamien (Windows)</span><span class="sxs-lookup"><span data-stu-id="63ca9-290">Vietnamese (Windows)</span></span>||  
|<span data-ttu-id="63ca9-291">1361</span><span class="sxs-lookup"><span data-stu-id="63ca9-291">1361</span></span>|<span data-ttu-id="63ca9-292">Johab</span><span class="sxs-lookup"><span data-stu-id="63ca9-292">Johab</span></span>|<span data-ttu-id="63ca9-293">Coréen (Johab)</span><span class="sxs-lookup"><span data-stu-id="63ca9-293">Korean (Johab)</span></span>||  
|<span data-ttu-id="63ca9-294">10000</span><span class="sxs-lookup"><span data-stu-id="63ca9-294">10000</span></span>|<span data-ttu-id="63ca9-295">Macintosh</span><span class="sxs-lookup"><span data-stu-id="63ca9-295">macintosh</span></span>|<span data-ttu-id="63ca9-296">Europe occidentale (Mac)</span><span class="sxs-lookup"><span data-stu-id="63ca9-296">Western European (Mac)</span></span>||  
|<span data-ttu-id="63ca9-297">10001</span><span class="sxs-lookup"><span data-stu-id="63ca9-297">10001</span></span>|<span data-ttu-id="63ca9-298">x-mac-japonais</span><span class="sxs-lookup"><span data-stu-id="63ca9-298">x-mac-japanese</span></span>|<span data-ttu-id="63ca9-299">Japonais (Mac)</span><span class="sxs-lookup"><span data-stu-id="63ca9-299">Japanese (Mac)</span></span>||  
|<span data-ttu-id="63ca9-300">10002</span><span class="sxs-lookup"><span data-stu-id="63ca9-300">10002</span></span>|<span data-ttu-id="63ca9-301">x-mac-chinesetrad</span><span class="sxs-lookup"><span data-stu-id="63ca9-301">x-mac-chinesetrad</span></span>|<span data-ttu-id="63ca9-302">Chinois traditionnel (Mac)</span><span class="sxs-lookup"><span data-stu-id="63ca9-302">Chinese Traditional (Mac)</span></span>||  
|<span data-ttu-id="63ca9-303">10003</span><span class="sxs-lookup"><span data-stu-id="63ca9-303">10003</span></span>|<span data-ttu-id="63ca9-304">x-mac-coréen</span><span class="sxs-lookup"><span data-stu-id="63ca9-304">x-mac-korean</span></span>|<span data-ttu-id="63ca9-305">Coréen (Mac)</span><span class="sxs-lookup"><span data-stu-id="63ca9-305">Korean (Mac)</span></span>|<span data-ttu-id="63ca9-306">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-306">✓</span></span>|  
|<span data-ttu-id="63ca9-307">10004</span><span class="sxs-lookup"><span data-stu-id="63ca9-307">10004</span></span>|<span data-ttu-id="63ca9-308">x-mac-arabe</span><span class="sxs-lookup"><span data-stu-id="63ca9-308">x-mac-arabic</span></span>|<span data-ttu-id="63ca9-309">Arabe (Mac)</span><span class="sxs-lookup"><span data-stu-id="63ca9-309">Arabic (Mac)</span></span>||  
|<span data-ttu-id="63ca9-310">10005</span><span class="sxs-lookup"><span data-stu-id="63ca9-310">10005</span></span>|<span data-ttu-id="63ca9-311">x-mac-hébreu</span><span class="sxs-lookup"><span data-stu-id="63ca9-311">x-mac-hebrew</span></span>|<span data-ttu-id="63ca9-312">Hébreu (Mac)</span><span class="sxs-lookup"><span data-stu-id="63ca9-312">Hebrew (Mac)</span></span>||  
|<span data-ttu-id="63ca9-313">10006</span><span class="sxs-lookup"><span data-stu-id="63ca9-313">10006</span></span>|<span data-ttu-id="63ca9-314">Grec-x-mac</span><span class="sxs-lookup"><span data-stu-id="63ca9-314">x-mac-greek</span></span>|<span data-ttu-id="63ca9-315">Grec (Mac)</span><span class="sxs-lookup"><span data-stu-id="63ca9-315">Greek (Mac)</span></span>||  
|<span data-ttu-id="63ca9-316">10007</span><span class="sxs-lookup"><span data-stu-id="63ca9-316">10007</span></span>|<span data-ttu-id="63ca9-317">x-mac-cyrillique</span><span class="sxs-lookup"><span data-stu-id="63ca9-317">x-mac-cyrillic</span></span>|<span data-ttu-id="63ca9-318">Cyrillique (Mac)</span><span class="sxs-lookup"><span data-stu-id="63ca9-318">Cyrillic (Mac)</span></span>||  
|<span data-ttu-id="63ca9-319">10008</span><span class="sxs-lookup"><span data-stu-id="63ca9-319">10008</span></span>|<span data-ttu-id="63ca9-320">x-mac-chinesesimp</span><span class="sxs-lookup"><span data-stu-id="63ca9-320">x-mac-chinesesimp</span></span>|<span data-ttu-id="63ca9-321">Chinois simplifié (Mac)</span><span class="sxs-lookup"><span data-stu-id="63ca9-321">Chinese Simplified (Mac)</span></span>|<span data-ttu-id="63ca9-322">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-322">✓</span></span>|  
|<span data-ttu-id="63ca9-323">10010</span><span class="sxs-lookup"><span data-stu-id="63ca9-323">10010</span></span>|<span data-ttu-id="63ca9-324">x-mac-roumain</span><span class="sxs-lookup"><span data-stu-id="63ca9-324">x-mac-romanian</span></span>|<span data-ttu-id="63ca9-325">Roumain (Mac)</span><span class="sxs-lookup"><span data-stu-id="63ca9-325">Romanian (Mac)</span></span>||  
|<span data-ttu-id="63ca9-326">10017</span><span class="sxs-lookup"><span data-stu-id="63ca9-326">10017</span></span>|<span data-ttu-id="63ca9-327">x-mac-ukrainien</span><span class="sxs-lookup"><span data-stu-id="63ca9-327">x-mac-ukrainian</span></span>|<span data-ttu-id="63ca9-328">Ukrainien (Mac)</span><span class="sxs-lookup"><span data-stu-id="63ca9-328">Ukrainian (Mac)</span></span>||  
|<span data-ttu-id="63ca9-329">10021</span><span class="sxs-lookup"><span data-stu-id="63ca9-329">10021</span></span>|<span data-ttu-id="63ca9-330">x-mac-thaï</span><span class="sxs-lookup"><span data-stu-id="63ca9-330">x-mac-thai</span></span>|<span data-ttu-id="63ca9-331">Thaï (Mac)</span><span class="sxs-lookup"><span data-stu-id="63ca9-331">Thai (Mac)</span></span>||  
|<span data-ttu-id="63ca9-332">10029</span><span class="sxs-lookup"><span data-stu-id="63ca9-332">10029</span></span>|<span data-ttu-id="63ca9-333">x-mac-ce</span><span class="sxs-lookup"><span data-stu-id="63ca9-333">x-mac-ce</span></span>|<span data-ttu-id="63ca9-334">Europe centrale (Mac)</span><span class="sxs-lookup"><span data-stu-id="63ca9-334">Central European (Mac)</span></span>||  
|<span data-ttu-id="63ca9-335">10079</span><span class="sxs-lookup"><span data-stu-id="63ca9-335">10079</span></span>|<span data-ttu-id="63ca9-336">x-mac-islandais</span><span class="sxs-lookup"><span data-stu-id="63ca9-336">x-mac-icelandic</span></span>|<span data-ttu-id="63ca9-337">Islandais (Mac)</span><span class="sxs-lookup"><span data-stu-id="63ca9-337">Icelandic (Mac)</span></span>||  
|<span data-ttu-id="63ca9-338">10081</span><span class="sxs-lookup"><span data-stu-id="63ca9-338">10081</span></span>|<span data-ttu-id="63ca9-339">x-mac-turc</span><span class="sxs-lookup"><span data-stu-id="63ca9-339">x-mac-turkish</span></span>|<span data-ttu-id="63ca9-340">Turc (Mac)</span><span class="sxs-lookup"><span data-stu-id="63ca9-340">Turkish (Mac)</span></span>||  
|<span data-ttu-id="63ca9-341">10082</span><span class="sxs-lookup"><span data-stu-id="63ca9-341">10082</span></span>|<span data-ttu-id="63ca9-342">x-mac-croate</span><span class="sxs-lookup"><span data-stu-id="63ca9-342">x-mac-croatian</span></span>|<span data-ttu-id="63ca9-343">Croate (Mac)</span><span class="sxs-lookup"><span data-stu-id="63ca9-343">Croatian (Mac)</span></span>||  
|<span data-ttu-id="63ca9-344">12000</span><span class="sxs-lookup"><span data-stu-id="63ca9-344">12000</span></span>|<span data-ttu-id="63ca9-345">UTF-32</span><span class="sxs-lookup"><span data-stu-id="63ca9-345">utf-32</span></span>|<span data-ttu-id="63ca9-346">Unicode (UTF-32)</span><span class="sxs-lookup"><span data-stu-id="63ca9-346">Unicode (UTF-32)</span></span>|<span data-ttu-id="63ca9-347">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-347">✓</span></span>|  
|<span data-ttu-id="63ca9-348">12001</span><span class="sxs-lookup"><span data-stu-id="63ca9-348">12001</span></span>|<span data-ttu-id="63ca9-349">UTF-32be ne</span><span class="sxs-lookup"><span data-stu-id="63ca9-349">utf-32BE</span></span>|<span data-ttu-id="63ca9-350">Unicode (UTF-32 Big endian)</span><span class="sxs-lookup"><span data-stu-id="63ca9-350">Unicode (UTF-32 Big endian)</span></span>|<span data-ttu-id="63ca9-351">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-351">✓</span></span>|  
|<span data-ttu-id="63ca9-352">20000</span><span class="sxs-lookup"><span data-stu-id="63ca9-352">20000</span></span>|<span data-ttu-id="63ca9-353">x-chinois-SNC</span><span class="sxs-lookup"><span data-stu-id="63ca9-353">x-Chinese-CNS</span></span>|<span data-ttu-id="63ca9-354">Chinois traditionnel (RC)</span><span class="sxs-lookup"><span data-stu-id="63ca9-354">Chinese Traditional (CNS)</span></span>||  
|<span data-ttu-id="63ca9-355">20001</span><span class="sxs-lookup"><span data-stu-id="63ca9-355">20001</span></span>|<span data-ttu-id="63ca9-356">x-cp20001</span><span class="sxs-lookup"><span data-stu-id="63ca9-356">x-cp20001</span></span>|<span data-ttu-id="63ca9-357">ACT Taïwan</span><span class="sxs-lookup"><span data-stu-id="63ca9-357">TCA Taiwan</span></span>||  
|<span data-ttu-id="63ca9-358">20002</span><span class="sxs-lookup"><span data-stu-id="63ca9-358">20002</span></span>|<span data-ttu-id="63ca9-359">Chinois-x-Eten</span><span class="sxs-lookup"><span data-stu-id="63ca9-359">x-Chinese-Eten</span></span>|<span data-ttu-id="63ca9-360">Chinois traditionnel (Eten)</span><span class="sxs-lookup"><span data-stu-id="63ca9-360">Chinese Traditional (Eten)</span></span>||  
|<span data-ttu-id="63ca9-361">20003</span><span class="sxs-lookup"><span data-stu-id="63ca9-361">20003</span></span>|<span data-ttu-id="63ca9-362">x-cp20003</span><span class="sxs-lookup"><span data-stu-id="63ca9-362">x-cp20003</span></span>|<span data-ttu-id="63ca9-363">IBM5550 Taïwan</span><span class="sxs-lookup"><span data-stu-id="63ca9-363">IBM5550 Taiwan</span></span>||  
|<span data-ttu-id="63ca9-364">20004</span><span class="sxs-lookup"><span data-stu-id="63ca9-364">20004</span></span>|<span data-ttu-id="63ca9-365">x-cp20004</span><span class="sxs-lookup"><span data-stu-id="63ca9-365">x-cp20004</span></span>|<span data-ttu-id="63ca9-366">Télétexte Taïwan</span><span class="sxs-lookup"><span data-stu-id="63ca9-366">TeleText Taiwan</span></span>||  
|<span data-ttu-id="63ca9-367">20005</span><span class="sxs-lookup"><span data-stu-id="63ca9-367">20005</span></span>|<span data-ttu-id="63ca9-368">x-cp20005</span><span class="sxs-lookup"><span data-stu-id="63ca9-368">x-cp20005</span></span>|<span data-ttu-id="63ca9-369">Wang Taïwan</span><span class="sxs-lookup"><span data-stu-id="63ca9-369">Wang Taiwan</span></span>||  
|<span data-ttu-id="63ca9-370">20105</span><span class="sxs-lookup"><span data-stu-id="63ca9-370">20105</span></span>|<span data-ttu-id="63ca9-371">x-IA5</span><span class="sxs-lookup"><span data-stu-id="63ca9-371">x-IA5</span></span>|<span data-ttu-id="63ca9-372">Europe occidentale (IA5)</span><span class="sxs-lookup"><span data-stu-id="63ca9-372">Western European (IA5)</span></span>||  
|<span data-ttu-id="63ca9-373">20106</span><span class="sxs-lookup"><span data-stu-id="63ca9-373">20106</span></span>|<span data-ttu-id="63ca9-374">x-IA5-allemand</span><span class="sxs-lookup"><span data-stu-id="63ca9-374">x-IA5-German</span></span>|<span data-ttu-id="63ca9-375">Allemand (IA5)</span><span class="sxs-lookup"><span data-stu-id="63ca9-375">German (IA5)</span></span>||  
|<span data-ttu-id="63ca9-376">20107</span><span class="sxs-lookup"><span data-stu-id="63ca9-376">20107</span></span>|<span data-ttu-id="63ca9-377">x-IA5-suédois</span><span class="sxs-lookup"><span data-stu-id="63ca9-377">x-IA5-Swedish</span></span>|<span data-ttu-id="63ca9-378">Suédois (IA5)</span><span class="sxs-lookup"><span data-stu-id="63ca9-378">Swedish (IA5)</span></span>||  
|<span data-ttu-id="63ca9-379">20108</span><span class="sxs-lookup"><span data-stu-id="63ca9-379">20108</span></span>|<span data-ttu-id="63ca9-380">x-IA5-norvégien</span><span class="sxs-lookup"><span data-stu-id="63ca9-380">x-IA5-Norwegian</span></span>|<span data-ttu-id="63ca9-381">Norvégien (IA5)</span><span class="sxs-lookup"><span data-stu-id="63ca9-381">Norwegian (IA5)</span></span>||  
|<span data-ttu-id="63ca9-382">20127</span><span class="sxs-lookup"><span data-stu-id="63ca9-382">20127</span></span>|<span data-ttu-id="63ca9-383">us-ascii</span><span class="sxs-lookup"><span data-stu-id="63ca9-383">us-ascii</span></span>|<span data-ttu-id="63ca9-384">US-ASCII</span><span class="sxs-lookup"><span data-stu-id="63ca9-384">US-ASCII</span></span>|<span data-ttu-id="63ca9-385">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-385">✓</span></span>|  
|<span data-ttu-id="63ca9-386">20261</span><span class="sxs-lookup"><span data-stu-id="63ca9-386">20261</span></span>|<span data-ttu-id="63ca9-387">x-cp20261</span><span class="sxs-lookup"><span data-stu-id="63ca9-387">x-cp20261</span></span>|<span data-ttu-id="63ca9-388">T.61</span><span class="sxs-lookup"><span data-stu-id="63ca9-388">T.61</span></span>||  
|<span data-ttu-id="63ca9-389">20269</span><span class="sxs-lookup"><span data-stu-id="63ca9-389">20269</span></span>|<span data-ttu-id="63ca9-390">x-cp20269</span><span class="sxs-lookup"><span data-stu-id="63ca9-390">x-cp20269</span></span>|<span data-ttu-id="63ca9-391">ISO-6937</span><span class="sxs-lookup"><span data-stu-id="63ca9-391">ISO-6937</span></span>||  
|<span data-ttu-id="63ca9-392">20273</span><span class="sxs-lookup"><span data-stu-id="63ca9-392">20273</span></span>|<span data-ttu-id="63ca9-393">IBM273</span><span class="sxs-lookup"><span data-stu-id="63ca9-393">IBM273</span></span>|<span data-ttu-id="63ca9-394">IBM EBCDIC (Allemagne)</span><span class="sxs-lookup"><span data-stu-id="63ca9-394">IBM EBCDIC (Germany)</span></span>||  
|<span data-ttu-id="63ca9-395">20277</span><span class="sxs-lookup"><span data-stu-id="63ca9-395">20277</span></span>|<span data-ttu-id="63ca9-396">IBM277</span><span class="sxs-lookup"><span data-stu-id="63ca9-396">IBM277</span></span>|<span data-ttu-id="63ca9-397">IBM EBCDIC (Danemark-Norvège)</span><span class="sxs-lookup"><span data-stu-id="63ca9-397">IBM EBCDIC (Denmark-Norway)</span></span>||  
|<span data-ttu-id="63ca9-398">20278</span><span class="sxs-lookup"><span data-stu-id="63ca9-398">20278</span></span>|<span data-ttu-id="63ca9-399">IBM278</span><span class="sxs-lookup"><span data-stu-id="63ca9-399">IBM278</span></span>|<span data-ttu-id="63ca9-400">IBM EBCDIC (Finlande-Suède)</span><span class="sxs-lookup"><span data-stu-id="63ca9-400">IBM EBCDIC (Finland-Sweden)</span></span>||  
|<span data-ttu-id="63ca9-401">20280</span><span class="sxs-lookup"><span data-stu-id="63ca9-401">20280</span></span>|<span data-ttu-id="63ca9-402">IBM280</span><span class="sxs-lookup"><span data-stu-id="63ca9-402">IBM280</span></span>|<span data-ttu-id="63ca9-403">IBM EBCDIC (Italie)</span><span class="sxs-lookup"><span data-stu-id="63ca9-403">IBM EBCDIC (Italy)</span></span>||  
|<span data-ttu-id="63ca9-404">20284</span><span class="sxs-lookup"><span data-stu-id="63ca9-404">20284</span></span>|<span data-ttu-id="63ca9-405">IBM284</span><span class="sxs-lookup"><span data-stu-id="63ca9-405">IBM284</span></span>|<span data-ttu-id="63ca9-406">IBM EBCDIC (Espagne)</span><span class="sxs-lookup"><span data-stu-id="63ca9-406">IBM EBCDIC (Spain)</span></span>||  
|<span data-ttu-id="63ca9-407">20285</span><span class="sxs-lookup"><span data-stu-id="63ca9-407">20285</span></span>|<span data-ttu-id="63ca9-408">IBM285</span><span class="sxs-lookup"><span data-stu-id="63ca9-408">IBM285</span></span>|<span data-ttu-id="63ca9-409">IBM EBCDIC (ROYAUME-UNI)</span><span class="sxs-lookup"><span data-stu-id="63ca9-409">IBM EBCDIC (UK)</span></span>||  
|<span data-ttu-id="63ca9-410">20290</span><span class="sxs-lookup"><span data-stu-id="63ca9-410">20290</span></span>|<span data-ttu-id="63ca9-411">IBM290</span><span class="sxs-lookup"><span data-stu-id="63ca9-411">IBM290</span></span>|<span data-ttu-id="63ca9-412">IBM EBCDIC (japonais katakana)</span><span class="sxs-lookup"><span data-stu-id="63ca9-412">IBM EBCDIC (Japanese katakana)</span></span>||  
|<span data-ttu-id="63ca9-413">20297</span><span class="sxs-lookup"><span data-stu-id="63ca9-413">20297</span></span>|<span data-ttu-id="63ca9-414">IBM297</span><span class="sxs-lookup"><span data-stu-id="63ca9-414">IBM297</span></span>|<span data-ttu-id="63ca9-415">IBM EBCDIC (France)</span><span class="sxs-lookup"><span data-stu-id="63ca9-415">IBM EBCDIC (France)</span></span>||  
|<span data-ttu-id="63ca9-416">20420</span><span class="sxs-lookup"><span data-stu-id="63ca9-416">20420</span></span>|<span data-ttu-id="63ca9-417">IBM420</span><span class="sxs-lookup"><span data-stu-id="63ca9-417">IBM420</span></span>|<span data-ttu-id="63ca9-418">IBM EBCDIC (arabe)</span><span class="sxs-lookup"><span data-stu-id="63ca9-418">IBM EBCDIC (Arabic)</span></span>||  
|<span data-ttu-id="63ca9-419">20423</span><span class="sxs-lookup"><span data-stu-id="63ca9-419">20423</span></span>|<span data-ttu-id="63ca9-420">IBM423</span><span class="sxs-lookup"><span data-stu-id="63ca9-420">IBM423</span></span>|<span data-ttu-id="63ca9-421">IBM EBCDIC (grec)</span><span class="sxs-lookup"><span data-stu-id="63ca9-421">IBM EBCDIC (Greek)</span></span>||  
|<span data-ttu-id="63ca9-422">20424</span><span class="sxs-lookup"><span data-stu-id="63ca9-422">20424</span></span>|<span data-ttu-id="63ca9-423">IBM424</span><span class="sxs-lookup"><span data-stu-id="63ca9-423">IBM424</span></span>|<span data-ttu-id="63ca9-424">IBM EBCDIC (hébreu)</span><span class="sxs-lookup"><span data-stu-id="63ca9-424">IBM EBCDIC (Hebrew)</span></span>||  
|<span data-ttu-id="63ca9-425">20833</span><span class="sxs-lookup"><span data-stu-id="63ca9-425">20833</span></span>|<span data-ttu-id="63ca9-426">EBCDIC-x-KoreanExtended</span><span class="sxs-lookup"><span data-stu-id="63ca9-426">x-EBCDIC-KoreanExtended</span></span>|<span data-ttu-id="63ca9-427">IBM EBCDIC (coréen étendu)</span><span class="sxs-lookup"><span data-stu-id="63ca9-427">IBM EBCDIC (Korean Extended)</span></span>||  
|<span data-ttu-id="63ca9-428">20838</span><span class="sxs-lookup"><span data-stu-id="63ca9-428">20838</span></span>|<span data-ttu-id="63ca9-429">IBM-thaï</span><span class="sxs-lookup"><span data-stu-id="63ca9-429">IBM-Thai</span></span>|<span data-ttu-id="63ca9-430">IBM EBCDIC (thaï)</span><span class="sxs-lookup"><span data-stu-id="63ca9-430">IBM EBCDIC (Thai)</span></span>||  
|<span data-ttu-id="63ca9-431">20866</span><span class="sxs-lookup"><span data-stu-id="63ca9-431">20866</span></span>|<span data-ttu-id="63ca9-432">koi8-r</span><span class="sxs-lookup"><span data-stu-id="63ca9-432">koi8-r</span></span>|<span data-ttu-id="63ca9-433">Cyrillique (KOI8-R)</span><span class="sxs-lookup"><span data-stu-id="63ca9-433">Cyrillic (KOI8-R)</span></span>||  
|<span data-ttu-id="63ca9-434">20871</span><span class="sxs-lookup"><span data-stu-id="63ca9-434">20871</span></span>|<span data-ttu-id="63ca9-435">IBM871</span><span class="sxs-lookup"><span data-stu-id="63ca9-435">IBM871</span></span>|<span data-ttu-id="63ca9-436">IBM EBCDIC (Islande)</span><span class="sxs-lookup"><span data-stu-id="63ca9-436">IBM EBCDIC (Icelandic)</span></span>||  
|<span data-ttu-id="63ca9-437">20880</span><span class="sxs-lookup"><span data-stu-id="63ca9-437">20880</span></span>|<span data-ttu-id="63ca9-438">IBM880</span><span class="sxs-lookup"><span data-stu-id="63ca9-438">IBM880</span></span>|<span data-ttu-id="63ca9-439">IBM EBCDIC (Russe cyrillique)</span><span class="sxs-lookup"><span data-stu-id="63ca9-439">IBM EBCDIC (Cyrillic Russian)</span></span>||  
|<span data-ttu-id="63ca9-440">20905</span><span class="sxs-lookup"><span data-stu-id="63ca9-440">20905</span></span>|<span data-ttu-id="63ca9-441">IBM905</span><span class="sxs-lookup"><span data-stu-id="63ca9-441">IBM905</span></span>|<span data-ttu-id="63ca9-442">IBM EBCDIC (turc)</span><span class="sxs-lookup"><span data-stu-id="63ca9-442">IBM EBCDIC (Turkish)</span></span>||  
|<span data-ttu-id="63ca9-443">20924</span><span class="sxs-lookup"><span data-stu-id="63ca9-443">20924</span></span>|<span data-ttu-id="63ca9-444">IBM00924</span><span class="sxs-lookup"><span data-stu-id="63ca9-444">IBM00924</span></span>|<span data-ttu-id="63ca9-445">IBM Latin-1</span><span class="sxs-lookup"><span data-stu-id="63ca9-445">IBM Latin-1</span></span>||  
|<span data-ttu-id="63ca9-446">20932</span><span class="sxs-lookup"><span data-stu-id="63ca9-446">20932</span></span>|<span data-ttu-id="63ca9-447">EUC-JP</span><span class="sxs-lookup"><span data-stu-id="63ca9-447">EUC-JP</span></span>|<span data-ttu-id="63ca9-448">Japonais (JIS 0208-1990 et 0212-1990)</span><span class="sxs-lookup"><span data-stu-id="63ca9-448">Japanese (JIS 0208-1990 and 0212-1990)</span></span>||  
|<span data-ttu-id="63ca9-449">20936</span><span class="sxs-lookup"><span data-stu-id="63ca9-449">20936</span></span>|<span data-ttu-id="63ca9-450">x-cp20936</span><span class="sxs-lookup"><span data-stu-id="63ca9-450">x-cp20936</span></span>|<span data-ttu-id="63ca9-451">Chinois simplifié (GB2312-80)</span><span class="sxs-lookup"><span data-stu-id="63ca9-451">Chinese Simplified (GB2312-80)</span></span>|<span data-ttu-id="63ca9-452">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-452">✓</span></span>|  
|<span data-ttu-id="63ca9-453">20949</span><span class="sxs-lookup"><span data-stu-id="63ca9-453">20949</span></span>|<span data-ttu-id="63ca9-454">x-cp20949</span><span class="sxs-lookup"><span data-stu-id="63ca9-454">x-cp20949</span></span>|<span data-ttu-id="63ca9-455">Coréen Wansung</span><span class="sxs-lookup"><span data-stu-id="63ca9-455">Korean Wansung</span></span>|<span data-ttu-id="63ca9-456">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-456">✓</span></span>|  
|<span data-ttu-id="63ca9-457">21025</span><span class="sxs-lookup"><span data-stu-id="63ca9-457">21025</span></span>|<span data-ttu-id="63ca9-458">cp1025</span><span class="sxs-lookup"><span data-stu-id="63ca9-458">cp1025</span></span>|<span data-ttu-id="63ca9-459">IBM EBCDIC (serbe cyrillique-bulgare)</span><span class="sxs-lookup"><span data-stu-id="63ca9-459">IBM EBCDIC (Cyrillic Serbian-Bulgarian)</span></span>||  
|<span data-ttu-id="63ca9-460">21866</span><span class="sxs-lookup"><span data-stu-id="63ca9-460">21866</span></span>|<span data-ttu-id="63ca9-461">koi8-u</span><span class="sxs-lookup"><span data-stu-id="63ca9-461">koi8-u</span></span>|<span data-ttu-id="63ca9-462">Cyrillique (KOI8-U)</span><span class="sxs-lookup"><span data-stu-id="63ca9-462">Cyrillic (KOI8-U)</span></span>||  
|<span data-ttu-id="63ca9-463">28591</span><span class="sxs-lookup"><span data-stu-id="63ca9-463">28591</span></span>|<span data-ttu-id="63ca9-464">ISO-8859-1.</span><span class="sxs-lookup"><span data-stu-id="63ca9-464">iso-8859-1</span></span>|<span data-ttu-id="63ca9-465">Europe occidentale (ISO)</span><span class="sxs-lookup"><span data-stu-id="63ca9-465">Western European (ISO)</span></span>|<span data-ttu-id="63ca9-466">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-466">✓</span></span>|  
|<span data-ttu-id="63ca9-467">28592</span><span class="sxs-lookup"><span data-stu-id="63ca9-467">28592</span></span>|<span data-ttu-id="63ca9-468">ISO-8859-2</span><span class="sxs-lookup"><span data-stu-id="63ca9-468">iso-8859-2</span></span>|<span data-ttu-id="63ca9-469">Europe centrale (ISO)</span><span class="sxs-lookup"><span data-stu-id="63ca9-469">Central European (ISO)</span></span>||  
|<span data-ttu-id="63ca9-470">28593</span><span class="sxs-lookup"><span data-stu-id="63ca9-470">28593</span></span>|<span data-ttu-id="63ca9-471">ISO-8859-3</span><span class="sxs-lookup"><span data-stu-id="63ca9-471">iso-8859-3</span></span>|<span data-ttu-id="63ca9-472">3 latin (ISO)</span><span class="sxs-lookup"><span data-stu-id="63ca9-472">Latin 3 (ISO)</span></span>||  
|<span data-ttu-id="63ca9-473">28594</span><span class="sxs-lookup"><span data-stu-id="63ca9-473">28594</span></span>|<span data-ttu-id="63ca9-474">ISO-8859-4</span><span class="sxs-lookup"><span data-stu-id="63ca9-474">iso-8859-4</span></span>|<span data-ttu-id="63ca9-475">Baltique (ISO)</span><span class="sxs-lookup"><span data-stu-id="63ca9-475">Baltic (ISO)</span></span>||  
|<span data-ttu-id="63ca9-476">28595</span><span class="sxs-lookup"><span data-stu-id="63ca9-476">28595</span></span>|<span data-ttu-id="63ca9-477">ISO-8859-5</span><span class="sxs-lookup"><span data-stu-id="63ca9-477">iso-8859-5</span></span>|<span data-ttu-id="63ca9-478">Cyrillique (ISO)</span><span class="sxs-lookup"><span data-stu-id="63ca9-478">Cyrillic (ISO)</span></span>||  
|<span data-ttu-id="63ca9-479">28596</span><span class="sxs-lookup"><span data-stu-id="63ca9-479">28596</span></span>|<span data-ttu-id="63ca9-480">ISO-8859-6</span><span class="sxs-lookup"><span data-stu-id="63ca9-480">iso-8859-6</span></span>|<span data-ttu-id="63ca9-481">Arabe (ISO)</span><span class="sxs-lookup"><span data-stu-id="63ca9-481">Arabic (ISO)</span></span>||  
|<span data-ttu-id="63ca9-482">28597</span><span class="sxs-lookup"><span data-stu-id="63ca9-482">28597</span></span>|<span data-ttu-id="63ca9-483">ISO-8859-7</span><span class="sxs-lookup"><span data-stu-id="63ca9-483">iso-8859-7</span></span>|<span data-ttu-id="63ca9-484">Grec (ISO)</span><span class="sxs-lookup"><span data-stu-id="63ca9-484">Greek (ISO)</span></span>||  
|<span data-ttu-id="63ca9-485">28598</span><span class="sxs-lookup"><span data-stu-id="63ca9-485">28598</span></span>|<span data-ttu-id="63ca9-486">ISO-8859-8</span><span class="sxs-lookup"><span data-stu-id="63ca9-486">iso-8859-8</span></span>|<span data-ttu-id="63ca9-487">Hébreu (ISO-Visual)</span><span class="sxs-lookup"><span data-stu-id="63ca9-487">Hebrew (ISO-Visual)</span></span>|<span data-ttu-id="63ca9-488">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-488">✓</span></span>|  
|<span data-ttu-id="63ca9-489">28599</span><span class="sxs-lookup"><span data-stu-id="63ca9-489">28599</span></span>|<span data-ttu-id="63ca9-490">ISO-8859-9</span><span class="sxs-lookup"><span data-stu-id="63ca9-490">iso-8859-9</span></span>|<span data-ttu-id="63ca9-491">Turc (ISO)</span><span class="sxs-lookup"><span data-stu-id="63ca9-491">Turkish (ISO)</span></span>||  
|<span data-ttu-id="63ca9-492">28603</span><span class="sxs-lookup"><span data-stu-id="63ca9-492">28603</span></span>|<span data-ttu-id="63ca9-493">ISO-8859-13.</span><span class="sxs-lookup"><span data-stu-id="63ca9-493">iso-8859-13</span></span>|<span data-ttu-id="63ca9-494">Estonien (ISO)</span><span class="sxs-lookup"><span data-stu-id="63ca9-494">Estonian (ISO)</span></span>||  
|<span data-ttu-id="63ca9-495">28605</span><span class="sxs-lookup"><span data-stu-id="63ca9-495">28605</span></span>|<span data-ttu-id="63ca9-496">ISO-8859-15</span><span class="sxs-lookup"><span data-stu-id="63ca9-496">iso-8859-15</span></span>|<span data-ttu-id="63ca9-497">Latin 9 (ISO)</span><span class="sxs-lookup"><span data-stu-id="63ca9-497">Latin 9 (ISO)</span></span>||  
|<span data-ttu-id="63ca9-498">29001</span><span class="sxs-lookup"><span data-stu-id="63ca9-498">29001</span></span>|<span data-ttu-id="63ca9-499">x-Europa</span><span class="sxs-lookup"><span data-stu-id="63ca9-499">x-Europa</span></span>|<span data-ttu-id="63ca9-500">Europa</span><span class="sxs-lookup"><span data-stu-id="63ca9-500">Europa</span></span>||  
|<span data-ttu-id="63ca9-501">38598</span><span class="sxs-lookup"><span data-stu-id="63ca9-501">38598</span></span>|<span data-ttu-id="63ca9-502">ISO-8859-8-i</span><span class="sxs-lookup"><span data-stu-id="63ca9-502">iso-8859-8-i</span></span>|<span data-ttu-id="63ca9-503">Hébreu (ISO-logique)</span><span class="sxs-lookup"><span data-stu-id="63ca9-503">Hebrew (ISO-Logical)</span></span>|<span data-ttu-id="63ca9-504">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-504">✓</span></span>|  
|<span data-ttu-id="63ca9-505">50220</span><span class="sxs-lookup"><span data-stu-id="63ca9-505">50220</span></span>|<span data-ttu-id="63ca9-506">ISO-2022-jp</span><span class="sxs-lookup"><span data-stu-id="63ca9-506">iso-2022-jp</span></span>|<span data-ttu-id="63ca9-507">Japonais (JIS)</span><span class="sxs-lookup"><span data-stu-id="63ca9-507">Japanese (JIS)</span></span>|<span data-ttu-id="63ca9-508">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-508">✓</span></span>|  
|<span data-ttu-id="63ca9-509">50221</span><span class="sxs-lookup"><span data-stu-id="63ca9-509">50221</span></span>|<span data-ttu-id="63ca9-510">csISO2022JP</span><span class="sxs-lookup"><span data-stu-id="63ca9-510">csISO2022JP</span></span>|<span data-ttu-id="63ca9-511">Japonais (JIS-autorise Kana 1 octet)</span><span class="sxs-lookup"><span data-stu-id="63ca9-511">Japanese (JIS-Allow 1 byte Kana)</span></span>|<span data-ttu-id="63ca9-512">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-512">✓</span></span>|  
|<span data-ttu-id="63ca9-513">50222</span><span class="sxs-lookup"><span data-stu-id="63ca9-513">50222</span></span>|<span data-ttu-id="63ca9-514">ISO-2022-jp</span><span class="sxs-lookup"><span data-stu-id="63ca9-514">iso-2022-jp</span></span>|<span data-ttu-id="63ca9-515">Japonais (JIS-1 octet Kana - donc / SI)</span><span class="sxs-lookup"><span data-stu-id="63ca9-515">Japanese (JIS-Allow 1 byte Kana - SO/SI)</span></span>|<span data-ttu-id="63ca9-516">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-516">✓</span></span>|  
|<span data-ttu-id="63ca9-517">50225</span><span class="sxs-lookup"><span data-stu-id="63ca9-517">50225</span></span>|<span data-ttu-id="63ca9-518">ISO-2022-kr</span><span class="sxs-lookup"><span data-stu-id="63ca9-518">iso-2022-kr</span></span>|<span data-ttu-id="63ca9-519">Coréen (ISO)</span><span class="sxs-lookup"><span data-stu-id="63ca9-519">Korean (ISO)</span></span>|<span data-ttu-id="63ca9-520">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-520">✓</span></span>|  
|<span data-ttu-id="63ca9-521">50227</span><span class="sxs-lookup"><span data-stu-id="63ca9-521">50227</span></span>|<span data-ttu-id="63ca9-522">x-cp50227</span><span class="sxs-lookup"><span data-stu-id="63ca9-522">x-cp50227</span></span>|<span data-ttu-id="63ca9-523">Chinois simplifié (ISO-2022)</span><span class="sxs-lookup"><span data-stu-id="63ca9-523">Chinese Simplified (ISO-2022)</span></span>|<span data-ttu-id="63ca9-524">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-524">✓</span></span>|  
|<span data-ttu-id="63ca9-525">51932</span><span class="sxs-lookup"><span data-stu-id="63ca9-525">51932</span></span>|<span data-ttu-id="63ca9-526">euc-jp</span><span class="sxs-lookup"><span data-stu-id="63ca9-526">euc-jp</span></span>|<span data-ttu-id="63ca9-527">Japonais (EUC)</span><span class="sxs-lookup"><span data-stu-id="63ca9-527">Japanese (EUC)</span></span>|<span data-ttu-id="63ca9-528">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-528">✓</span></span>|  
|<span data-ttu-id="63ca9-529">51936</span><span class="sxs-lookup"><span data-stu-id="63ca9-529">51936</span></span>|<span data-ttu-id="63ca9-530">EUC-CN</span><span class="sxs-lookup"><span data-stu-id="63ca9-530">EUC-CN</span></span>|<span data-ttu-id="63ca9-531">Chinois simplifié (EUC)</span><span class="sxs-lookup"><span data-stu-id="63ca9-531">Chinese Simplified (EUC)</span></span>|<span data-ttu-id="63ca9-532">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-532">✓</span></span>|  
|<span data-ttu-id="63ca9-533">51949</span><span class="sxs-lookup"><span data-stu-id="63ca9-533">51949</span></span>|<span data-ttu-id="63ca9-534">euc-kr</span><span class="sxs-lookup"><span data-stu-id="63ca9-534">euc-kr</span></span>|<span data-ttu-id="63ca9-535">Coréen (EUC)</span><span class="sxs-lookup"><span data-stu-id="63ca9-535">Korean (EUC)</span></span>|<span data-ttu-id="63ca9-536">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-536">✓</span></span>|  
|<span data-ttu-id="63ca9-537">52936</span><span class="sxs-lookup"><span data-stu-id="63ca9-537">52936</span></span>|<span data-ttu-id="63ca9-538">Hz-Go-2312</span><span class="sxs-lookup"><span data-stu-id="63ca9-538">hz-gb-2312</span></span>|<span data-ttu-id="63ca9-539">Chinois simplifié (HZ)</span><span class="sxs-lookup"><span data-stu-id="63ca9-539">Chinese Simplified (HZ)</span></span>|<span data-ttu-id="63ca9-540">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-540">✓</span></span>|  
|<span data-ttu-id="63ca9-541">54936</span><span class="sxs-lookup"><span data-stu-id="63ca9-541">54936</span></span>|<span data-ttu-id="63ca9-542">GB18030</span><span class="sxs-lookup"><span data-stu-id="63ca9-542">GB18030</span></span>|<span data-ttu-id="63ca9-543">Chinois simplifié (GB18030)</span><span class="sxs-lookup"><span data-stu-id="63ca9-543">Chinese Simplified (GB18030)</span></span>|<span data-ttu-id="63ca9-544">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-544">✓</span></span>|  
|<span data-ttu-id="63ca9-545">57002</span><span class="sxs-lookup"><span data-stu-id="63ca9-545">57002</span></span>|<span data-ttu-id="63ca9-546">x-iscii-fr</span><span class="sxs-lookup"><span data-stu-id="63ca9-546">x-iscii-de</span></span>|<span data-ttu-id="63ca9-547">ISCII DÉVANÂGARÎ</span><span class="sxs-lookup"><span data-stu-id="63ca9-547">ISCII Devanagari</span></span>|<span data-ttu-id="63ca9-548">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-548">✓</span></span>|  
|<span data-ttu-id="63ca9-549">57003</span><span class="sxs-lookup"><span data-stu-id="63ca9-549">57003</span></span>|<span data-ttu-id="63ca9-550">x iscii être</span><span class="sxs-lookup"><span data-stu-id="63ca9-550">x-iscii-be</span></span>|<span data-ttu-id="63ca9-551">ISCII Bengali</span><span class="sxs-lookup"><span data-stu-id="63ca9-551">ISCII Bengali</span></span>|<span data-ttu-id="63ca9-552">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-552">✓</span></span>|  
|<span data-ttu-id="63ca9-553">57004</span><span class="sxs-lookup"><span data-stu-id="63ca9-553">57004</span></span>|<span data-ttu-id="63ca9-554">x-iscii-ta</span><span class="sxs-lookup"><span data-stu-id="63ca9-554">x-iscii-ta</span></span>|<span data-ttu-id="63ca9-555">Tamoul ISCII</span><span class="sxs-lookup"><span data-stu-id="63ca9-555">ISCII Tamil</span></span>|<span data-ttu-id="63ca9-556">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-556">✓</span></span>|  
|<span data-ttu-id="63ca9-557">57005</span><span class="sxs-lookup"><span data-stu-id="63ca9-557">57005</span></span>|<span data-ttu-id="63ca9-558">x-iscii-te</span><span class="sxs-lookup"><span data-stu-id="63ca9-558">x-iscii-te</span></span>|<span data-ttu-id="63ca9-559">ISCII TÉLOUGOU</span><span class="sxs-lookup"><span data-stu-id="63ca9-559">ISCII Telugu</span></span>|<span data-ttu-id="63ca9-560">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-560">✓</span></span>|  
|<span data-ttu-id="63ca9-561">57006</span><span class="sxs-lookup"><span data-stu-id="63ca9-561">57006</span></span>|<span data-ttu-id="63ca9-562">x-iscii-en tant que</span><span class="sxs-lookup"><span data-stu-id="63ca9-562">x-iscii-as</span></span>|<span data-ttu-id="63ca9-563">ISCII Assamais</span><span class="sxs-lookup"><span data-stu-id="63ca9-563">ISCII Assamese</span></span>|<span data-ttu-id="63ca9-564">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-564">✓</span></span>|  
|<span data-ttu-id="63ca9-565">57007</span><span class="sxs-lookup"><span data-stu-id="63ca9-565">57007</span></span>|<span data-ttu-id="63ca9-566">iscii x ou</span><span class="sxs-lookup"><span data-stu-id="63ca9-566">x-iscii-or</span></span>|<span data-ttu-id="63ca9-567">ISCII Oriya</span><span class="sxs-lookup"><span data-stu-id="63ca9-567">ISCII Oriya</span></span>|<span data-ttu-id="63ca9-568">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-568">✓</span></span>|  
|<span data-ttu-id="63ca9-569">57008</span><span class="sxs-lookup"><span data-stu-id="63ca9-569">57008</span></span>|<span data-ttu-id="63ca9-570">x-iscii-ka</span><span class="sxs-lookup"><span data-stu-id="63ca9-570">x-iscii-ka</span></span>|<span data-ttu-id="63ca9-571">ISCII Kannada</span><span class="sxs-lookup"><span data-stu-id="63ca9-571">ISCII Kannada</span></span>|<span data-ttu-id="63ca9-572">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-572">✓</span></span>|  
|<span data-ttu-id="63ca9-573">57009</span><span class="sxs-lookup"><span data-stu-id="63ca9-573">57009</span></span>|<span data-ttu-id="63ca9-574">x-iscii-ma</span><span class="sxs-lookup"><span data-stu-id="63ca9-574">x-iscii-ma</span></span>|<span data-ttu-id="63ca9-575">ISCII Malayalam</span><span class="sxs-lookup"><span data-stu-id="63ca9-575">ISCII Malayalam</span></span>|<span data-ttu-id="63ca9-576">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-576">✓</span></span>|  
|<span data-ttu-id="63ca9-577">57010</span><span class="sxs-lookup"><span data-stu-id="63ca9-577">57010</span></span>|<span data-ttu-id="63ca9-578">x-iscii-gu</span><span class="sxs-lookup"><span data-stu-id="63ca9-578">x-iscii-gu</span></span>|<span data-ttu-id="63ca9-579">ISCII Goudjrati</span><span class="sxs-lookup"><span data-stu-id="63ca9-579">ISCII Gujarati</span></span>|<span data-ttu-id="63ca9-580">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-580">✓</span></span>|  
|<span data-ttu-id="63ca9-581">57011</span><span class="sxs-lookup"><span data-stu-id="63ca9-581">57011</span></span>|<span data-ttu-id="63ca9-582">x-iscii-pa</span><span class="sxs-lookup"><span data-stu-id="63ca9-582">x-iscii-pa</span></span>|<span data-ttu-id="63ca9-583">ISCII pendjabi</span><span class="sxs-lookup"><span data-stu-id="63ca9-583">ISCII Punjabi</span></span>|<span data-ttu-id="63ca9-584">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-584">✓</span></span>|  
|<span data-ttu-id="63ca9-585">65000</span><span class="sxs-lookup"><span data-stu-id="63ca9-585">65000</span></span>|<span data-ttu-id="63ca9-586">utf-7</span><span class="sxs-lookup"><span data-stu-id="63ca9-586">utf-7</span></span>|<span data-ttu-id="63ca9-587">Unicode (UTF-7)</span><span class="sxs-lookup"><span data-stu-id="63ca9-587">Unicode (UTF-7)</span></span>|<span data-ttu-id="63ca9-588">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-588">✓</span></span>|  
|<span data-ttu-id="63ca9-589">65001</span><span class="sxs-lookup"><span data-stu-id="63ca9-589">65001</span></span>|<span data-ttu-id="63ca9-590">utf-8</span><span class="sxs-lookup"><span data-stu-id="63ca9-590">utf-8</span></span>|<span data-ttu-id="63ca9-591">Unicode (UTF-8)</span><span class="sxs-lookup"><span data-stu-id="63ca9-591">Unicode (UTF-8)</span></span>|<span data-ttu-id="63ca9-592">✓</span><span class="sxs-lookup"><span data-stu-id="63ca9-592">✓</span></span>|  
  
 <span data-ttu-id="63ca9-593">L’exemple suivant appelle la <xref:System.Text.Encoding.GetEncoding%28System.Int32%29> et <xref:System.Text.Encoding.GetEncoding%28System.String%29> l’encodage de page de code de méthodes pour obtenir le grec (Windows).</span><span class="sxs-lookup"><span data-stu-id="63ca9-593">The following example calls the <xref:System.Text.Encoding.GetEncoding%28System.Int32%29> and <xref:System.Text.Encoding.GetEncoding%28System.String%29> methods to get the Greek (Windows) code page encoding.</span></span> <span data-ttu-id="63ca9-594">Il compare la <xref:System.Text.Encoding> objets retournés par les appels de méthode pour montrer qu’ils sont égaux, et cartes affiche ensuite le point de code Unicode et la valeur de page de code correspondante pour chaque caractère dans l’alphabet grec.</span><span class="sxs-lookup"><span data-stu-id="63ca9-594">It compares the <xref:System.Text.Encoding> objects returned by the method calls to show that they are equal, and then maps displays the Unicode code point and the corresponding code page value for each character in the Greek alphabet.</span></span>  
  
 [!code-csharp[System.Text.Encoding#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding/cs/getencoding1.cs#1)]
 [!code-vb[System.Text.Encoding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding/vb/getencoding1.vb#1)]  
  
 <span data-ttu-id="63ca9-595">Si les conversion des données seront disponibles uniquement dans les blocs séquentiels (par exemple, les données lues à partir d’un flux de données) ou si la quantité de données est tellement importante qu’elle doit être divisée en blocs plus petits, vous devez utiliser le <xref:System.Text.Decoder> ou <xref:System.Text.Encoder> fournie par le <xref:System.Text.Encoding.GetDecoder%2A> méthode ou la <xref:System.Text.Encoding.GetEncoder%2A> (méthode), respectivement, d’une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-595">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="63ca9-596">Le format UTF-16 et les encodeurs UTF-32 peuvent utiliser l’ordre de primauté des octets (octet le plus significatif premier) ou l’ordre d’octet avec primauté (octet le moins significatif premier).</span><span class="sxs-lookup"><span data-stu-id="63ca9-596">The UTF-16 and the UTF-32 encoders can use the big endian byte order (most significant byte first) or the little endian byte order (least significant byte first).</span></span> <span data-ttu-id="63ca9-597">Par exemple, la lettre majuscule latine A (U + 0041) est sérialisée comme suit (en hexadécimal) :</span><span class="sxs-lookup"><span data-stu-id="63ca9-597">For example, the Latin Capital Letter A (U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="63ca9-598">UTF-16 primauté des octets : 00 41</span><span class="sxs-lookup"><span data-stu-id="63ca9-598">UTF-16 big endian byte order: 00 41</span></span>  
  
-   <span data-ttu-id="63ca9-599">Ordre de primauté des octets little UTF-16 : 41 00</span><span class="sxs-lookup"><span data-stu-id="63ca9-599">UTF-16 little endian byte order: 41 00</span></span>  
  
-   <span data-ttu-id="63ca9-600">UTF-32 primauté des octets : 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="63ca9-600">UTF-32 big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="63ca9-601">Ordre de primauté des octets little UTF-32 : 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="63ca9-601">UTF-32 little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="63ca9-602">Il est généralement plus efficace de stocker des caractères Unicode à l’aide de l’ordre d’octet natif.</span><span class="sxs-lookup"><span data-stu-id="63ca9-602">It is generally more efficient to store Unicode characters using the native byte order.</span></span> <span data-ttu-id="63ca9-603">Par exemple, il est préférable d’utiliser l’ordre d’octet avec primauté sur les plateformes little-endian, tels que des ordinateurs Intel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-603">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span>  
  
 <span data-ttu-id="63ca9-604">Le <xref:System.Text.Encoding.GetPreamble%2A> méthode récupère un tableau d’octets contenant la marque d’ordre octet (BOM).</span><span class="sxs-lookup"><span data-stu-id="63ca9-604">The <xref:System.Text.Encoding.GetPreamble%2A> method retrieves an array of bytes that includes the byte order mark (BOM).</span></span> <span data-ttu-id="63ca9-605">Si ce tableau d’octets est préfixé à un flux encodé, il aide le décodeur à identifier le format d’encodage utilisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-605">If this byte array is prefixed to an encoded stream, it helps the decoder to identify the encoding format used.</span></span>  
  
 <span data-ttu-id="63ca9-606">Pour plus d’informations sur l’ordre d’octet et la marque d’ordre, consultez la norme Unicode sur le [page d’accueil Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="63ca9-606">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
 <span data-ttu-id="63ca9-607">Notez que les classes d’encodage autorisent des erreurs :</span><span class="sxs-lookup"><span data-stu-id="63ca9-607">Note that the encoding classes allow errors to:</span></span>  
  
-   <span data-ttu-id="63ca9-608">Modifier en mode silencieux à un « ? » caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-608">Silently change to a "?" character.</span></span>  
  
-   <span data-ttu-id="63ca9-609">Utilisez un caractère « ajustement optimal ».</span><span class="sxs-lookup"><span data-stu-id="63ca9-609">Use a "best fit" character.</span></span>  
  
-   <span data-ttu-id="63ca9-610">Passez à un comportement spécifique à l’application via l’utilisation de la <xref:System.Text.EncoderFallback> et <xref:System.Text.DecoderFallback> classes avec le caractère de remplacement Unicode U + FFFD.</span><span class="sxs-lookup"><span data-stu-id="63ca9-610">Change to an application-specific behavior through use of the <xref:System.Text.EncoderFallback> and <xref:System.Text.DecoderFallback> classes with the U+FFFD Unicode replacement character.</span></span>  
  
 <span data-ttu-id="63ca9-611">Vous devez lever une exception en cas d’erreur de flux de données.</span><span class="sxs-lookup"><span data-stu-id="63ca9-611">You should throw an exception on any data stream error.</span></span> <span data-ttu-id="63ca9-612">Une application utilise un indicateur « throwonerror » le cas échéant ou le <xref:System.Text.EncoderExceptionFallback> et <xref:System.Text.DecoderExceptionFallback> classes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-612">An app either uses a "throwonerror" flag when applicable or uses the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.DecoderExceptionFallback> classes.</span></span> <span data-ttu-id="63ca9-613">Secours le mieux adapté est généralement pas recommandé, car elle peut entraîner une perte de données ou toute confusion et est plus lente que les remplacements de caractères simples.</span><span class="sxs-lookup"><span data-stu-id="63ca9-613">Best fit fallback is often not recommended because it can cause data loss or confusion and is slower than simple character replacements.</span></span> <span data-ttu-id="63ca9-614">Pour les encodages ANSI, le comportement le mieux adapté est la valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="63ca9-614">For ANSI encodings, the best fit behavior is the default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-615">L’exemple suivant convertit une chaîne d’un encodage à un autre.</span><span class="sxs-lookup"><span data-stu-id="63ca9-615">The following example converts a string from one encoding to another.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63ca9-616">Le tableau de byte [] est le seul type dans cet exemple qui contient les données encodées.</span><span class="sxs-lookup"><span data-stu-id="63ca9-616">The byte[] array is the only type in this example that contains the encoded data.</span></span> <span data-ttu-id="63ca9-617">Les types .NET Char et String sont eux-mêmes Unicode, donc la <xref:System.Text.Encoding.GetChars%2A> appel décode les données en Unicode.</span><span class="sxs-lookup"><span data-stu-id="63ca9-617">The .NET Char and String types are themselves Unicode, so the <xref:System.Text.Encoding.GetChars%2A> call decodes the data back to Unicode.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="63ca9-618">Initialise une nouvelle instance de la classe <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-618">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63ca9-619">Initialise une nouvelle instance de la classe <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-619">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-620">Classes dérivées de substituent ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="63ca9-620">Derived classes override this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoding (int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (codePage As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoding(int codePage);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePage"><span data-ttu-id="63ca9-621">Identificateur de la page de codes de l'encodage préféré.</span><span class="sxs-lookup"><span data-stu-id="63ca9-621">The code page identifier of the preferred encoding.</span></span>  
  
 <span data-ttu-id="63ca9-622">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-622">-or-</span></span>  
  
 <span data-ttu-id="63ca9-623">0, pour utiliser l'encodage par défaut.</span><span class="sxs-lookup"><span data-stu-id="63ca9-623">0, to use the default encoding.</span></span></param>
        <summary><span data-ttu-id="63ca9-624">Initialise une nouvelle instance de la classe <see cref="T:System.Text.Encoding" /> qui correspond à la page de codes spécifiée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-624">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class that corresponds to the specified code page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-625">Classes dérivées de substituent ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="63ca9-625">Derived classes override this constructor.</span></span>  
  
 <span data-ttu-id="63ca9-626">Créent des appels à ce constructeur à partir d’une classe dérivée un <xref:System.Text.Encoding> objet qui utilise de secours la mieux adaptée pour l’encodage et les opérations de décodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-626">Calls to this constructor from a derived class create an <xref:System.Text.Encoding> object that uses best-fit fallback for both encoding and decoding operations.</span></span> <span data-ttu-id="63ca9-627">À la fois le <xref:System.Text.Encoding.DecoderFallback%2A> et <xref:System.Text.Encoding.EncoderFallback%2A> propriétés sont en lecture seule et ne peut pas être modifiées.</span><span class="sxs-lookup"><span data-stu-id="63ca9-627">Both the <xref:System.Text.Encoding.DecoderFallback%2A> and <xref:System.Text.Encoding.EncoderFallback%2A> properties are read-only and cannot be modified.</span></span> <span data-ttu-id="63ca9-628">Pour contrôler la stratégie de secours pour une classe dérivée de <xref:System.Text.Encoding>, appelez le <xref:System.Text.Encoding.%23ctor%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> constructeur.</span><span class="sxs-lookup"><span data-stu-id="63ca9-628">To control the fallback strategy for a class derived from <xref:System.Text.Encoding>, call the <xref:System.Text.Encoding.%23ctor%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-629"><paramref name="codePage" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="63ca9-629"><paramref name="codePage" /> is less than zero.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoding (int codePage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 codePage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.#ctor(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoding(int codePage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codePage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codePage"><span data-ttu-id="63ca9-630">Identificateur de la page de code d'encodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-630">The encoding code page identifier.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="63ca9-631">Objet qui fournit une procédure de gestion d'erreurs quand un caractère ne peut pas être encodé avec l'encodage actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-631">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="63ca9-632">Objet qui fournit une procédure de gestion d'erreurs quand une séquence d'octets ne peut pas être décodée avec l'encodage actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-632">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span></span></param>
        <summary><span data-ttu-id="63ca9-633">Initialise une nouvelle instance de la classe <see cref="T:System.Text.Encoding" /> qui correspond à la page de code spécifiée avec les stratégies de secours d'encodeur et de décodeur spécifiées.</span><span class="sxs-lookup"><span data-stu-id="63ca9-633">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class that corresponds to the specified code page with the specified encoder and decoder fallback strategies.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-634">Ce constructeur est `protected`; dérivées les classes substituent.</span><span class="sxs-lookup"><span data-stu-id="63ca9-634">This constructor is `protected`; derived classes override it.</span></span>  
  
 <span data-ttu-id="63ca9-635">Vous appelez ce constructeur d’une classe dérivée pour contrôler l’encodage et décodage des stratégies de secours.</span><span class="sxs-lookup"><span data-stu-id="63ca9-635">You call this constructor from a derived class to control the fallback encoding and decoding strategies.</span></span> <span data-ttu-id="63ca9-636">Le <xref:System.Text.Encoding> constructeurs de classe de créent des objets de codage en lecture seule qui n’autorisent pas encodeur ou un décodeur de secours à définir une fois que l’objet est créé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-636">The <xref:System.Text.Encoding> class constructors create read-only encoding objects that don't allow encoder or decoder fallback to be set after the object is created.</span></span>  
  
 <span data-ttu-id="63ca9-637">Si le paramètre `encoderFallback` ou `decoderFallback` est null, de secours la mieux adaptée est utilisé en tant que la stratégie de secours correspondante.</span><span class="sxs-lookup"><span data-stu-id="63ca9-637">If either `encoderFallback` or `decoderFallback` is null, best-fit fallback is used as the corresponding fallback strategy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-638"><paramref name="codePage" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="63ca9-638"><paramref name="codePage" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ASCII">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding ASCII { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding ASCII" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.ASCII" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ASCII As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ ASCII { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-639">Obtient un encodage pour le jeu de caractères ASCII (7 bits).</span><span class="sxs-lookup"><span data-stu-id="63ca9-639">Gets an encoding for the ASCII (7-bit) character set.</span></span></summary>
        <value><span data-ttu-id="63ca9-640">Encodage pour le jeu de caractères ASCII (7 bits).</span><span class="sxs-lookup"><span data-stu-id="63ca9-640">An  encoding for the ASCII (7-bit) character set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-641">Caractères ASCII sont limités aux 128 caractères Unicode plus bas, à partir de U + 0000 et U + 007F.</span><span class="sxs-lookup"><span data-stu-id="63ca9-641">ASCII characters are limited to the lowest 128 Unicode characters, from U+0000 to U+007F.</span></span>  
  
 <span data-ttu-id="63ca9-642">Lorsque vous sélectionnez l’encodage ASCII pour votre application, procédez comme suit :</span><span class="sxs-lookup"><span data-stu-id="63ca9-642">When selecting the ASCII encoding for your app, consider the following:</span></span>  
  
-   <span data-ttu-id="63ca9-643">L’encodage ASCII est habituellement approprié pour les protocoles qui requièrent ASCII.</span><span class="sxs-lookup"><span data-stu-id="63ca9-643">The ASCII encoding is usually appropriate for protocols that require ASCII.</span></span>  
  
-   <span data-ttu-id="63ca9-644">Si vous requiert le codage 8 bits (qui est parfois appelé « ASCII »), l’encodage UTF-8 est recommandé du code ASCII de codage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-644">If you requires 8-bit encoding (which is sometimes incorrectly referred to as "ASCII"), the UTF-8 encoding is recommended over the ASCII encoding.</span></span> <span data-ttu-id="63ca9-645">Pour les caractères 0-7F, les résultats sont identiques, mais utiliser UTF-8 évite la perte de données en permettant la représentation sous forme de tous les caractères Unicode qui peuvent être représentées.</span><span class="sxs-lookup"><span data-stu-id="63ca9-645">For the characters 0-7F, the results are identical, but use of UTF-8 avoids data loss by allowing representation of all Unicode characters that are representable.</span></span> <span data-ttu-id="63ca9-646">Notez que l’encodage ASCII a une 8 bits ambiguïté qui peut permettre une utilisation malveillante, mais l’encodage UTF-8 supprime toute ambiguïté sur les 8 bits.</span><span class="sxs-lookup"><span data-stu-id="63ca9-646">Note that the ASCII encoding has an 8th bit ambiguity that can allow malicious use, but the UTF-8 encoding removes ambiguity about the 8th bit.</span></span>  
  
-   <span data-ttu-id="63ca9-647">Avant la version 2.0 du .NET Framework, le .NET Framework autorisées l’usurpation d’identité en ignorant les 8 bits.</span><span class="sxs-lookup"><span data-stu-id="63ca9-647">Prior to the .NET Framework version 2.0, the .NET Framework allowed spoofing by ignoring the 8th bit.</span></span> <span data-ttu-id="63ca9-648">À compter de .NET Framework 2.0, les points de code non-ASCII revient lors du décodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-648">Beginning with the .NET Framework 2.0, non-ASCII code points fall back during decoding.</span></span>  
  
 <span data-ttu-id="63ca9-649">Le <xref:System.Text.ASCIIEncoding> objet qui est retourné par cette propriété ne peut pas avoir le comportement approprié pour votre application.</span><span class="sxs-lookup"><span data-stu-id="63ca9-649">The <xref:System.Text.ASCIIEncoding> object that is returned by this property might not have the appropriate behavior for your app.</span></span> <span data-ttu-id="63ca9-650">Il utilise le remplacement de secours pour remplacer chaque chaîne qu’il ne peut pas encoder et chaque octet qu’il ne peut pas décoder par un point d’interrogation (« ? ») caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-650">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with a question mark ("?") character.</span></span> <span data-ttu-id="63ca9-651">Au lieu de cela, vous pouvez appeler la <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> méthode pour instancier un <xref:System.Text.ASCIIEncoding> objet dont exception de secours est un <xref:System.Text.EncoderFallbackException> ou <xref:System.Text.DecoderFallbackException>, comme l’illustre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-651">Instead, you can call the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> method to instantiate an <xref:System.Text.ASCIIEncoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.ASCII#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.ascii/cs/encoding.ascii2.cs#1)]
 [!code-vb[System.Text.Encoding.ASCII#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.ascii/vb/encoding.ascii2.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-652">L’exemple suivant montre l’effet de l’encodage ASCII sur les caractères situés en dehors de la plage ASCII.</span><span class="sxs-lookup"><span data-stu-id="63ca9-652">The following example demonstrates the effect of the ASCII encoding on characters that are outside the ASCII range.</span></span>  
  
 [!code-cpp[System.Text.Encoding.ASCII Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.ASCII Example/CPP/ascii.cpp#1)]
 [!code-csharp[System.Text.Encoding.ASCII Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.ASCII Example/CS/ascii.cs#1)]
 [!code-vb[System.Text.Encoding.ASCII Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.ASCII Example/VB/ascii.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.ASCIIEncoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <altmember cref="P:System.Text.Encoding.UTF8" />
        <altmember cref="P:System.Text.Encoding.Unicode" />
      </Docs>
    </Member>
    <Member MemberName="BigEndianUnicode">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding BigEndianUnicode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding BigEndianUnicode" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.BigEndianUnicode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BigEndianUnicode As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ BigEndianUnicode { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-653">Obtient un encodage pour le format UTF-16 qui utilise l'ordre d'octet avec primauté des octets de poids fort (big-endian).</span><span class="sxs-lookup"><span data-stu-id="63ca9-653">Gets an encoding for the UTF-16 format that uses the big endian byte order.</span></span></summary>
        <value><span data-ttu-id="63ca9-654">Objet d'encodage pour le format UTF-16 avec primauté des octets de poids fort (big-endian).</span><span class="sxs-lookup"><span data-stu-id="63ca9-654">An encoding object for the UTF-16 format that uses the big endian byte order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-655">Le <xref:System.Text.UnicodeEncoding> objet qui est retourné par cette propriété ne peut pas avoir le comportement approprié pour votre application.</span><span class="sxs-lookup"><span data-stu-id="63ca9-655">The <xref:System.Text.UnicodeEncoding> object that is returned by this property may not have the appropriate behavior for your app.</span></span> <span data-ttu-id="63ca9-656">Il utilise le remplacement de secours pour remplacer chaque chaîne qu’il ne peut pas encoder et chaque octet qu’il ne peut pas décoder par un point d’interrogation (« ? ») caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-656">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with a question mark ("?") character.</span></span> <span data-ttu-id="63ca9-657">Au lieu de cela, vous pouvez appeler la <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructeur pour instancier un big endian <xref:System.Text.UnicodeEncoding> objet dont exception de secours est un <xref:System.Text.EncoderFallbackException> ou <xref:System.Text.DecoderFallbackException>, comme l’illustre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-657">Instead, you can call the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a big endian <xref:System.Text.UnicodeEncoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.BigEndianUnicode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/CS/bigendianunicode1.cs#2)]
 [!code-vb[System.Text.Encoding.BigEndianUnicode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/VB/bigendianunicode1.vb#2)]  
  
 <span data-ttu-id="63ca9-658">Retourné <xref:System.Text.UnicodeEncoding> objet a <xref:System.Text.Encoding.BodyName%2A>, <xref:System.Text.Encoding.HeaderName%2A>, et <xref:System.Text.Encoding.WebName%2A> propriétés, qui génère le nom « unicodeFFFE ».</span><span class="sxs-lookup"><span data-stu-id="63ca9-658">The returned <xref:System.Text.UnicodeEncoding> object has <xref:System.Text.Encoding.BodyName%2A>, <xref:System.Text.Encoding.HeaderName%2A>, and <xref:System.Text.Encoding.WebName%2A> properties, which yield the name "unicodeFFFE".</span></span> <span data-ttu-id="63ca9-659">Bien que la marque d’ordre de primauté des octets UTF-16 est hexadécimale FEFF, le nom « unicodeFFFE » a été choisi parce que la marque d’ordre apparaît en tant que valeur hexadécimale FFFE sur les ordinateurs Windows endian peu.</span><span class="sxs-lookup"><span data-stu-id="63ca9-659">Although the UTF-16 big endian byte order mark is hexadecimal FEFF, the name "unicodeFFFE" was chosen because the byte order mark appears as hexadecimal FFFE on little endian Windows computers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-660">L’exemple suivant lit un fichier texte avec un encodage UTF-16 à l’aide de l’ordre de primauté des octets.</span><span class="sxs-lookup"><span data-stu-id="63ca9-660">The following example reads a text file with a UTF-16 encoding using the big endian byte order.</span></span>  
  
 [!code-cpp[System.Text.Encoding.BigEndianUnicode#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/CPP/bigendianunicode.cpp#1)]
 [!code-csharp[System.Text.Encoding.BigEndianUnicode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/CS/bigendianunicode.cs#1)]
 [!code-vb[System.Text.Encoding.BigEndianUnicode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/VB/bigendianunicode.vb#1)]  
  
 <span data-ttu-id="63ca9-661">L’exemple suivant détermine le nombre d’octets requis pour encoder un tableau de caractères, encode les caractères et affiche le nombre d’octets résultant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-661">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UnicodeEncoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <altmember cref="P:System.Text.Encoding.Unicode" />
      </Docs>
    </Member>
    <Member MemberName="BodyName">
      <MemberSignature Language="C#" Value="public virtual string BodyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BodyName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.BodyName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BodyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BodyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-662">En cas de substitution dans une classe dérivée, obtient un nom pour l’encodage actuel qui peut être utilisé avec les étiquettes de corps de texte de l’agent de messagerie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-662">When overridden in a derived class, gets a name for the current encoding that can be used with mail agent body tags.</span></span></summary>
        <value><span data-ttu-id="63ca9-663">Nom du <see cref="T:System.Text.Encoding" /> actuel qui peut être utilisé avec les balises de corps de texte de l'agent de messagerie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-663">A name for the current <see cref="T:System.Text.Encoding" /> that can be used with mail agent body tags.</span></span>  
  
 <span data-ttu-id="63ca9-664">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-664">-or-</span></span>  
  
 <span data-ttu-id="63ca9-665">Une chaîne vide (""), si le <see cref="T:System.Text.Encoding" /> actuel ne peut pas être utilisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-665">An empty string (""), if the current <see cref="T:System.Text.Encoding" /> cannot be used.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-666">Si vous avez besoin d’un encodage pour un nom de corps, vous devez appeler <xref:System.Text.Encoding.GetEncoding%2A> avec la <xref:System.Text.Encoding.BodyName%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="63ca9-666">If you need an encoding for a body name, you should call <xref:System.Text.Encoding.GetEncoding%2A> with the <xref:System.Text.Encoding.BodyName%2A> property.</span></span> <span data-ttu-id="63ca9-667">La méthode extrait souvent un encodage différent de l’encodage de test fourni dans l’appel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-667">Often the method retrieves a different encoding from the test encoding furnished in the call.</span></span> <span data-ttu-id="63ca9-668">Seules les applications de messagerie doivent généralement extraire un tel encodage ; la plupart des autres applications qui doivent décrire un encodage doivent utiliser son <xref:System.Text.Encoding.WebName%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-668">Generally only email applications need to retrieve such an encoding; most other applications that need to describe an encoding should use its <xref:System.Text.Encoding.WebName%2A>.</span></span>  
  
 <span data-ttu-id="63ca9-669">Dans certains cas, la valeur de la <xref:System.Text.Encoding.BodyName%2A> propriété correspond à la norme internationale qui définit cet encodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-669">In some cases, the value of the <xref:System.Text.Encoding.BodyName%2A> property corresponds to the international standard that defines that encoding.</span></span> <span data-ttu-id="63ca9-670">Cela ne signifie pas que l’implémentation est conforme à l’intégralité de cette norme.</span><span class="sxs-lookup"><span data-stu-id="63ca9-670">This doesn't mean that the implementation complies in full with that standard.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-671">L’exemple suivant récupère les noms de chaque codage et affiche les encodages avec un ou plusieurs noms différents de <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-671">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="63ca9-672">Il affiche <xref:System.Text.Encoding.EncodingName%2A> mais ne compare pas par rapport à elle.</span><span class="sxs-lookup"><span data-stu-id="63ca9-672">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.Name" />
        <altmember cref="P:System.Text.Encoding.EncodingName" />
        <altmember cref="P:System.Text.Encoding.HeaderName" />
        <altmember cref="P:System.Text.Encoding.WebName" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63ca9-673">En cas de substitution dans une classe dérivée, crée une copie superficielle de l'objet <see cref="T:System.Text.Encoding" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-673">When overridden in a derived class, creates a shallow copy of the current <see cref="T:System.Text.Encoding" /> object.</span></span></summary>
        <returns><span data-ttu-id="63ca9-674">Copie de l'objet <see cref="T:System.Text.Encoding" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-674">A copy of the current <see cref="T:System.Text.Encoding" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-675">Le clone est accessible en écriture même si la version d’origine <xref:System.Text.Encoding> objet est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="63ca9-675">The clone is writable even if the original <xref:System.Text.Encoding> object is read-only.</span></span> <span data-ttu-id="63ca9-676">Par conséquent, les propriétés du clone peuvent être modifiées.</span><span class="sxs-lookup"><span data-stu-id="63ca9-676">Therefore, the properties of the clone can be modified.</span></span>  
  
 <span data-ttu-id="63ca9-677">Une copie superficielle d’un objet est une copie de l’objet uniquement.</span><span class="sxs-lookup"><span data-stu-id="63ca9-677">A shallow copy of an object is a copy of the object only.</span></span> <span data-ttu-id="63ca9-678">Si l’objet contient des références à d’autres objets, la copie superficielle ne crée pas de copies des objets auxquels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-678">If the object contains references to other objects, the shallow copy does not create copies of the referred objects.</span></span> <span data-ttu-id="63ca9-679">Il fait référence aux objets d’origine à la place.</span><span class="sxs-lookup"><span data-stu-id="63ca9-679">It refers to the original objects instead.</span></span> <span data-ttu-id="63ca9-680">En revanche, une copie complète d’un objet crée une copie de l’objet et une copie de tous les éléments fait référence directement ou indirectement par l’objet.</span><span class="sxs-lookup"><span data-stu-id="63ca9-680">In contrast, a deep copy of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="public virtual int CodePage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.CodePage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CodePage { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-681">En cas de substitution dans une classe dérivée, obtient l'identificateur de la page de codes du <see cref="T:System.Text.Encoding" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-681">When overridden in a derived class, gets the code page identifier of the current <see cref="T:System.Text.Encoding" />.</span></span></summary>
        <value><span data-ttu-id="63ca9-682">Identificateur de la page de codes du <see cref="T:System.Text.Encoding" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-682">The code page identifier of the current <see cref="T:System.Text.Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="63ca9-683">L’exemple suivant récupère les noms de chaque codage et affiche les encodages avec un ou plusieurs noms différents de <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-683">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="63ca9-684">Il affiche <xref:System.Text.Encoding.EncodingName%2A> mais ne compare pas par rapport à elle.</span><span class="sxs-lookup"><span data-stu-id="63ca9-684">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.CodePage" />
        <altmember cref="P:System.Text.Encoding.WindowsCodePage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="63ca9-685">Convertit un tableau d'octets d'un encodage à un autre.</span><span class="sxs-lookup"><span data-stu-id="63ca9-685">Converts a byte array from one encoding to another.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static byte[] Convert (System.Text.Encoding srcEncoding, System.Text.Encoding dstEncoding, byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Convert(class System.Text.Encoding srcEncoding, class System.Text.Encoding dstEncoding, unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Convert (srcEncoding As Encoding, dstEncoding As Encoding, bytes As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Convert(System::Text::Encoding ^ srcEncoding, System::Text::Encoding ^ dstEncoding, cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcEncoding" Type="System.Text.Encoding" />
        <Parameter Name="dstEncoding" Type="System.Text.Encoding" />
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="srcEncoding"><span data-ttu-id="63ca9-686">Format d’encodage de <c>bytes</c>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-686">The encoding format of <c>bytes</c>.</span></span></param>
        <param name="dstEncoding"><span data-ttu-id="63ca9-687">Format d'encodage cible.</span><span class="sxs-lookup"><span data-stu-id="63ca9-687">The target encoding format.</span></span></param>
        <param name="bytes"><span data-ttu-id="63ca9-688">Octets à convertir.</span><span class="sxs-lookup"><span data-stu-id="63ca9-688">The bytes to convert.</span></span></param>
        <summary><span data-ttu-id="63ca9-689">Convertit un tableau d'octets entier d'un encodage à un autre.</span><span class="sxs-lookup"><span data-stu-id="63ca9-689">Converts an entire byte array from one encoding to another.</span></span></summary>
        <returns><span data-ttu-id="63ca9-690">Tableau de type <see cref="T:System.Byte" /> contenant le résultat de la conversion de <paramref name="bytes" /> de <paramref name="srcEncoding" /> en <paramref name="dstEncoding" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-690">An array of type <see cref="T:System.Byte" /> containing the results of converting <paramref name="bytes" /> from <paramref name="srcEncoding" /> to <paramref name="dstEncoding" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="63ca9-691">L’exemple suivant convertit une chaîne codée au format Unicode en une chaîne codée au format ASCII.</span><span class="sxs-lookup"><span data-stu-id="63ca9-691">The following example converts a Unicode-encoded string to an ASCII-encoded string.</span></span> <span data-ttu-id="63ca9-692">Étant donné que l’objet d’encodage ASCII retourné par la <xref:System.Text.Encoding.ASCII%2A> propriété utilise le remplacement de secours et le caractère Pi ne fait pas partie du jeu de caractères ASCII, le caractère Pi est remplacé par un point d’interrogation, comme la sortie de l’exemple.</span><span class="sxs-lookup"><span data-stu-id="63ca9-692">Because the ASCII encoding object returned by the <xref:System.Text.Encoding.ASCII%2A> property uses replacement fallback and the Pi character is not part of the ASCII character set, the Pi character is replaced with a question mark, as the output from the example shows.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-693"><paramref name="srcEncoding" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-693"><paramref name="srcEncoding" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="63ca9-694">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-694">-or-</span></span>  
  
 <span data-ttu-id="63ca9-695"><paramref name="dstEncoding" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-695"><paramref name="dstEncoding" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="63ca9-696">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-696">-or-</span></span>  
  
 <span data-ttu-id="63ca9-697"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-697"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="63ca9-698">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-698">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-699">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-699">-and-</span></span>  
  
 <span data-ttu-id="63ca9-700">**srcEncoding.**</span><span class="sxs-lookup"><span data-stu-id="63ca9-700">**srcEncoding.**</span></span> <span data-ttu-id="63ca9-701"><see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-701"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="63ca9-702">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-702">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-703">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-703">-and-</span></span>  
  
 <span data-ttu-id="63ca9-704">**dstEncoding.**</span><span class="sxs-lookup"><span data-stu-id="63ca9-704">**dstEncoding.**</span></span> <span data-ttu-id="63ca9-705"><see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-705"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static byte[] Convert (System.Text.Encoding srcEncoding, System.Text.Encoding dstEncoding, byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Convert(class System.Text.Encoding srcEncoding, class System.Text.Encoding dstEncoding, unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Convert (srcEncoding As Encoding, dstEncoding As Encoding, bytes As Byte(), index As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Convert(System::Text::Encoding ^ srcEncoding, System::Text::Encoding ^ dstEncoding, cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcEncoding" Type="System.Text.Encoding" />
        <Parameter Name="dstEncoding" Type="System.Text.Encoding" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="srcEncoding"><span data-ttu-id="63ca9-706">Encodage du tableau source, <c>bytes</c>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-706">The encoding of the source array, <c>bytes</c>.</span></span></param>
        <param name="dstEncoding"><span data-ttu-id="63ca9-707">Encodage du tableau de sortie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-707">The encoding of the output array.</span></span></param>
        <param name="bytes"><span data-ttu-id="63ca9-708">Tableau d'octets à convertir.</span><span class="sxs-lookup"><span data-stu-id="63ca9-708">The array of bytes to convert.</span></span></param>
        <param name="index"><span data-ttu-id="63ca9-709">Index du premier élément de <c>bytes</c> à convertir.</span><span class="sxs-lookup"><span data-stu-id="63ca9-709">The index of the first element of <c>bytes</c> to convert.</span></span></param>
        <param name="count"><span data-ttu-id="63ca9-710">Nombre d'octets à convertir.</span><span class="sxs-lookup"><span data-stu-id="63ca9-710">The number of bytes to convert.</span></span></param>
        <summary><span data-ttu-id="63ca9-711">Convertit une plage d'octets d'un encodage à un autre dans un tableau d'octets.</span><span class="sxs-lookup"><span data-stu-id="63ca9-711">Converts a range of bytes in a byte array from one encoding to another.</span></span></summary>
        <returns><span data-ttu-id="63ca9-712">Tableau de type <see cref="T:System.Byte" /> contenant le résultat de la conversion d'une plage d'octets de <paramref name="bytes" /> de <paramref name="srcEncoding" /> en <paramref name="dstEncoding" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-712">An array of type <see cref="T:System.Byte" /> containing the result of converting a range of bytes in <paramref name="bytes" /> from <paramref name="srcEncoding" /> to <paramref name="dstEncoding" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-713"><paramref name="srcEncoding" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-713"><paramref name="srcEncoding" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="63ca9-714">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-714">-or-</span></span>  
  
 <span data-ttu-id="63ca9-715"><paramref name="dstEncoding" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-715"><paramref name="dstEncoding" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="63ca9-716">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-716">-or-</span></span>  
  
 <span data-ttu-id="63ca9-717"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-717"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-718"><paramref name="index" /> et <paramref name="count" /> ne spécifient pas une plage valide du tableau d'octets.</span><span class="sxs-lookup"><span data-stu-id="63ca9-718"><paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the byte array.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="63ca9-719">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-719">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-720">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-720">-and-</span></span>  
  
 <span data-ttu-id="63ca9-721">**srcEncoding.**</span><span class="sxs-lookup"><span data-stu-id="63ca9-721">**srcEncoding.**</span></span> <span data-ttu-id="63ca9-722"><see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-722"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="63ca9-723">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-723">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-724">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-724">-and-</span></span>  
  
 <span data-ttu-id="63ca9-725">**dstEncoding.**</span><span class="sxs-lookup"><span data-stu-id="63ca9-725">**dstEncoding.**</span></span> <span data-ttu-id="63ca9-726"><see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-726"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecoderFallback">
      <MemberSignature Language="C#" Value="public System.Text.DecoderFallback DecoderFallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.DecoderFallback DecoderFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.DecoderFallback" />
      <MemberSignature Language="VB.NET" Value="Public Property DecoderFallback As DecoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::DecoderFallback ^ DecoderFallback { System::Text::DecoderFallback ^ get(); void set(System::Text::DecoderFallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.DecoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-727">Obtient ou définit l'objet <see cref="T:System.Text.DecoderFallback" /> actuel de l'objet <see cref="T:System.Text.Encoding" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-727">Gets or sets the <see cref="T:System.Text.DecoderFallback" /> object for the current <see cref="T:System.Text.Encoding" /> object.</span></span></summary>
        <value><span data-ttu-id="63ca9-728">Objet de secours de décodeur pour l'objet <see cref="T:System.Text.Encoding" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-728">The decoder fallback object for the current <see cref="T:System.Text.Encoding" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-729">Le <xref:System.Text.DecoderFallback> objet représente un gestionnaire d’erreurs qui est appelé lorsqu’une séquence d’octets encodée ne peut pas être décodée en un caractère.</span><span class="sxs-lookup"><span data-stu-id="63ca9-729">The <xref:System.Text.DecoderFallback> object represents an error handler that is invoked when an encoded byte sequence cannot be decoded into a character.</span></span> <span data-ttu-id="63ca9-730">L’un des types de gestionnaires suivants est prise en charge :</span><span class="sxs-lookup"><span data-stu-id="63ca9-730">Any one of the following handler types is supported:</span></span>  
  
-   <span data-ttu-id="63ca9-731">Gestionnaire de secours la mieux adapté, qui remplace les octets qui ne peut pas être décodé par un caractère de remplacement approprié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-731">A best-fit fallback handler, which replaces bytes that cannot be decoded with some suitable replacement character.</span></span>  
  
-   <span data-ttu-id="63ca9-732">Un gestionnaire de remplacement de secours, qui remplace les octets qui ne peut pas être décodé par un caractère de remplacement arbitraire.</span><span class="sxs-lookup"><span data-stu-id="63ca9-732">A replacement fallback handler, which replaces bytes that cannot be decoded with some arbitrary replacement character.</span></span> <span data-ttu-id="63ca9-733">Le .NET Framework inclut un gestionnaire de secours de remplacement, <xref:System.Text.DecoderFallback>, qui par défaut remplace les octets qui ne peut pas être décodées avec un point d’interrogation (« ? ») caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-733">The .NET Framework includes one replacement fallback handler, <xref:System.Text.DecoderFallback>, which by default replaces bytes that cannot be decoded with a question mark ("?") character.</span></span>  
  
-   <span data-ttu-id="63ca9-734">Un gestionnaire d’exceptions de secours, qui lève une exception lorsque les octets ne peut pas être décodés.</span><span class="sxs-lookup"><span data-stu-id="63ca9-734">An exception fallback handler, which throws an exception when bytes cannot be decoded.</span></span> <span data-ttu-id="63ca9-735">Le .NET Framework inclut un gestionnaire d’exceptions de secours, <xref:System.Text.DecoderExceptionFallback>, qui lève une <xref:System.Text.DecoderFallbackException> quand les octets ne peut pas être décodés.</span><span class="sxs-lookup"><span data-stu-id="63ca9-735">The .NET Framework includes one exception fallback handler, <xref:System.Text.DecoderExceptionFallback>, which throws a <xref:System.Text.DecoderFallbackException> when bytes cannot be decoded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="63ca9-736">Dans une opération ensembliste, la valeur est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-736">The value in a set operation is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="63ca9-737">Une valeur ne peut pas être attribuée dans une opération ensembliste parce que l'objet <see cref="T:System.Text.Encoding" /> en cours est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="63ca9-737">A value cannot be assigned in a set operation because the current <see cref="T:System.Text.Encoding" /> object is read-only.</span></span></exception>
        <altmember cref="T:System.Text.DecoderFallback" />
        <altmember cref="T:System.Text.DecoderFallbackBuffer" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding Default" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ Default { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-738">Obtient l’encodage par défaut pour cette implémentation .NET.</span><span class="sxs-lookup"><span data-stu-id="63ca9-738">Gets the default encoding for this .NET implementation.</span></span></summary>
        <value><span data-ttu-id="63ca9-739">L’encodage par défaut pour cette implémentation .NET.</span><span class="sxs-lookup"><span data-stu-id="63ca9-739">The default encoding for this .NET implementation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="63ca9-740">Des ordinateurs différents peuvent utiliser différents codages en tant que la valeur par défaut, et l’encodage par défaut peut modifier sur un seul ordinateur.</span><span class="sxs-lookup"><span data-stu-id="63ca9-740">Different computers can use different encodings as the default, and the default encoding can change on a single computer.</span></span> <span data-ttu-id="63ca9-741">Si vous utilisez la <xref:System.Text.Encoding.Default%2A> encodage pour encoder et décoder des données en continu entre ordinateurs ou récupérées à des moments différents sur le même ordinateur, il peut incorrectement traduire ces données.</span><span class="sxs-lookup"><span data-stu-id="63ca9-741">If you use the <xref:System.Text.Encoding.Default%2A> encoding to encode and decode data streamed between computers or retrieved at different times on the same computer, it may translate that data incorrectly.</span></span> <span data-ttu-id="63ca9-742">En outre, l’encodage retourné par la <xref:System.Text.Encoding.Default%2A> propriété utilise de secours la mieux adaptée pour mapper les caractères non pris en charge pour les caractères pris en charge par la page de codes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-742">In addition, the encoding returned by the <xref:System.Text.Encoding.Default%2A> property uses best-fit fallback to map unsupported characters to characters supported by the code page.</span></span> <span data-ttu-id="63ca9-743">Pour ces raisons, à l’aide de l’encodage par défaut n’est pas recommandée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-743">For these reasons, using the default encoding is not recommended.</span></span> <span data-ttu-id="63ca9-744">Pour garantir que les octets encodés sont décodés correctement, vous devez utiliser un encodage Unicode, tel que <xref:System.Text.UTF8Encoding> ou <xref:System.Text.UnicodeEncoding>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-744">To ensure that encoded bytes are decoded properly, you should use a Unicode encoding, such as <xref:System.Text.UTF8Encoding> or <xref:System.Text.UnicodeEncoding>.</span></span> <span data-ttu-id="63ca9-745">Vous pouvez également utiliser un protocole de niveau supérieur pour garantir que le même format est utilisé pour encoder et décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-745">You could also use a higher-level protocol to ensure that the same format is used for encoding and decoding.</span></span>  

### <a name="the-default-property-in-the-net-framework"></a><span data-ttu-id="63ca9-746">La propriété par défaut dans le .NET Framework</span><span class="sxs-lookup"><span data-stu-id="63ca9-746">The Default property in the .NET Framework</span></span>

<span data-ttu-id="63ca9-747">Dans le .NET Framework sur le bureau Windows, les <xref:System.Text.Encoding.Default%2A> propriété obtient la page de codes active du système et crée toujours un <xref:System.Text.Encoding> objet qui correspond à ce dernier.</span><span class="sxs-lookup"><span data-stu-id="63ca9-747">In the .NET Framework on the Windows desktop, the <xref:System.Text.Encoding.Default%2A> property always gets the system's active code page and creates a <xref:System.Text.Encoding> object that corresponds to it.</span></span> <span data-ttu-id="63ca9-748">La page de codes active peut être une page de codes ANSI, qui inclut le jeu, ainsi que des caractères supplémentaires qui varient par page de codes de caractères ASCII.</span><span class="sxs-lookup"><span data-stu-id="63ca9-748">The active code page may be an ANSI code page, which includes the ASCII character set along with additional characters that vary by code page.</span></span> <span data-ttu-id="63ca9-749">Étant donné que tous les <xref:System.Text.Encoding.Default%2A> encodages basés sur les pages de codes ANSI de perdre des données, envisagez d’utiliser le <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> encodage à la place.</span><span class="sxs-lookup"><span data-stu-id="63ca9-749">Because all <xref:System.Text.Encoding.Default%2A> encodings based on ANSI code pages lose data, consider using the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> encoding instead.</span></span> <span data-ttu-id="63ca9-750">UTF-8 est souvent identique U + 00 à U + 7F plage, mais peut encoder des caractères en dehors de la plage ASCII sans perte.</span><span class="sxs-lookup"><span data-stu-id="63ca9-750">UTF-8 is often identical in the U+00 to U+7F range, but can encode characters outside the ASCII range without loss.</span></span>

## <a name="the-default-property-on-net-core"></a><span data-ttu-id="63ca9-751">La propriété par défaut sur .NET Core</span><span class="sxs-lookup"><span data-stu-id="63ca9-751">The Default property on .NET Core</span></span>

<span data-ttu-id="63ca9-752">Sur .NET Core, la <xref:System.Text.Encoding.Default%2A> propriété retourne toujours la <xref:System.Text.UTF8Encoding>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-752">On .NET Core, the <xref:System.Text.Encoding.Default%2A> property always returns the <xref:System.Text.UTF8Encoding>.</span></span> <span data-ttu-id="63ca9-753">UTF-8 est pris en charge sur tous les systèmes d’exploitation (Windows, Linux et Max OS X) sur les applications .NET Core exécuter.</span><span class="sxs-lookup"><span data-stu-id="63ca9-753">UTF-8 is supported on all the operating systems (Windows, Linux, and Max OS X) on which .NET Core applications run.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncoderFallback">
      <MemberSignature Language="C#" Value="public System.Text.EncoderFallback EncoderFallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.EncoderFallback EncoderFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.EncoderFallback" />
      <MemberSignature Language="VB.NET" Value="Public Property EncoderFallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::EncoderFallback ^ EncoderFallback { System::Text::EncoderFallback ^ get(); void set(System::Text::EncoderFallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-754">Obtient ou définit l'objet <see cref="T:System.Text.EncoderFallback" /> actuel de l'objet <see cref="T:System.Text.Encoding" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-754">Gets or sets the <see cref="T:System.Text.EncoderFallback" /> object for the current <see cref="T:System.Text.Encoding" /> object.</span></span></summary>
        <value><span data-ttu-id="63ca9-755">Objet de secours d'encodeur pour l'objet <see cref="T:System.Text.Encoding" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-755">The encoder fallback object for the current <see cref="T:System.Text.Encoding" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-756">Le <xref:System.Text.EncoderFallback> objet représente un gestionnaire d’erreurs qui est appelé lorsqu’un caractère ne peut pas être converti en séquence d’octets encodée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-756">The <xref:System.Text.EncoderFallback> object represents an error handler that is invoked when a character cannot be converted into an encoded byte sequence.</span></span> <span data-ttu-id="63ca9-757">L’un des types de gestionnaires suivants est prise en charge :</span><span class="sxs-lookup"><span data-stu-id="63ca9-757">Any one of the following handler types is supported:</span></span>  
  
-   <span data-ttu-id="63ca9-758">Gestionnaire de secours la mieux adapté, qui remplace les caractères qui ne peuvent pas être encodés avec un caractère de remplacement approprié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-758">A best-fit fallback handler, which replaces characters that cannot be encoded with some suitable replacement character.</span></span>  
  
-   <span data-ttu-id="63ca9-759">Un gestionnaire de remplacement de secours, qui remplace les caractères qui ne peuvent pas être encodés avec un caractère de remplacement arbitraire.</span><span class="sxs-lookup"><span data-stu-id="63ca9-759">A replacement fallback handler, which replaces characters that cannot be encoded with some arbitrary replacement character.</span></span> <span data-ttu-id="63ca9-760">Le .NET Framework inclut un gestionnaire de secours de remplacement, <xref:System.Text.EncoderFallback>, qui par défaut remplace les caractères qui ne peuvent pas être encodés avec un point d’interrogation (« ? ») caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-760">The .NET Framework includes one replacement fallback handler, <xref:System.Text.EncoderFallback>, which by default replaces characters that cannot be encoded with a question mark ("?") character.</span></span>  
  
-   <span data-ttu-id="63ca9-761">Un gestionnaire d’exceptions de secours, qui lève une exception lorsque les caractères ne peut pas être encodés.</span><span class="sxs-lookup"><span data-stu-id="63ca9-761">An exception fallback handler, which throws an exception when characters cannot be encoded.</span></span> <span data-ttu-id="63ca9-762">Le .NET Framework inclut un gestionnaire d’exceptions de secours, <xref:System.Text.EncoderExceptionFallback>, qui lève une <xref:System.Text.EncoderFallbackException> quand les caractères ne peut pas être décodés.</span><span class="sxs-lookup"><span data-stu-id="63ca9-762">The .NET Framework includes one exception fallback handler, <xref:System.Text.EncoderExceptionFallback>, which throws an <xref:System.Text.EncoderFallbackException> when characters cannot be decoded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="63ca9-763">Dans une opération ensembliste, la valeur est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-763">The value in a set operation is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="63ca9-764">Une valeur ne peut pas être attribuée dans une opération ensembliste parce que l'objet <see cref="T:System.Text.Encoding" /> en cours est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="63ca9-764">A value cannot be assigned in a set operation because the current <see cref="T:System.Text.Encoding" /> object is read-only.</span></span></exception>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallbackBuffer" />
      </Docs>
    </Member>
    <Member MemberName="EncodingName">
      <MemberSignature Language="C#" Value="public virtual string EncodingName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodingName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.EncodingName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EncodingName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EncodingName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-765">En cas de substitution dans une classe dérivée, obtient la description explicite de l'encodage actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-765">When overridden in a derived class, gets the human-readable description of the current encoding.</span></span></summary>
        <value><span data-ttu-id="63ca9-766">Description explicite du <see cref="T:System.Text.Encoding" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-766">The human-readable description of the current <see cref="T:System.Text.Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-767">Le <xref:System.Text.Encoding.EncodingName%2A> propriété est conçue pour l’affichage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-767">The <xref:System.Text.Encoding.EncodingName%2A> property is intended for display.</span></span> <span data-ttu-id="63ca9-768">Pour rechercher un nom qui peut être passé à la <xref:System.Text.Encoding.GetEncoding%2A> (méthode), utilisez le <xref:System.Text.Encoding.WebName%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="63ca9-768">To find a name that can be passed to the <xref:System.Text.Encoding.GetEncoding%2A> method, use the <xref:System.Text.Encoding.WebName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-769">L’exemple suivant récupère les noms de chaque codage et affiche les encodages avec un ou plusieurs noms différents de <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-769">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="63ca9-770">Il affiche <xref:System.Text.Encoding.EncodingName%2A> mais ne compare pas par rapport à elle.</span><span class="sxs-lookup"><span data-stu-id="63ca9-770">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.DisplayName" />
        <altmember cref="P:System.Text.Encoding.BodyName" />
        <altmember cref="P:System.Text.Encoding.HeaderName" />
        <altmember cref="P:System.Text.Encoding.WebName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="63ca9-771"><see cref="T:System.Object" /> à comparer à l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="63ca9-771">The <see cref="T:System.Object" /> to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="63ca9-772">Détermine si le <see cref="T:System.Object" /> spécifié est égal à l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="63ca9-772">Determines whether the specified <see cref="T:System.Object" /> is equal to the current instance.</span></span></summary>
        <returns>
          <span data-ttu-id="63ca9-773"><see langword="true" /> si <paramref name="value" /> est une instance de <see cref="T:System.Text.Encoding" /> et s'il est égal à l'instance actuelle ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-773"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.Encoding" /> and is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-774">Deux instances de <xref:System.Text.Encoding> sont considérées comme égales si elles correspondent à la même page de codes et leurs `EncoderFallback` et `DecoderFallback` objets sont égaux.</span><span class="sxs-lookup"><span data-stu-id="63ca9-774">Two instances of <xref:System.Text.Encoding> are considered equal if they correspond to the same code page and their `EncoderFallback` and `DecoderFallback` objects are equal.</span></span> <span data-ttu-id="63ca9-775">En particulier, toutes les pages de codes dérivé ont une page de codes de 0 et leurs secours sont normalement `null` (`Nothing` dans Visual Basic .NET).</span><span class="sxs-lookup"><span data-stu-id="63ca9-775">In particular, derived code pages all have a code page of 0 and their fallbacks are normally `null` (`Nothing` in Visual Basic .NET).</span></span> <span data-ttu-id="63ca9-776">Par conséquent, ils sont tous considérés comme égales à un autre.</span><span class="sxs-lookup"><span data-stu-id="63ca9-776">Thus they are all considered equal to one another.</span></span> <span data-ttu-id="63ca9-777">Une conséquence est que lorsque <xref:System.Text.Encoding.Equals%2A> est utilisé pour remplir une table de hachage, tous les encodages dérivés sont égaux et se situent dans le même emplacement de table de hachage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-777">One consequence is that when <xref:System.Text.Encoding.Equals%2A> is used to populate a hash table, all derived encodings compare equal and fall into the same hash table slot.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-778">L’exemple suivant obtient deux instances du même encodage (une par page de codes) et une autre par nom et vérifie leur égalité.</span><span class="sxs-lookup"><span data-stu-id="63ca9-778">The following example gets two instances of the same encoding (one by codepage and another by name), and checks their equality.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Text.Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="63ca9-779">En cas de substitution dans une classe dérivée, calcule le nombre d'octets produits par l'encodage d'un jeu de caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-779">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (chars As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(cli::array &lt;char&gt; ^ chars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="63ca9-780">Tableau de caractères contenant les caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-780">The character array containing the characters to encode.</span></span></param>
        <summary><span data-ttu-id="63ca9-781">En cas de substitution dans une classe dérivée, calcule le nombre d'octets produits par l'encodage de tous les caractères du tableau de caractères spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-781">When overridden in a derived class, calculates the number of bytes produced by encoding all the characters in the specified character array.</span></span></summary>
        <returns><span data-ttu-id="63ca9-782">Nombre d'octets produits par l'encodage de tous les caractères du tableau de caractères spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-782">The number of bytes produced by encoding all the characters in the specified character array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-783">Pour calculer la taille exacte de tableau requise par <xref:System.Text.Encoding.GetBytes%2A> pour stocker les octets obtenus, appelez le <xref:System.Text.Encoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-783">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="63ca9-784">Pour calculer la taille de tableau maximale, appelez le <xref:System.Text.Encoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-784">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="63ca9-785">Le <xref:System.Text.Encoding.GetByteCount%2A> méthode permet généralement d’allocation de moins de mémoire, alors que le <xref:System.Text.Encoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="63ca9-785">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="63ca9-786">Le <xref:System.Text.Encoding.GetByteCount%2A> méthode détermine le nombre d’octets entraînant le codage d’un jeu de caractères Unicode et la <xref:System.Text.Encoding.GetBytes%2A> méthode exécute l’encodage réel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-786">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="63ca9-787">Le <xref:System.Text.Encoding.GetBytes%2A> méthode attend des conversions discrètes, par contraste avec le <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> (méthode), qui gère plusieurs conversions sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-787">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-788">Plusieurs versions de <xref:System.Text.Encoding.GetByteCount%2A> et <xref:System.Text.Encoding.GetBytes%2A> sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-788">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="63ca9-789">Voici quelques considérations sur la programmation pour l’utilisation de ces méthodes :</span><span class="sxs-lookup"><span data-stu-id="63ca9-789">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="63ca9-790">Votre application devrez encoder le nombre de caractères d’entrée à une page de codes et traiter les caractères à l’aide de plusieurs appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-790">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="63ca9-791">Dans ce cas, vous devrez probablement mettre à jour d’état entre les appels, compte tenu de l’état est conservé par le <xref:System.Text.Encoder> de l’objet qui est utilisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-791">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="63ca9-792">Si votre application gère des entrées de chaîne, vous devez utiliser les versions de la chaîne de la <xref:System.Text.Encoding.GetBytes%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-792">If your app handles string inputs, you should use the string versions of the <xref:System.Text.Encoding.GetBytes%2A> method.</span></span>  
  
-   <span data-ttu-id="63ca9-793">La version de mémoire tampon de caractères Unicode de <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> autorise certaines techniques rapides, en particulier avec les appels multiples à l’aide de la <xref:System.Text.Encoder> objet ou insérer dans des mémoires tampon existantes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-793">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="63ca9-794">N’oubliez pas, toutefois, que cette version de la méthode est parfois dangereuse, étant donné que les pointeurs sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-794">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="63ca9-795">Si votre application doit convertir une grande quantité de données, vous devez le réutiliser la mémoire tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-795">If your app must convert a large amount of data, you should reuse the output buffer.</span></span> <span data-ttu-id="63ca9-796">Dans ce cas, le <xref:System.Text.Encoding.GetBytes%2A> version qui prend en charge les tableaux d’octets est le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-796">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="63ca9-797">Envisagez d’utiliser le <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> méthode à la place de <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-797">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="63ca9-798">La méthode de conversion convertit autant de données que possible et lève une exception si la mémoire tampon de sortie est trop petit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-798">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="63ca9-799">Pour l’encodage d’un flux continu, cette méthode est souvent le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-799">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-800">L’exemple suivant détermine le nombre d’octets requis pour encoder un tableau de caractères, encode les caractères et affiche le nombre d’octets résultant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-800">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-801"><paramref name="chars" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-801"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="63ca9-802">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-802">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-803">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-803">-and-</span></span>  
  
 <span data-ttu-id="63ca9-804"><see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-804"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(valuetype System.ReadOnlySpan`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (chars As ReadOnlySpan(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(ReadOnlySpan&lt;char&gt; chars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="63ca9-805">Chaîne contenant le jeu de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-805">The string containing the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="63ca9-806">En cas de substitution dans une classe dérivée, calcule le nombre d'octets produits par l'encodage des caractères de la chaîne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-806">When overridden in a derived class, calculates the number of bytes produced by encoding the characters in the specified string.</span></span></summary>
        <returns><span data-ttu-id="63ca9-807">Nombre d'octets produits par l'encodage des caractères spécifiés.</span><span class="sxs-lookup"><span data-stu-id="63ca9-807">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-808">Pour calculer la taille exacte de tableau requise par <xref:System.Text.Encoding.GetBytes%2A> pour stocker les octets obtenus, appelez le <xref:System.Text.Encoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-808">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="63ca9-809">Pour calculer la taille de tableau maximale, appelez le <xref:System.Text.Encoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-809">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="63ca9-810">Le <xref:System.Text.Encoding.GetByteCount%2A> méthode permet généralement d’allocation de moins de mémoire, alors que le <xref:System.Text.Encoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="63ca9-810">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="63ca9-811">Le <xref:System.Text.Encoding.GetByteCount%2A> méthode détermine le nombre d’octets entraînant le codage d’un jeu de caractères Unicode et la <xref:System.Text.Encoding.GetBytes%2A> méthode exécute l’encodage réel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-811">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="63ca9-812">Le <xref:System.Text.Encoding.GetBytes%2A> méthode attend des conversions discrètes, par contraste avec le <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> (méthode), qui gère plusieurs conversions sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-812">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-813">Plusieurs versions de <xref:System.Text.Encoding.GetByteCount%2A> et <xref:System.Text.Encoding.GetBytes%2A> sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-813">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="63ca9-814">Voici quelques considérations sur la programmation pour l’utilisation de ces méthodes :</span><span class="sxs-lookup"><span data-stu-id="63ca9-814">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="63ca9-815">Votre application devrez encoder le nombre de caractères d’entrée à une page de codes et traiter les caractères à l’aide de plusieurs appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-815">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="63ca9-816">Dans ce cas, vous devrez probablement mettre à jour d’état entre les appels, compte tenu de l’état est conservé par le <xref:System.Text.Encoder> de l’objet qui est utilisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-816">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="63ca9-817">Si votre application gère des entrées de chaîne, la version de chaîne de <xref:System.Text.Encoding.GetBytes%2A> est recommandé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-817">If your app handles string inputs, the string version of <xref:System.Text.Encoding.GetBytes%2A> is recommended.</span></span>  
  
-   <span data-ttu-id="63ca9-818">La version de mémoire tampon de caractères Unicode de <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> autorise certaines techniques rapides, en particulier avec les appels multiples à l’aide de la <xref:System.Text.Encoder> objet ou insérer dans des mémoires tampon existantes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-818">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="63ca9-819">N’oubliez pas, toutefois, que cette version de la méthode est parfois dangereuse, étant donné que les pointeurs sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-819">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="63ca9-820">Si votre application doit convertir une grande quantité de données, elle doit réutiliser la mémoire tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-820">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="63ca9-821">Dans ce cas, le <xref:System.Text.Encoding.GetBytes%2A> version qui prend en charge les tableaux d’octets est le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-821">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="63ca9-822">Envisagez d’utiliser le <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> méthode à la place de <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-822">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="63ca9-823">La méthode de conversion convertit autant de données que possible et lève une exception si la mémoire tampon de sortie est trop petit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-823">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="63ca9-824">Pour l’encodage d’un flux continu, cette méthode est souvent le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-824">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-825">L’exemple suivant détermine le nombre d’octets requis pour encoder une chaîne ou une plage de la chaîne, encode les caractères et affiche le nombre d’octets obtenue.</span><span class="sxs-lookup"><span data-stu-id="63ca9-825">The following example determines the number of bytes required to encode a string or a range in the string, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/VB/getbytes_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-826"><paramref name="s" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-826"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="63ca9-827">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-827">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-828">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-828">-and-</span></span>  
  
 <span data-ttu-id="63ca9-829"><see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-829"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(char* chars, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="63ca9-830">Pointeur du premier caractère à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-830">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="63ca9-831">Nombre de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-831">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="63ca9-832">En cas de substitution dans une classe dérivée, calcule le nombre d'octets produits par l'encodage d'un jeu de caractères commençant au pointeur de caractère spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-832">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="63ca9-833">Nombre d'octets produits par l'encodage des caractères spécifiés.</span><span class="sxs-lookup"><span data-stu-id="63ca9-833">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-834">Pour calculer la taille de tableau exact qui <xref:System.Text.Encoding.GetBytes%2A> requiert pour stocker les octets obtenus, vous devez appeler la <xref:System.Text.Encoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-834">To calculate the exact array size that <xref:System.Text.Encoding.GetBytes%2A> requires to store the resulting bytes, you should call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="63ca9-835">Pour calculer la taille de tableau maximale, appelez le <xref:System.Text.Encoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-835">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="63ca9-836">Le <xref:System.Text.Encoding.GetByteCount%2A> méthode permet généralement d’allocation de moins de mémoire, alors que le <xref:System.Text.Encoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="63ca9-836">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="63ca9-837">Le <xref:System.Text.Encoding.GetByteCount%28System.Char%2A%2CSystem.Int32%29> méthode détermine le nombre d’octets entraînant le codage d’un jeu de caractères Unicode et la <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> méthode exécute l’encodage réel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-837">The <xref:System.Text.Encoding.GetByteCount%28System.Char%2A%2CSystem.Int32%29> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> method performs the actual encoding.</span></span> <span data-ttu-id="63ca9-838">Le <xref:System.Text.Encoding.GetBytes%2A> méthode attend des conversions discrètes, par contraste avec le <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> (méthode), qui gère plusieurs conversions sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-838">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-839">Plusieurs versions de <xref:System.Text.Encoding.GetByteCount%2A> et <xref:System.Text.Encoding.GetBytes%2A> sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-839">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="63ca9-840">Voici quelques considérations sur l’utilisation de ces méthodes :</span><span class="sxs-lookup"><span data-stu-id="63ca9-840">The following are some considerations for using these methods:</span></span>  
  
-   <span data-ttu-id="63ca9-841">Votre application peut nécessiter à encoder le nombre de caractères d’entrée à une page de codes et traiter les caractères à l’aide de plusieurs appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-841">Your app may need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="63ca9-842">Dans ce cas, vous devrez probablement mettre à jour d’état entre les appels, compte tenu de l’état est conservé par le <xref:System.Text.Encoder> de l’objet qui est utilisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-842">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="63ca9-843">Si votre application gère des entrées de chaîne, vous devez utiliser la version de chaîne de la <xref:System.Text.Encoding.GetBytes%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-843">If your app handles string inputs, you should use the string version of the <xref:System.Text.Encoding.GetBytes%2A> method.</span></span>  
  
-   <span data-ttu-id="63ca9-844">La version de mémoire tampon de caractères Unicode de <xref:System.Text.Encoding.GetBytes%2A> autorise certaines techniques rapides, en particulier avec les appels multiples à l’aide de la <xref:System.Text.Encoder> objet ou insérer dans des mémoires tampon existantes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-844">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%2A> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="63ca9-845">N’oubliez pas, toutefois, que cette version de la méthode est parfois dangereuse, étant donné que les pointeurs sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-845">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="63ca9-846">Si votre application doit convertir une grande quantité de données, elle doit réutiliser la mémoire tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-846">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="63ca9-847">Dans ce cas, le <xref:System.Text.Encoding.GetBytes%2A> version qui prend en charge les tableaux d’octets est le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-847">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="63ca9-848">Envisagez d’utiliser le <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> méthode à la place de <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-848">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="63ca9-849">La méthode de conversion convertit autant de données que possible et lève une exception si la mémoire tampon de sortie est trop petit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-849">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="63ca9-850">Pour l’encodage d’un flux continu, cette méthode est souvent le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-850">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-851"><paramref name="chars" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-851"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-852"><paramref name="count" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="63ca9-852"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="63ca9-853">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-853">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-854">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-854">-and-</span></span>  
  
 <span data-ttu-id="63ca9-855"><see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-855"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="63ca9-856">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="63ca9-856">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="63ca9-857">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="63ca9-857">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public abstract int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="63ca9-858">Tableau de caractères contenant le jeu de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-858">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="63ca9-859">Index du premier caractère à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-859">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="63ca9-860">Nombre de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-860">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="63ca9-861">En cas de substitution dans une classe dérivée, calcule le nombre d'octets produits par l'encodage d'un jeu de caractères du tableau de caractères spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-861">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span></summary>
        <returns><span data-ttu-id="63ca9-862">Nombre d'octets produits par l'encodage des caractères spécifiés.</span><span class="sxs-lookup"><span data-stu-id="63ca9-862">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-863">Pour calculer la taille exacte de tableau requise par <xref:System.Text.Encoding.GetBytes%2A> pour stocker les octets obtenus, appelez le <xref:System.Text.Encoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-863">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="63ca9-864">Pour calculer la taille de tableau maximale, appelez le <xref:System.Text.Encoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-864">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="63ca9-865">Le <xref:System.Text.Encoding.GetByteCount%2A> méthode permet généralement d’allocation de moins de mémoire, alors que le <xref:System.Text.Encoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="63ca9-865">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="63ca9-866">Le <xref:System.Text.Encoding.GetByteCount%2A> méthode détermine le nombre d’octets entraînant le codage d’un jeu de caractères Unicode et la <xref:System.Text.Encoding.GetBytes%2A> méthode exécute l’encodage réel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-866">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="63ca9-867">Le <xref:System.Text.Encoding.GetBytes%2A> méthode attend des conversions discrètes, par contraste avec le <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> (méthode), qui gère plusieurs conversions sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-867">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-868">Plusieurs versions de <xref:System.Text.Encoding.GetByteCount%2A> et <xref:System.Text.Encoding.GetBytes%2A> sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-868">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="63ca9-869">Voici quelques considérations sur la programmation pour l’utilisation de ces méthodes :</span><span class="sxs-lookup"><span data-stu-id="63ca9-869">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="63ca9-870">Votre application devrez encoder le nombre de caractères d’entrée à une page de codes et traiter les caractères à l’aide de plusieurs appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-870">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="63ca9-871">Dans ce cas, vous devrez probablement mettre à jour d’état entre les appels, compte tenu de l’état est conservé par le <xref:System.Text.Encoder> de l’objet qui est utilisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-871">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="63ca9-872">Si votre application gère des entrées de chaîne, la version de chaîne de <xref:System.Text.Encoding.GetBytes%2A> est recommandé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-872">If your app handles string inputs, the string version of <xref:System.Text.Encoding.GetBytes%2A> is recommended.</span></span>  
  
-   <span data-ttu-id="63ca9-873">La version de mémoire tampon de caractères Unicode de <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> autorise certaines techniques rapides, en particulier avec les appels multiples à l’aide de la <xref:System.Text.Encoder> objet ou insérer dans des mémoires tampon existantes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-873">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="63ca9-874">N’oubliez pas, toutefois, que cette version de la méthode est parfois dangereuse, étant donné que les pointeurs sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-874">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="63ca9-875">Si votre application doit convertir une grande quantité de données, elle doit réutiliser la mémoire tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-875">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="63ca9-876">Dans ce cas, le <xref:System.Text.Encoding.GetBytes%2A> version qui prend en charge les tableaux d’octets est le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-876">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="63ca9-877">Envisagez d’utiliser le <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> méthode à la place de <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-877">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="63ca9-878">La méthode de conversion convertit autant de données que possible et lève une exception si la mémoire tampon de sortie est trop petit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-878">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="63ca9-879">Pour l’encodage d’un flux continu, cette méthode est souvent le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-879">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-880">L’exemple suivant détermine le nombre d’octets requis pour encoder trois caractères d’un tableau de caractères, encode les caractères et affiche le nombre d’octets résultant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-880">The following example determines the number of bytes required to encode three characters from a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CPP/getbytes_chararric.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CS/getbytes_chararric.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/VB/getbytes_chararric.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-881"><paramref name="chars" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-881"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-882"><paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="63ca9-882"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="63ca9-883">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-883">-or-</span></span>  
  
 <span data-ttu-id="63ca9-884"><paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-884"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="63ca9-885">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-885">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-886">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-886">-and-</span></span>  
  
 <span data-ttu-id="63ca9-887"><see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-887"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public int GetByteCount (string s, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetByteCount(string s, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteCount (s As String, index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetByteCount(System::String ^ s, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="index">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="63ca9-888">En cas de substitution dans une classe dérivée, encode un jeu de caractères en séquence d'octets.</span><span class="sxs-lookup"><span data-stu-id="63ca9-888">When overridden in a derived class, encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes(char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As Char()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetBytes(cli::array &lt;char&gt; ^ chars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="63ca9-889">Tableau de caractères contenant les caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-889">The character array containing the characters to encode.</span></span></param>
        <summary><span data-ttu-id="63ca9-890">En cas de substitution dans une classe dérivée, encode tous les caractères du tableau de caractères spécifié en séquence d'octets.</span><span class="sxs-lookup"><span data-stu-id="63ca9-890">When overridden in a derived class, encodes all the characters in the specified character array into a sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="63ca9-891">Tableau d'octets contenant les résultats de l'encodage du jeu de caractères spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-891">A byte array containing the results of encoding the specified set of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-892">Si les conversion des données seront disponibles uniquement dans les blocs séquentiels (par exemple, les données lues à partir d’un flux de données) ou si la quantité de données est tellement importante qu’elle doit être divisée en blocs plus petits, vous devez utiliser le <xref:System.Text.Decoder> ou <xref:System.Text.Encoder> fournie par le <xref:System.Text.Encoding.GetDecoder%2A> méthode ou la <xref:System.Text.Encoding.GetEncoder%2A> (méthode), respectivement, d’une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-892">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="63ca9-893">Le <xref:System.Text.Encoding.GetByteCount%2A> méthode détermine le nombre d’octets entraînant le codage d’un jeu de caractères Unicode et la <xref:System.Text.Encoding.GetBytes%2A> méthode exécute l’encodage réel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-893">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="63ca9-894">Le <xref:System.Text.Encoding.GetBytes%2A> méthode attend des conversions discrètes, par contraste avec le <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> (méthode), qui gère plusieurs conversions sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-894">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-895">Plusieurs versions de <xref:System.Text.Encoding.GetByteCount%2A> et <xref:System.Text.Encoding.GetBytes%2A> sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-895">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="63ca9-896">Voici quelques considérations sur la programmation pour l’utilisation de ces méthodes :</span><span class="sxs-lookup"><span data-stu-id="63ca9-896">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="63ca9-897">Votre application devrez encoder le nombre de caractères d’entrée à une page de codes et traiter les caractères à l’aide de plusieurs appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-897">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="63ca9-898">Dans ce cas, vous devrez probablement mettre à jour d’état entre les appels, compte tenu de l’état est conservé par le <xref:System.Text.Encoder> de l’objet qui est utilisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-898">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="63ca9-899">(Par exemple, une séquence de caractères qui inclut des paires de substitution peut se terminer par un caractère de substitution étendu.</span><span class="sxs-lookup"><span data-stu-id="63ca9-899">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="63ca9-900">Le <xref:System.Text.Encoder> conserverons ce substitut afin qu’il peut être combiné avec un substitut faible au début d’un appel suivant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-900">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="63ca9-901"><xref:System.Text.Encoding> ne pourra plus être en mesure de maintenir l’état, le caractère est envoyés à le <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="63ca9-901"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="63ca9-902">Si votre application gère des entrées de chaîne, vous devez appeler la version de chaîne de la <xref:System.Text.Encoding.GetBytes%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-902">If your app handles string inputs, you should call the string version of the <xref:System.Text.Encoding.GetBytes%2A> method.</span></span>  
  
-   <span data-ttu-id="63ca9-903">La version de mémoire tampon de caractères Unicode de <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> autorise certaines techniques rapides, en particulier avec les appels multiples à l’aide de la <xref:System.Text.Encoder> objet ou insérer dans des mémoires tampon existantes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-903">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="63ca9-904">N’oubliez pas, toutefois, que cette version de la méthode est parfois dangereuse, étant donné que les pointeurs sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-904">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="63ca9-905">Si votre application doit convertir une grande quantité de données, elle doit réutiliser la mémoire tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-905">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="63ca9-906">Dans ce cas, le <xref:System.Text.Encoding.GetBytes%2A> version qui prend en charge les tableaux d’octets est le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-906">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="63ca9-907">Envisagez d’utiliser le <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> méthode à la place de <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-907">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="63ca9-908">La méthode de conversion convertit autant de données que possible et lève une exception si la mémoire tampon de sortie est trop petit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-908">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="63ca9-909">Pour l’encodage d’un flux continu, cette méthode est souvent le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-909">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-910">L’exemple suivant détermine le nombre d’octets requis pour encoder un tableau de caractères, encode les caractères et affiche le nombre d’octets résultant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-910">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-911"><paramref name="chars" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-911"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="63ca9-912">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-912">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-913">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-913">-and-</span></span>  
  
 <span data-ttu-id="63ca9-914"><see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-914"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="63ca9-915">Chaîne contenant les caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-915">The string containing the characters to encode.</span></span></param>
        <summary><span data-ttu-id="63ca9-916">En cas de substitution dans une classe dérivée, encode tous les caractères de la chaîne spécifiée en séquence d'octets.</span><span class="sxs-lookup"><span data-stu-id="63ca9-916">When overridden in a derived class, encodes all the characters in the specified string into a sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="63ca9-917">Tableau d'octets contenant les résultats de l'encodage du jeu de caractères spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-917">A byte array containing the results of encoding the specified set of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-918">Si les conversion des données seront disponibles uniquement dans les blocs séquentiels (par exemple, les données lues à partir d’un flux de données) ou si la quantité de données est tellement importante qu’elle doit être divisée en blocs plus petits, vous devez utiliser le <xref:System.Text.Decoder> ou <xref:System.Text.Encoder> fournie par le <xref:System.Text.Encoding.GetDecoder%2A> méthode ou la <xref:System.Text.Encoding.GetEncoder%2A> (méthode), respectivement, d’une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-918">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="63ca9-919">Le <xref:System.Text.Encoding.GetByteCount%2A> méthode détermine le nombre d’octets entraînant le codage d’un jeu de caractères Unicode et la <xref:System.Text.Encoding.GetBytes%2A> méthode exécute l’encodage réel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-919">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="63ca9-920">Le <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> méthode attend des conversions discrètes, par contraste avec le <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> (méthode), qui gère plusieurs conversions sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-920">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-921">Plusieurs versions de <xref:System.Text.Encoding.GetByteCount%2A> et <xref:System.Text.Encoding.GetBytes%2A> sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-921">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="63ca9-922">Voici quelques considérations sur la programmation pour l’utilisation de ces méthodes :</span><span class="sxs-lookup"><span data-stu-id="63ca9-922">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="63ca9-923">Votre application devrez encoder le nombre de caractères d’entrée à une page de codes et traiter les caractères à l’aide de plusieurs appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-923">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="63ca9-924">Dans ce cas, vous devrez probablement mettre à jour d’état entre les appels, compte tenu de l’état est conservé par le <xref:System.Text.Encoder> de l’objet qui est utilisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-924">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="63ca9-925">(Par exemple, une séquence de caractères qui inclut des paires de substitution peut se terminer par un caractère de substitution étendu.</span><span class="sxs-lookup"><span data-stu-id="63ca9-925">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="63ca9-926">Le <xref:System.Text.Encoder> conserverons ce substitut afin qu’il peut être combiné avec un substitut faible au début d’un appel suivant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-926">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="63ca9-927"><xref:System.Text.Encoding> ne pourra plus être en mesure de maintenir l’état, le caractère est envoyés à le <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="63ca9-927"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="63ca9-928">Si votre application gère des entrées de chaîne, vous devez utiliser la version de chaîne de <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-928">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="63ca9-929">La version de mémoire tampon de caractères Unicode de <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> autorise certaines techniques rapides, en particulier avec les appels multiples à l’aide de la <xref:System.Text.Encoder> objet ou insérer dans des mémoires tampon existantes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-929">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="63ca9-930">N’oubliez pas, toutefois, que cette version de la méthode est parfois dangereuse, étant donné que les pointeurs sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-930">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="63ca9-931">Si votre application doit convertir une grande quantité de données, elle doit réutiliser la mémoire tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-931">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="63ca9-932">Dans ce cas, le <xref:System.Text.Encoding.GetBytes%2A> version qui prend en charge les tableaux d’octets est le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-932">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="63ca9-933">Envisagez d’utiliser le <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> méthode à la place de <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-933">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="63ca9-934">La méthode de conversion convertit autant de données que possible et lève une exception si la mémoire tampon de sortie est trop petit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-934">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="63ca9-935">Pour l’encodage d’un flux continu, cette méthode est souvent le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-935">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-936">L’exemple suivant détermine le nombre d’octets requis pour encoder une chaîne ou une plage de la chaîne, encode les caractères et affiche le nombre d’octets obtenue.</span><span class="sxs-lookup"><span data-stu-id="63ca9-936">The following example determines the number of bytes required to encode a string or a range in the string, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/VB/getbytes_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-937"><paramref name="s" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-937"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="63ca9-938">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-938">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-939">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-939">-and-</span></span>  
  
 <span data-ttu-id="63ca9-940"><see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-940"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As Char(), index As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetBytes(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="63ca9-941">Tableau de caractères contenant le jeu de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-941">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="63ca9-942">Index du premier caractère à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-942">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="63ca9-943">Nombre de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-943">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="63ca9-944">En cas de substitution dans une classe dérivée, encode un jeu de caractères du tableau de caractères spécifié en séquence d'octets.</span><span class="sxs-lookup"><span data-stu-id="63ca9-944">When overridden in a derived class, encodes a set of characters from the specified character array into a sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="63ca9-945">Tableau d'octets contenant les résultats de l'encodage du jeu de caractères spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-945">A byte array containing the results of encoding the specified set of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-946">Si les conversion des données seront disponibles uniquement dans les blocs séquentiels (par exemple, les données lues à partir d’un flux de données) ou si la quantité de données est tellement importante qu’elle doit être divisée en blocs plus petits, vous devez utiliser le <xref:System.Text.Decoder> ou <xref:System.Text.Encoder> fournie par le <xref:System.Text.Encoding.GetDecoder%2A> méthode ou la <xref:System.Text.Encoding.GetEncoder%2A> (méthode), respectivement, d’une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-946">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="63ca9-947">Le <xref:System.Text.Encoding.GetByteCount%2A> méthode détermine le nombre d’octets entraînant le codage d’un jeu de caractères Unicode et la <xref:System.Text.Encoding.GetBytes%2A> méthode exécute l’encodage réel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-947">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="63ca9-948">Le <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> méthode attend des conversions discrètes, par contraste avec le <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> (méthode), qui gère plusieurs conversions sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-948">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-949">Plusieurs versions de <xref:System.Text.Encoding.GetByteCount%2A> et <xref:System.Text.Encoding.GetBytes%2A> sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-949">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="63ca9-950">Voici quelques considérations sur la programmation pour l’utilisation de ces méthodes :</span><span class="sxs-lookup"><span data-stu-id="63ca9-950">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="63ca9-951">Votre application devrez encoder le nombre de caractères d’entrée à une page de codes et traiter les caractères à l’aide de plusieurs appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-951">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="63ca9-952">Dans ce cas, vous devrez probablement mettre à jour d’état entre les appels, compte tenu de l’état est conservé par le <xref:System.Text.Encoder> de l’objet qui est utilisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-952">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="63ca9-953">(Par exemple, une séquence de caractères qui inclut des paires de substitution peut se terminer par un caractère de substitution étendu.</span><span class="sxs-lookup"><span data-stu-id="63ca9-953">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="63ca9-954">Le <xref:System.Text.Encoder> conserverons ce substitut afin qu’il peut être combiné avec un substitut faible au début d’un appel suivant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-954">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="63ca9-955"><xref:System.Text.Encoding> ne pourra plus être en mesure de maintenir l’état, le caractère est envoyés à le <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="63ca9-955"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="63ca9-956">Si votre application gère des entrées de chaîne, vous devez utiliser la version de chaîne de <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-956">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="63ca9-957">La version de mémoire tampon de caractères Unicode de <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> autorise certaines techniques rapides, en particulier avec les appels multiples à l’aide de la <xref:System.Text.Encoder> objet ou insérer dans des mémoires tampon existantes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-957">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="63ca9-958">N’oubliez pas, toutefois, que cette version de la méthode est parfois dangereuse, étant donné que les pointeurs sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-958">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="63ca9-959">Si votre application doit convertir une grande quantité de données, elle doit réutiliser la mémoire tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-959">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="63ca9-960">Dans ce cas, le <xref:System.Text.Encoding.GetBytes%2A> version qui prend en charge les tableaux d’octets est le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-960">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="63ca9-961">Envisagez d’utiliser le <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> méthode à la place de <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-961">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="63ca9-962">La méthode de conversion convertit autant de données que possible et lève une exception si la mémoire tampon de sortie est trop petit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-962">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="63ca9-963">Pour l’encodage d’un flux continu, cette méthode est souvent le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-963">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-964">L’exemple suivant détermine le nombre d’octets requis pour encoder trois caractères d’un tableau de caractères, encode les caractères et affiche le nombre d’octets résultant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-964">The following example determines the number of bytes required to encode three characters from a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CPP/getbytes_chararric.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CS/getbytes_chararric.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/VB/getbytes_chararric.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-965"><paramref name="chars" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-965"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-966"><paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="63ca9-966"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="63ca9-967">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-967">-or-</span></span>  
  
 <span data-ttu-id="63ca9-968"><paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-968"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="63ca9-969">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-969">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-970">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-970">-and-</span></span>  
  
 <span data-ttu-id="63ca9-971"><see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-971"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public byte[] GetBytes (string s, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetBytes(string s, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBytes (s As String, index As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="index">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="63ca9-972">Pointeur du premier caractère à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-972">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="63ca9-973">Nombre de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-973">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="63ca9-974">Pointeur de l'emplacement où commencer l'écriture de la séquence d'octets obtenue.</span><span class="sxs-lookup"><span data-stu-id="63ca9-974">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="63ca9-975">Nombre maximal d'octets à écrire.</span><span class="sxs-lookup"><span data-stu-id="63ca9-975">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="63ca9-976">En cas de substitution dans une classe dérivée, encode un jeu de caractères commençant au pointeur de caractère spécifié en séquence d'octets stockés à partir du pointeur d'octet spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-976">When overridden in a derived class, encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="63ca9-977">Nombre réel d'octets écrits à l'emplacement indiqué par le paramètre <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-977">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-978">Pour calculer la taille de tableau exact qui <xref:System.Text.Encoding.GetBytes%2A> requiert pour stocker les octets obtenus, appelez le <xref:System.Text.Encoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-978">To calculate the exact array size that <xref:System.Text.Encoding.GetBytes%2A> requires to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="63ca9-979">Pour calculer la taille de tableau maximale, appelez le <xref:System.Text.Encoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-979">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="63ca9-980">Le <xref:System.Text.Encoding.GetByteCount%2A> méthode permet généralement d’allocation de moins de mémoire, alors que le <xref:System.Text.Encoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="63ca9-980">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="63ca9-981">Si les conversion des données seront disponibles uniquement dans les blocs séquentiels (par exemple, les données lues à partir d’un flux de données) ou si la quantité de données est tellement importante qu’elle doit être divisée en blocs plus petits, vous devez utiliser le <xref:System.Text.Decoder> ou <xref:System.Text.Encoder> objet fourni par le <xref:System.Text.Encoding.GetDecoder%2A> ou <xref:System.Text.Encoding.GetEncoder%2A> (méthode), respectivement, d’une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-981">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.Encoding.GetDecoder%2A> or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="63ca9-982">Le <xref:System.Text.Encoding.GetByteCount%2A> méthode détermine le nombre d’octets entraînant le codage d’un jeu de caractères Unicode et la <xref:System.Text.Encoding.GetBytes%2A> méthode exécute l’encodage réel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-982">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="63ca9-983">Le <xref:System.Text.Encoding.GetBytes%2A> méthode attend des conversions discrètes, par contraste avec le <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> (méthode), qui gère plusieurs conversions sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-983">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-984">Plusieurs versions de <xref:System.Text.Encoding.GetByteCount%2A> et <xref:System.Text.Encoding.GetBytes%2A> sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-984">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="63ca9-985">Voici quelques considérations sur la programmation pour l’utilisation de ces méthodes :</span><span class="sxs-lookup"><span data-stu-id="63ca9-985">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="63ca9-986">Votre application devrez encoder le nombre de caractères d’entrée à une page de codes et traiter les caractères à l’aide de plusieurs appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-986">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="63ca9-987">Dans ce cas, vous devrez probablement mettre à jour d’état entre les appels, compte tenu de l’état est conservé par le <xref:System.Text.Encoder> de l’objet qui est utilisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-987">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="63ca9-988">(Par exemple, une séquence de caractères qui inclut des paires de substitution peut se terminer par un caractère de substitution étendu.</span><span class="sxs-lookup"><span data-stu-id="63ca9-988">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="63ca9-989">Le <xref:System.Text.Encoder> conserverons ce substitut afin qu’il peut être combiné avec un substitut faible au début d’un appel suivant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-989">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="63ca9-990"><xref:System.Text.Encoding> ne pourra plus être en mesure de maintenir l’état, le caractère est envoyés à le <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="63ca9-990"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="63ca9-991">Si votre application gère des entrées de chaîne, vous devez utiliser la version de chaîne de <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-991">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="63ca9-992">La version de mémoire tampon de caractères Unicode de <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> autorise certaines techniques rapides, en particulier avec les appels multiples à l’aide de la <xref:System.Text.Encoder> objet ou insérer dans des mémoires tampon existantes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-992">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="63ca9-993">N’oubliez pas, toutefois, que cette version de la méthode est parfois dangereuse, étant donné que les pointeurs sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-993">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="63ca9-994">Si votre application doit convertir une grande quantité de données, elle doit réutiliser la mémoire tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-994">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="63ca9-995">Dans ce cas, le <xref:System.Text.Encoding.GetBytes%2A> version qui prend en charge les tableaux d’octets est le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-995">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="63ca9-996">Envisagez d’utiliser le <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> méthode à la place de <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-996">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="63ca9-997">La méthode de conversion convertit autant de données que possible et lève une exception si la mémoire tampon de sortie est trop petit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-997">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="63ca9-998">Pour l’encodage d’un flux continu, cette méthode est souvent le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-998">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-999"><paramref name="chars" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-999"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="63ca9-1000">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1000">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1001"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1001"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-1002"><paramref name="charCount" /> ou <paramref name="byteCount" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1002"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="63ca9-1003"><paramref name="byteCount" /> est inférieur au nombre d'octets obtenus.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1003"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="63ca9-1004">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1004">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-1005">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-1005">-and-</span></span>  
  
 <span data-ttu-id="63ca9-1006"><see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1006"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="63ca9-1007">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1007">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="63ca9-1008">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1008">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public abstract int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="63ca9-1009">Tableau de caractères contenant le jeu de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1009">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="63ca9-1010">Index du premier caractère à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1010">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="63ca9-1011">Nombre de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1011">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="63ca9-1012">Tableau d'octets destiné à contenir la séquence d'octets obtenue.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1012">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="63ca9-1013">Index auquel commencer l'écriture de la séquence d'octets obtenue.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1013">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="63ca9-1014">En cas de substitution dans une classe dérivée, encode un jeu de caractères du tableau de caractères spécifié en tableau d'octets.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1014">When overridden in a derived class, encodes a set of characters from the specified character array into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1015">Nombre réel d'octets écrits dans <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1015">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1016">Pour calculer la taille exacte de tableau requise par <xref:System.Text.Encoding.GetBytes%2A> pour stocker les octets obtenus, vous devez appeler la <xref:System.Text.Encoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1016">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, you should call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="63ca9-1017">Pour calculer la taille de tableau maximale, appelez le <xref:System.Text.Encoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1017">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="63ca9-1018">Le <xref:System.Text.Encoding.GetByteCount%2A> méthode permet généralement d’allocation de moins de mémoire, alors que le <xref:System.Text.Encoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1018">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="63ca9-1019">Si les conversion des données seront disponibles uniquement dans les blocs séquentiels (par exemple, les données lues à partir d’un flux de données) ou si la quantité de données est tellement importante qu’elle doit être divisée en blocs plus petits, vous devez utiliser le <xref:System.Text.Decoder> ou <xref:System.Text.Encoder> fournie par le <xref:System.Text.Encoding.GetDecoder%2A> méthode ou la <xref:System.Text.Encoding.GetEncoder%2A> (méthode), respectivement, d’une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1019">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="63ca9-1020">Le <xref:System.Text.Encoding.GetByteCount%2A> méthode détermine le nombre d’octets entraînant le codage d’un jeu de caractères Unicode et la <xref:System.Text.Encoding.GetBytes%2A> méthode exécute l’encodage réel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1020">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="63ca9-1021">Le <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> méthode attend des conversions discrètes, par contraste avec le <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> (méthode), qui gère plusieurs conversions sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1021">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-1022">Plusieurs versions de <xref:System.Text.Encoding.GetByteCount%2A> et <xref:System.Text.Encoding.GetBytes%2A> sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1022">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="63ca9-1023">Voici quelques considérations sur la programmation pour l’utilisation de ces méthodes :</span><span class="sxs-lookup"><span data-stu-id="63ca9-1023">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="63ca9-1024">Votre application devrez encoder le nombre de caractères d’entrée à une page de codes et traiter les caractères à l’aide de plusieurs appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1024">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="63ca9-1025">Dans ce cas, vous devrez probablement mettre à jour d’état entre les appels, compte tenu de l’état est conservé par le <xref:System.Text.Encoder> de l’objet qui est utilisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1025">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="63ca9-1026">(Par exemple, une séquence de caractères qui inclut des paires de substitution peut se terminer par un caractère de substitution étendu.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1026">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="63ca9-1027">Le <xref:System.Text.Encoder> conserverons ce substitut afin qu’il peut être combiné avec un substitut faible au début d’un appel suivant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1027">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="63ca9-1028"><xref:System.Text.Encoding> ne pourra plus être en mesure de maintenir l’état, le caractère est envoyés à le <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1028"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="63ca9-1029">Si votre application gère des entrées de chaîne, vous devez utiliser la version de chaîne de <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1029">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="63ca9-1030">La version de mémoire tampon de caractères Unicode de <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> autorise certaines techniques rapides, en particulier avec les appels multiples à l’aide de la <xref:System.Text.Encoder> objet ou insérer dans des mémoires tampon existantes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1030">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="63ca9-1031">N’oubliez pas, toutefois, que cette version de la méthode est parfois dangereuse, étant donné que les pointeurs sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1031">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="63ca9-1032">Si votre application doit convertir une grande quantité de données, elle doit réutiliser la mémoire tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1032">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="63ca9-1033">Dans ce cas, le <xref:System.Text.Encoding.GetBytes%2A> version qui prend en charge les tableaux d’octets est le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1033">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="63ca9-1034">Envisagez d’utiliser le <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> méthode à la place de <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1034">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="63ca9-1035">La méthode de conversion convertit autant de données que possible et lève une exception si la mémoire tampon de sortie est trop petit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1035">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="63ca9-1036">Pour l’encodage d’un flux continu, cette méthode est souvent le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1036">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1037">L’exemple suivant détermine le nombre d’octets requis pour encoder trois caractères d’un tableau de caractères, encode les caractères et affiche le nombre d’octets résultant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1037">The following example determines the number of bytes required to encode three characters from a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CPP/getbytes_chararric.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CS/getbytes_chararric.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/VB/getbytes_chararric.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-1038"><paramref name="chars" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1038"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="63ca9-1039">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1039">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1040"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1040"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-1041"><paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1041"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
 <span data-ttu-id="63ca9-1042">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1042">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1043"><paramref name="charIndex" /> et <paramref name="charCount" /> ne désignent pas une plage valide dans <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1043"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
 <span data-ttu-id="63ca9-1044">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1044">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1045"><paramref name="byteIndex" /> n'est pas un index valide dans <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1045"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="63ca9-1046"><paramref name="bytes" /> ne possède pas une capacité suffisante entre <paramref name="byteIndex" /> et la fin du tableau pour prendre en charge les octets obtenus.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1046"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="63ca9-1047">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1047">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-1048">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-1048">-and-</span></span>  
  
 <span data-ttu-id="63ca9-1049"><see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1049"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="63ca9-1050">Chaîne contenant le jeu de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1050">The string containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="63ca9-1051">Index du premier caractère à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1051">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="63ca9-1052">Nombre de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1052">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="63ca9-1053">Tableau d'octets destiné à contenir la séquence d'octets obtenue.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1053">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="63ca9-1054">Index auquel commencer l'écriture de la séquence d'octets obtenue.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1054">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="63ca9-1055">En cas de substitution dans une classe dérivée, encode un jeu de caractères de la chaîne spécifiée en tableau d'octets spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1055">When overridden in a derived class, encodes a set of characters from the specified string into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1056">Nombre réel d'octets écrits dans <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1056">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1057">Pour calculer la taille exacte de tableau requise par <xref:System.Text.Encoding.GetBytes%2A> pour stocker les octets obtenus, vous devez appeler la <xref:System.Text.Encoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1057">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, you should call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="63ca9-1058">Pour calculer la taille de tableau maximale, appelez le <xref:System.Text.Encoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1058">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="63ca9-1059">Le <xref:System.Text.Encoding.GetByteCount%2A> méthode permet généralement d’allocation de moins de mémoire, alors que le <xref:System.Text.Encoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1059">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="63ca9-1060">Si les conversion des données seront disponibles uniquement dans les blocs séquentiels (par exemple, les données lues à partir d’un flux de données) ou si la quantité de données est tellement importante qu’elle doit être divisée en blocs plus petits, vous devez utiliser le <xref:System.Text.Decoder> ou <xref:System.Text.Encoder> fournie par le <xref:System.Text.Encoding.GetDecoder%2A> méthode ou la <xref:System.Text.Encoding.GetEncoder%2A> (méthode), respectivement, d’une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1060">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="63ca9-1061">Le <xref:System.Text.Encoding.GetByteCount%2A> méthode détermine le nombre d’octets entraînant le codage d’un jeu de caractères Unicode et la <xref:System.Text.Encoding.GetBytes%2A> méthode exécute l’encodage réel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1061">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="63ca9-1062">Le <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> méthode attend des conversions discrètes, par contraste avec le <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> (méthode), qui gère plusieurs conversions sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1062">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-1063">Plusieurs versions de <xref:System.Text.Encoding.GetByteCount%2A> et <xref:System.Text.Encoding.GetBytes%2A> sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1063">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="63ca9-1064">Voici quelques considérations sur la programmation pour l’utilisation de ces méthodes :</span><span class="sxs-lookup"><span data-stu-id="63ca9-1064">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="63ca9-1065">Votre application devrez encoder le nombre de caractères d’entrée à une page de codes et traiter les caractères à l’aide de plusieurs appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1065">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="63ca9-1066">Dans ce cas, vous devrez probablement mettre à jour d’état entre les appels, compte tenu de l’état est conservé par le <xref:System.Text.Encoder> de l’objet qui est utilisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1066">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="63ca9-1067">(Par exemple, une séquence de caractères qui inclut des paires de substitution peut se terminer par un caractère de substitution étendu.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1067">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="63ca9-1068">Le <xref:System.Text.Encoder> conserverons ce substitut afin qu’il peut être combiné avec un substitut faible au début d’un appel suivant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1068">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="63ca9-1069"><xref:System.Text.Encoding> ne pourra plus être en mesure de maintenir l’état, le caractère est envoyés à le <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1069"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="63ca9-1070">Si votre application gère des entrées de chaîne, vous devez utiliser la version de chaîne de <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1070">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="63ca9-1071">La version de mémoire tampon de caractères Unicode de <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> autorise certaines techniques rapides, en particulier avec les appels multiples à l’aide de la <xref:System.Text.Encoder> objet ou insérer dans des mémoires tampon existantes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1071">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="63ca9-1072">N’oubliez pas, toutefois, que cette version de la méthode est parfois dangereuse, étant donné que les pointeurs sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1072">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="63ca9-1073">Si votre application doit convertir une grande quantité de données, elle doit réutiliser la mémoire tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1073">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="63ca9-1074">Dans ce cas, le <xref:System.Text.Encoding.GetBytes%2A> version qui prend en charge les tableaux d’octets est le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1074">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="63ca9-1075">Envisagez d’utiliser le <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> méthode à la place de <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1075">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="63ca9-1076">La méthode de conversion convertit autant de données que possible et lève une exception si la mémoire tampon de sortie est trop petit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1076">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="63ca9-1077">Pour l’encodage d’un flux continu, cette méthode est souvent le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1077">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1078">L’exemple suivant détermine le nombre d’octets requis pour encoder une chaîne ou une plage de la chaîne, encode les caractères et affiche le nombre d’octets obtenue.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1078">The following example determines the number of bytes required to encode a string or a range in the string, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/VB/getbytes_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-1079"><paramref name="s" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1079"><paramref name="s" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="63ca9-1080">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1080">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1081"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1081"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-1082"><paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1082"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
 <span data-ttu-id="63ca9-1083">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1083">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1084"><paramref name="charIndex" /> et <paramref name="charCount" /> ne désignent pas une plage valide dans <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1084"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
 <span data-ttu-id="63ca9-1085">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1085">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1086"><paramref name="byteIndex" /> n'est pas un index valide dans <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1086"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="63ca9-1087"><paramref name="bytes" /> ne possède pas une capacité suffisante entre <paramref name="byteIndex" /> et la fin du tableau pour prendre en charge les octets obtenus.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1087"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="63ca9-1088">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1088">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-1089">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-1089">-and-</span></span>  
  
 <span data-ttu-id="63ca9-1090"><see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1090"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="63ca9-1091">En cas de substitution dans une classe dérivée, calcule le nombre de caractères produits par le décodage d'une séquence d'octets.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1091">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="63ca9-1092">Tableau d'octets contenant la séquence d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1092">The byte array containing the sequence of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="63ca9-1093">En cas de substitution dans une classe dérivée, calcule le nombre de caractères produits par le décodage de tous les octets du tableau d'octets spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1093">When overridden in a derived class, calculates the number of characters produced by decoding all the bytes in the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1094">Nombre de caractères produits par le décodage de la séquence d'octets spécifiée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1094">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1095">Pour calculer la taille exacte de tableau requise par <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> pour stocker les caractères obtenus, vous devez utiliser le <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1095">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> method.</span></span> <span data-ttu-id="63ca9-1096">Pour calculer la taille maximale du tableau, vous devez utiliser le <xref:System.Text.Encoding.GetMaxCharCount%28System.Int32%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1096">To calculate the maximum array size, you should use the <xref:System.Text.Encoding.GetMaxCharCount%28System.Int32%29> method.</span></span> <span data-ttu-id="63ca9-1097">Le <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> méthode permet généralement d’allocation de moins de mémoire, alors que le <xref:System.Text.Encoding.GetMaxCharCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1097">The <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="63ca9-1098">Le <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> méthode détermine le nombre de caractères entraînant le décodage d’une séquence d’octets et la <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> méthode effectue le décodage réel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1098">The <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> method determines how many characters result in decoding a sequence of bytes, and the  <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> method performs the actual decoding.</span></span> <span data-ttu-id="63ca9-1099">Le <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> méthode attend des conversions discrètes, par contraste avec le <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> (méthode), qui gère plusieurs passes sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1099">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-1100">Plusieurs versions de <xref:System.Text.Encoding.GetCharCount%2A> et <xref:System.Text.Encoding.GetChars%2A> sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1100">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="63ca9-1101">Voici quelques considérations sur la programmation pour l’utilisation de ces méthodes :</span><span class="sxs-lookup"><span data-stu-id="63ca9-1101">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="63ca9-1102">Votre application deviez décoder plusieurs octets d’entrée à partir d’une page de codes et traiter les octets à l’aide de plusieurs appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1102">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="63ca9-1103">Dans ce cas, vous devrez probablement mettre à jour d’état entre les appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1103">In this case, you probably need to maintain state between calls.</span></span>  
  
-   <span data-ttu-id="63ca9-1104">Si votre application gère les sorties de chaîne, vous devez utiliser le <xref:System.Text.Encoding.GetString%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1104">If your app handles string outputs, you should use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="63ca9-1105">Étant donné que cette méthode doit vérifier la longueur de chaîne et allouer une mémoire tampon, il est légèrement plus lente, mais résultant <xref:System.String> type est recommandée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1105">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="63ca9-1106">La version d’octet de <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> autorise certaines techniques rapides, en particulier avec plusieurs appels à des tampons de grande taille.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1106">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="63ca9-1107">N’oubliez pas, toutefois, que cette version de la méthode est parfois dangereuse, étant donné que les pointeurs sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1107">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="63ca9-1108">Si votre application doit convertir une grande quantité de données, elle doit réutiliser la mémoire tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1108">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="63ca9-1109">Dans ce cas, le [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > version qui prend en charge les caractères de sortie mémoires tampons est le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1109">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="63ca9-1110">Envisagez d’utiliser le <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> méthode à la place de <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1110">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="63ca9-1111">La méthode de conversion convertit autant de données que possible et lève une exception si la mémoire tampon de sortie est trop petit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1111">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="63ca9-1112">Pour le décodage d’un flux continu, cette méthode est souvent le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1112">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1113">L’exemple suivant encode une chaîne en un tableau d’octets, puis décode les octets en un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1113">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/VB/getchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-1114"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1114"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="63ca9-1115">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1115">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-1116">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-1116">-and-</span></span>  
  
 <span data-ttu-id="63ca9-1117"><see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1117"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.Encoding.GetChars" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(System::Byte* bytes, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="63ca9-1118">Pointeur du premier octet à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1118">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="63ca9-1119">Nombre d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1119">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="63ca9-1120">En cas de substitution dans une classe dérivée, calcule le nombre de caractères produits par le décodage d'une séquence d'octets commençant au pointeur d'octet spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1120">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1121">Nombre de caractères produits par le décodage de la séquence d'octets spécifiée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1121">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1122">Pour calculer la taille de tableau exact qui <xref:System.Text.Encoding.GetChars%2A> requiert pour stocker les caractères obtenus, vous devez utiliser le <xref:System.Text.Encoding.GetCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1122">To calculate the exact array size that <xref:System.Text.Encoding.GetChars%2A> requires to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="63ca9-1123">Pour calculer la taille maximale du tableau, utilisez le <xref:System.Text.Encoding.GetMaxCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1123">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="63ca9-1124">Le <xref:System.Text.Encoding.GetCharCount%2A> méthode permet généralement d’allocation de moins de mémoire, alors que le <xref:System.Text.Encoding.GetMaxCharCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1124">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="63ca9-1125">Le <xref:System.Text.Encoding.GetCharCount%2A> méthode détermine le nombre de caractères entraînant le décodage d’une séquence d’octets et la <xref:System.Text.Encoding.GetChars%2A> méthode effectue le décodage réel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1125">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="63ca9-1126">Le <xref:System.Text.Encoding.GetChars%2A> méthode attend des conversions discrètes, par contraste avec le <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> (méthode), qui gère plusieurs passes sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1126">The <xref:System.Text.Encoding.GetChars%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-1127">Plusieurs versions de <xref:System.Text.Encoding.GetCharCount%2A> et <xref:System.Text.Encoding.GetChars%2A> sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1127">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="63ca9-1128">Voici quelques considérations sur la programmation pour l’utilisation de ces méthodes :</span><span class="sxs-lookup"><span data-stu-id="63ca9-1128">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="63ca9-1129">Votre application deviez décoder plusieurs octets d’entrée à partir d’une page de codes et traiter les octets à l’aide de plusieurs appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1129">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="63ca9-1130">Dans ce cas, vous devrez probablement mettre à jour d’état entre les appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1130">In this case, you probably need to maintain state between calls.</span></span>  
  
-   <span data-ttu-id="63ca9-1131">Si votre application gère les sorties de chaîne, il est recommandé d’utiliser le <xref:System.Text.Encoding.GetString%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1131">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="63ca9-1132">Étant donné que cette méthode doit vérifier la longueur de chaîne et allouer une mémoire tampon, il est légèrement plus lente, mais résultant <xref:System.String> type est recommandée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1132">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="63ca9-1133">La version d’octet de <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> autorise certaines techniques rapides, en particulier avec plusieurs appels à des tampons de grande taille.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1133">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="63ca9-1134">N’oubliez pas, toutefois, que cette version de la méthode est parfois dangereuse, étant donné que les pointeurs sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1134">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="63ca9-1135">Si votre application doit convertir une grande quantité de données, elle doit réutiliser la mémoire tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1135">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="63ca9-1136">Dans ce cas, le [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > version qui prend en charge les caractères de sortie mémoires tampons est le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1136">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="63ca9-1137">Envisagez d’utiliser le <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> méthode à la place de <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1137">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="63ca9-1138">La méthode de conversion convertit autant de données que possible et lève une exception si la mémoire tampon de sortie est trop petit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1138">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="63ca9-1139">Pour le décodage d’un flux continu, cette méthode est souvent le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1139">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-1140"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1140"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-1141"><paramref name="count" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1141"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="63ca9-1142">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1142">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-1143">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-1143">-and-</span></span>  
  
 <span data-ttu-id="63ca9-1144"><see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1144"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="63ca9-1145">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1145">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="63ca9-1146">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1146">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Text.Encoding.GetChars" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public abstract int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="63ca9-1147">Tableau d'octets contenant la séquence d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1147">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="63ca9-1148">Index du premier octet à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1148">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="63ca9-1149">Nombre d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1149">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="63ca9-1150">En cas de substitution dans une classe dérivée, calcule le nombre de caractères produits par le décodage d'une séquence d'octets du tableau d'octets spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1150">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1151">Nombre de caractères produits par le décodage de la séquence d'octets spécifiée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1151">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1152">Pour calculer la taille exacte de tableau requise par <xref:System.Text.Encoding.GetChars%2A> pour stocker les caractères obtenus, vous devez utiliser le <xref:System.Text.Encoding.GetCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1152">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%2A> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="63ca9-1153">Pour calculer la taille maximale du tableau, utilisez le <xref:System.Text.Encoding.GetMaxCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1153">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="63ca9-1154">Le <xref:System.Text.Encoding.GetCharCount%2A> méthode permet généralement d’allocation de moins de mémoire, alors que le <xref:System.Text.Encoding.GetMaxCharCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1154">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="63ca9-1155">Le <xref:System.Text.Encoding.GetCharCount%2A> méthode détermine le nombre de caractères entraînant le décodage d’une séquence d’octets et la <xref:System.Text.Encoding.GetChars%2A> méthode effectue le décodage réel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1155">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="63ca9-1156">Le <xref:System.Text.Encoding.GetChars%2A> méthode attend des conversions discrètes, par contraste avec le <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> (méthode), qui gère plusieurs passes sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1156">The <xref:System.Text.Encoding.GetChars%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-1157">Plusieurs versions de <xref:System.Text.Encoding.GetCharCount%2A> et <xref:System.Text.Encoding.GetChars%2A> sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1157">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="63ca9-1158">Voici quelques considérations sur la programmation pour l’utilisation de ces méthodes :</span><span class="sxs-lookup"><span data-stu-id="63ca9-1158">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="63ca9-1159">Votre application deviez décoder plusieurs octets d’entrée à partir d’une page de codes et traiter les octets à l’aide de plusieurs appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1159">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="63ca9-1160">Dans ce cas, vous devrez probablement mettre à jour d’état entre les appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1160">In this case, you probably need to maintain state between calls.</span></span>  
  
-   <span data-ttu-id="63ca9-1161">Si votre application gère les sorties de chaîne, il est recommandé d’utiliser le <xref:System.Text.Encoding.GetString%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1161">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="63ca9-1162">Étant donné que cette méthode doit vérifier la longueur de chaîne et allouer une mémoire tampon, il est légèrement plus lente, mais résultant <xref:System.String> type est recommandée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1162">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="63ca9-1163">La version d’octet de <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> autorise certaines techniques rapides, en particulier avec plusieurs appels à des tampons de grande taille.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1163">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="63ca9-1164">N’oubliez pas, toutefois, que cette version de la méthode est parfois dangereuse, étant donné que les pointeurs sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1164">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="63ca9-1165">Si votre application doit convertir une grande quantité de données, elle doit réutiliser la mémoire tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1165">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="63ca9-1166">Dans ce cas, le [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > version qui prend en charge les caractères de sortie mémoires tampons est le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1166">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="63ca9-1167">Envisagez d’utiliser le <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> méthode à la place de <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1167">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="63ca9-1168">La méthode de conversion convertit autant de données que possible et lève une exception si la mémoire tampon de sortie est trop petit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1168">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="63ca9-1169">Pour le décodage d’un flux continu, cette méthode est souvent le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1169">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1170">L’exemple suivant convertit une chaîne d’un encodage à un autre.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1170">The following example converts a string from one encoding to another.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 <span data-ttu-id="63ca9-1171">L’exemple suivant encode une chaîne en un tableau d’octets, puis décode une plage d’octets en un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1171">The following example encodes a string into an array of bytes, and then decodes a range of the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CPP/getcharsic.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CS/getcharsic.cs#1)]
 [!code-vb[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/VB/getcharsic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-1172"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1172"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-1173"><paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1173"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="63ca9-1174">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1174">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1175"><paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1175"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="63ca9-1176">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1176">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-1177">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-1177">-and-</span></span>  
  
 <span data-ttu-id="63ca9-1178"><see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1178"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.Encoding.GetChars" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="63ca9-1179">En cas de substitution dans une classe dérivée, décode une séquence d'octets en jeu de caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1179">When overridden in a derived class, decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual char[] GetChars (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char[] GetChars(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As Byte()) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;char&gt; ^ GetChars(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="63ca9-1180">Tableau d'octets contenant la séquence d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1180">The byte array containing the sequence of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="63ca9-1181">En cas de substitution dans une classe dérivée, décode tous les octets du tableau d'octets spécifié en jeu de caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1181">When overridden in a derived class, decodes all the bytes in the specified byte array into a set of characters.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1182">Tableau de caractères contenant les résultats du décodage de la séquence d'octets spécifiée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1182">A character array containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1183"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Obtient les caractères à partir d’une séquence d’octets d’entrée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1183"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="63ca9-1184"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> est différent de celui <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> car <xref:System.Text.Encoding> attend des conversions discrètes, tandis que <xref:System.Text.Decoder> est conçu pour plusieurs passes sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1184"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-1185">Si les conversion des données seront disponibles uniquement dans les blocs séquentiels (par exemple, les données lues à partir d’un flux de données) ou si la quantité de données est tellement importante qu’elle doit être divisée en blocs plus petits, vous devez utiliser le <xref:System.Text.Decoder> ou <xref:System.Text.Encoder> fournie par le <xref:System.Text.Encoding.GetDecoder%2A> méthode ou la <xref:System.Text.Encoding.GetEncoder%2A> (méthode), respectivement, d’une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1185">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="63ca9-1186">**Remarque** cette méthode est destinée à opérer sur des caractères Unicode, pas sur des données binaires arbitraires, tels que des tableaux d’octets.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1186">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="63ca9-1187">Si vous avez besoin d’encoder des données arbitraires en texte, vous devez utiliser un protocole tel qu’uuencode, qui est implémentée par les méthodes telles que <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1187">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="63ca9-1188">Le <xref:System.Text.Encoding.GetCharCount%2A> méthode détermine le nombre de caractères entraînant le décodage d’une séquence d’octets et la <xref:System.Text.Encoding.GetChars%2A> méthode effectue le décodage réel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1188">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="63ca9-1189">Le <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> méthode attend des conversions discrètes, par contraste avec le <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> (méthode), qui gère plusieurs passes sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1189">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-1190">Plusieurs versions de <xref:System.Text.Encoding.GetCharCount%2A> et <xref:System.Text.Encoding.GetChars%2A> sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1190">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="63ca9-1191">Voici quelques considérations sur la programmation pour l’utilisation de ces méthodes :</span><span class="sxs-lookup"><span data-stu-id="63ca9-1191">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="63ca9-1192">Votre application deviez décoder plusieurs octets d’entrée à partir d’une page de codes et traiter les octets à l’aide de plusieurs appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1192">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="63ca9-1193">Dans ce cas, vous devrez probablement mettre à jour d’état entre les appels, étant donné que les séquences d’octets peuvent être interrompues lors du traitement par lots.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1193">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="63ca9-1194">(Par exemple, partie d’une séquence de déplacement ISO-2022 peut terminer un <xref:System.Text.Encoding.GetChars%2A> appeler et continuer au début de la prochaine <xref:System.Text.Encoding.GetChars%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1194">(For example, part of an ISO-2022 shift sequence may end one <xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next <xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="63ca9-1195"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> appellera le secours pour ces séquences incomplètes, mais <xref:System.Text.Decoder> mémorise ces séquences pour l’appel suivant.)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1195"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="63ca9-1196">Si votre application gère les sorties de chaîne, il est recommandé d’utiliser le <xref:System.Text.Encoding.GetString%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1196">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="63ca9-1197">Étant donné que cette méthode doit vérifier la longueur de chaîne et allouer une mémoire tampon, il est légèrement plus lente, mais résultant <xref:System.String> type est recommandée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1197">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="63ca9-1198">La version d’octet de <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> autorise certaines techniques rapides, en particulier avec plusieurs appels à des tampons de grande taille.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1198">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="63ca9-1199">N’oubliez pas, toutefois, que cette version de la méthode est parfois dangereuse, étant donné que les pointeurs sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1199">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="63ca9-1200">Si votre application doit convertir une grande quantité de données, elle doit réutiliser la mémoire tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1200">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="63ca9-1201">Dans ce cas, le [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > version qui prend en charge les caractères de sortie mémoires tampons est le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1201">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="63ca9-1202">Envisagez d’utiliser le <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> méthode à la place de <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1202">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="63ca9-1203">La méthode de conversion convertit autant de données que possible et lève une exception si la mémoire tampon de sortie est trop petit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1203">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="63ca9-1204">Pour le décodage d’un flux continu, cette méthode est souvent le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1204">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1205">L’exemple suivant encode une chaîne en un tableau d’octets, puis décode les octets en un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1205">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/VB/getchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-1206"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1206"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="63ca9-1207">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1207">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-1208">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-1208">-and-</span></span>  
  
 <span data-ttu-id="63ca9-1209"><see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1209"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(ReadOnlySpan&lt;System::Byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual char[] GetChars (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char[] GetChars(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As Byte(), index As Integer, count As Integer) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;char&gt; ^ GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="63ca9-1210">Tableau d'octets contenant la séquence d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1210">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="63ca9-1211">Index du premier octet à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1211">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="63ca9-1212">Nombre d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1212">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="63ca9-1213">En cas de substitution dans une classe dérivée, décode une séquence d'octets du tableau d'octets spécifié en jeu de caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1213">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into a set of characters.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1214">Tableau de caractères contenant les résultats du décodage de la séquence d'octets spécifiée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1214">A character array containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1215"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Obtient les caractères à partir d’une séquence d’octets d’entrée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1215"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="63ca9-1216"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> est différent de celui <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> car <xref:System.Text.Encoding> attend des conversions discrètes, tandis que <xref:System.Text.Decoder> est conçu pour plusieurs passes sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1216"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-1217">Si les conversion des données seront disponibles uniquement dans les blocs séquentiels (par exemple, les données lues à partir d’un flux de données) ou si la quantité de données est tellement importante qu’elle doit être divisée en blocs plus petits, vous devez utiliser le <xref:System.Text.Decoder> ou <xref:System.Text.Encoder> fournie par le <xref:System.Text.Encoding.GetDecoder%2A> méthode ou la <xref:System.Text.Encoding.GetEncoder%2A> (méthode), respectivement, d’une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1217">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="63ca9-1218">**Remarque** cette méthode est destinée à opérer sur des caractères Unicode, pas sur des données binaires arbitraires, tels que des tableaux d’octets.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1218">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="63ca9-1219">Si vous avez besoin d’encoder des données arbitraires en texte, vous devez utiliser un protocole tel qu’uuencode, qui est implémentée par les méthodes telles que <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1219">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="63ca9-1220">Le <xref:System.Text.Encoding.GetCharCount%2A> méthode détermine le nombre de caractères entraînant le décodage d’une séquence d’octets et la <xref:System.Text.Encoding.GetChars%2A> méthode effectue le décodage réel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1220">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="63ca9-1221">Le <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> méthode attend des conversions discrètes, par contraste avec le <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> (méthode), qui gère plusieurs passes sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1221">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-1222">Plusieurs versions de <xref:System.Text.Encoding.GetCharCount%2A> et <xref:System.Text.Encoding.GetChars%2A> sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1222">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="63ca9-1223">Voici quelques considérations sur la programmation pour l’utilisation de ces méthodes :</span><span class="sxs-lookup"><span data-stu-id="63ca9-1223">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="63ca9-1224">Votre application deviez décoder plusieurs octets d’entrée à partir d’une page de codes et traiter les octets à l’aide de plusieurs appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1224">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="63ca9-1225">Dans ce cas, vous devrez probablement mettre à jour d’état entre les appels, étant donné que les séquences d’octets peuvent être interrompues lors du traitement par lots.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1225">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="63ca9-1226">(Par exemple, partie d’une séquence de déplacement ISO-2022 peut terminer un <xref:System.Text.Encoding.GetChars%2A> appeler et continuer au début de la prochaine <xref:System.Text.Encoding.GetChars%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1226">(For example, part of an ISO-2022 shift sequence may end one <xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next <xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="63ca9-1227"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> appellera le secours pour ces séquences incomplètes, mais <xref:System.Text.Decoder> mémorise ces séquences pour l’appel suivant.)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1227"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="63ca9-1228">Si votre application gère les sorties de chaîne, il est recommandé d’utiliser le <xref:System.Text.Encoding.GetString%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1228">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="63ca9-1229">Étant donné que cette méthode doit vérifier la longueur de chaîne et allouer une mémoire tampon, il est légèrement plus lente, mais résultant <xref:System.String> type est recommandée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1229">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="63ca9-1230">La version d’octet de <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> autorise certaines techniques rapides, en particulier avec plusieurs appels à des tampons de grande taille.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1230">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="63ca9-1231">N’oubliez pas, toutefois, que cette version de la méthode est parfois dangereuse, étant donné que les pointeurs sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1231">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="63ca9-1232">Si votre application doit convertir une grande quantité de données, elle doit réutiliser la mémoire tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1232">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="63ca9-1233">Dans ce cas, le [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > version qui prend en charge les caractères de sortie mémoires tampons est le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1233">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="63ca9-1234">Envisagez d’utiliser le <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> méthode à la place de <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1234">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="63ca9-1235">La méthode de conversion convertit autant de données que possible et lève une exception si la mémoire tampon de sortie est trop petit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1235">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="63ca9-1236">Pour le décodage d’un flux continu, cette méthode est souvent le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1236">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1237">L’exemple suivant encode une chaîne en un tableau d’octets, puis décode une plage d’octets en un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1237">The following example encodes a string into an array of bytes, and then decodes a range of the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CPP/getcharsic.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CS/getcharsic.cs#1)]
 [!code-vb[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/VB/getcharsic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-1238"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1238"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-1239"><paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1239"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="63ca9-1240">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1240">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1241"><paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1241"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="63ca9-1242">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1242">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-1243">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-1243">-and-</span></span>  
  
 <span data-ttu-id="63ca9-1244"><see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1244"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="63ca9-1245">Pointeur du premier octet à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1245">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="63ca9-1246">Nombre d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1246">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="63ca9-1247">Pointeur de l'emplacement où commencer l'écriture du jeu de caractères obtenu.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1247">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="63ca9-1248">Nombre maximal de caractères à écrire.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1248">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="63ca9-1249">En cas de substitution dans une classe dérivée, décode une séquence d'octets commençant au pointeur d'octet spécifié en jeu de caractères stockés à partir du pointeur de caractère spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1249">When overridden in a derived class, decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1250">Nombre réel de caractères écrits à l'emplacement indiqué par le paramètre <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1250">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1251">Pour calculer la taille de tableau exact qui <xref:System.Text.Encoding.GetChars%2A> requiert pour stocker les caractères obtenus, vous devez utiliser le <xref:System.Text.Encoding.GetCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1251">To calculate the exact array size that <xref:System.Text.Encoding.GetChars%2A> requires to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="63ca9-1252">Pour calculer la taille maximale du tableau, utilisez le <xref:System.Text.Encoding.GetMaxCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1252">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="63ca9-1253">Le <xref:System.Text.Encoding.GetCharCount%2A> méthode permet généralement d’allocation de moins de mémoire, alors que le <xref:System.Text.Encoding.GetMaxCharCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1253">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="63ca9-1254"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Obtient les caractères à partir d’une séquence d’octets d’entrée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1254"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="63ca9-1255"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> est différent de celui <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> car <xref:System.Text.Encoding> attend des conversions discrètes, tandis que <xref:System.Text.Decoder> est conçu pour plusieurs passes sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1255"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-1256">Si les conversion des données seront disponibles uniquement dans les blocs séquentiels (par exemple, les données lues à partir d’un flux de données) ou si la quantité de données est tellement importante qu’elle doit être divisée en blocs plus petits, vous devez utiliser le <xref:System.Text.Decoder> ou <xref:System.Text.Encoder> objet fourni par le <xref:System.Text.Encoding.GetDecoder%2A> ou <xref:System.Text.Encoding.GetEncoder%2A> (méthode), respectivement, d’une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1256">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.Encoding.GetDecoder%2A> or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="63ca9-1257">**Remarque** cette méthode est destinée à opérer sur des caractères Unicode, pas sur des données binaires arbitraires, tels que des tableaux d’octets.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1257">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="63ca9-1258">Si vous avez besoin d’encoder des données arbitraires en texte, vous devez utiliser un protocole tel qu’uuencode, qui est implémentée par les méthodes telles que <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1258">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="63ca9-1259">Le <xref:System.Text.Encoding.GetCharCount%2A> méthode détermine le nombre de caractères entraînant le décodage d’une séquence d’octets et la <xref:System.Text.Encoding.GetChars%2A> méthode effectue le décodage réel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1259">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="63ca9-1260">Le <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> méthode attend des conversions discrètes, par contraste avec le <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> (méthode), qui gère plusieurs passes sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1260">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-1261">Plusieurs versions de <xref:System.Text.Encoding.GetCharCount%2A> et <xref:System.Text.Encoding.GetChars%2A> sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1261">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="63ca9-1262">Voici quelques considérations sur la programmation pour l’utilisation de ces méthodes :</span><span class="sxs-lookup"><span data-stu-id="63ca9-1262">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="63ca9-1263">Votre application deviez décoder plusieurs octets d’entrée à partir d’une page de codes et traiter les octets à l’aide de plusieurs appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1263">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="63ca9-1264">Dans ce cas, vous devrez probablement mettre à jour d’état entre les appels, étant donné que les séquences d’octets peuvent être interrompues lors du traitement par lots.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1264">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="63ca9-1265">(Par exemple, partie d’une séquence de déplacement ISO-2022 peut terminer un <xref:System.Text.Encoding.GetChars%2A> appeler et continuer au début de la prochaine <xref:System.Text.Encoding.GetChars%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1265">(For example, part of an ISO-2022 shift sequence may end one <xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next <xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="63ca9-1266"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> appellera le secours pour ces séquences incomplètes, mais <xref:System.Text.Decoder> mémorise ces séquences pour l’appel suivant.)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1266"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="63ca9-1267">Si votre application gère les sorties de chaîne, la <xref:System.Text.Encoding.GetString%2A> méthode est recommandée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1267">If your app handles string outputs, the <xref:System.Text.Encoding.GetString%2A> method is recommended.</span></span> <span data-ttu-id="63ca9-1268">Étant donné que cette méthode doit vérifier la longueur de chaîne et allouer une mémoire tampon, il est légèrement plus lente, mais résultant <xref:System.String> type est recommandée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1268">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="63ca9-1269">La version d’octet de <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> autorise certaines techniques rapides, en particulier avec plusieurs appels à des tampons de grande taille.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1269">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="63ca9-1270">N’oubliez pas, toutefois, que cette version de la méthode est parfois dangereuse, étant donné que les pointeurs sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1270">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="63ca9-1271">Si votre application doit convertir une grande quantité de données, elle doit réutiliser la mémoire tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1271">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="63ca9-1272">Dans ce cas, le [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > version qui prend en charge les caractères de sortie mémoires tampons est le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1272">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="63ca9-1273">Envisagez d’utiliser le <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> méthode à la place de <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1273">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="63ca9-1274">La méthode de conversion convertit autant de données que possible et lève une exception si la mémoire tampon de sortie est trop petit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1274">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="63ca9-1275">Pour le décodage d’un flux continu, cette méthode est souvent le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1275">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-1276"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1276"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="63ca9-1277">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1277">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1278"><paramref name="chars" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1278"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-1279"><paramref name="byteCount" /> ou <paramref name="charCount" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1279"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="63ca9-1280"><paramref name="charCount" /> est inférieur au nombre de caractères obtenus.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1280"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="63ca9-1281">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1281">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-1282">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-1282">-and-</span></span>  
  
 <span data-ttu-id="63ca9-1283"><see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1283"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="63ca9-1284">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1284">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="63ca9-1285">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1285">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public abstract int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="63ca9-1286">Tableau d'octets contenant la séquence d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1286">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="63ca9-1287">Index du premier octet à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1287">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="63ca9-1288">Nombre d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1288">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="63ca9-1289">Tableau de caractères destiné à contenir le jeu de caractères obtenu.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1289">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="63ca9-1290">Index auquel commencer l'écriture du jeu de caractères obtenu.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1290">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="63ca9-1291">En cas de substitution dans une classe dérivée, décode une séquence d'octets du tableau d'octets spécifié en tableau de caractères spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1291">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1292">Nombre réel de caractères écrits dans <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1292">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1293">Pour calculer la taille exacte de tableau requise par <xref:System.Text.Encoding.GetChars%2A> pour stocker les caractères obtenus, vous devez utiliser le <xref:System.Text.Encoding.GetCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1293">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%2A> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="63ca9-1294">Pour calculer la taille maximale du tableau, utilisez le <xref:System.Text.Encoding.GetMaxCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1294">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="63ca9-1295">Le <xref:System.Text.Encoding.GetCharCount%2A> méthode permet généralement d’allocation de moins de mémoire, alors que le <xref:System.Text.Encoding.GetMaxCharCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1295">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="63ca9-1296">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType > Obtient des caractères d’une séquence d’octets d’entrée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1296">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="63ca9-1297">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType > est différente de celle <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> car <xref:System.Text.Encoding> attend des conversions discrètes, tandis que <xref:System.Text.Decoder> est conçu pour plusieurs passes sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1297">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-1298">Si les conversion des données seront disponibles uniquement dans les blocs séquentiels (par exemple, les données lues à partir d’un flux de données) ou si la quantité de données est tellement importante qu’elle doit être divisée en blocs plus petits, vous devez utiliser le <xref:System.Text.Decoder> ou <xref:System.Text.Encoder> fournie par le <xref:System.Text.Encoding.GetDecoder%2A> méthode ou la <xref:System.Text.Encoding.GetEncoder%2A> (méthode), respectivement, d’une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1298">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="63ca9-1299">**Remarque** cette méthode est destinée à opérer sur des caractères Unicode, pas sur des données binaires arbitraires, tels que des tableaux d’octets.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1299">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="63ca9-1300">Si vous avez besoin d’encoder des données arbitraires en texte, vous devez utiliser un protocole tel qu’uuencode, qui est implémentée par les méthodes telles que <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1300">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="63ca9-1301">Le <xref:System.Text.Encoding.GetCharCount%2A> méthode détermine le nombre de caractères entraînant le décodage d’une séquence d’octets et la <xref:System.Text.Encoding.GetChars%2A> méthode effectue le décodage réel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1301">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="63ca9-1302">Le <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> méthode attend des conversions discrètes, par contraste avec le <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> (méthode), qui gère plusieurs passes sur un flux d’entrée unique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1302">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="63ca9-1303">Plusieurs versions de <xref:System.Text.Encoding.GetCharCount%2A> et <xref:System.Text.Encoding.GetChars%2A> sont pris en charge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1303">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="63ca9-1304">Voici quelques considérations sur la programmation pour l’utilisation de ces méthodes :</span><span class="sxs-lookup"><span data-stu-id="63ca9-1304">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="63ca9-1305">Votre application deviez décoder plusieurs octets d’entrée à partir d’une page de codes et traiter les octets à l’aide de plusieurs appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1305">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="63ca9-1306">Dans ce cas, vous devrez probablement mettre à jour d’état entre les appels, étant donné que les séquences d’octets peuvent être interrompues lors du traitement par lots.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1306">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="63ca9-1307">(Par exemple, partie d’une séquence de déplacement ISO-2022 peut terminer une [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A > appelez et continuer au début de la prochaine [\], Int32, Int32, Char\<référence croisée : System.Text.Encoding.GetChars%2A > appeler.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1307">(For example, part of an ISO-2022 shift sequence may end one [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="63ca9-1308">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType > appellera le secours pour ces séquences incomplètes, mais <xref:System.Text.Decoder> mémorise ces séquences pour l’appel suivant.)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1308">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="63ca9-1309">Si votre application gère les sorties de chaîne, la <xref:System.Text.Encoding.GetString%2A> méthode est recommandée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1309">If your app handles string outputs, the <xref:System.Text.Encoding.GetString%2A> method is recommended.</span></span> <span data-ttu-id="63ca9-1310">Étant donné que cette méthode doit vérifier la longueur de chaîne et allouer une mémoire tampon, il est légèrement plus lente, mais résultant <xref:System.String> type est recommandée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1310">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="63ca9-1311">La version d’octet de <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> autorise certaines techniques rapides, en particulier avec plusieurs appels à des tampons de grande taille.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1311">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="63ca9-1312">N’oubliez pas, toutefois, que cette version de la méthode est parfois dangereuse, étant donné que les pointeurs sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1312">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="63ca9-1313">Si votre application doit convertir une grande quantité de données, elle doit réutiliser la mémoire tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1313">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="63ca9-1314">Dans ce cas, le [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > version qui prend en charge les caractères de sortie mémoires tampons est le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1314">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="63ca9-1315">Envisagez d’utiliser le <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> méthode à la place de <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1315">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="63ca9-1316">La méthode de conversion convertit autant de données que possible et lève une exception si la mémoire tampon de sortie est trop petit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1316">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="63ca9-1317">Pour le décodage d’un flux continu, cette méthode est souvent le meilleur choix.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1317">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1318">L’exemple suivant convertit une chaîne d’un encodage à un autre.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1318">The following example converts a string from one encoding to another.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 <span data-ttu-id="63ca9-1319">L’exemple suivant encode une chaîne en un tableau d’octets, puis décode une plage d’octets en un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1319">The following example encodes a string into an array of bytes, and then decodes a range of the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CPP/getcharsic.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CS/getcharsic.cs#1)]
 [!code-vb[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/VB/getcharsic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-1320"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1320"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="63ca9-1321">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1321">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1322"><paramref name="chars" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1322"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-1323"><paramref name="byteIndex" />, <paramref name="byteCount" /> ou <paramref name="charIndex" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1323"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
 <span data-ttu-id="63ca9-1324">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1324">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1325"><paramref name="byteindex" /> et <paramref name="byteCount" /> ne désignent pas une plage valide dans <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1325"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
 <span data-ttu-id="63ca9-1326">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1326">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1327"><paramref name="charIndex" /> n'est pas un index valide dans <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1327"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="63ca9-1328"><paramref name="chars" /> ne possède pas une capacité suffisante entre <paramref name="charIndex" /> et la fin du tableau pour prendre en charge les caractères obtenus.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1328"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="63ca9-1329">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1329">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-1330">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-1330">-and-</span></span>  
  
 <span data-ttu-id="63ca9-1331"><see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1331"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public virtual System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Decoder ^ GetDecoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63ca9-1332">En cas de substitution dans une classe dérivée, obtient un décodeur qui convertit une séquence d'octets encodée en séquence de caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1332">When overridden in a derived class, obtains a decoder that converts an encoded sequence of bytes into a sequence of characters.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1333"><see cref="T:System.Text.Decoder" /> qui convertit une séquence d'octets encodée en une séquence de caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1333">A <see cref="T:System.Text.Decoder" /> that converts an encoded sequence of bytes into a sequence of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1334">Le <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> méthode convertit des blocs d’octets en blocs séquentiels de caractères, d’une manière similaire à la <xref:System.Text.Encoding.GetChars%2A> méthode de cette classe.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1334">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.Encoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="63ca9-1335">Toutefois, un <xref:System.Text.Decoder> conserve les informations d’état entre les appels, de sorte qu’il peut décoder les séquences d’octets qui s’étendent sur des blocs.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1335">However, a <xref:System.Text.Decoder> maintains state information between calls so it correctly decodes byte sequences that span blocks.</span></span> <span data-ttu-id="63ca9-1336">Le <xref:System.Text.Decoder> également conserve les octets de fin à la fin des blocs de données et les octets de fin dans la prochaine opération de décodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1336">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="63ca9-1337">Par conséquent, <xref:System.Text.Encoding.GetDecoder%2A> et <xref:System.Text.Encoding.GetEncoder%2A> sont utiles pour la transmission réseau et les opérations de fichiers, car celles-ci traitent souvent des blocs de données au lieu d’un flux de données complète.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1337">Therefore, <xref:System.Text.Encoding.GetDecoder%2A> and <xref:System.Text.Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="63ca9-1338">L’implémentation par défaut retourne un <see cref="T:System.Text.Decoder" /> qui appelle le <see cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" /> et <see cref="M:System.Text.Encoding.GetChars(System.Byte[])" /> méthodes actuelles <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1338">The default implementation returns a <see cref="T:System.Text.Decoder" /> that calls the <see cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" /> and <see cref="M:System.Text.Encoding.GetChars(System.Byte[])" /> methods of the current <see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="63ca9-1339">Vous devez substituer cette méthode pour retourner un <see cref="T:System.Text.Decoder" /> qui conserve son état entre les appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1339">You must override this method to return a <see cref="T:System.Text.Decoder" /> that maintains its state between calls.</span></span></para>
        </block>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoder ^ GetEncoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63ca9-1340">En cas de substitution dans une classe dérivée, obtient un encodeur qui convertit une séquence de caractères Unicode en séquence d'octets encodée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1340">When overridden in a derived class, obtains an encoder that converts a sequence of Unicode characters into an encoded sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1341"><see cref="T:System.Text.Encoder" /> qui convertit une séquence de caractères Unicode en une séquence d'octets encodée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1341">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into an encoded sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1342">Le <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> méthode convertit des blocs de caractères en blocs séquentiels d’octets, d’une manière similaire à la <xref:System.Text.Encoding.GetBytes%2A> méthode de cette classe.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1342">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.Encoding.GetBytes%2A> method of this class.</span></span> <span data-ttu-id="63ca9-1343">Toutefois, un <xref:System.Text.Encoder> conserve les informations d’état entre les appels et il encode correctement les séquences de caractères qui s’étendent sur des blocs.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1343">However, a <xref:System.Text.Encoder> maintains state information between calls so it correctly encodes character sequences that span blocks.</span></span> <span data-ttu-id="63ca9-1344">Le <xref:System.Text.Encoder> également conserve à la fin des caractères à la fin des blocs de données et utilise les caractères de fin dans la prochaine opération de codage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1344">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="63ca9-1345">Par exemple, un bloc de données peut se terminer par un substitut étendu non apparié, et le substitut faible correspondant peut être dans le bloc de données suivant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1345">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="63ca9-1346">Par conséquent, <xref:System.Text.Encoding.GetDecoder%2A> et <xref:System.Text.Encoding.GetEncoder%2A> sont utiles pour la transmission réseau et les opérations de fichiers, car celles-ci traitent souvent des blocs de données au lieu d’un flux de données complète.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1346">Therefore, <xref:System.Text.Encoding.GetDecoder%2A> and <xref:System.Text.Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="63ca9-1347">L’implémentation par défaut retourne un <see cref="T:System.Text.Encoder" /> qui appelle le <see cref="M:System.Text.Encoding.GetByteCount(System.Char[])" /> et <see cref="M:System.Text.Encoding.GetBytes(System.Char[])" /> méthodes actuelles <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1347">The default implementation returns a <see cref="T:System.Text.Encoder" /> that calls the <see cref="M:System.Text.Encoding.GetByteCount(System.Char[])" /> and <see cref="M:System.Text.Encoding.GetBytes(System.Char[])" /> methods of the current <see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="63ca9-1348">Vous devez substituer cette méthode pour retourner un <see cref="T:System.Text.Encoder" /> qui conserve son état entre les appels.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1348">You must override this method to return a <see cref="T:System.Text.Encoder" /> that maintains its state between calls.</span></span></para>
        </block>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="63ca9-1349">Retourne un encodage pour la page de codes spécifiée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1349">Returns an encoding for the specified code page.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codepage"><span data-ttu-id="63ca9-1350">Identificateur de la page de codes de l'encodage préféré.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1350">The code page identifier of the preferred encoding.</span></span> <span data-ttu-id="63ca9-1351">Les valeurs possibles apparaissent dans la colonne Page de codes de la table qui s'affiche dans la rubrique de la classe <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1351">Possible values are listed in the Code Page column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span></span>  
  
 <span data-ttu-id="63ca9-1352">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1352">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1353">0 (zéro) pour utiliser l'encodage par défaut.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1353">0 (zero), to use the default encoding.</span></span></param>
        <summary><span data-ttu-id="63ca9-1354">Retourne l'encodage associé à l'identificateur de page de codes spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1354">Returns the encoding associated with the specified code page identifier.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1355">Encodage associé à la page de codes spécifiée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1355">The encoding that is associated with the specified code page.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1356">Le Gestionnaire de secours varie selon le type de codage `codepage`.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1356">The fallback handler depends on the encoding type of `codepage`.</span></span> <span data-ttu-id="63ca9-1357">Si `codepage` est le jeu de caractères code page ou sur deux octets (DBCS) encodage, un gestionnaire de secours la mieux adapté est utilisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1357">If `codepage` is a code page or double-byte character set (DBCS) encoding, a best-fit fallback handler is used.</span></span> <span data-ttu-id="63ca9-1358">Sinon, un gestionnaire de secours de remplacement est utilisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1358">Otherwise, a replacement fallback handler is used.</span></span> <span data-ttu-id="63ca9-1359">Ces gestionnaires de secours n’est peut-être pas appropriés pour votre application.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1359">These fallback handlers may not be appropriate for your app.</span></span> <span data-ttu-id="63ca9-1360">Pour spécifier le Gestionnaire de secours utilisé par l’encodage spécifié par `codepage`, vous pouvez appeler la <xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> de surcharge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1360">To specify the fallback handler used by the encoding specified by `codepage`, you can call the <xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> overload.</span></span>  
  
 <span data-ttu-id="63ca9-1361">Le <xref:System.Text.Encoding.GetEncoding%2A> méthode s’appuie sur la plateforme sous-jacente pour prendre en charge la plupart des pages de codes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1361">The <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="63ca9-1362">Toutefois, le .NET Framework prend en charge certains encodages en mode natif.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1362">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="63ca9-1363">Pour obtenir la liste des pages de codes, consultez la <xref:System.Text.Encoding> rubrique de la classe.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1363">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="63ca9-1364">Vous pouvez également appeler le <xref:System.Text.Encoding.GetEncodings%2A> méthode pour obtenir un tableau de <xref:System.Text.EncodingInfo> objets qui contient des informations sur tous les encodages.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1364">Alternatively, you can call the <xref:System.Text.Encoding.GetEncodings%2A> method to get an array of <xref:System.Text.EncodingInfo> objects that contains information about all encodings.</span></span>  
  
 <span data-ttu-id="63ca9-1365">Outre les encodages pris en charge intrinsèquement sur une version de plateforme spécifique du .NET Framework, le <xref:System.Text.Encoding.GetEncoding%2A> méthode retourne les encodages supplémentaires qui sont rendues disponibles par l’inscription d’un <xref:System.Text.EncodingProvider> objet.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1365">In addition to the encodings that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="63ca9-1366">Si le même que celui qui a été enregistré par plusieurs <xref:System.Text.EncodingProvider> des objets, cette méthode retourne la dernière inscrit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1366">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  

<span data-ttu-id="63ca9-1367">Vous pouvez également fournir une valeur de 0 pour le `codepage` argument.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1367">You can also supply a value of 0 for the `codepage` argument.</span></span> <span data-ttu-id="63ca9-1368">Son comportement précis dépend si les encodages rendues disponibles en inscrivant un <xref:System.Text.EncodingProvider> objet :</span><span class="sxs-lookup"><span data-stu-id="63ca9-1368">Its precise behavior depends on whether any encodings have been made available by registering an <xref:System.Text.EncodingProvider> object:</span></span>

- <span data-ttu-id="63ca9-1369">Si un ou plusieurs fournisseurs de codage ont été inscrite, elle retourne l’encodage du dernier fournisseur inscrit a choisi de retourner d’encodage lorsque le <xref:System.Text.Encoding.GetEncoding%2A> méthode est passée un `codepage` l’argument 0.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1369">If one or more encoding providers have been registered, it returns the encoding of the last registered provider that has chosen to return a encoding when the <xref:System.Text.Encoding.GetEncoding%2A> method is passed a `codepage` argument of 0.</span></span>     

- <span data-ttu-id="63ca9-1370">Sur le .NET Framework, si aucun encodage fournisseur a été enregistré, si le <xref:System.Text.CodePagesEncodingProvider> est le fournisseur d’encodage enregistré, ou si aucun fournisseur d’encodage inscrit ne gère un `codepage` valeur égale à 0, elle retourne la page de codes active le système d’exploitation.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1370">On the .NET Framework, if no encoding provider has been registered, if the <xref:System.Text.CodePagesEncodingProvider> is the registered encoding provider, or if no registered encoding provider handles a `codepage` value of 0, it returns the operating system's active code page.</span></span> <span data-ttu-id="63ca9-1371">Pour déterminer la page de codes active sur les systèmes Windows, appelez Windows [GetACP](http://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) (fonction) du .NET Framework sur le bureau Windows.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1371">To determine the active code page on Windows systems, call the Windows [GetACP](http://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) function from the .NET Framework on the Windows desktop.</span></span>

- <span data-ttu-id="63ca9-1372">Sur .NET Core, si aucun fournisseur d’encodage n’a pas été inscrit ou si aucun fournisseur d’encodage inscrit ne gère un `codepage` valeur égale à 0, elle retourne le <xref:System.Text.UTF8Encoding>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1372">On .NET Core, if no encoding provider has been registered or if no registered encoding provider handles a `codepage` value of 0, it returns the <xref:System.Text.UTF8Encoding>.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="63ca9-1373">Du code non pris en charge des pages cause une <xref:System.ArgumentException> levée, alors que d’autres provoquent un <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1373">Some unsupported code pages cause an <xref:System.ArgumentException> to be thrown, whereas others cause a <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="63ca9-1374">Par conséquent, votre code doit intercepter toutes les exceptions répertoriées dans la section Exceptions.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1374">Therefore, your code must catch all exceptions indicated in the Exceptions section.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63ca9-1375">Les pages de codes ANSI peuvent être différents sur des ordinateurs différents et peuvent changer à un seul ordinateur, entraînant une altération des données.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1375">The ANSI code pages can be different on different computers and can change on a single computer, leading to data corruption.</span></span> <span data-ttu-id="63ca9-1376">Pour cette raison, si la page de codes active est une page de codes ANSI, codage et décodage des données à l’aide de la page de codes par défaut retournée par `Encoding.GetEncoding(0)` n’est pas recommandée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1376">For this reason, if the active code page is an ANSI code page, encoding and decoding data using the default code page returned by `Encoding.GetEncoding(0)` is not recommended.</span></span> <span data-ttu-id="63ca9-1377">Pour obtenir des résultats plus cohérents, vous devez utiliser un encodage Unicode, tel que UTF-8 (page de codes 65001) ou UTF-16, au lieu d’une page de codes spécifique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1377">For the most consistent results, you should use a Unicode encoding, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span>  
  
 <span data-ttu-id="63ca9-1378"><xref:System.Text.Encoding.GetEncoding%2A> Retourne une instance mise en cache avec les paramètres par défaut.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1378"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="63ca9-1379">Vous devez utiliser les constructeurs de classes dérivées pour obtenir une instance avec des paramètres différents.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1379">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="63ca9-1380">Par exemple, la <xref:System.Text.UTF32Encoding> classe fournit un constructeur qui vous permet d’activer la détection d’erreurs.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1380">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  

   
  
## Examples  
 <span data-ttu-id="63ca9-1381">L’exemple suivant obtient deux instances du même encodage (une par page de codes) et une autre par nom et vérifie leur égalité.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1381">The following example gets two instances of the same encoding (one by code page and another by name), and checks their equality.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-1382"><paramref name="codepage" /> est inférieur à 0 ou supérieur à 65535.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1382"><paramref name="codepage" /> is less than zero or greater than 65535.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="63ca9-1383"><paramref name="codepage" /> n'est pas pris en charge par la plateforme sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1383"><paramref name="codepage" /> is not supported by the underlying platform.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="63ca9-1384"><paramref name="codepage" /> n'est pas pris en charge par la plateforme sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1384"><paramref name="codepage" /> is not supported by the underlying platform.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="63ca9-1385">Nom de la page de codes de l'encodage préféré.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1385">The code page name of the preferred encoding.</span></span> <span data-ttu-id="63ca9-1386">Toute valeur retournée par la propriété <see cref="P:System.Text.Encoding.WebName" /> est valide.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1386">Any value returned by the <see cref="P:System.Text.Encoding.WebName" /> property is valid.</span></span> <span data-ttu-id="63ca9-1387">Les valeurs possibles apparaissent dans la colonne Nom de la table qui s'affiche dans la rubrique de la classe <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1387">Possible values are listed in the Name column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span></span></param>
        <summary><span data-ttu-id="63ca9-1388">Retourne l'encodage associé au nom de la page de codes spécifiée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1388">Returns the encoding associated with the specified code page name.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1389">Encodage associé à la page de codes spécifiée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1389">The encoding  associated with the specified code page.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1390">Le Gestionnaire de secours varie selon le type de codage `name`.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1390">The fallback handler depends on the encoding type of `name`.</span></span> <span data-ttu-id="63ca9-1391">Si `name` est le jeu de caractères code page ou sur deux octets (DBCS) encodage, un gestionnaire de secours la mieux adapté est utilisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1391">If `name` is a code page or double-byte character set (DBCS) encoding, a best-fit fallback handler is used.</span></span> <span data-ttu-id="63ca9-1392">Sinon, un gestionnaire de secours de remplacement est utilisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1392">Otherwise, a replacement fallback handler is used.</span></span> <span data-ttu-id="63ca9-1393">Ces gestionnaires de secours n’est peut-être pas appropriés pour votre application.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1393">These fallback handlers may not be appropriate for your app.</span></span> <span data-ttu-id="63ca9-1394">Pour spécifier le Gestionnaire de secours utilisé par l’encodage spécifié par `name`, vous pouvez appeler la <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> de surcharge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1394">To specify the fallback handler used by the encoding specified by `name`, you can call the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> overload.</span></span>  
  
 <span data-ttu-id="63ca9-1395">Le <xref:System.Text.Encoding.GetEncoding%2A> méthode s’appuie sur la plateforme sous-jacente pour prendre en charge la plupart des pages de codes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1395">The <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="63ca9-1396">Toutefois, le .NET Framework prend en charge certains encodages en mode natif.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1396">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="63ca9-1397">Pour obtenir la liste des pages de codes, consultez la <xref:System.Text.Encoding> rubrique de la classe.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1397">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="63ca9-1398">Vous pouvez également appeler le <xref:System.Text.Encoding.GetEncodings%2A> méthode pour obtenir un tableau de <xref:System.Text.EncodingInfo> objets qui contient des informations sur tous les encodages.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1398">Alternatively, you can call the <xref:System.Text.Encoding.GetEncodings%2A> method to get an array of <xref:System.Text.EncodingInfo> objects that contains information about all encodings.</span></span> 
  
 <span data-ttu-id="63ca9-1399">Outre les encodages pris en charge intrinsèquement sur une version de plateforme spécifique du .NET Framework, le <xref:System.Text.Encoding.GetEncoding%2A> méthode retourne les encodages supplémentaires qui sont rendues disponibles par l’inscription d’un <xref:System.Text.EncodingProvider> objet.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1399">In addition to the encodings that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="63ca9-1400">Si le même que celui qui a été enregistré par plusieurs <xref:System.Text.EncodingProvider> des objets, cette méthode retourne la dernière inscrit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1400">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  
   
> [!NOTE]
>  <span data-ttu-id="63ca9-1401">Les pages de codes ANSI peuvent être différentes sur des ordinateurs différents, ou peuvent être modifiées pour un seul ordinateur, entraînant une altération des données.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1401">The ANSI code pages can be different on different computers, or can be changed for a single computer, leading to data corruption.</span></span> <span data-ttu-id="63ca9-1402">Pour obtenir des résultats plus cohérents, vous devez utiliser Unicode, tel que UTF-8 (page de codes 65001) ou UTF-16, au lieu d’une page de codes spécifique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1402">For the most consistent results, you should use Unicode, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span>  
 
  
 <span data-ttu-id="63ca9-1403"><xref:System.Text.Encoding.GetEncoding%2A> Retourne une instance mise en cache avec les paramètres par défaut.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1403"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="63ca9-1404">Vous devez utiliser les constructeurs de classes dérivées pour obtenir une instance avec des paramètres différents.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1404">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="63ca9-1405">Par exemple, la <xref:System.Text.UTF32Encoding> classe fournit un constructeur qui vous permet d’activer la détection d’erreurs.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1405">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  
  
## Examples  
 <span data-ttu-id="63ca9-1406">L’exemple suivant obtient deux instances du même encodage (une par page de codes) et une autre par nom et vérifie leur égalité.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1406">The following example gets two instances of the same encoding (one by code page and another by name), and checks their equality.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="63ca9-1407"><paramref name="name" /> n'est pas un nom de page de codes valide.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1407"><paramref name="name" /> is not a valid code page name.</span></span>  
  
 <span data-ttu-id="63ca9-1408">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1408">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1409">La page de codes indiquée par <paramref name="name" /> n'est pas prise en charge par la plateforme sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1409">The code page indicated by <paramref name="name" /> is not supported by the underlying platform.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(int32 codepage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(int codepage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codepage"><span data-ttu-id="63ca9-1410">Identificateur de la page de codes de l'encodage préféré.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1410">The code page identifier of the preferred encoding.</span></span> <span data-ttu-id="63ca9-1411">Les valeurs possibles apparaissent dans la colonne Page de codes de la table qui s'affiche dans la rubrique de la classe <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1411">Possible values are listed in the Code Page column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span></span>  
  
 <span data-ttu-id="63ca9-1412">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1412">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1413">0 (zéro) pour utiliser l'encodage par défaut.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1413">0 (zero), to use the default encoding.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="63ca9-1414">Objet qui fournit une procédure de gestion d'erreurs quand un caractère ne peut pas être encodé avec l'encodage actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1414">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="63ca9-1415">Objet qui fournit une procédure de gestion d'erreurs quand une séquence d'octets ne peut pas être décodée avec l'encodage actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1415">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span></span></param>
        <summary><span data-ttu-id="63ca9-1416">Retourne l'encodage associé à l'identificateur de page de codes spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1416">Returns the encoding associated with the specified code page identifier.</span></span> <span data-ttu-id="63ca9-1417">Les paramètres spécifient un gestionnaire d'erreurs pour les caractères qui ne peuvent pas être encodés et pour les séquences d'octets qui ne peuvent pas être décodées.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1417">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1418">Encodage associé à la page de codes spécifiée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1418">The encoding that is associated with the specified code page.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="63ca9-1419">Certaines pages de codes non prise en charge de provoquer l’exception <xref:System.ArgumentException> levée, alors que d’autres provoquent <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1419">Some unsupported code pages cause the exception <xref:System.ArgumentException> to be thrown, whereas others cause <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="63ca9-1420">Par conséquent, votre code doit intercepter toutes les exceptions répertoriées dans la section Exceptions.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1420">Therefore, your code must catch all exceptions indicated in the Exceptions section.</span></span>  
  
 <span data-ttu-id="63ca9-1421">Le <xref:System.Text.Encoding.GetEncoding%2A> méthode s’appuie sur la plateforme sous-jacente pour prendre en charge la plupart des pages de codes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1421">The <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="63ca9-1422">Toutefois, le .NET Framework prend en charge certains encodages en mode natif.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1422">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="63ca9-1423">Pour obtenir la liste des pages de codes, consultez la <xref:System.Text.Encoding> rubrique de la classe.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1423">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="63ca9-1424">Vous pouvez appeler la <xref:System.Text.Encoding.GetEncodings%2A> méthode dans le .NET Framework complet sur le bureau Windows pour obtenir une liste de tous les encodages.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1424">You can call the <xref:System.Text.Encoding.GetEncodings%2A> method in the full .NET Framework on the Windows desktop to get a list of all encodings.</span></span>   
  
 <span data-ttu-id="63ca9-1425">Outre les encodages pris en charge intrinsèquement sur une version de plateforme spécifique du .NET Framework, le <xref:System.Text.Encoding.GetEncoding%2A> méthode retourne les encodages supplémentaires qui sont rendues disponibles par l’inscription d’un <xref:System.Text.EncodingProvider> objet.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1425">In addition to the encodings that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span>  <span data-ttu-id="63ca9-1426">Si le même que celui qui a été enregistré par plusieurs <xref:System.Text.EncodingProvider> des objets, cette méthode retourne la dernière inscrit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1426">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  

<span data-ttu-id="63ca9-1427">Vous pouvez également fournir une valeur de 0 pour le `codepage` argument.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1427">You can also supply a value of 0 for the `codepage` argument.</span></span> <span data-ttu-id="63ca9-1428">Son comportement précis dépend si les encodages rendues disponibles en inscrivant un <xref:System.Text.EncodingProvider> objet :</span><span class="sxs-lookup"><span data-stu-id="63ca9-1428">Its precise behavior depends on whether any encodings have been made available by registering an <xref:System.Text.EncodingProvider> object:</span></span>

- <span data-ttu-id="63ca9-1429">Si un ou plusieurs fournisseurs de codage ont été inscrite, elle retourne l’encodage du dernier fournisseur inscrit a choisi de retourner d’encodage lorsque le <xref:System.Text.Encoding.GetEncoding%2A> méthode est passée un `codepage` l’argument 0.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1429">If one or more encoding providers have been registered, it returns the encoding of the last registered provider that has chosen to return a encoding when the <xref:System.Text.Encoding.GetEncoding%2A> method is passed a `codepage` argument of 0.</span></span>     

- <span data-ttu-id="63ca9-1430">Sur le .NET Framework, si aucun encodage fournisseur a été enregistré, si le <xref:System.Text.CodePagesEncodingProvider> est le fournisseur d’encodage enregistré, ou si aucun fournisseur d’encodage inscrit ne gère un `codepage` valeur égale à 0, elle retourne la page de codes active.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1430">On the .NET Framework, if no encoding provider has been registered, if the <xref:System.Text.CodePagesEncodingProvider> is the registered encoding provider, or if no registered encoding provider handles a `codepage` value of 0, it returns the active code page.</span></span>

- <span data-ttu-id="63ca9-1431">Sur .NET Core, si aucun fournisseur d’encodage n’a pas été inscrit ou si aucun fournisseur d’encodage inscrit ne gère un `codepage` valeur égale à 0, elle retourne le <xref:System.Text.UTF8Encoding> encodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1431">On .NET Core, if no encoding provider has been registered or if no registered encoding provider handles a `codepage` value of 0, it returns the <xref:System.Text.UTF8Encoding> encoding.</span></span>

> [!NOTE]
>  <span data-ttu-id="63ca9-1432">Les pages de codes ANSI peuvent être différents sur des ordinateurs différents et peuvent changer à un seul ordinateur, entraînant une altération des données.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1432">The ANSI code pages can be different on different computers and can change on a single computer, leading to data corruption.</span></span> <span data-ttu-id="63ca9-1433">Pour cette raison, si la page de codes active est une page de codes ANSI, codage et décodage des données à l’aide de la page de codes par défaut retournée par `Encoding.GetEncoding(0)` n’est pas recommandée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1433">For this reason, if the active code page is an ANSI code page, encoding and decoding data using the default code page returned by `Encoding.GetEncoding(0)` is not recommended.</span></span> <span data-ttu-id="63ca9-1434">Pour obtenir des résultats plus cohérents, vous devez utiliser Unicode, tel que UTF-8 (page de codes 65001) ou UTF-16, au lieu d’une page de codes spécifique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1434">For the most consistent results, you should use Unicode, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span> 
  
 <span data-ttu-id="63ca9-1435">Pour obtenir l’encodage associé à la page de codes active, vous pouvez soit fournir une valeur de 0 pour le `codepage` argument ou, si votre code s’exécute sur le .NET Framework complet sur le bureau Windows, récupérer la valeur de la <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1435">To get the encoding associated with the active code page, you can either supply a value of 0 for the `codepage` argument or, if your code is running on the full .NET Framework on the Windows desktop, retrieve the value of the <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="63ca9-1436">Pour déterminer la page de codes active en cours, appelez Windows [GetACP](http://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) (fonction) du .NET Framework sur le bureau Windows.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1436">To determine the current active code page, call the Windows [GetACP](http://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) function from the .NET Framework on the Windows desktop.</span></span>  
  
 <span data-ttu-id="63ca9-1437"><xref:System.Text.Encoding.GetEncoding%2A> Retourne une instance mise en cache avec les paramètres par défaut.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1437"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="63ca9-1438">Vous devez utiliser les constructeurs de classes dérivées pour obtenir une instance avec des paramètres différents.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1438">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="63ca9-1439">Par exemple, la <xref:System.Text.UTF32Encoding> classe fournit un constructeur qui vous permet d’activer la détection d’erreurs.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1439">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1440">L’exemple suivant illustre la <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1440">The following example demonstrates the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[sys.txt.fallbackEncRpl#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cpp/fallEncRpl.cpp#1)]
 [!code-csharp[sys.txt.fallbackEncRpl#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cs/fallEncRpl.cs#1)]
 [!code-vb[sys.txt.fallbackEncRpl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackEncRpl/vb/fallEncRpl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-1441"><paramref name="codepage" /> est inférieur à 0 ou supérieur à 65535.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1441"><paramref name="codepage" /> is less than zero or greater than 65535.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="63ca9-1442"><paramref name="codepage" /> n'est pas pris en charge par la plateforme sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1442"><paramref name="codepage" /> is not supported by the underlying platform.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="63ca9-1443"><paramref name="codepage" /> n'est pas pris en charge par la plateforme sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1443"><paramref name="codepage" /> is not supported by the underlying platform.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(string name, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(System::String ^ name, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="63ca9-1444">Nom de la page de codes de l'encodage préféré.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1444">The code page name of the preferred encoding.</span></span> <span data-ttu-id="63ca9-1445">Toute valeur retournée par la propriété <see cref="P:System.Text.Encoding.WebName" /> est valide.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1445">Any value returned by the <see cref="P:System.Text.Encoding.WebName" /> property is valid.</span></span> <span data-ttu-id="63ca9-1446">Les valeurs possibles apparaissent dans la colonne Nom de la table qui s'affiche dans la rubrique de la classe <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1446">Possible values are listed in the Name column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="63ca9-1447">Objet qui fournit une procédure de gestion d'erreurs quand un caractère ne peut pas être encodé avec l'encodage actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1447">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="63ca9-1448">Objet qui fournit une procédure de gestion d'erreurs quand une séquence d'octets ne peut pas être décodée avec l'encodage actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1448">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span></span></param>
        <summary><span data-ttu-id="63ca9-1449">Retourne l'encodage associé au nom de la page de codes spécifiée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1449">Returns the encoding associated with the specified code page name.</span></span> <span data-ttu-id="63ca9-1450">Les paramètres spécifient un gestionnaire d'erreurs pour les caractères qui ne peuvent pas être encodés et pour les séquences d'octets qui ne peuvent pas être décodées.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1450">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1451">Encodage associé à la page de codes spécifiée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1451">The encoding that is associated with the specified code page.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1452">Le <xref:System.Text.Encoding.GetEncoding%2A> méthode s’appuie sur la plateforme sous-jacente pour prendre en charge la plupart des pages de codes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1452">The <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="63ca9-1453">Toutefois, le .NET Framework prend en charge certains encodages en mode natif.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1453">However, the .NET Framework natively supports some encodings.</span></span>  
  
 <span data-ttu-id="63ca9-1454">Outre les encodages pris en charge intrinsèquement sur une version de plateforme spécifique du .NET Framework, le <xref:System.Text.Encoding.GetEncoding%2A> méthode retourne les encodages supplémentaires qui sont rendues disponibles par l’inscription d’un <xref:System.Text.EncodingProvider> objet.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1454">In addition to the encodings that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="63ca9-1455">Si le même que celui qui a été enregistré par plusieurs <xref:System.Text.EncodingProvider> des objets, cette méthode retourne la dernière inscrit.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1455">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span> 
  
> [!NOTE]
>  <span data-ttu-id="63ca9-1456">Les pages de codes ANSI peuvent être différents sur des ordinateurs différents et peuvent changer à un seul ordinateur, entraînant une altération des données.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1456">The ANSI code pages can be different on different computers and can change on a single computer, leading to data corruption.</span></span> <span data-ttu-id="63ca9-1457">Pour obtenir des résultats plus cohérents, vous devez utiliser un encodage Unicode, tel que UTF-8 (page de codes 65001) ou UTF-16, au lieu d’une page de codes spécifique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1457">For the most consistent results, you should use a Unicode encoding, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span>  
  
 <span data-ttu-id="63ca9-1458">Pour obtenir la liste des pages de codes, consultez la <xref:System.Text.Encoding> rubrique de la classe.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1458">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="63ca9-1459">Vous pouvez appeler la <xref:System.Text.Encoding.GetEncodings%2A> méthode sur le .NET Framework complet sur le bureau Windows pour obtenir une liste de tous les encodages.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1459">You can call the <xref:System.Text.Encoding.GetEncodings%2A> method on the full .NET Framework on the Windows desktop to get a list of all encodings.</span></span>  
  
 <span data-ttu-id="63ca9-1460"><xref:System.Text.Encoding.GetEncoding%2A> Retourne une instance mise en cache avec les paramètres par défaut.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1460"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="63ca9-1461">Vous devez utiliser les constructeurs de classes dérivées pour obtenir une instance avec des paramètres différents.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1461">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="63ca9-1462">Par exemple, la <xref:System.Text.UTF32Encoding> classe fournit un constructeur qui vous permet d’activer la détection d’erreurs.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1462">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1463">L’exemple suivant illustre la <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1463">The following example demonstrates the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[sys.txt.fallbackEncRpl#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cpp/fallEncRpl.cpp#1)]
 [!code-csharp[sys.txt.fallbackEncRpl#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cs/fallEncRpl.cs#1)]
 [!code-vb[sys.txt.fallbackEncRpl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackEncRpl/vb/fallEncRpl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="63ca9-1464"><paramref name="name" /> n'est pas un nom de page de codes valide.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1464"><paramref name="name" /> is not a valid code page name.</span></span>  
  
 <span data-ttu-id="63ca9-1465">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1465">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1466">La page de codes indiquée par <paramref name="name" /> n'est pas prise en charge par la plateforme sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1466">The code page indicated by <paramref name="name" /> is not supported by the underlying platform.</span></span></exception>
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
      </Docs>
    </Member>
    <Member MemberName="GetEncodings">
      <MemberSignature Language="C#" Value="public static System.Text.EncodingInfo[] GetEncodings ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.EncodingInfo[] GetEncodings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncodings" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncodings () As EncodingInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Text::EncodingInfo ^&gt; ^ GetEncodings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncodingInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63ca9-1467">Retourne un tableau qui contient tous les encodages.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1467">Returns an array that contains all encodings.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1468">Tableau qui contient tous les encodages.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1468">An array that contains all encodings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1469">Cette méthode retourne une liste de codages pris en charge, que se différencient uniquement par la page de codes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1469">This method returns a list of supported encodings, uniquely distinguished by code page.</span></span> <span data-ttu-id="63ca9-1470">Pour une table qui répertorie les encodages pris en charge, consultez le <xref:System.Text.Encoding> rubrique de la classe.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1470">For a table that lists the supported encodings, see the <xref:System.Text.Encoding> class topic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63ca9-1471">La liste de codages pris en charge retournée par le <xref:System.Text.Encoding.GetEncodings%2A> méthode n’inclut pas les encodages supplémentaires mises à disposition par les <xref:System.Text.EncodingProvider> implémentations qui ont été enregistrées par les appels à la <xref:System.Text.Encoding.RegisterProvider%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1471">The list of supported encodings returned by the <xref:System.Text.Encoding.GetEncodings%2A> method does not include any additional encodings made available by any <xref:System.Text.EncodingProvider> implementations that were registered by calls to the <xref:System.Text.Encoding.RegisterProvider%2A> method.</span></span>  
  
 <span data-ttu-id="63ca9-1472">Les encodages 50220 et 50222 sont associés le nom « iso-2022-jp », mais ils ne sont pas identiques.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1472">Encodings 50220 and 50222 are both associated with the name "iso-2022-jp", but they are not identical.</span></span> <span data-ttu-id="63ca9-1473">Encodage 50220 convertit les caractères Katakana en caractères demi-chasse en caractères Katakana en caractères pleine chasse, tandis que l’encodage 50222 utilise une séquence de shift-in/shift-out pour encoder les caractères Katakana en caractères demi-chasse.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1473">Encoding 50220 converts half-width Katakana characters to full-width Katakana characters, whereas encoding 50222 uses a shift-in/shift-out sequence to encode half-width Katakana characters.</span></span> <span data-ttu-id="63ca9-1474">Le nom d’affichage pour l’encodage 50222 est « japonais (JIS-autorise Kana 1 octet - donc / SI) » pour le distinguer de l’encodage 50220 dont l’affichage de la nommer « japonais (JIS) ».</span><span class="sxs-lookup"><span data-stu-id="63ca9-1474">The display name for encoding 50222 is "Japanese (JIS-Allow 1 byte Kana - SO/SI)" to distinguish it from encoding 50220, which has the display name "Japanese (JIS)".</span></span>  
  
 <span data-ttu-id="63ca9-1475">Si vous demandez le codage nom « iso-2022-jp », le .NET Framework retourne l’encodage 50220.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1475">If you request the encoding name "iso-2022-jp", the .NET Framework returns encoding 50220.</span></span> <span data-ttu-id="63ca9-1476">Toutefois, l’encodage est appropriée pour votre application dépend du traitement préféré des caractères Katakana à demi-chasse.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1476">However, the encoding that is appropriate for your app depends on the preferred treatment of the half-width Katakana characters.</span></span>  
  
 <span data-ttu-id="63ca9-1477">Pour obtenir un encodage spécifique, vous devez utiliser le <xref:System.Text.Encoding.GetEncoding%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1477">To get a specific encoding, you should use the <xref:System.Text.Encoding.GetEncoding%2A> method.</span></span>  
  
 <span data-ttu-id="63ca9-1478"><xref:System.Text.Encoding.GetEncodings%2A> est parfois utilisé pour présenter une liste d’encodages dans un fichier de l’utilisateur **enregistrer en tant que** boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1478"><xref:System.Text.Encoding.GetEncodings%2A> is sometimes used to present the user with a list of encodings in a File **Save as** dialog box.</span></span> <span data-ttu-id="63ca9-1479">Cependant, plusieurs encodages non-Unicode sont incomplets et traduire le nombre de caractères à « ? », ou ont un comportement légèrement différent sur différentes plateformes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1479">However, many non-Unicode encodings are either incomplete and translate many characters to "?", or have subtly different behavior on different platforms.</span></span> <span data-ttu-id="63ca9-1480">Envisagez d’utiliser UTF-8 ou UTF-16 en tant que la valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1480">Consider using UTF-8 or UTF-16 as the default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1481">L’exemple suivant vérifie les valeurs des propriétés booléennes de chaque encodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1481">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63ca9-1482">Retourne le code de hachage pour l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1482">Returns the hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1483">Code de hachage de l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1483">The hash code for the current instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public abstract int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMaxByteCount(int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount"><span data-ttu-id="63ca9-1484">Nombre de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1484">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="63ca9-1485">En cas de substitution dans une classe dérivée, calcule le nombre maximal d'octets produits par l'encodage du nombre de caractères spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1485">When overridden in a derived class, calculates the maximum number of bytes produced by encoding the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1486">Nombre maximal d'octets produits par l'encodage du nombre de caractères spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1486">The maximum number of bytes produced by encoding the specified number of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1487">Le `charCount` paramètre spécifie le nombre de <xref:System.Char> objets qui représentent les caractères Unicode à encoder, car le .NET Framework utilise en interne UTF-16 pour représenter les caractères Unicode.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1487">The `charCount` parameter actually specifies the number of <xref:System.Char> objects that represent the Unicode characters to encode, because the .NET Framework internally uses UTF-16 to represent Unicode characters.</span></span> <span data-ttu-id="63ca9-1488">Par conséquent, la plupart des caractères Unicode peuvent être représentées par un <xref:System.Char> objet, mais un caractère Unicode représenté par une paire de substitution, par exemple, nécessite deux <xref:System.Char> objets.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1488">Consequently, most Unicode characters can be represented by one <xref:System.Char> object, but a Unicode character represented by a surrogate pair, for example, requires two <xref:System.Char> objects.</span></span>  
  
 <span data-ttu-id="63ca9-1489">Pour calculer la taille exacte de tableau requise par <xref:System.Text.Encoding.GetBytes%2A> pour stocker les octets obtenus, vous devez utiliser le <xref:System.Text.Encoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1489">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, you should use the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="63ca9-1490">Pour calculer la taille maximale du tableau, utilisez le <xref:System.Text.Encoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1490">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="63ca9-1491">Le <xref:System.Text.Encoding.GetByteCount%2A> méthode permet généralement d’allocation de moins de mémoire, alors que le <xref:System.Text.Encoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1491">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="63ca9-1492"><xref:System.Text.Encoding.GetMaxByteCount%2A> Récupère un nombre le plus défavorable, y compris le pire des cas actuellement sélectionné <xref:System.Text.EncoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1492"><xref:System.Text.Encoding.GetMaxByteCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="63ca9-1493">Si une stratégie de secours est choisi avec une chaîne potentiellement grande, <xref:System.Text.Encoding.GetMaxByteCount%2A> récupère les valeurs élevées, en particulier dans les cas où le pire des cas pour l’encodage implique des modes de commutation pour chaque caractère.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1493">If a fallback is chosen with a potentially large string, <xref:System.Text.Encoding.GetMaxByteCount%2A> retrieves large values, particularly in cases where the worst case for the encoding involves switching modes for every character.</span></span> <span data-ttu-id="63ca9-1494">Par exemple, cela peut se produire pour ISO-2022-JP.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1494">For example, this can happen for ISO-2022-JP.</span></span> <span data-ttu-id="63ca9-1495">Pour plus d’informations, consultez le billet de blog «[Nouveautés avec Encoding.GetMaxByteCount et Encoding.GetMaxCharCount () ?](http://go.microsoft.com/fwlink/?LinkId=153702)»</span><span class="sxs-lookup"><span data-stu-id="63ca9-1495">For more information, see the blog entry "[What's with Encoding.GetMaxByteCount() and Encoding.GetMaxCharCount()?](http://go.microsoft.com/fwlink/?LinkId=153702)"</span></span> <span data-ttu-id="63ca9-1496">(http://blogs.msdn.com/shawnste/archive/2005/03/02/383903.aspx).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1496">(http://blogs.msdn.com/shawnste/archive/2005/03/02/383903.aspx).</span></span>  
  
 <span data-ttu-id="63ca9-1497">Dans la plupart des cas, cette méthode récupère des valeurs raisonnables pour les petites chaînes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1497">In most cases, this method retrieves reasonable values for small strings.</span></span> <span data-ttu-id="63ca9-1498">Pour les chaînes de grande taille, vous devrez choisir entre l’utilisation de mémoires tampons de grande et d’intercepter les erreurs dans les rares cas lorsqu’une mémoire tampon plus raisonnable est trop petite.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1498">For large strings, you might have to choose between using very large buffers and catching errors in the rare case when a more reasonable buffer is too small.</span></span> <span data-ttu-id="63ca9-1499">Vous pouvez également envisager une approche différente à l’aide de <xref:System.Text.Encoding.GetByteCount%2A> ou <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1499">You might also want to consider a different approach using <xref:System.Text.Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="63ca9-1500">Lorsque vous utilisez <xref:System.Text.Encoding.GetMaxByteCount%2A>, vous devez allouer la mémoire tampon de sortie selon la taille maximale de la mémoire tampon d’entrée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1500">When using <xref:System.Text.Encoding.GetMaxByteCount%2A>, you should allocate the output buffer based on the maximum size of the input buffer.</span></span> <span data-ttu-id="63ca9-1501">Si la mémoire tampon de sortie est contraint de taille, vous pouvez utiliser la <xref:System.Text.Encoding.Convert%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1501">If the output buffer is constrained in size, you might use the <xref:System.Text.Encoding.Convert%2A> method.</span></span>  
  
 <span data-ttu-id="63ca9-1502">Notez que <xref:System.Text.Encoding.GetMaxByteCount%2A> prend en compte les substituts potentiels restants d’une opération de décodeur précédente.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1502">Note that <xref:System.Text.Encoding.GetMaxByteCount%2A> considers potential leftover surrogates from a previous decoder operation.</span></span> <span data-ttu-id="63ca9-1503">En raison du décodeur, en passant une valeur de 1 à la méthode extrait 2 pour un encodage sur un octet, par exemple ASCII.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1503">Because of the decoder, passing a value of 1 to the method retrieves 2 for a single-byte encoding, such as ASCII.</span></span> <span data-ttu-id="63ca9-1504">Vous devez utiliser le <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> propriété si ces informations sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1504">You should use the <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> property if this information is necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63ca9-1505">`GetMaxByteCount(N)` n’est pas nécessairement la même valeur que `N* GetMaxByteCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1505">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1506">L’exemple suivant détermine le nombre d’octets requis pour encoder un tableau de caractères, encode les caractères et affiche le nombre d’octets résultant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1506">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-1507"><paramref name="charCount" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1507"><paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="63ca9-1508">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1508">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-1509">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-1509">-and-</span></span>  
  
 <span data-ttu-id="63ca9-1510"><see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1510"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="63ca9-1511">Tous les <see cref="T:System.Text.Encoding" /> implémentations doivent garantir qu’aucune exception de dépassement de capacité de mémoire tampon se produire si les mémoires tampons sont dimensionnés en fonction des résultats des calculs de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1511">All <see cref="T:System.Text.Encoding" /> implementations must guarantee that no buffer overflow exceptions occur if buffers are sized according to the results of this method's calculations.</span></span></para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public abstract int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMaxCharCount(int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount"><span data-ttu-id="63ca9-1512">Nombre d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1512">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="63ca9-1513">En cas de substitution dans une classe dérivée, calcule le nombre maximal de caractères produits par le décodage du nombre de caractères spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1513">When overridden in a derived class, calculates the maximum number of characters produced by decoding the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1514">Nombre maximal de caractères produits par le décodage du nombre d'octets spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1514">The maximum number of characters produced by decoding the specified number of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1515">Pour calculer la taille exacte de tableau requise par <xref:System.Text.Encoding.GetChars%2A> pour stocker les caractères obtenus, vous devez utiliser le <xref:System.Text.Encoding.GetCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1515">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%2A> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="63ca9-1516">Pour calculer la taille maximale du tableau, utilisez le <xref:System.Text.Encoding.GetMaxCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1516">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="63ca9-1517">Le <xref:System.Text.Encoding.GetCharCount%2A> méthode permet généralement d’allocation de moins de mémoire, alors que le <xref:System.Text.Encoding.GetMaxCharCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1517">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="63ca9-1518"><xref:System.Text.Encoding.GetMaxCharCount%2A> Récupère un nombre le plus défavorable, y compris le pire des cas actuellement sélectionné <xref:System.Text.DecoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1518"><xref:System.Text.Encoding.GetMaxCharCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="63ca9-1519">Si une stratégie de secours est choisi avec une chaîne potentiellement grande, <xref:System.Text.Encoding.GetMaxCharCount%2A> extrait de grandes valeurs.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1519">If a fallback is chosen with a potentially large string, <xref:System.Text.Encoding.GetMaxCharCount%2A> retrieves large values.</span></span>  
  
 <span data-ttu-id="63ca9-1520">Dans la plupart des cas, cette méthode récupère un nombre raisonnable pour les petites chaînes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1520">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="63ca9-1521">Pour les chaînes de grande taille, vous devrez peut-être choisir entre l’utilisation de mémoires tampons de grande et d’intercepter les erreurs dans les rares cas qu’une mémoire tampon plus raisonnable est trop petite.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1521">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is too small.</span></span> <span data-ttu-id="63ca9-1522">Vous pouvez également envisager une approche différente à l’aide de <xref:System.Text.Encoding.GetCharCount%2A> ou <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1522">You might also want to consider a different approach using <xref:System.Text.Encoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="63ca9-1523"><xref:System.Text.Encoding.GetMaxCharCount%2A> n’a aucune relation avec <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1523"><xref:System.Text.Encoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="63ca9-1524">Si vous avez besoin d’une fonction semblable à utiliser avec <xref:System.Text.Encoding.GetBytes%2A>, vous devez utiliser <xref:System.Text.Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1524">If you needs a similar function to use with <xref:System.Text.Encoding.GetBytes%2A>, you should use <xref:System.Text.Encoding.GetMaxByteCount%2A>.</span></span>  
  
 <span data-ttu-id="63ca9-1525">Lorsque vous utilisez <xref:System.Text.Encoding.GetMaxCharCount%2A>, vous devez allouer la mémoire tampon de sortie selon la taille maximale de la mémoire tampon d’entrée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1525">When using <xref:System.Text.Encoding.GetMaxCharCount%2A>, you should allocate the output buffer based on the maximum size of the input buffer.</span></span> <span data-ttu-id="63ca9-1526">Si la mémoire tampon de sortie est contraint de taille, vous pouvez utiliser la <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1526">If the output buffer is constrained in size, you might use the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="63ca9-1527">Notez que <xref:System.Text.Encoding.GetMaxCharCount%2A> considère que le pire des cas pour les octets restants à partir d’une précédente opération de l’encodeur.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1527">Note that <xref:System.Text.Encoding.GetMaxCharCount%2A> considers the worst case for leftover bytes from a previous encoder operation.</span></span> <span data-ttu-id="63ca9-1528">Pour la plupart des pages de codes, en passant une valeur de 0 à cette méthode récupère des valeurs supérieures ou égales à 1.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1528">For most code pages, passing a value of 0 to this method retrieves values greater than or equal to 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63ca9-1529">`GetMaxCharCount(N)` n’est pas nécessairement la même valeur que `N* GetMaxCharCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1529">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1530">L’exemple suivant encode une chaîne en un tableau d’octets, puis décode les octets en un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1530">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/VB/getchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-1531"><paramref name="byteCount" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1531"><paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="63ca9-1532">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1532">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-1533">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-1533">-and-</span></span>  
  
 <span data-ttu-id="63ca9-1534"><see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1534"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="63ca9-1535">Tous les <see cref="T:System.Text.Encoding" /> implémentations doivent garantir qu’aucune exception de dépassement de capacité de mémoire tampon se produire si les mémoires tampons sont dimensionnés en fonction des résultats des calculs de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1535">All <see cref="T:System.Text.Encoding" /> implementations must guarantee that no buffer overflow exceptions occur if buffers are sized according to the results of this method's calculations.</span></span></para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public virtual byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63ca9-1536">En cas de substitution dans une classe dérivée, retourne une séquence d'octets qui spécifie l'encodage utilisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1536">When overridden in a derived class, returns a sequence of bytes that specifies the encoding used.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1537">Tableau d'octets contenant une séquence d'octets qui spécifie l'encodage utilisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1537">A byte array containing a sequence of bytes that specifies the encoding used.</span></span>  
  
 <span data-ttu-id="63ca9-1538">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1538">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1539">Tableau d'octets de longueur nulle si aucun préambule n'est requis.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1539">A byte array of length zero, if a preamble is not required.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1540">Si vous le souhaitez, le <xref:System.Text.Encoding> objet fournit un préambule est un tableau d’octets qui peuvent être un préfixe à la séquence d’octets résultant du processus de codage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1540">Optionally, the <xref:System.Text.Encoding> object provides a preamble that is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="63ca9-1541">Si le préambule contient une marque d’ordre (au format Unicode, le point de code U + FEFF), il aide le décodeur à déterminer l’ordre d’octet et que le format de transformation ou UTF.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1541">If the preamble contains a byte order mark (in Unicode, code point U+FEFF), it helps the decoder determine the byte order and the transformation format or UTF.</span></span>  
  
 <span data-ttu-id="63ca9-1542">La marque d’ordre octet Unicode (BOM) est sérialisée comme suit (en hexadécimal) :</span><span class="sxs-lookup"><span data-stu-id="63ca9-1542">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="63ca9-1543">UTF-8 : EF BB BF</span><span class="sxs-lookup"><span data-stu-id="63ca9-1543">UTF-8: EF BB BF</span></span>  
  
-   <span data-ttu-id="63ca9-1544">UTF-16 primauté des octets : FE FF</span><span class="sxs-lookup"><span data-stu-id="63ca9-1544">UTF-16 big endian byte order: FE FF</span></span>  
  
-   <span data-ttu-id="63ca9-1545">Ordre de primauté des octets little UTF-16 : FF FE</span><span class="sxs-lookup"><span data-stu-id="63ca9-1545">UTF-16 little endian byte order: FF FE</span></span>  
  
-   <span data-ttu-id="63ca9-1546">UTF-32 primauté des octets : 00 00 FE FF</span><span class="sxs-lookup"><span data-stu-id="63ca9-1546">UTF-32 big endian byte order: 00 00 FE FF</span></span>  
  
-   <span data-ttu-id="63ca9-1547">Ordre de primauté des octets little UTF-32 : FF FE 00 00</span><span class="sxs-lookup"><span data-stu-id="63ca9-1547">UTF-32 little endian byte order: FF FE 00 00</span></span>  
  
 <span data-ttu-id="63ca9-1548">Vous devez utiliser le BOM, car il fournit une certaine identification d’un encodage pour fichiers qui autres ont perdu la référence à la <xref:System.Text.Encoding> objet, par exemple, sans balise ou incorrectement référencées données web ou des fichiers texte aléatoires stockés lorsqu’une entreprise n’ont pas ont des intérêts internationaux ou autres données.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1548">You should use the BOM, because it provides nearly certain identification of an encoding for files that otherwise have lost reference to the <xref:System.Text.Encoding> object, for example, untagged or improperly tagged web data or random text files stored when a business did not have international concerns or other data.</span></span> <span data-ttu-id="63ca9-1549">Souvent des problèmes d’utilisateur peuvent être évités si les données sont correctement et régulièrement référencées, de préférence dans UTF-8 ou UTF-16.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1549">Often user problems might be avoided if data is consistently and properly tagged, preferably in UTF-8 or UTF-16.</span></span>  
  
 <span data-ttu-id="63ca9-1550">Des normes qui fournissent un type de codage, un BOM est quelque peu redondant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1550">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="63ca9-1551">Toutefois, il peut être utilisé pour aider un serveur à envoyer l’en-tête de codage correct.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1551">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="63ca9-1552">Sinon, il peut être utilisé comme un secours au cas où l’encodage est perdu.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1552">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="63ca9-1553">Il existe certains inconvénients à l’aide d’une nomenclature.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1553">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="63ca9-1554">Par exemple, le fait de savoir comment limiter les champs de base de données qui utilisent un BOM peut être difficile.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1554">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="63ca9-1555">Concaténation de fichiers peut poser un problème également, par exemple, lors de la fusion des fichiers de telle façon un caractère inutile peut finir au milieu des données.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1555">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="63ca9-1556">En dépit de quelques inconvénients, toutefois, l’utilisation d’une nomenclature est hautement recommandée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1556">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="63ca9-1557">Pour plus d’informations sur l’ordre d’octet et la marque d’ordre, consultez la norme Unicode sur le [page d’accueil Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1557">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="63ca9-1558">Pour vous assurer que les octets encodés sont décodés correctement, vous devez préfixe octets encodés avec un préambule.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1558">To ensure that the encoded bytes are decoded properly, you should prefix encoded bytes with a preamble.</span></span> <span data-ttu-id="63ca9-1559">Toutefois, la plupart des encodages ne fournissent pas de préambule.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1559">However, most encodings do not provide a preamble.</span></span> <span data-ttu-id="63ca9-1560">Pour garantir que les octets encodés sont décodés correctement, vous devez utiliser un encodage Unicode, autrement dit, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, ou <xref:System.Text.UTF32Encoding>, avec un préambule.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1560">To ensure that the encoded bytes are decoded properly, you should use a Unicode encoding, that is, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding>, with a preamble.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1561">L’exemple suivant détermine l’ordre d’octet de l’encodage selon le préambule.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1561">The following example determines the byte order of the encoding based on the preamble.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetPreamble Example/CPP/preamble.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetPreamble Example/CS/preamble.cs#1)]
 [!code-vb[System.Text.Encoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetPreamble Example/VB/preamble.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetString">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="63ca9-1562">En cas de substitution dans une classe dérivée, décode une séquence d'octets en chaîne.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1562">When overridden in a derived class, decodes a sequence of bytes into a string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (bytes As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="63ca9-1563">Tableau d'octets contenant la séquence d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1563">The byte array containing the sequence of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="63ca9-1564">En cas de substitution dans une classe dérivée, décode tous les octets du tableau d'octets spécifié en chaîne.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1564">When overridden in a derived class, decodes all the bytes in the specified byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1565">Chaîne contenant les résultats du décodage de la séquence d'octets spécifiée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1565">A string that contains the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1566">Si les conversion des données seront disponibles uniquement dans les blocs séquentiels (par exemple, les données lues à partir d’un flux de données) ou si la quantité de données est tellement importante qu’elle doit être divisée en blocs plus petits, vous devez utiliser le <xref:System.Text.Decoder> objet retourné par la <xref:System.Text.Encoding.GetDecoder%2A> d’un deri (méthode) Autoriser le classe.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1566">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> object returned by the <xref:System.Text.Encoding.GetDecoder%2A> method of a derived class.</span></span>  
  
 <span data-ttu-id="63ca9-1567">Consultez la section Notes de la <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> rubrique de référence pour une présentation des techniques et les considérations de décodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1567">See the Remarks section of the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> reference topic for a discussion of decoding techniques and considerations.</span></span>  
  
 <span data-ttu-id="63ca9-1568">Notez que le comportement précis de la <xref:System.Text.Encoding.GetString%2A> méthode en tant <xref:System.Text.Encoding> implémentation dépend de la stratégie de secours définie pour cette <xref:System.Text.Encoding> objet.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1568">Note that the precise behavior of the <xref:System.Text.Encoding.GetString%2A> method for a particular <xref:System.Text.Encoding> implementation depends on the fallback strategy defined for that <xref:System.Text.Encoding> object.</span></span> <span data-ttu-id="63ca9-1569">Pour plus d’informations, consultez la section « Choix d’une stratégie de secours » de la [l’encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) rubrique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1569">For more information, see the "Choosing a Fallback Strategy" section of the [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1570">L’exemple suivant lit une chaîne encodée en UTF-8 à partir d’un fichier binaire est représenté par un <xref:System.IO.FileStream> objet.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1570">The following example reads a UTF-8 encoded string from a binary file represented by a <xref:System.IO.FileStream> object.</span></span> <span data-ttu-id="63ca9-1571">Pour les fichiers qui sont inférieures à 2 048 octets, il lit le contenu du fichier entier dans un tableau d’octets et appelle le <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%29> méthode pour effectuer le décodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1571">For files that are smaller than 2,048 bytes, it reads the contents of the entire file into a byte array and calls the <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%29> method to perform the decoding.</span></span> <span data-ttu-id="63ca9-1572">Pour les fichiers plus volumineux, il lit 2 048 octets à la fois dans un tableau d’octets, appelle le <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> méthode pour déterminer le nombre de caractères contenus dans le tableau, puis appelle la <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> méthode pour effectuer le décodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1572">For larger files, it reads 2,048 bytes at a time into a byte array, calls the <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to determine how many characters are contained in the array, and then calls the <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method to perform the decoding.</span></span>  
  
 [!code-csharp[System.Text.Encoding.GetString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetString/CS/getstring1.cs#2)]
 [!code-vb[System.Text.Encoding.GetString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetString/VB/getstring1.vb#2)]  
  
 <span data-ttu-id="63ca9-1573">L’exemple utilise le texte suivant, qui doit être enregistré dans un fichier encodé en UTF-8 nommé Utf8Example.txt.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1573">The example uses the following text, which should be saved to a UTF-8 encoded file named Utf8Example.txt.</span></span>  
  
```  
  
This is a UTF-8-encoded file that contains primarily Latin text, although it   
does list the first twelve letters of the Russian (Cyrillic) alphabet:  
  
А б в г д е ё ж з и й к  
  
The goal is to save this file, then open and decode it as a binary stream.  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="63ca9-1574">Le tableau d'octets contient des points de code Unicode non valides.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1574">The byte array contains invalid Unicode code points.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-1575"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1575"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="63ca9-1576">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1576">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-1577">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-1577">-and-</span></span>  
  
 <span data-ttu-id="63ca9-1578"><see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1578"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetString (bytes As ReadOnlySpan(Of Byte)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(System::Byte* bytes, int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="63ca9-1579">Pointeur vers un tableau d'octets.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1579">A pointer to a byte array.</span></span></param>
        <param name="byteCount"><span data-ttu-id="63ca9-1580">Nombre d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1580">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="63ca9-1581">En cas de substitution dans une classe dérivée, décode un nombre d'octets spécifié en commençant à une adresse spécifiée dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1581">When overridden in a derived class, decodes a specified number of bytes starting at a specified address into a string.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1582">Chaîne contenant les résultats du décodage de la séquence d'octets spécifiée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1582">A string that contains the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1583">Le <xref:System.Text.Encoding.GetString%2A> méthode est conçue pour optimiser les performances lorsque vous avez un pointeur natif vers un tableau d’octets.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1583">The <xref:System.Text.Encoding.GetString%2A> method is designed to optimize performance when you have a native pointer to a byte array.</span></span> <span data-ttu-id="63ca9-1584">Au lieu de la création d’un tableau d’octets géré et puis de le décodage, vous pouvez à la place appeler cette méthode sans avoir à créer des objets intermédiaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1584">Instead of creating a managed byte array and then decoding it, you can instead call this method without having to create any intermediate objects.</span></span>  
  
 <span data-ttu-id="63ca9-1585">Si les conversion des données seront disponibles uniquement dans les blocs séquentiels (par exemple, les données lues à partir d’un flux de données) ou si la quantité de données est tellement importante qu’elle doit être divisée en blocs plus petits, vous devez utiliser le <xref:System.Text.Decoder> objet retourné par la <xref:System.Text.Encoding.GetDecoder%2A> d’un deri (méthode) Autoriser le classe.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1585">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> object returned by the <xref:System.Text.Encoding.GetDecoder%2A> method of a derived class.</span></span>  
  
 <span data-ttu-id="63ca9-1586">Consultez la section Notes de la <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> rubrique de référence pour une présentation des techniques et les considérations de décodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1586">See the Remarks section of the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> reference topic for a discussion of decoding techniques and considerations.</span></span>  
  
 <span data-ttu-id="63ca9-1587">Notez que le comportement précis de la <xref:System.Text.Encoding.GetString%2A> méthode en tant <xref:System.Text.Encoding> implémentation dépend de la stratégie de secours définie pour cette <xref:System.Text.Encoding> objet.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1587">Note that the precise behavior of the <xref:System.Text.Encoding.GetString%2A> method for a particular <xref:System.Text.Encoding> implementation depends on the fallback strategy defined for that <xref:System.Text.Encoding> object.</span></span> <span data-ttu-id="63ca9-1588">Pour plus d’informations, consultez la section « Choix d’une stratégie de secours » de la [l’encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) rubrique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1588">For more information, see the "Choosing a Fallback Strategy" section of the [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-1589"><paramref name="bytes" /> est un pointeur Null</span><span class="sxs-lookup"><span data-stu-id="63ca9-1589"><paramref name="bytes" /> is a null pointer.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-1590"><paramref name="byteCount" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1590"><paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="63ca9-1591">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1591">A   fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-1592">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-1592">-and-</span></span>  
  
 <span data-ttu-id="63ca9-1593"><see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1593"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="63ca9-1594">Tableau d'octets contenant la séquence d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1594">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="63ca9-1595">Index du premier octet à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1595">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="63ca9-1596">Nombre d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1596">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="63ca9-1597">En cas de substitution dans une classe dérivée, décode une séquence d'octets du tableau d'octets spécifié en chaîne.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1597">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="63ca9-1598">Chaîne contenant les résultats du décodage de la séquence d'octets spécifiée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1598">A string that contains the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1599">Si les conversion des données seront disponibles uniquement dans les blocs séquentiels (par exemple, les données lues à partir d’un flux de données) ou si la quantité de données est tellement importante qu’elle doit être divisée en blocs plus petits, vous devez utiliser le <xref:System.Text.Decoder> ou <xref:System.Text.Encoder> fournie par le <xref:System.Text.Encoding.GetDecoder%2A> méthode ou la <xref:System.Text.Encoding.GetEncoder%2A> (méthode), respectivement, d’une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1599">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="63ca9-1600">Consultez la section Notes de la <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> rubrique de référence pour une présentation des techniques et les considérations de décodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1600">See the Remarks section of the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> reference topic for a discussion of decoding techniques and considerations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1601">L’exemple suivant lit une chaîne encodée en UTF-8 à partir d’un fichier binaire qui est représenté par un <xref:System.IO.FileStream> objet.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1601">The following example reads a UTF-8 encoded string from a binary file that is represented by a <xref:System.IO.FileStream> object.</span></span> <span data-ttu-id="63ca9-1602">Pour les fichiers qui sont inférieures à 2 048 octets, il lit le contenu du fichier entier dans un tableau d’octets et appelle le <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> méthode pour effectuer le décodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1602">For files that are smaller than 2,048 bytes, it reads the contents of the entire file into a byte array and calls the <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to perform the decoding.</span></span> <span data-ttu-id="63ca9-1603">Pour les fichiers plus volumineux, il lit 2 048 octets à la fois dans un tableau d’octets, appelle le <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> méthode pour déterminer le nombre de caractères contenus dans le tableau, puis appelle la <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> méthode pour effectuer le décodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1603">For larger files, it reads 2,048 bytes at a time into a byte array, calls the <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to determine how many characters are contained in the array, and then calls the <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method to perform the decoding.</span></span>  
  
 [!code-csharp[System.Text.Encoding.GetString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetString/CS/getstring2.cs#3)]
 [!code-vb[System.Text.Encoding.GetString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetString/VB/getstring2.vb#3)]  
  
 <span data-ttu-id="63ca9-1604">L’exemple utilise le texte suivant, qui doit être enregistré dans un fichier encodé en UTF-8 nommé Utf8Example.txt.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1604">The example uses the following text, which should be saved to a UTF-8 encoded file named Utf8Example.txt.</span></span>  
  
```  
  
This is a UTF-8-encoded file that contains primarily Latin text, although it   
does list the first twelve letters of the Russian (Cyrillic) alphabet:  
  
А б в г д е ё ж з и й к  
  
The goal is to save this file, then open and decode it as a binary stream.  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="63ca9-1605">Le tableau d'octets contient des points de code Unicode non valides.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1605">The byte array contains invalid Unicode code points.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-1606"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1606"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="63ca9-1607"><paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1607"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="63ca9-1608">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1608">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1609"><paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1609"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="63ca9-1610">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1610">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="63ca9-1611">-et-</span><span class="sxs-lookup"><span data-stu-id="63ca9-1611">-and-</span></span>  
  
 <span data-ttu-id="63ca9-1612"><see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1612"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HeaderName">
      <MemberSignature Language="C#" Value="public virtual string HeaderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.HeaderName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-1613">En cas de substitution dans une classe dérivée, obtient un nom pour l’encodage actuel qui peut être utilisé avec les étiquettes d’en-tête de l’agent de messagerie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1613">When overridden in a derived class, gets a name for the current encoding that can be used with mail agent header tags.</span></span></summary>
        <value><span data-ttu-id="63ca9-1614">Nom du <see cref="T:System.Text.Encoding" /> actuel à utiliser avec les balises d'en-tête de l'agent de messagerie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1614">A name for the current <see cref="T:System.Text.Encoding" /> to use with mail agent header tags.</span></span>  
  
 <span data-ttu-id="63ca9-1615">- ou -</span><span class="sxs-lookup"><span data-stu-id="63ca9-1615">-or-</span></span>  
  
 <span data-ttu-id="63ca9-1616">Une chaîne vide (""), si le <see cref="T:System.Text.Encoding" /> actuel ne peut pas être utilisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1616">An empty string (""), if the current <see cref="T:System.Text.Encoding" /> cannot be used.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1617">Si vous avez besoin d’un encodage pour un nom d’en-tête, vous devez appeler la <xref:System.Text.Encoding.GetEncoding%2A> méthode avec le <xref:System.Text.Encoding.HeaderName%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1617">If you need an encoding for a header name, you should call the <xref:System.Text.Encoding.GetEncoding%2A> method with the <xref:System.Text.Encoding.HeaderName%2A> property.</span></span> <span data-ttu-id="63ca9-1618">La méthode extrait souvent un encodage différent de l’encodage de test fourni dans l’appel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1618">Often the method retrieves a different encoding from the test encoding furnished in the call.</span></span> <span data-ttu-id="63ca9-1619">En général uniquement les applications de messagerie doivent extraire un tel encodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1619">Generally only email applications need to retrieve such an encoding.</span></span>  
  
 <span data-ttu-id="63ca9-1620">Dans certains cas, la valeur de la <xref:System.Text.Encoding.BodyName%2A> propriété correspond à la norme internationale qui définit cet encodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1620">In some cases, the value of the <xref:System.Text.Encoding.BodyName%2A> property corresponds to the international standard that defines that encoding.</span></span> <span data-ttu-id="63ca9-1621">Cela ne signifie pas que l’implémentation est conforme à l’intégralité de cette norme.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1621">This doesn't mean that the implementation complies in full with that standard.</span></span>  
  
 <span data-ttu-id="63ca9-1622">Notez que <xref:System.Text.Encoding.WebName%2A> retourne le nom à utiliser pour décrire un encodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1622">Note that <xref:System.Text.Encoding.WebName%2A> returns the name to use to describe an encoding.</span></span> <span data-ttu-id="63ca9-1623">Le <xref:System.Text.Encoding.HeaderName%2A> propriété définit un encodage différent qui peut fonctionner mieux pour une application de messagerie, par exemple.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1623">The <xref:System.Text.Encoding.HeaderName%2A> property defines a different encoding that might work better for an email application, for example.</span></span> <span data-ttu-id="63ca9-1624">Toutefois, l’utilisation de la propriété pour définir l’encodage n’est pas recommandée.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1624">However, use of the property to define the encoding is not recommended.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1625">L’exemple suivant récupère les noms de chaque codage et affiche les encodages avec un ou plusieurs noms différents de <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1625">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="63ca9-1626">Il affiche <xref:System.Text.Encoding.EncodingName%2A> mais ne compare pas par rapport à elle.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1626">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.Name" />
        <altmember cref="P:System.Text.Encoding.BodyName" />
        <altmember cref="P:System.Text.Encoding.EncodingName" />
        <altmember cref="P:System.Text.Encoding.WebName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAlwaysNormalized">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="63ca9-1627">Obtient une valeur indiquant si l'encodage actuel est toujours normalisé.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1627">Gets a value indicating whether the current encoding is always normalized.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAlwaysNormalized">
      <MemberSignature Language="C#" Value="public bool IsAlwaysNormalized ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAlwaysNormalized() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.IsAlwaysNormalized" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAlwaysNormalized () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAlwaysNormalized();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63ca9-1628">Obtient une valeur indiquant si l'encodage actuel est toujours normalisé en utilisant le formulaire de normalisation par défaut.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1628">Gets a value indicating whether the current encoding is always normalized, using the default normalization form.</span></span></summary>
        <returns>
          <span data-ttu-id="63ca9-1629"><see langword="true" /> si le <see cref="T:System.Text.Encoding" /> en cours est toujours normalisé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1629"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> is always normalized; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="63ca9-1630">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1630">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1631">Le formulaire de normalisation par défaut est <xref:System.Text.NormalizationForm.FormC>, qui utilise la décomposition canonique complète, suivie du remplacement des séquences par leurs composites principaux, si possible.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1631">The default normalization form is <xref:System.Text.NormalizationForm.FormC>, which uses full canonical decomposition, followed by the replacement of sequences with their primary composites, if possible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.NormalizationForm" />
      </Docs>
    </Member>
    <Member MemberName="IsAlwaysNormalized">
      <MemberSignature Language="C#" Value="public virtual bool IsAlwaysNormalized (System.Text.NormalizationForm form);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAlwaysNormalized(valuetype System.Text.NormalizationForm form) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAlwaysNormalized (form As NormalizationForm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAlwaysNormalized(System::Text::NormalizationForm form);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="form" Type="System.Text.NormalizationForm" />
      </Parameters>
      <Docs>
        <param name="form"><span data-ttu-id="63ca9-1632">Une des valeurs de <see cref="T:System.Text.NormalizationForm" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1632">One of the <see cref="T:System.Text.NormalizationForm" /> values.</span></span></param>
        <summary><span data-ttu-id="63ca9-1633">En cas de substitution dans une classe dérivée, obtient une valeur indiquant si l'encodage actuel est toujours normalisé en utilisant le formulaire de normalisation spécifié.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1633">When overridden in a derived class, gets a value indicating whether the current encoding is always normalized, using the specified normalization form.</span></span></summary>
        <returns>
          <span data-ttu-id="63ca9-1634"><see langword="true" /> si l'objet <see cref="T:System.Text.Encoding" /> actuel est toujours normalisé en utilisant la valeur <see cref="T:System.Text.NormalizationForm" /> spécifiée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1634"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> object is always normalized using the specified <see cref="T:System.Text.NormalizationForm" /> value; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="63ca9-1635">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1635">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1636">Le formulaire de normalisation par défaut est <xref:System.Text.NormalizationForm.FormC>, qui utilise la décomposition canonique complète, suivie du remplacement des séquences par leurs composites principaux, si possible.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1636">The default normalization form is <xref:System.Text.NormalizationForm.FormC>, which uses full canonical decomposition, followed by the replacement of sequences with their primary composites, if possible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.NormalizationForm" />
      </Docs>
    </Member>
    <Member MemberName="IsBrowserDisplay">
      <MemberSignature Language="C#" Value="public virtual bool IsBrowserDisplay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBrowserDisplay" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsBrowserDisplay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsBrowserDisplay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBrowserDisplay { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-1637">En cas de substitution dans une classe dérivée, obtient une valeur indiquant si l'encodage actuel peut être utilisé par les clients de navigation pour afficher le contenu.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1637">When overridden in a derived class, gets a value indicating whether the current encoding can be used by browser clients for displaying content.</span></span></summary>
        <value>
          <span data-ttu-id="63ca9-1638"><see langword="true" /> si le <see cref="T:System.Text.Encoding" /> en cours peut être utilisé par les clients de navigateur pour afficher le contenu ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1638"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by browser clients for displaying content; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="63ca9-1639">L’exemple suivant vérifie les valeurs des propriétés booléennes de chaque encodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1639">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsBrowserSave" />
      </Docs>
    </Member>
    <Member MemberName="IsBrowserSave">
      <MemberSignature Language="C#" Value="public virtual bool IsBrowserSave { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBrowserSave" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsBrowserSave" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsBrowserSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBrowserSave { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-1640">En cas de substitution dans une classe dérivée, obtient une valeur indiquant si l'encodage actuel peut être utilisé par les clients de navigation pour enregistrer du contenu.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1640">When overridden in a derived class, gets a value indicating whether the current encoding can be used by browser clients for saving content.</span></span></summary>
        <value>
          <span data-ttu-id="63ca9-1641"><see langword="true" /> si le <see cref="T:System.Text.Encoding" /> en cours peut être utilisé par les clients de navigateur pour enregistrer le contenu ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1641"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by browser clients for saving content; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="63ca9-1642">L’exemple suivant vérifie les valeurs des propriétés booléennes de chaque encodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1642">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsBrowserDisplay" />
      </Docs>
    </Member>
    <Member MemberName="IsMailNewsDisplay">
      <MemberSignature Language="C#" Value="public virtual bool IsMailNewsDisplay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMailNewsDisplay" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsMailNewsDisplay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMailNewsDisplay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMailNewsDisplay { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-1643">En cas de substitution dans une classe dérivée, obtient une valeur indiquant si l'encodage actuel peut être utilisé par les clients de messagerie et de news pour afficher du contenu.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1643">When overridden in a derived class, gets a value indicating whether the current encoding can be used by mail and news clients for displaying content.</span></span></summary>
        <value>
          <span data-ttu-id="63ca9-1644"><see langword="true" /> si le <see cref="T:System.Text.Encoding" /> en cours peut être utilisé par les clients de messagerie et de news pour afficher le contenu ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1644"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by mail and news clients for displaying content; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="63ca9-1645">L’exemple suivant vérifie les valeurs des propriétés booléennes de chaque encodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1645">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsMailNewsDisplay" />
      </Docs>
    </Member>
    <Member MemberName="IsMailNewsSave">
      <MemberSignature Language="C#" Value="public virtual bool IsMailNewsSave { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMailNewsSave" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsMailNewsSave" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMailNewsSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMailNewsSave { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-1646">En cas de substitution dans une classe dérivée, obtient une valeur indiquant si l'encodage actuel peut être utilisé par les clients de messagerie et de news pour enregistrer du contenu.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1646">When overridden in a derived class, gets a value indicating whether the current encoding can be used by mail and news clients for saving content.</span></span></summary>
        <value>
          <span data-ttu-id="63ca9-1647"><see langword="true" /> si le <see cref="T:System.Text.Encoding" /> actuel peut être utilisé par les clients de messagerie et de news pour enregistrer du contenu ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1647"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by mail and news clients for saving content; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="63ca9-1648">L’exemple suivant vérifie les valeurs des propriétés booléennes de chaque encodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1648">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsMailNewsSave" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-1649">En cas de substitution dans une classe dérivée, obtient une valeur indiquant si l'encodage actuel est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1649">When overridden in a derived class, gets a value indicating whether the current encoding is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="63ca9-1650"><see langword="true" /> si le <see cref="T:System.Text.Encoding" /> actuel est en lecture seule ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1650"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="63ca9-1651">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1651">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSingleByte">
      <MemberSignature Language="C#" Value="public virtual bool IsSingleByte { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingleByte" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsSingleByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSingleByte As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSingleByte { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-1652">En cas de substitution dans une classe dérivée, obtient une valeur indiquant si l'encodage actuel utilise des points de code codés sur un octet.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1652">When overridden in a derived class, gets a value indicating whether the current encoding uses single-byte code points.</span></span></summary>
        <value>
          <span data-ttu-id="63ca9-1653"><see langword="true" /> si le <see cref="T:System.Text.Encoding" /> actuel utilise des points de code codés sur un octet ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1653"><see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> uses single-byte code points; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1654">Sur un octet d’encodage, par exemple, <xref:System.Text.ASCIIEncoding>, cette propriété récupère `true`.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1654">For a single-byte encoding, for example, <xref:System.Text.ASCIIEncoding>, this property retrieves `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="63ca9-1655">Vous devez être prudent dans ce que votre application fait avec la valeur de <xref:System.Text.Encoding.IsSingleByte%2A>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1655">You should be careful in what your application does with the value for <xref:System.Text.Encoding.IsSingleByte%2A>.</span></span> <span data-ttu-id="63ca9-1656">Une hypothèse de la façon dont un encodage continuera peut toujours être incorrecte.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1656">An assumption of how an Encoding will proceed may still be wrong.</span></span> <span data-ttu-id="63ca9-1657">Par exemple, Windows-1252 a une valeur de `true` pour <xref:System.Text.Encoding.IsSingleByte%2A?displayProperty=nameWithType>, mais Encoding.GetMaxByteCount (1) renvoie 2.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1657">For example, Windows-1252 has a value of `true` for <xref:System.Text.Encoding.IsSingleByte%2A?displayProperty=nameWithType>, but Encoding.GetMaxByteCount(1) returns 2.</span></span> <span data-ttu-id="63ca9-1658">Il s’agit, car la méthode prend en compte les substituts potentiels restants d’une opération de décodeur précédente.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1658">This is because the method considers potential leftover surrogates from a previous decoder operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1659">L’exemple suivant vérifie les valeurs des propriétés booléennes de chaque encodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1659">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Preamble">
      <MemberSignature Language="C#" Value="public virtual ReadOnlySpan&lt;byte&gt; Preamble { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; Preamble" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.Preamble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Preamble As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property ReadOnlySpan&lt;System::Byte&gt; Preamble { ReadOnlySpan&lt;System::Byte&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterProvider">
      <MemberSignature Language="C#" Value="public static void RegisterProvider (System.Text.EncodingProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterProvider(class System.Text.EncodingProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterProvider (provider As EncodingProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterProvider(System::Text::EncodingProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Text.EncodingProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="63ca9-1660">Sous-classe de <see cref="T:System.Text.EncodingProvider" /> qui fournit l'accès à des encodages de caractères supplémentaires.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1660">A subclass of <see cref="T:System.Text.EncodingProvider" /> that provides access to additional character encodings.</span></span></param>
        <summary><span data-ttu-id="63ca9-1661">Enregistre un fournisseur d'encodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1661">Registers an encoding provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1662">Le <xref:System.Text.Encoding.RegisterProvider%2A> méthode vous permet d’enregistrer une classe dérivée de <xref:System.Text.EncodingProvider> qui rend caractères encodages disponibles sur une plateforme qui ne les gère pas dans le cas contraire.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1662">The <xref:System.Text.Encoding.RegisterProvider%2A> method allows you to register a class derived from <xref:System.Text.EncodingProvider> that makes character encodings available on a platform that does not otherwise support them.</span></span> <span data-ttu-id="63ca9-1663">Une fois que le fournisseur d’encodage est enregistré, les encodages pris en charge peuvent être récupérés en appelant une <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> de surcharge.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1663">Once the encoding provider is registered, the encodings that it supports can be retrieved by calling any <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="63ca9-1664">S’il existe plusieurs fournisseurs de codage, le <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> méthode tente de récupérer un encodage spécifié à partir de chaque fournisseur commençant par la plus récemment enregistrés.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1664">If there are multiple encoding providers, the <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> method attempts to retrieve a specified encoding from each provider starting with the one most recently registered.</span></span>

<span data-ttu-id="63ca9-1665">L’inscription d’un fournisseur d’encodage à l’aide de la <xref:System.Text.Encoding.RegisterProvider%2A> méthode modifie également le comportement de la [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) et [EncodingProvider.GetEncoding (Int32, EncoderFallback, DecoderFallback )](xref:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)) méthodes quand il est passé un argument de `0`:</span><span class="sxs-lookup"><span data-stu-id="63ca9-1665">Registering an encoding provider by using the <xref:System.Text.Encoding.RegisterProvider%2A> method also modifies the behavior of the [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) and [EncodingProvider.GetEncoding(Int32, EncoderFallback, DecoderFallback)](xref:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)) methods when passed an argument of `0`:</span></span>

- <span data-ttu-id="63ca9-1666">Si le fournisseur inscrit est le <xref:System.Text.CodePagesEncodingProvider>, la méthode retourne l’encodage qui correspond à la page de code active du système lors de l’exécution sur le système d’exploitation Windows.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1666">If the registered provider is the <xref:System.Text.CodePagesEncodingProvider>, the method returns the encoding that matches the system active code page when running on the Windows operating system.</span></span>

- <span data-ttu-id="63ca9-1667">Un fournisseur d’encodage personnalisé peut choisir le codage à retourner lorsque une de ces <xref:System.Text.Encoding.GetEncoding%2A> surcharges de méthode est passé un argument de `0`.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1667">A custom encoding provider can choose which encoding to return when either of these <xref:System.Text.Encoding.GetEncoding%2A> method overloads is passed an argument of `0`.</span></span> <span data-ttu-id="63ca9-1668">Le fournisseur peut choisir également à ne pas retourner un encodage en ayant la <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> retour de la méthode `null`.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1668">The provider can also choose to not return an encoding by having the <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> method return `null`.</span></span> 
  
 [!INCLUDE[net_v46](~/includes/net-v46-md.md)]<span data-ttu-id="63ca9-1669"> inclut un fournisseur d’encodage, <xref:System.Text.CodePagesEncodingProvider>, qui rend les encodages disponibles qui sont présents dans le .NET Framework, mais ne sont pas disponibles dans [!INCLUDE[net_v46](~/includes/net-v46-md.md)].</span><span class="sxs-lookup"><span data-stu-id="63ca9-1669"> includes one encoding provider, <xref:System.Text.CodePagesEncodingProvider>, that makes the encodings available that are present in the full .NET Framework but are not available in [!INCLUDE[net_v46](~/includes/net-v46-md.md)].</span></span> <span data-ttu-id="63ca9-1670">Par défaut, [!INCLUDE[net_v46](~/includes/net-v46-md.md)] prend uniquement en charge les encodages Unicode, ASCII et page de codes 28591.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1670">By default, [!INCLUDE[net_v46](~/includes/net-v46-md.md)] only supports the Unicode encodings, ASCII, and code page 28591.</span></span>  
  
 <span data-ttu-id="63ca9-1671">Si le même fournisseur d’encodage est utilisé dans plusieurs appels à la <xref:System.Text.Encoding.RegisterProvider%2A> méthode, seul le premier appel de méthode inscrit le fournisseur.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1671">If the same encoding provider is used in multiple calls to the <xref:System.Text.Encoding.RegisterProvider%2A> method, only the first method call registers the provider.</span></span> <span data-ttu-id="63ca9-1672">Les appels suivants sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1672">Subsequent calls are ignored.</span></span>  
  
 <span data-ttu-id="63ca9-1673">Si la <xref:System.Text.Encoding.RegisterProvider%2A> est appelée pour inscrire plusieurs fournisseurs qui gèrent le même encodage, le dernier fournisseur enregistré est utilisée pour tous les encodage et les opérations de décodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1673">If the <xref:System.Text.Encoding.RegisterProvider%2A> method is called to register multiple providers that handle the same encoding, the last registered provider is the used for all encoding and decoding operations.</span></span> <span data-ttu-id="63ca9-1674">Tous les fournisseurs inscrits précédemment sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1674">Any previously registered providers are ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="63ca9-1675"><paramref name="provider" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1675"><paramref name="provider" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Text.CodePagesEncodingProvider" />
        <altmember cref="T:System.Text.EncodingProvider" />
      </Docs>
    </Member>
    <Member MemberName="Unicode">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding Unicode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding Unicode" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.Unicode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Unicode As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ Unicode { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-1676">Obtient un encodage pour le format UTF-16 avec primauté des octets de poids faible (little-endian).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1676">Gets an encoding for the UTF-16 format using the little endian byte order.</span></span></summary>
        <value><span data-ttu-id="63ca9-1677">Encodage pour le format UTF-16 en utilisant l'ordre d'octet avec primauté des octets de poids faible (Little Endian).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1677">An encoding for the UTF-16 format using the little endian byte order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1678">Pour plus d’informations sur les encodages pris en charge par le .NET Framework et en savoir plus sur le codage Unicode à utiliser, consultez [l’encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1678">For information about the encodings supported by the .NET Framework and a discussion of which Unicode encoding to use, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="63ca9-1679">Le <xref:System.Text.UnicodeEncoding> objet qui est retourné par cette propriété ne peut pas avoir le comportement approprié pour votre application.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1679">The <xref:System.Text.UnicodeEncoding> object that is returned by this property may not have the appropriate behavior for your app.</span></span> <span data-ttu-id="63ca9-1680">Il utilise le remplacement de secours pour remplacer chaque chaîne qu’il ne peut pas encoder et chaque octet qu’il ne peut pas décoder par un point d’interrogation (« ? ») caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1680">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with a question mark ("?") character.</span></span> <span data-ttu-id="63ca9-1681">Au lieu de cela, vous pouvez appeler la <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructeur pour instancier un little endian <xref:System.Text.UnicodeEncoding> objet dont exception de secours est un <xref:System.Text.EncoderFallbackException> ou <xref:System.Text.DecoderFallbackException>, comme l’illustre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1681">Instead, you can call the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a little endian <xref:System.Text.UnicodeEncoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.Unicode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.unicode/cs/unicode1.cs#2)]
 [!code-vb[System.Text.Encoding.Unicode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.unicode/vb/unicode1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1682">L’exemple suivant détermine le nombre d’octets requis pour encoder un tableau de caractères, encode les caractères et affiche le nombre d’octets résultant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1682">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UnicodeEncoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <altmember cref="P:System.Text.Encoding.BigEndianUnicode" />
      </Docs>
    </Member>
    <Member MemberName="UTF32">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding UTF32 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding UTF32" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.UTF32" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UTF32 As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ UTF32 { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-1683">Obtient un encodage pour le format UTF-32 avec primauté des octets de poids faible (little-endian).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1683">Gets an encoding for the UTF-32 format using the little endian byte order.</span></span></summary>
        <value><span data-ttu-id="63ca9-1684">Objet d'encodage pour le format UTF-32 utilisant l'ordre d'octet avec primauté des octets de poids faible (little-endian).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1684">An  encoding object for the UTF-32 format using the little endian byte order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1685">Le <xref:System.Text.UTF32Encoding> objet qui est retourné par cette propriété ne peut pas avoir le comportement approprié pour votre application.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1685">The <xref:System.Text.UTF32Encoding> object that is returned by this property may not have the appropriate behavior for your app.</span></span> <span data-ttu-id="63ca9-1686">Il utilise le remplacement de secours pour remplacer chaque chaîne qu’il ne peut pas encoder et chaque octet qu’il ne peut pas décoder par le caractère de remplacement Unicode (U + FFFE).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1686">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with the Unicode REPLACEMENT CHARACTER (U+FFFE).</span></span> <span data-ttu-id="63ca9-1687">Au lieu de cela, vous pouvez appeler la <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructeur pour instancier un <xref:System.Text.UTF32Encoding> objet dont exception de secours est un <xref:System.Text.EncoderFallbackException> ou <xref:System.Text.DecoderFallbackException>, comme l’illustre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1687">Instead, you can call the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a <xref:System.Text.UTF32Encoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.UTF32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.utf32/cs/encoding.utf32.1.cs#1)]
 [!code-vb[System.Text.Encoding.UTF32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.utf32/vb/encoding.utf32.1.vb#1)]  
  
 <span data-ttu-id="63ca9-1688">Pour une présentation de primauté des octets, consultez la <xref:System.Text.Encoding> rubrique de la classe.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1688">For a discussion of little endian byte order, see the <xref:System.Text.Encoding> class topic.</span></span>  
  
 <span data-ttu-id="63ca9-1689">Pour plus d’informations sur les encodages pris en charge par le .NET Framework et en savoir plus sur le codage Unicode à utiliser, consultez [l’encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1689">For information about the encodings supported by the .NET Framework and a discussion of which Unicode encoding to use, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1690">L’exemple suivant détermine le nombre d’octets requis pour encoder un tableau de caractères, encode les caractères et affiche le nombre d’octets résultant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1690">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UTF32Encoding" />
        <altmember cref="P:System.Text.Encoding.UTF8" />
        <altmember cref="P:System.Text.Encoding.Unicode" />
        <altmember cref="P:System.Text.Encoding.BigEndianUnicode" />
      </Docs>
    </Member>
    <Member MemberName="UTF7">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding UTF7 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding UTF7" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.UTF7" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UTF7 As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ UTF7 { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-1691">Obtient un encodage pour le format UTF-7.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1691">Gets an encoding for the UTF-7 format.</span></span></summary>
        <value><span data-ttu-id="63ca9-1692">Encodage pour le format UTF-7.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1692">An encoding for the UTF-7 format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1693">L’encodage UTF-7 est utilisé principalement dans les environnements historiquement restreintes à 7 bits, tels que NNTP et certaines applications de messagerie.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1693">UTF-7 encoding is used primarily in environments that historically have been restricted to 7 bits, such as NNTP and some email applications.</span></span> <span data-ttu-id="63ca9-1694">En raison de problèmes avec la robustesse et la sécurité, vous ne devez pas utiliser UTF7 encodage dans des environnements de 8 bits où le codage UTF-8 peut être utilisé à la place.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1694">Because of issues with robustness and security, you should not use UTF7 encoding in 8-bit environments where UTF-8 encoding can be used instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1695">L’exemple suivant détermine le nombre d’octets requis pour encoder un tableau de caractères, encode les caractères et affiche le nombre d’octets résultant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1695">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UTF7Encoding" />
        <altmember cref="P:System.Text.Encoding.UTF8" />
      </Docs>
    </Member>
    <Member MemberName="UTF8">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding UTF8 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding UTF8" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.UTF8" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UTF8 As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ UTF8 { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-1696">Obtient un encodage pour le format UTF-8.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1696">Gets an encoding for the UTF-8 format.</span></span></summary>
        <value><span data-ttu-id="63ca9-1697">Encodage pour le format UTF-8.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1697">An encoding for the UTF-8 format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1698">Cette propriété retourne un <xref:System.Text.UTF8Encoding> objet qui encode les caractères Unicode (UTF-16-encodées) en une séquence d’un à quatre octets par caractère, et cela décode un tableau d’octets d’encodée en UTF-8 pour les caractères Unicode (UTF-16-encodées).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1698">This property returns a <xref:System.Text.UTF8Encoding> object that encodes Unicode (UTF-16-encoded) characters into a sequence of one to four bytes per character, and that decodes a UTF-8-encoded byte array to Unicode (UTF-16-encoded) characters.</span></span> <span data-ttu-id="63ca9-1699">Pour plus d’informations sur les codages de caractères pris en charge par le .NET Framework et en savoir plus sur le codage Unicode à utiliser, consultez [l’encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1699">For information about the character encodings supported by the .NET Framework and a discussion of which Unicode encoding to use, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="63ca9-1700">Le <xref:System.Text.UTF8Encoding> objet qui est retourné par cette propriété ne peut pas avoir le comportement approprié pour votre application.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1700">The <xref:System.Text.UTF8Encoding> object that is returned by this property might not have the appropriate behavior for your app.</span></span>  
  
-   <span data-ttu-id="63ca9-1701">Elle retourne un <xref:System.Text.UTF8Encoding> objet qui fournit une marque d’ordre octet (BOM) Unicode.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1701">It returns a <xref:System.Text.UTF8Encoding> object that provides a Unicode byte order mark (BOM).</span></span> <span data-ttu-id="63ca9-1702">Pour instancier un encodage UTF-8 qui ne fournit pas une nomenclature, appelez aucune surcharge de la <xref:System.Text.UTF8Encoding.%23ctor%2A> constructeur.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1702">To instantiate a UTF8 encoding that doesn't provide a BOM, call any overload of the <xref:System.Text.UTF8Encoding.%23ctor%2A> constructor.</span></span>  
  
-   <span data-ttu-id="63ca9-1703">Elle retourne un <xref:System.Text.UTF8Encoding> objet qui utilise le remplacement de secours pour remplacer chaque chaîne qu’il ne peut pas encoder et chaque octet qu’il ne peut pas décoder par un point d’interrogation (« ? ») caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1703">It returns a <xref:System.Text.UTF8Encoding> object that uses replacement fallback to replace each string that it can't encode and each byte that it can't decode with a question mark ("?") character.</span></span> <span data-ttu-id="63ca9-1704">Au lieu de cela, vous pouvez appeler la <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructeur pour instancier un <xref:System.Text.UTF8Encoding> objet dont exception de secours est un <xref:System.Text.EncoderFallbackException> ou <xref:System.Text.DecoderFallbackException>, comme l’illustre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1704">Instead, you can call the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a <xref:System.Text.UTF8Encoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
     [!code-csharp[System.Text.Encoding.UTF8#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.utf8/cs/encoding.utf8.1.cs#1)]
     [!code-vb[System.Text.Encoding.UTF8#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.utf8/vb/encoding.utf8.1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1705">L’exemple suivant définit un tableau qui se compose des caractères suivants :</span><span class="sxs-lookup"><span data-stu-id="63ca9-1705">The following example defines an array that consists of the following characters:</span></span>  
  
-   <span data-ttu-id="63ca9-1706">LETTRE MINUSCULE LATINE Z (U + 007 A)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1706">LATIN SMALL LETTER Z (U+007A)</span></span>  
  
-   <span data-ttu-id="63ca9-1707">LATIN LETTRE MINUSCULE (U + 0061)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1707">LATIN SMALL LETTER A (U+0061)</span></span>  
  
-   <span data-ttu-id="63ca9-1708">COMBINAISON BRÈVE (U + 0306)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1708">COMBINING BREVE (U+0306)</span></span>  
  
-   <span data-ttu-id="63ca9-1709">LETTRE MINUSCULE LATINE AE AVEC AIGUS (U + 01FD)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1709">LATIN SMALL LETTER AE WITH ACUTE (U+01FD)</span></span>  
  
-   <span data-ttu-id="63ca9-1710">LETTRE MINUSCULE GRECQUE BÊTA (U + 03B2)</span><span class="sxs-lookup"><span data-stu-id="63ca9-1710">GREEK SMALL LETTER BETA (U+03B2)</span></span>  
  
-   <span data-ttu-id="63ca9-1711">Une paire de substitution (U + D800 U + DD54) qui forme le grec ACROPHONIC ATTIC un milliers STATERS (U + 10154).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1711">A surrogate pair (U+D800 U+DD54) that forms GREEK ACROPHONIC ATTIC ONE THOUSAND STATERS (U+10154).</span></span>  
  
 <span data-ttu-id="63ca9-1712">Il affiche les unités de code UTF-16 de chaque caractère et détermine le nombre d’octets requis par un encodeur UTF-8 pour encoder le tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1712">It displays the UTF-16 code units of each character and determines the number of bytes required by a UTF-8 encoder to encode the character array.</span></span> <span data-ttu-id="63ca9-1713">Il encode les caractères et affiche les octets encodée en UTF-8 qui en résulte.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1713">It then encodes the characters and displays the resulting UTF-8-encoded bytes.</span></span>  
  
 [!code-csharp[System.Text.Encoding.UTF8#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.utf8/cs/example1.cs#2)]
 [!code-vb[System.Text.Encoding.UTF8#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.utf8/vb/example1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UTF8Encoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WebName">
      <MemberSignature Language="C#" Value="public virtual string WebName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WebName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.WebName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ WebName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-1714">En cas de substitution dans une classe dérivée, obtient le nom inscrit auprès de l'IANA (Internet Assigned Numbers Authority) pour l'encodage actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1714">When overridden in a derived class, gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.</span></span></summary>
        <value><span data-ttu-id="63ca9-1715">Nom IANA pour le <see cref="T:System.Text.Encoding" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1715">The IANA name for the current <see cref="T:System.Text.Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1716">Le <xref:System.Text.Encoding.WebName%2A> propriété est le même que le <xref:System.Text.EncodingInfo.Name%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1716">The <xref:System.Text.Encoding.WebName%2A> property is the same as the <xref:System.Text.EncodingInfo.Name%2A> property.</span></span>  
  
 <span data-ttu-id="63ca9-1717">Notez que <xref:System.Text.Encoding.WebName%2A> retourne un nom enregistré IANA pour le codage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1717">Note that <xref:System.Text.Encoding.WebName%2A> returns an IANA-registered name for the encoding.</span></span> <span data-ttu-id="63ca9-1718">Lorsque sa valeur est le nom de la norme, l’implémentation de l’encodage n’est peut-être pas conforme dans sa totalité de cette norme.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1718">When its value is the name of a standard, the implementation of the encoding might not conform in full to that standard.</span></span> <span data-ttu-id="63ca9-1719">Le <xref:System.Text.Encoding.HeaderName%2A> propriété définit un encodage différent qui peut fonctionner mieux pour les en-têtes de courrier électronique.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1719">The <xref:System.Text.Encoding.HeaderName%2A> property defines a different encoding that might work better for email headers.</span></span> <span data-ttu-id="63ca9-1720">Toutefois, la plupart des applications doivent utiliser <xref:System.Text.Encoding.WebName%2A> à la place.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1720">However, most apps should use <xref:System.Text.Encoding.WebName%2A> instead.</span></span>  
  
 <span data-ttu-id="63ca9-1721">Pour plus d’informations sur l’IANA, accédez à [www.iana.org](https://www.iana.org/).</span><span class="sxs-lookup"><span data-stu-id="63ca9-1721">For more information on the IANA, go to [www.iana.org](https://www.iana.org/).</span></span>  
  
 <span data-ttu-id="63ca9-1722">Le <xref:System.Text.Encoding.WebName%2A?displayProperty=nameWithType> est le même que le <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> retourné par <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1722">The <xref:System.Text.Encoding.WebName%2A?displayProperty=nameWithType> is the same as the <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> returned by <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="63ca9-1723">Certains noms web sont des doublons ; consultez la section Notes pour <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> pour plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1723">Some of the web names are duplicates; see the remarks for <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1724">L’exemple suivant inclut le <xref:System.Text.Encoding.WebName%2A> dans un en-tête HTML.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1724">The following example includes the <xref:System.Text.Encoding.WebName%2A> in an HTML header.</span></span>  
  
 [!code-cpp[System.Text.Encoding.WebName#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.WebName/CPP/webname.cpp#1)]
 [!code-csharp[System.Text.Encoding.WebName#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.WebName/CS/webname.cs#1)]
 [!code-vb[System.Text.Encoding.WebName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.WebName/VB/webname.vb#1)]  
  
 <span data-ttu-id="63ca9-1725">L’exemple suivant récupère les noms de chaque codage et affiche les encodages avec un ou plusieurs noms différents de <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1725">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="63ca9-1726">Il affiche <xref:System.Text.Encoding.EncodingName%2A> mais ne compare pas par rapport à elle.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1726">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.Name" />
        <altmember cref="P:System.Text.Encoding.BodyName" />
        <altmember cref="P:System.Text.Encoding.EncodingName" />
        <altmember cref="P:System.Text.Encoding.HeaderName" />
      </Docs>
    </Member>
    <Member MemberName="WindowsCodePage">
      <MemberSignature Language="C#" Value="public virtual int WindowsCodePage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowsCodePage" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.WindowsCodePage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WindowsCodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WindowsCodePage { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63ca9-1727">En cas de substitution dans une classe dérivée, obtient la page de codes du système d'exploitation Windows la plus proche de l'encodage actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1727">When overridden in a derived class, gets the Windows operating system code page that most closely corresponds to the current encoding.</span></span></summary>
        <value><span data-ttu-id="63ca9-1728">Page de codes du système d'exploitation Windows la plus proche du <see cref="T:System.Text.Encoding" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1728">The Windows operating system code page that most closely corresponds to the current <see cref="T:System.Text.Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ca9-1729">Cette propriété est fournie pour la compatibilité avec les API Windows multilingue (MLang), par exemple, pour déterminer les familles de polices.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1729">This property is provided for compatibility with the Windows MultiLanguage (MLang) APIs, for example, in determining font families.</span></span> <span data-ttu-id="63ca9-1730">Pour la globalisation, il est recommandé d’à la place l’un des encodages Unicode.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1730">For globalization, using one of the Unicode encodings is recommended instead.</span></span> <span data-ttu-id="63ca9-1731">Il est également recommandé d’utiliser <xref:System.Text.Encoding.WebName%2A> au lieu de <xref:System.Text.Encoding.WindowsCodePage%2A> pour identifier la page de codes.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1731">It is also recommended to use <xref:System.Text.Encoding.WebName%2A> instead of <xref:System.Text.Encoding.WindowsCodePage%2A> to identify the code page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63ca9-1732">L’exemple suivant détermine la page de codes Windows la plus proche de chaque encodage.</span><span class="sxs-lookup"><span data-stu-id="63ca9-1732">The following example determines the Windows code page that most closely corresponds to each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.CodePage#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.CodePage/CPP/codepage.cpp#1)]
 [!code-csharp[System.Text.Encoding.CodePage#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.CodePage/CS/codepage.cs#1)]
 [!code-vb[System.Text.Encoding.CodePage#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.CodePage/VB/codepage.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="P:System.Text.EncodingInfo.CodePage" />
      </Docs>
    </Member>
  </Members>
</Type>