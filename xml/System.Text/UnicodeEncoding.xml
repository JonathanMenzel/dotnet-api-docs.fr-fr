<Type Name="UnicodeEncoding" FullName="System.Text.UnicodeEncoding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="549492385a3d7c2dd739c8e0753f56ad4a01a74c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37549079" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UnicodeEncoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UnicodeEncoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UnicodeEncoding" />
  <TypeSignature Language="VB.NET" Value="Public Class UnicodeEncoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnicodeEncoding : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type UnicodeEncoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6fd97-101">Represents a UTF-16 encoding of Unicode characters.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6fd97-101">Represents a UTF-16 encoding of Unicode characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-102">L'encodage est le processus de transformation d'un jeu de caractères Unicode en une séquence d'octets.</span><span class="sxs-lookup"><span data-stu-id="6fd97-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="6fd97-103">Le décodage est le processus de transformation d’une séquence d’octets codés en un jeu de caractères Unicode.</span><span class="sxs-lookup"><span data-stu-id="6fd97-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="6fd97-104">Le [norme Unicode](http://go.microsoft.com/fwlink/?linkid=37123) assigne un point de code (nombre) à chaque caractère dans chaque script pris en charge.</span><span class="sxs-lookup"><span data-stu-id="6fd97-104">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) assigns a code point (a number) to each character in every supported script.</span></span> <span data-ttu-id="6fd97-105">Un Format UTF (Unicode Transformation) est un moyen pour encoder ce point de code.</span><span class="sxs-lookup"><span data-stu-id="6fd97-105">A Unicode Transformation Format (UTF) is a way to encode that code point.</span></span> <span data-ttu-id="6fd97-106">Le [norme Unicode](http://go.microsoft.com/fwlink/?linkid=37123) utilise les formats UTF suivants :</span><span class="sxs-lookup"><span data-stu-id="6fd97-106">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) uses the following UTFs:</span></span>  
  
-   <span data-ttu-id="6fd97-107">UTF-8, qui représente chaque point de code sous la forme d’une séquence d’un à quatre octets.</span><span class="sxs-lookup"><span data-stu-id="6fd97-107">UTF-8, which represents each code point as a sequence of one to four bytes.</span></span>  
  
-   <span data-ttu-id="6fd97-108">UTF-16, ce qui représente chaque point de code sous la forme d’une séquence d’entiers 16 bits d’une à deux.</span><span class="sxs-lookup"><span data-stu-id="6fd97-108">UTF-16, which represents each code point as a sequence of one to two 16-bit integers.</span></span>  
  
-   <span data-ttu-id="6fd97-109">UTF-32, ce qui représente chaque point de code sous la forme d’un entier 32 bits.</span><span class="sxs-lookup"><span data-stu-id="6fd97-109">UTF-32, which represents each code point as a 32-bit integer.</span></span>  
  
 <span data-ttu-id="6fd97-110">Pour plus d’informations sur les formats UTF et d’autres encodages pris en charge par <xref:System.Text>, consultez [encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="6fd97-110">For more information about the UTFs and other encodings supported by <xref:System.Text>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="6fd97-111">Le <xref:System.Text.UnicodeEncoding> classe représente un encodage UTF-16.</span><span class="sxs-lookup"><span data-stu-id="6fd97-111">The <xref:System.Text.UnicodeEncoding> class represents a UTF-16 encoding.</span></span> <span data-ttu-id="6fd97-112">L’encodeur peut utiliser l’ordre de primauté des octets (octet le plus significatif premier) ou primauté des octets (octet le moins significatif premier).</span><span class="sxs-lookup"><span data-stu-id="6fd97-112">The encoder can use either big endian byte order (most significant byte first) or little endian byte order (least significant byte first).</span></span> <span data-ttu-id="6fd97-113">Par exemple, la lettre majuscule latine A (point de code U + 0041) est sérialisée comme suit (en hexadécimal) :</span><span class="sxs-lookup"><span data-stu-id="6fd97-113">For example, the Latin Capital Letter A (code point U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="6fd97-114">Ordre de primauté des octets : 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="6fd97-114">Big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="6fd97-115">Primauté des octets : 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="6fd97-115">Little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="6fd97-116">Il est généralement plus efficace pour stocker des caractères Unicode à l’aide de l’ordre d’octet natif d’une plateforme spécifique.</span><span class="sxs-lookup"><span data-stu-id="6fd97-116">It is generally more efficient to store Unicode characters using the native byte order of a particular platform.</span></span> <span data-ttu-id="6fd97-117">Par exemple, il est préférable d’utiliser l’ordre d’octet avec primauté sur des plateformes little-endian, tels que des ordinateurs Intel.</span><span class="sxs-lookup"><span data-stu-id="6fd97-117">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span> <span data-ttu-id="6fd97-118">Le <xref:System.Text.UnicodeEncoding> classe correspond aux pages de codes 1200 (ordre de primauté des octets little) et 1201 (ordre de primauté des octets) de Windows.</span><span class="sxs-lookup"><span data-stu-id="6fd97-118">The <xref:System.Text.UnicodeEncoding> class corresponds to the Windows code pages 1200 (little endian byte order) and 1201 (big endian byte order).</span></span> <span data-ttu-id="6fd97-119">Vous pouvez déterminer le « endianness » d’une architecture particulière en appelant le <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-119">You can determine the "endianness" of a particular architecture by calling the <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6fd97-120">Si vous le souhaitez, le <xref:System.Text.UnicodeEncoding> objet fournit une marque d’ordre d’octet (BOM), qui est un tableau d’octets qui peut porter comme préfixe à la séquence d’octets résultant du processus de codage.</span><span class="sxs-lookup"><span data-stu-id="6fd97-120">Optionally, the <xref:System.Text.UnicodeEncoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="6fd97-121">Si le préambule contient une marque d’ordre d’octet (BOM), il aide le décodeur à déterminer l’ordre d’octet et que le format de transformation ou UTF.</span><span class="sxs-lookup"><span data-stu-id="6fd97-121">If the preamble contains a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF.</span></span>  
  
 <span data-ttu-id="6fd97-122">Si le <xref:System.Text.UnicodeEncoding> instance est configurée pour fournir une nomenclature, vous pouvez le récupérer en appelant le <xref:System.Text.UnicodeEncoding.GetPreamble%2A> méthode ; sinon, la méthode retourne un tableau vide.</span><span class="sxs-lookup"><span data-stu-id="6fd97-122">If the <xref:System.Text.UnicodeEncoding> instance is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="6fd97-123">Notez que, même si un <xref:System.Text.UnicodeEncoding> objet est configuré pour prendre en charge de la nomenclature, vous devez inclure la marque BOM au début du flux d’octets encodé selon le cas ; les méthodes d’encodage de la <xref:System.Text.UnicodeEncoding> classe ne le faites pas cela automatiquement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-123">Note that, even if a <xref:System.Text.UnicodeEncoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UnicodeEncoding> class do not do this automatically.</span></span>  
  
 <span data-ttu-id="6fd97-124">Pour activer la détection d’erreur et pour renforcer la sécurité de l’instance de classe, vous devez instancier un <xref:System.Text.UnicodeEncoding> objet en appelant le <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructeur et en définissant son `throwOnInvalidBytes` argument `true`.</span><span class="sxs-lookup"><span data-stu-id="6fd97-124">To enable error detection and to make the class instance more secure, you should instantiate a <xref:System.Text.UnicodeEncoding> object by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span> <span data-ttu-id="6fd97-125">Avec la détection d’erreurs, une méthode qui détecte une séquence de caractères ou d’octets non valide lève une <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-125">With error detection, a method that detects an invalid sequence of characters or bytes throws a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6fd97-126">Absence de détection d’erreur, aucune exception n’est levée, et la séquence non valide est généralement ignorée.</span><span class="sxs-lookup"><span data-stu-id="6fd97-126">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
 <span data-ttu-id="6fd97-127">Vous pouvez instancier un <xref:System.Text.UnicodeEncoding> objet dans un nombre de façons, selon que vous souhaitiez lui fournir une marque d’ordre d’octet (BOM), si vous souhaitez codage big-endian ou little-endian, et si vous souhaitez activer la détection d’erreur.</span><span class="sxs-lookup"><span data-stu-id="6fd97-127">You can instantiate a <xref:System.Text.UnicodeEncoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM), whether you want big-endian or little-endian encoding, and whether you want to enable error detection.</span></span> <span data-ttu-id="6fd97-128">Le tableau suivant répertorie les <xref:System.Text.UnicodeEncoding> constructeurs et les <xref:System.Text.Encoding> propriétés qui retournent un <xref:System.Text.UnicodeEncoding> objet.</span><span class="sxs-lookup"><span data-stu-id="6fd97-128">The following table lists the <xref:System.Text.UnicodeEncoding> constructors and the <xref:System.Text.Encoding> properties that return a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
|<span data-ttu-id="6fd97-129">Membre</span><span class="sxs-lookup"><span data-stu-id="6fd97-129">Member</span></span>|<span data-ttu-id="6fd97-130">Endianness</span><span class="sxs-lookup"><span data-stu-id="6fd97-130">Endianness</span></span>|<span data-ttu-id="6fd97-131">NOMENCLATURE</span><span class="sxs-lookup"><span data-stu-id="6fd97-131">BOM</span></span>|<span data-ttu-id="6fd97-132">Détection d’erreurs</span><span class="sxs-lookup"><span data-stu-id="6fd97-132">Error detection</span></span>|  
|------------|----------------|---------|---------------------|  
|<xref:System.Text.Encoding.BigEndianUnicode%2A>|<span data-ttu-id="6fd97-133">Big-endian</span><span class="sxs-lookup"><span data-stu-id="6fd97-133">Big-endian</span></span>|<span data-ttu-id="6fd97-134">Oui</span><span class="sxs-lookup"><span data-stu-id="6fd97-134">Yes</span></span>|<span data-ttu-id="6fd97-135">Aucun (remplacement de secours)</span><span class="sxs-lookup"><span data-stu-id="6fd97-135">No (Replacement fallback)</span></span>|  
|<xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType>|<span data-ttu-id="6fd97-136">Little endian</span><span class="sxs-lookup"><span data-stu-id="6fd97-136">Little-endian</span></span>|<span data-ttu-id="6fd97-137">Oui</span><span class="sxs-lookup"><span data-stu-id="6fd97-137">Yes</span></span>|<span data-ttu-id="6fd97-138">Aucun (remplacement de secours)</span><span class="sxs-lookup"><span data-stu-id="6fd97-138">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="6fd97-139">Little endian</span><span class="sxs-lookup"><span data-stu-id="6fd97-139">Little-endian</span></span>|<span data-ttu-id="6fd97-140">Oui</span><span class="sxs-lookup"><span data-stu-id="6fd97-140">Yes</span></span>|<span data-ttu-id="6fd97-141">Aucun (remplacement de secours)</span><span class="sxs-lookup"><span data-stu-id="6fd97-141">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29>|<span data-ttu-id="6fd97-142">Configurable</span><span class="sxs-lookup"><span data-stu-id="6fd97-142">Configurable</span></span>|<span data-ttu-id="6fd97-143">Configurable</span><span class="sxs-lookup"><span data-stu-id="6fd97-143">Configurable</span></span>|<span data-ttu-id="6fd97-144">Aucun (remplacement de secours)</span><span class="sxs-lookup"><span data-stu-id="6fd97-144">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="6fd97-145">Configurable</span><span class="sxs-lookup"><span data-stu-id="6fd97-145">Configurable</span></span>|<span data-ttu-id="6fd97-146">Configurable</span><span class="sxs-lookup"><span data-stu-id="6fd97-146">Configurable</span></span>|<span data-ttu-id="6fd97-147">Configurable</span><span class="sxs-lookup"><span data-stu-id="6fd97-147">Configurable</span></span>|  
  
 <span data-ttu-id="6fd97-148">Le <xref:System.Text.UnicodeEncoding.GetByteCount%2A> méthode détermine le nombre d’octets entraînant le codage d’un jeu de caractères Unicode et le <xref:System.Text.UnicodeEncoding.GetBytes%2A> méthode exécute le codage.</span><span class="sxs-lookup"><span data-stu-id="6fd97-148">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="6fd97-149">De même, le <xref:System.Text.UnicodeEncoding.GetCharCount%2A> méthode détermine le nombre de caractères entraînant le décodage d’une séquence d’octets et le <xref:System.Text.UnicodeEncoding.GetChars%2A> et <xref:System.Text.UnicodeEncoding.GetString%2A> méthodes effectuent le décodage réel.</span><span class="sxs-lookup"><span data-stu-id="6fd97-149">Likewise, the <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UnicodeEncoding.GetChars%2A> and <xref:System.Text.UnicodeEncoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="6fd97-150">Pour un encodeur ou un décodeur qui est en mesure d’enregistrer les informations d’état lors de l’encodage ou de décodage de données qui s’étend sur plusieurs blocs (par exemple, la chaîne de 1 million de caractères qui est encodé dans les segments de 100 000 caractères), utilisez le <xref:System.Text.UnicodeEncoding.GetEncoder%2A> et <xref:System.Text.UnicodeEncoding.GetDecoder%2A> propriétés, respectivement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-150">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> and <xref:System.Text.UnicodeEncoding.GetDecoder%2A> properties, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fd97-151">L’exemple suivant montre comment encoder une chaîne de caractères Unicode en tableau d’octets à l’aide un <xref:System.Text.UnicodeEncoding> objet.</span><span class="sxs-lookup"><span data-stu-id="6fd97-151">The following example demonstrates how to encode a string of Unicode characters into a byte array by using a <xref:System.Text.UnicodeEncoding> object.</span></span> <span data-ttu-id="6fd97-152">Le tableau d’octets est décodé en une chaîne pour montrer qu’il n’existe aucune perte de données.</span><span class="sxs-lookup"><span data-stu-id="6fd97-152">The byte array is decoded into a string to demonstrate that there is no loss of data.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/VB/snippet.vb#1)]  
  
 <span data-ttu-id="6fd97-153">L’exemple suivant utilise la même chaîne que la précédente, sauf qu’il écrit les octets encodés dans un fichier et le flux d’octets avec une marque d’ordre d’octet (BOM) de préfixes.</span><span class="sxs-lookup"><span data-stu-id="6fd97-153">The following example uses the same string as the previous one, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="6fd97-154">Elle lit ensuite le fichier de deux manières différentes : en tant qu’un fichier texte à l’aide un <xref:System.IO.StreamReader> de l’objet ; et comme un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="6fd97-154">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="6fd97-155">Comme vous pouvez l’imaginer, en aucun cas est la marque BOM inclus dans la chaîne récemment lue.</span><span class="sxs-lookup"><span data-stu-id="6fd97-155">As you would expect, in neither case is the BOM included in the newly read string.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CS/bom1.cs#2)]
 [!code-vb[System.Text.UnicodeEncoding Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/VB/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.UTF32Encoding" />
    <altmember cref="T:System.Text.UTF8Encoding" />
    <altmember cref="T:System.Text.UTF7Encoding" />
    <altmember cref="T:System.Text.ASCIIEncoding" />
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="T:System.Globalization.CharUnicodeInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fd97-156">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-156">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fd97-157">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-157">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-158">Ce constructeur crée une instance qui utilise l’ordre d’octet avec primauté, fournit la marque d’ordre d’octet Unicode et ne lève pas d’exception lorsqu’un encodage non valide est détecté.</span><span class="sxs-lookup"><span data-stu-id="6fd97-158">This constructor creates an instance that uses the little endian byte order, provides a Unicode byte order mark, and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6fd97-159">Pour des raisons de sécurité, vous devez activer la détection d’erreur en appelant le <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructeur et en définissant son `throwOnInvalidBytes` argument `true`.</span><span class="sxs-lookup"><span data-stu-id="6fd97-159">For security reasons, you should enable error detection by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fd97-160">L’exemple suivant montre comment créer un nouveau <xref:System.Text.UnicodeEncoding> instance et affichez le nom de l’encodage.</span><span class="sxs-lookup"><span data-stu-id="6fd97-160">The following example demonstrates how to create a new <xref:System.Text.UnicodeEncoding> instance and display the name of the encoding.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding (bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding(bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="F#" Value="new System.Text.UnicodeEncoding : bool * bool -&gt; System.Text.UnicodeEncoding" Usage="new System.Text.UnicodeEncoding (bigEndian, byteOrderMark)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="6fd97-161">
            <see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-161">
              <see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          </span>
        </param>
        <param name="byteOrderMark">
          <span data-ttu-id="6fd97-162">
            <see langword="true" /> to specify that the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-162">
              <see langword="true" /> to specify that the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fd97-163">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-163">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span>
          </span>
          <span data-ttu-id="6fd97-164">Parameters specify whether to use the big endian byte order and whether the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-164">Parameters specify whether to use the big endian byte order and whether the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-165">Ce constructeur crée une instance qui ne lève pas d’exception lorsqu’un encodage non valide est détecté.</span><span class="sxs-lookup"><span data-stu-id="6fd97-165">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6fd97-166">Pour des raisons de sécurité, vous devez activer la détection d’erreur en appelant le <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructeur et en définissant son `throwOnInvalidBytes` argument `true`.</span><span class="sxs-lookup"><span data-stu-id="6fd97-166">For security reasons, you should enable error detection by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span>  
  
 <span data-ttu-id="6fd97-167">Le `byteOrderMark` paramètre contrôle le fonctionnement de la <xref:System.Text.UnicodeEncoding.GetPreamble%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-167">The `byteOrderMark` parameter controls the operation of the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="6fd97-168">Si `true`, la méthode retourne un tableau d’octets contenant la marque d’ordre d’octet Unicode (BOM) au format UTF-16.</span><span class="sxs-lookup"><span data-stu-id="6fd97-168">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-16 format.</span></span>  <span data-ttu-id="6fd97-169">Si `false`, elle retourne un tableau d’octets de longueur nulle.</span><span class="sxs-lookup"><span data-stu-id="6fd97-169">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="6fd97-170">Toutefois, l’affectation `byteOrderMark` à `true` n’entraîne pas la <xref:System.Text.UnicodeEncoding.GetBytes%2A> (méthode) pour préfixer la nomenclature au début du tableau d’octets, et ne déclenche le <xref:System.Text.UnicodeEncoding.GetByteCount%2A> méthode pour inclure le nombre d’octets dans la nomenclature dans le nombre d’octets.</span><span class="sxs-lookup"><span data-stu-id="6fd97-170">However, setting `byteOrderMark` to `true` does not cause the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fd97-171">L’exemple suivant montre comment créer un nouveau <xref:System.Text.UnicodeEncoding> marque d’ordre d’instance en spécifiant s’il faut prendre en charge le classement des octets little endian ou big endian et l’octet Unicode.</span><span class="sxs-lookup"><span data-stu-id="6fd97-171">The following example demonstrates how to create a new <xref:System.Text.UnicodeEncoding> instance specifying whether to support little endian or big endian byte ordering and the Unicode byte order mark.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding (bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean, throwOnInvalidBytes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding(bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes);" />
      <MemberSignature Language="F#" Value="new System.Text.UnicodeEncoding : bool * bool * bool -&gt; System.Text.UnicodeEncoding" Usage="new System.Text.UnicodeEncoding (bigEndian, byteOrderMark, throwOnInvalidBytes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidBytes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="6fd97-172">
            <see langword="true" /> to use the big endian byte order (most significant byte first); <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-172">
              <see langword="true" /> to use the big endian byte order (most significant byte first); <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          </span>
        </param>
        <param name="byteOrderMark">
          <span data-ttu-id="6fd97-173">
            <see langword="true" /> to specify that the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-173">
              <see langword="true" /> to specify that the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="throwOnInvalidBytes">
          <span data-ttu-id="6fd97-174">
            <see langword="true" /> to specify that an exception should be thrown when an invalid encoding is detected; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-174">
              <see langword="true" /> to specify that an exception should be thrown when an invalid encoding is detected; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fd97-175">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-175">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span>
          </span>
          <span data-ttu-id="6fd97-176">Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-176">Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-177">Le `byteOrderMark` paramètre contrôle le fonctionnement de la <xref:System.Text.UnicodeEncoding.GetPreamble%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-177">The `byteOrderMark` parameter controls the operation of the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="6fd97-178">Si `true`, la méthode retourne un tableau d’octets contenant la marque d’ordre d’octet Unicode (BOM) au format UTF-16.</span><span class="sxs-lookup"><span data-stu-id="6fd97-178">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-16 format.</span></span>  <span data-ttu-id="6fd97-179">Si `false`, elle retourne un tableau d’octets de longueur nulle.</span><span class="sxs-lookup"><span data-stu-id="6fd97-179">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="6fd97-180">Toutefois, l’affectation `byteOrderMark` à `true` n’entraîne pas la <xref:System.Text.UnicodeEncoding.GetBytes%2A> (méthode) pour préfixer la nomenclature au début du tableau d’octets, et ne déclenche le <xref:System.Text.UnicodeEncoding.GetByteCount%2A> méthode pour inclure le nombre d’octets dans la nomenclature dans le nombre d’octets.</span><span class="sxs-lookup"><span data-stu-id="6fd97-180">However, setting `byteOrderMark` to `true` does not cause the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
 <span data-ttu-id="6fd97-181">Si le `throwOnInvalidBytes` paramètre est `true`, une méthode qui détecte une séquence d’octets non valide lève <xref:System.ArgumentException?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-181">If the `throwOnInvalidBytes` parameter is `true`, a method that detects an invalid byte sequence throws <xref:System.ArgumentException?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6fd97-182">Sinon, la méthode ne lève pas d’exception et la séquence non valide est ignorée.</span><span class="sxs-lookup"><span data-stu-id="6fd97-182">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6fd97-183">Pour des raisons de sécurité, il est recommandé d’utiliser ce constructeur pour créer une instance de vos applications le <xref:System.Text.UnicodeEncoding> classe et activer la détection d’erreur en définissant `throwOnInvalidBytes` à `true`.</span><span class="sxs-lookup"><span data-stu-id="6fd97-183">For security reasons, your applications are recommended to use this constructor to create an instance of the <xref:System.Text.UnicodeEncoding> class and turn on error detection by setting `throwOnInvalidBytes` to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fd97-184">L’exemple suivant illustre le comportement de <xref:System.Text.UnicodeEncoding>, avec la détection d’erreurs et sans.</span><span class="sxs-lookup"><span data-stu-id="6fd97-184">The following example demonstrates the behavior of <xref:System.Text.UnicodeEncoding>, both with error detection enabled and without.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/VB/errordetection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="CharSize">
      <MemberSignature Language="C#" Value="public const int CharSize = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 CharSize = (2)" />
      <MemberSignature Language="DocId" Value="F:System.Text.UnicodeEncoding.CharSize" />
      <MemberSignature Language="VB.NET" Value="Public Const CharSize As Integer  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: int CharSize = 2;" />
      <MemberSignature Language="F#" Value="val mutable CharSize : int" Usage="System.Text.UnicodeEncoding.CharSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fd97-185">Represents the Unicode character size in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-185">Represents the Unicode character size in bytes.</span>
          </span>
          <span data-ttu-id="6fd97-186">This field is a constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-186">This field is a constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-187">La valeur de ce champ est une constante signée de 32 bits avec la valeur 2.</span><span class="sxs-lookup"><span data-stu-id="6fd97-187">The value of this field is a 32-bit signed constant with a value of 2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fd97-188">L’exemple suivant montre comment retourner la valeur de <xref:System.Text.UnicodeEncoding.CharSize> et l’afficher.</span><span class="sxs-lookup"><span data-stu-id="6fd97-188">The following example demonstrates how to return the value of <xref:System.Text.UnicodeEncoding.CharSize> and display it.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/CPP/charsize.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/CS/charsize.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/VB/charsize.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="unicodeEncoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6fd97-189">The object to compare with the current object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-189">The object to compare with the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fd97-190">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Text.UnicodeEncoding" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-190">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Text.UnicodeEncoding" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fd97-191">
            <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UnicodeEncoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-191">
              <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UnicodeEncoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-192">Deux <xref:System.Text.UnicodeEncoding> objets sont considérés comme égaux si toutes les conditions suivantes sont remplies :</span><span class="sxs-lookup"><span data-stu-id="6fd97-192">Two <xref:System.Text.UnicodeEncoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="6fd97-193">Les deux objets utilisent le même ordre d’octet (little-endian ou big-endian).</span><span class="sxs-lookup"><span data-stu-id="6fd97-193">Both objects use the same byte order (little-endian or big-endian).</span></span>  
  
-   <span data-ttu-id="6fd97-194">Les deux objets fournissent la marque d’ordre d’octet, ou les deux n’est pas le cas.</span><span class="sxs-lookup"><span data-stu-id="6fd97-194">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="6fd97-195">Les deux objets utilisent le même encodeur de secours.</span><span class="sxs-lookup"><span data-stu-id="6fd97-195">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="6fd97-196">Les deux objets utilisent le même décodeur de secours.</span><span class="sxs-lookup"><span data-stu-id="6fd97-196">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fd97-197">L’exemple suivant montre comment utiliser le <xref:System.Text.UnicodeEncoding.Equals%2A> méthode pour tester si actuel <xref:System.Text.UnicodeEncoding> objet est égal à un autre <xref:System.Text.UnicodeEncoding> objet.</span><span class="sxs-lookup"><span data-stu-id="6fd97-197">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.Equals%2A> method to test whether the current <xref:System.Text.UnicodeEncoding> object is equal to a different <xref:System.Text.UnicodeEncoding> object.</span></span> <span data-ttu-id="6fd97-198">Cinq <xref:System.Text.UnicodeEncoding> objets sont créés et comparées, et les résultats des comparaisons sont affichés.</span><span class="sxs-lookup"><span data-stu-id="6fd97-198">Five <xref:System.Text.UnicodeEncoding> objects are created and compared, and the results of the comparisons are displayed.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fd97-199">Calculates the number of bytes produced by encoding a set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-199">Calculates the number of bytes produced by encoding a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="unicodeEncoding.GetByteCount s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fd97-200">The string that contains the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-200">The string that contains the set of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fd97-201">Calculates the number of bytes produced by encoding the characters in the specified string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-201">Calculates the number of bytes produced by encoding the characters in the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fd97-202">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-202">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-203">Pour calculer la taille exacte de tableau requise par <xref:System.Text.UnicodeEncoding.GetBytes%2A> pour stocker les octets obtenus, vous appelez le <xref:System.Text.UnicodeEncoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-203">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6fd97-204">Pour calculer la taille maximale du tableau, vous appelez le <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-204">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6fd97-205">Le <xref:System.Text.UnicodeEncoding.GetByteCount%2A> méthode alloue généralement moins de mémoire, tandis que le <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-205">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6fd97-206">Avec la détection de l’erreur, une séquence non valide provoque cette méthode lève un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-206">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6fd97-207">Absence de détection d’erreur, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="6fd97-207">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6fd97-208">Pour vous assurer que les octets encodés sont décodés correctement lorsqu’ils sont enregistrés en tant que fichier ou en tant que flux, vous pouvez préfixer un flux d’octets encodés avec un préambule.</span><span class="sxs-lookup"><span data-stu-id="6fd97-208">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6fd97-209">Insérer le préambule au début d’un flux d’octets (tel qu’au début d’une série d’octets à écrire dans un fichier) est la responsabilité du développeur et le nombre d’octets dans le préambule n’est pas reflété dans la valeur retournée par la <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-209">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fd97-210">L’exemple suivant appelle la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> et <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> méthodes pour calculer le nombre maximal et réel d’octets requis pour encoder une chaîne.</span><span class="sxs-lookup"><span data-stu-id="6fd97-210">The following example calls the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> and <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="6fd97-211">Il affiche également le nombre réel d’octets requis pour stocker un flux d’octets avec une marque d’ordre d’octet.</span><span class="sxs-lookup"><span data-stu-id="6fd97-211">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fd97-212">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-212">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fd97-213">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-213">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6fd97-214">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-214">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="6fd97-215">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-215">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="unicodeEncoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="6fd97-216">A pointer to the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-216">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6fd97-217">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-217">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fd97-218">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-218">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fd97-219">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-219">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-220">Pour calculer la taille de tableau exact qui <xref:System.Text.UnicodeEncoding.GetBytes%2A> requiert pour stocker les octets obtenus, vous devez appeler la <xref:System.Text.UnicodeEncoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-220">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetBytes%2A> requires to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6fd97-221">Pour calculer la taille maximale du tableau, vous appelez le <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-221">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6fd97-222">Le <xref:System.Text.UnicodeEncoding.GetByteCount%2A> méthode alloue généralement moins de mémoire, tandis que le <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-222">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6fd97-223">Avec la détection de l’erreur, une séquence non valide provoque cette méthode lève un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-223">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6fd97-224">Absence de détection d’erreur, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="6fd97-224">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6fd97-225">Pour vous assurer que les octets encodés sont décodés correctement lorsqu’ils sont enregistrés en tant que fichier ou en tant que flux, vous pouvez préfixer un flux d’octets encodés avec un préambule.</span><span class="sxs-lookup"><span data-stu-id="6fd97-225">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6fd97-226">Insérer le préambule au début d’un flux d’octets (tel qu’au début d’une série d’octets à écrire dans un fichier) est la responsabilité du développeur et le nombre d’octets dans le préambule n’est pas reflété dans la valeur retournée par la <xref:System.Text.UTF8Encoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-226">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fd97-227">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-227">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fd97-228">
            <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-228">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6fd97-229">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-229">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6fd97-230">Error detection is enabled and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-230">Error detection is enabled and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="6fd97-231">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-231">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6fd97-232">Requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-232">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6fd97-233">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-233">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="unicodeEncoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="6fd97-234">The character array containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-234">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fd97-235">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-235">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6fd97-236">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-236">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fd97-237">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-237">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fd97-238">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-238">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-239">Pour calculer la taille exacte de tableau requise par <xref:System.Text.UnicodeEncoding.GetBytes%2A> pour stocker les octets obtenus, l’application utilise <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-239">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="6fd97-240">Pour calculer la taille maximale du tableau, vous appelez le <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-240">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6fd97-241">Le <xref:System.Text.UnicodeEncoding.GetByteCount%2A> méthode alloue généralement moins de mémoire, tandis que le <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-241">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6fd97-242">Avec la détection d’erreurs, une séquence non valide provoque la levée de cette méthode une <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-242">With error detection enabled, an invalid sequence causes this method to throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6fd97-243">Absence de détection d’erreur, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="6fd97-243">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6fd97-244">Pour vous assurer que les octets encodés sont décodés correctement lorsqu’ils sont enregistrés en tant que fichier ou en tant que flux, vous pouvez préfixer un flux d’octets encodés avec un préambule.</span><span class="sxs-lookup"><span data-stu-id="6fd97-244">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6fd97-245">Insérer le préambule au début d’un flux d’octets (tel qu’au début d’une série d’octets à écrire dans un fichier) est la responsabilité du développeur et le nombre d’octets dans le préambule n’est pas reflété dans la valeur retournée par la <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-245">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fd97-246">L’exemple suivant remplit un tableau avec un Latin en majuscules et minuscules et appelle le <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> méthode pour déterminer le nombre d’octets nécessaires pour encoder les caractères latins minuscules.</span><span class="sxs-lookup"><span data-stu-id="6fd97-246">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="6fd97-247">Il affiche ensuite ces informations ainsi que le nombre total d’octets nécessaire si une marque d’ordre d’octet est ajoutée.</span><span class="sxs-lookup"><span data-stu-id="6fd97-247">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="6fd97-248">Il compare ce nombre avec la valeur retournée par la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> (méthode), ce qui indique le nombre maximal d’octets nécessaires pour encoder les caractères latins minuscules.</span><span class="sxs-lookup"><span data-stu-id="6fd97-248">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="6fd97-249">L’exemple suivant remplit un tableau avec une combinaison de caractères grec et cyrillique et appelle le <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> méthode pour déterminer le nombre d’octets nécessaires pour encoder les caractères cyrilliques.</span><span class="sxs-lookup"><span data-stu-id="6fd97-249">The following example populates an array with a combination of Greek and Cyrillic characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Cyrillic characters.</span></span> <span data-ttu-id="6fd97-250">Il affiche ensuite ces informations ainsi que le nombre total d’octets nécessaire si une marque d’ordre d’octet est ajoutée.</span><span class="sxs-lookup"><span data-stu-id="6fd97-250">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="6fd97-251">Il compare ce nombre avec la valeur retournée par la <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> (méthode), ce qui indique le nombre maximal d’octets nécessaires pour encoder les caractères cyrilliques.</span><span class="sxs-lookup"><span data-stu-id="6fd97-251">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Cyrillic characters.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.UnicodeEncoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fd97-252">
            <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-252">
              <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fd97-253">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-253">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6fd97-254">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-254">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="6fd97-255">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-255">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6fd97-256">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-256">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="6fd97-257">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-257">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fd97-258">Encodes a set of characters into a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-258">Encodes a set of characters into a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string -&gt; byte[]" Usage="unicodeEncoding.GetBytes s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="unicodeEncoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="6fd97-259">A pointer to the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-259">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="6fd97-260">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-260">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="6fd97-261">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-261">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="6fd97-262">The maximum number of bytes to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-262">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fd97-263">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-263">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fd97-264">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-264">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-265">Pour calculer la taille de tableau exact qui <xref:System.Text.UnicodeEncoding.GetBytes%2A> requiert pour stocker les octets obtenus, vous devez appeler la <xref:System.Text.UnicodeEncoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-265">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetBytes%2A> requires to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6fd97-266">Pour calculer la taille maximale du tableau, vous appelez le <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-266">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6fd97-267">Le <xref:System.Text.UnicodeEncoding.GetByteCount%2A> méthode alloue généralement moins de mémoire, tandis que le <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-267">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6fd97-268">Avec la détection de l’erreur, une séquence non valide provoque cette méthode lève un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-268">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6fd97-269">Absence de détection d’erreur, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="6fd97-269">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6fd97-270">Données à convertir, telles que les données lues à partir d’un flux, peuvent être disponibles uniquement dans les blocs séquentiels.</span><span class="sxs-lookup"><span data-stu-id="6fd97-270">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="6fd97-271">Dans ce cas, ou si la quantité de données est tellement importante qu’il doit être divisée en blocs plus petits, l’application doit utiliser le <xref:System.Text.Decoder> ou le <xref:System.Text.Encoder> objet fourni par le <xref:System.Text.UnicodeEncoding.GetDecoder%2A> ou <xref:System.Text.UnicodeEncoding.GetEncoder%2A> (méthode), respectivement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-271">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6fd97-272">Pour vous assurer que les octets encodés sont décodés correctement lorsqu’ils sont enregistrés en tant que fichier ou en tant que flux, vous pouvez préfixer un flux d’octets encodés avec un préambule.</span><span class="sxs-lookup"><span data-stu-id="6fd97-272">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6fd97-273">Insérer le préambule au début d’un flux d’octets (par exemple au début d’une série d’octets à écrire dans un fichier) est la responsabilité du développeur.</span><span class="sxs-lookup"><span data-stu-id="6fd97-273">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="6fd97-274">Le <xref:System.Text.UnicodeEncoding.GetBytes%2A> méthode ne doit pas un préambule au début d’une séquence d’octets encodées.</span><span class="sxs-lookup"><span data-stu-id="6fd97-274">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fd97-275">
            <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-275">
              <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="6fd97-276">-or-  <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-276">-or-  <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fd97-277">
            <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-277">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6fd97-278">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-278">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="6fd97-279">-or-  <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-279">-or-  <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="6fd97-280">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-280">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6fd97-281">Requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-281">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6fd97-282">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-282">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="unicodeEncoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="6fd97-283">The character array containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-283">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="6fd97-284">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-284">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="6fd97-285">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-285">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="6fd97-286">The byte array to contain the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-286">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="6fd97-287">The index at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-287">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fd97-288">Encodes a set of characters from the specified character array into the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-288">Encodes a set of characters from the specified character array into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fd97-289">The actual number of bytes written into <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-289">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-290">Pour calculer la taille exacte de tableau requise par <xref:System.Text.UnicodeEncoding.GetBytes%2A> pour stocker les octets obtenus, vous appelez le <xref:System.Text.UnicodeEncoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-290">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6fd97-291">Pour calculer la taille maximale du tableau, vous appelez le <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-291">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6fd97-292">Le <xref:System.Text.UnicodeEncoding.GetByteCount%2A> méthode alloue généralement moins de mémoire, tandis que le <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-292">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6fd97-293">Avec la détection de l’erreur, une séquence non valide provoque cette méthode lève un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-293">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6fd97-294">Absence de détection d’erreur, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="6fd97-294">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6fd97-295">Données à convertir, telles que les données lues à partir d’un flux, peuvent être disponibles uniquement dans les blocs séquentiels.</span><span class="sxs-lookup"><span data-stu-id="6fd97-295">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="6fd97-296">Dans ce cas, ou si la quantité de données est tellement importante qu’il doit être divisée en blocs plus petits, l’application doit utiliser le <xref:System.Text.Decoder> ou <xref:System.Text.Encoder> fournies par le <xref:System.Text.UnicodeEncoding.GetDecoder%2A> (méthode) ou le <xref:System.Text.UnicodeEncoding.GetEncoder%2A> (méthode), respectivement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-296">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6fd97-297">Pour vous assurer que les octets encodés sont décodés correctement lorsqu’ils sont enregistrés en tant que fichier ou en tant que flux, vous pouvez préfixer un flux d’octets encodés avec un préambule.</span><span class="sxs-lookup"><span data-stu-id="6fd97-297">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6fd97-298">Insérer le préambule au début d’un flux d’octets (par exemple au début d’une série d’octets à écrire dans un fichier) est la responsabilité du développeur.</span><span class="sxs-lookup"><span data-stu-id="6fd97-298">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="6fd97-299">Le <xref:System.Text.UnicodeEncoding.GetBytes%2A> méthode ne doit pas un préambule au début d’une séquence d’octets encodées.</span><span class="sxs-lookup"><span data-stu-id="6fd97-299">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fd97-300">L’exemple suivant montre comment utiliser le <xref:System.Text.UnicodeEncoding.GetBytes%2A> méthode pour encoder une plage de caractères à partir d’un <xref:System.String> et stocker les octets encodés dans une plage d’éléments dans un tableau d’octets.</span><span class="sxs-lookup"><span data-stu-id="6fd97-300">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to encode a range of characters from a <xref:System.String> and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fd97-301">
            <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-301">
              <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="6fd97-302">-or-  <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-302">-or-  <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fd97-303">
            <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-303">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6fd97-304">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-304">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="6fd97-305">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-305">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6fd97-306">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-306">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="6fd97-307">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-307">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="6fd97-308">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-308">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="unicodeEncoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6fd97-309">The string containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-309">The string containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="6fd97-310">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-310">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="6fd97-311">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-311">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="6fd97-312">The byte array to contain the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-312">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="6fd97-313">The index at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-313">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fd97-314">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-314">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fd97-315">The actual number of bytes written into <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-315">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-316">Pour calculer la taille exacte de tableau requise par <xref:System.Text.UnicodeEncoding.GetBytes%2A> pour stocker les octets obtenus, vous appelez le <xref:System.Text.UnicodeEncoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-316">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6fd97-317">Pour calculer la taille maximale du tableau, vous appelez le <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-317">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6fd97-318">Le <xref:System.Text.UnicodeEncoding.GetByteCount%2A> méthode alloue généralement moins de mémoire, tandis que le <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-318">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6fd97-319">Avec la détection de l’erreur, une séquence non valide provoque cette méthode lève un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-319">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6fd97-320">Absence de détection d’erreur, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="6fd97-320">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6fd97-321">Données à convertir, telles que les données lues à partir d’un flux, peuvent être disponibles uniquement dans les blocs séquentiels.</span><span class="sxs-lookup"><span data-stu-id="6fd97-321">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="6fd97-322">Dans ce cas, ou si la quantité de données est tellement importante qu’il doit être divisée en blocs plus petits, l’application doit utiliser le <xref:System.Text.Decoder> ou <xref:System.Text.Encoder> fournies par le <xref:System.Text.UnicodeEncoding.GetDecoder%2A> (méthode) ou le <xref:System.Text.UnicodeEncoding.GetEncoder%2A> (méthode), respectivement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-322">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6fd97-323">Pour vous assurer que les octets encodés sont décodés correctement lorsqu’ils sont enregistrés en tant que fichier ou en tant que flux, vous pouvez préfixer un flux d’octets encodés avec un préambule.</span><span class="sxs-lookup"><span data-stu-id="6fd97-323">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6fd97-324">Insérer le préambule au début d’un flux d’octets (par exemple au début d’une série d’octets à écrire dans un fichier) est la responsabilité du développeur.</span><span class="sxs-lookup"><span data-stu-id="6fd97-324">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="6fd97-325">Le <xref:System.Text.UnicodeEncoding.GetBytes%2A> méthode ne doit pas un préambule au début d’une séquence d’octets encodées.</span><span class="sxs-lookup"><span data-stu-id="6fd97-325">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fd97-326">L’exemple suivant montre comment encoder une plage d’éléments à partir d’un tableau de caractères Unicode et stocker les octets encodés dans une plage d’éléments dans un tableau d’octets.</span><span class="sxs-lookup"><span data-stu-id="6fd97-326">The following example demonstrates how to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fd97-327">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-327">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6fd97-328">-or-  <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-328">-or-  <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fd97-329">
            <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-329">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6fd97-330">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-330">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="6fd97-331">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-331">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6fd97-332">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-332">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="6fd97-333">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-333">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="6fd97-334">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-334">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fd97-335">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-335">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="unicodeEncoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="6fd97-336">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-336">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6fd97-337">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-337">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fd97-338">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-338">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fd97-339">The number of characters produced by decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-339">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-340">Pour calculer la taille de tableau exact qui <xref:System.Text.UnicodeEncoding.GetChars%2A> pour stocker les caractères obtenus, l’application utilise <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-340">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetChars%2A> requires to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="6fd97-341">Pour calculer la taille maximale du tableau, l’application doit utiliser <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-341">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="6fd97-342">Le <xref:System.Text.UnicodeEncoding.GetCharCount%2A> méthode alloue généralement moins de mémoire, tandis que le <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-342">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6fd97-343">Avec la détection de l’erreur, une séquence non valide provoque cette méthode lève un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-343">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6fd97-344">Absence de détection d’erreur, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="6fd97-344">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fd97-345">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-345">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fd97-346">
            <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-346">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6fd97-347">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-347">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6fd97-348">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-348">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="6fd97-349">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-349">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6fd97-350">Requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-350">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6fd97-351">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-351">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Text.UnicodeEncoding.GetChars" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="unicodeEncoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="6fd97-352">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-352">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fd97-353">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-353">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6fd97-354">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-354">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fd97-355">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-355">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fd97-356">The number of characters produced by decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-356">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-357">Pour calculer la taille exacte de tableau requise par <xref:System.Text.UnicodeEncoding.GetChars%2A> pour stocker les caractères obtenus, l’application utilise <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-357">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="6fd97-358">Pour calculer la taille maximale du tableau, l’application doit utiliser <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-358">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="6fd97-359">Le <xref:System.Text.UnicodeEncoding.GetCharCount%2A> méthode alloue généralement moins de mémoire, tandis que le <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-359">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6fd97-360">Avec la détection de l’erreur, une séquence non valide provoque cette méthode lève un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-360">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6fd97-361">Absence de détection d’erreur, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="6fd97-361">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fd97-362">L’exemple suivant montre comment utiliser le <xref:System.Text.UnicodeEncoding.GetCharCount%2A> méthode pour retourner le nombre de caractères produits par le décodage d’une plage d’éléments dans un tableau d’octets à l’aide <xref:System.Text.UnicodeEncoding>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-362">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array using <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fd97-363">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-363">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fd97-364">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-364">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6fd97-365">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-365">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="6fd97-366">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-366">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6fd97-367">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-367">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="6fd97-368">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-368">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Text.UnicodeEncoding.GetChars" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fd97-369">Decodes a sequence of bytes into a set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-369">Decodes a sequence of bytes into a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="unicodeEncoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="6fd97-370">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-370">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="6fd97-371">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-371">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="6fd97-372">A pointer to the location at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-372">A pointer to the location at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="6fd97-373">The maximum number of characters to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-373">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fd97-374">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-374">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fd97-375">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-375">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-376">Pour calculer la taille de tableau exact qui <xref:System.Text.UnicodeEncoding.GetChars%2A> pour stocker les caractères obtenus, l’application utilise <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-376">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetChars%2A> requires to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="6fd97-377">Pour calculer la taille maximale du tableau, l’application doit utiliser <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-377">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="6fd97-378">Le <xref:System.Text.UnicodeEncoding.GetCharCount%2A> méthode alloue généralement moins de mémoire, tandis que le <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-378">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6fd97-379">Avec la détection de l’erreur, une séquence non valide provoque cette méthode lève un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-379">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6fd97-380">Absence de détection d’erreur, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="6fd97-380">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6fd97-381">Si la plage d’octets à décoder inclut la marque d’ordre d’octet (BOM) et le tableau d’octets a été retourné par une méthode d’un type prenant en charge non-BOM, le caractère U + FFFE est inclus dans le tableau de caractères retourné par cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6fd97-381">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="6fd97-382">Vous pouvez le supprimer en appelant le <xref:System.String.TrimStart%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-382">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6fd97-383">Données à convertir, telles que les données lues à partir d’un flux, peuvent être disponibles uniquement dans les blocs séquentiels.</span><span class="sxs-lookup"><span data-stu-id="6fd97-383">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="6fd97-384">Dans ce cas, ou si la quantité de données est tellement importante qu’il doit être divisée en blocs plus petits, l’application doit utiliser le <xref:System.Text.Decoder> ou le <xref:System.Text.Encoder> objet fourni par le <xref:System.Text.UnicodeEncoding.GetDecoder%2A> ou <xref:System.Text.UnicodeEncoding.GetEncoder%2A> (méthode), respectivement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-384">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fd97-385">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-385">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="6fd97-386">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-386">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fd97-387">
            <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-387">
              <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6fd97-388">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-388">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="6fd97-389">-or-  <paramref name="charCount" /> is less than the resulting number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-389">-or-  <paramref name="charCount" /> is less than the resulting number of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="6fd97-390">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-390">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6fd97-391">Requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-391">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6fd97-392">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-392">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="unicodeEncoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="6fd97-393">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-393">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="6fd97-394">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-394">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="6fd97-395">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-395">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="6fd97-396">The character array to contain the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-396">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="6fd97-397">The index at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-397">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fd97-398">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-398">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fd97-399">The actual number of characters written into <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-399">The actual number of characters written into <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-400">Pour calculer la taille exacte de tableau requise par <xref:System.Text.UnicodeEncoding.GetChars%2A> pour stocker les caractères obtenus, l’application utilise <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-400">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="6fd97-401">Pour calculer la taille maximale du tableau, l’application doit utiliser <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-401">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="6fd97-402">Le <xref:System.Text.UnicodeEncoding.GetCharCount%2A> méthode alloue généralement moins de mémoire, tandis que le <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-402">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6fd97-403">Avec la détection de l’erreur, une séquence non valide provoque cette méthode lève un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-403">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6fd97-404">Absence de détection d’erreur, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="6fd97-404">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6fd97-405">Si la plage d’octets à décoder inclut la marque d’ordre d’octet (BOM) et le tableau d’octets a été retourné par une méthode d’un type prenant en charge non-BOM, le caractère U + FFFE est inclus dans le tableau de caractères retourné par cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6fd97-405">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="6fd97-406">Vous pouvez le supprimer en appelant le <xref:System.String.TrimStart%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-406">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6fd97-407">Données à convertir, telles que les données lues à partir d’un flux, peuvent être disponibles uniquement dans les blocs séquentiels.</span><span class="sxs-lookup"><span data-stu-id="6fd97-407">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="6fd97-408">Dans ce cas, ou si la quantité de données est tellement importante qu’il doit être divisée en blocs plus petits, l’application doit utiliser le <xref:System.Text.Decoder> ou <xref:System.Text.Encoder> fournies par le <xref:System.Text.UnicodeEncoding.GetDecoder%2A> (méthode) ou le <xref:System.Text.UnicodeEncoding.GetEncoder%2A> (méthode), respectivement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-408">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fd97-409">L’exemple suivant montre comment utiliser le <xref:System.Text.UnicodeEncoding.GetChars%2A> méthode à décoder une plage d’éléments dans un tableau d’octets et stocker le résultat dans un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="6fd97-409">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetChars%2A> method to decode a range of elements in a byte array and store the result in a character array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fd97-410">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-410">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="6fd97-411">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-411">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fd97-412">
            <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-412">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6fd97-413">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-413">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="6fd97-414">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-414">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6fd97-415">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-415">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="6fd97-416">-or-  <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-416">-or-  <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="6fd97-417">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-417">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="unicodeEncoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fd97-418">Obtains a decoder that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-418">Obtains a decoder that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fd97-419">A <see cref="T:System.Text.Decoder" /> that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-419">A <see cref="T:System.Text.Decoder" /> that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-420">Le <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> méthode convertit des blocs d’octets séquentiels en blocs de caractères, d’une manière similaire à la <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-420">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span></span> <span data-ttu-id="6fd97-421">Toutefois, un <xref:System.Text.Decoder> conserve les informations d’état entre les appels, de sorte qu’il peut décoder correctement les séquences d’octets qui s’étendent sur des blocs.</span><span class="sxs-lookup"><span data-stu-id="6fd97-421">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="6fd97-422">Le <xref:System.Text.Decoder> également conserve les octets de fin à la fin des blocs de données et utilise les octets de fin dans la prochaine opération de décodage.</span><span class="sxs-lookup"><span data-stu-id="6fd97-422">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="6fd97-423">Par conséquent, <xref:System.Text.UnicodeEncoding.GetDecoder%2A> et <xref:System.Text.UnicodeEncoding.GetEncoder%2A> sont utiles pour la transmission réseau et les opérations de fichiers, car celles-ci traitent souvent des blocs de données au lieu d’un flux de données complète.</span><span class="sxs-lookup"><span data-stu-id="6fd97-423">Therefore, <xref:System.Text.UnicodeEncoding.GetDecoder%2A> and <xref:System.Text.UnicodeEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="6fd97-424">Si la détection d’erreurs est activée, autrement dit, si le `throwOnInvalidBytes` paramètre du constructeur est défini sur `true`, détection d’erreurs est également activée dans le <xref:System.Text.Decoder> retourné par cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6fd97-424">If error detection is enabled, that is, the `throwOnInvalidBytes` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="6fd97-425">Si la détection d’erreurs est activée et une séquence non valide est rencontrée, l’état du décodeur n’est pas défini et le traitement doit s’arrêter.</span><span class="sxs-lookup"><span data-stu-id="6fd97-425">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fd97-426">L’exemple suivant utilise un encodeur et un décodeur pour encoder une chaîne en un tableau d’octets, puis décode les octets dans un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="6fd97-426">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/VB/encdec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="unicodeEncoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fd97-427">Obtains an encoder that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-427">Obtains an encoder that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fd97-428">A <see cref="T:System.Text.Encoder" /> object that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-428">A <see cref="T:System.Text.Encoder" /> object that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-429">Le <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> méthode convertit des blocs de caractères séquentiels en blocs d’octets d’une manière similaire à la <xref:System.Text.UnicodeEncoding.GetBytes%2A> méthode de cette classe.</span><span class="sxs-lookup"><span data-stu-id="6fd97-429">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes in a manner similar to the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method of this class.</span></span> <span data-ttu-id="6fd97-430">Toutefois, un <xref:System.Text.Encoder> objet conserve les informations d’état entre les appels et peut donc encoder correctement les séquences de caractères qui s’étendent sur des blocs.</span><span class="sxs-lookup"><span data-stu-id="6fd97-430">However, a <xref:System.Text.Encoder> object maintains state information between calls so that it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="6fd97-431">Le <xref:System.Text.Encoder> objet également conserve les caractères de fin à la fin des blocs de données et utilise les caractères de fin de la prochaine opération de codage.</span><span class="sxs-lookup"><span data-stu-id="6fd97-431">The <xref:System.Text.Encoder> object also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="6fd97-432">Par exemple, un bloc de données peut se terminer par un substitut étendu non apparié, et le substitut faible correspondant peut se trouver dans le bloc de données suivant.</span><span class="sxs-lookup"><span data-stu-id="6fd97-432">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="6fd97-433">Par conséquent, <xref:System.Text.UnicodeEncoding.GetDecoder%2A> et <xref:System.Text.UnicodeEncoding.GetEncoder%2A> sont utiles pour la transmission réseau et les opérations de fichiers, car celles-ci traitent souvent des blocs de données au lieu d’un flux de données complète.</span><span class="sxs-lookup"><span data-stu-id="6fd97-433">Therefore, <xref:System.Text.UnicodeEncoding.GetDecoder%2A> and <xref:System.Text.UnicodeEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="6fd97-434">Si la détection d’erreurs est activée, autrement dit, si le `throwOnInvalidBytes` paramètre du constructeur est défini sur `true`, détection d’erreurs est également activée dans le <xref:System.Text.Encoder> objet retourné par cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6fd97-434">If error detection is enabled, that is, the `throwOnInvalidBytes` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> object returned by this method.</span></span> <span data-ttu-id="6fd97-435">Si la détection d’erreurs est activée et une séquence non valide est rencontrée, l’état de l’encodeur n’est pas défini et le traitement doit s’arrêter.</span><span class="sxs-lookup"><span data-stu-id="6fd97-435">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fd97-436">L’exemple suivant utilise un encodeur et un décodeur pour encoder une chaîne en un tableau d’octets, puis décode les octets dans un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="6fd97-436">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/VB/encdec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="unicodeEncoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fd97-437">Returns the hash code for the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-437">Returns the hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fd97-438">The hash code for the current <see cref="T:System.Text.UnicodeEncoding" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-438">The hash code for the current <see cref="T:System.Text.UnicodeEncoding" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="unicodeEncoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount">
          <span data-ttu-id="6fd97-439">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-439">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fd97-440">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-440">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fd97-441">The maximum number of bytes produced by encoding the specified number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-441">The maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-442">Pour calculer la taille exacte de tableau requise par <xref:System.Text.UnicodeEncoding.GetBytes%2A> pour stocker les octets obtenus, l’application utilise <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-442">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="6fd97-443">Pour calculer la taille maximale du tableau, l’application doit utiliser <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-443">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="6fd97-444">Le <xref:System.Text.UnicodeEncoding.GetByteCount%2A> méthode alloue généralement moins de mémoire, tandis que le <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-444">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6fd97-445"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> Récupère un nombre le plus défavorable, y compris le pire des cas correspondant à votre actuellement <xref:System.Text.EncoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-445"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="6fd97-446">Si une procédure de secours est choisi avec une chaîne potentiellement grande, <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> peut retourner des valeurs élevées.</span><span class="sxs-lookup"><span data-stu-id="6fd97-446">If a fallback is chosen with a potentially large string, <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="6fd97-447">Dans la plupart des cas, cette méthode récupère un nombre raisonnable pour les petites chaînes.</span><span class="sxs-lookup"><span data-stu-id="6fd97-447">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="6fd97-448">Pour les chaînes de grande taille, vous devrez peut-être choisir entre l’utilisation de mémoires tampons de grande et interception des erreurs dans les rares cas qu’une mémoire tampon plus raisonnable est dépassée.</span><span class="sxs-lookup"><span data-stu-id="6fd97-448">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="6fd97-449">Vous pourriez également envisager une approche différente à l’aide <xref:System.Text.UnicodeEncoding.GetByteCount%2A> ou <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-449">You might also want to consider a different approach using <xref:System.Text.UnicodeEncoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6fd97-450"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> n’a aucun lien avec <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-450"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span></span> <span data-ttu-id="6fd97-451">Si votre application a besoin d’une fonction similaire à utiliser avec <xref:System.Text.UnicodeEncoding.GetChars%2A>, il doit utiliser <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-451">If your application needs a similar function to use with <xref:System.Text.UnicodeEncoding.GetChars%2A>, it should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6fd97-452">`GetMaxByteCount(N)` n’est pas nécessairement la même valeur que `N* GetMaxByteCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="6fd97-452">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fd97-453">L’exemple suivant montre comment utiliser le <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> méthode pour retourner le nombre maximal d’octets nécessaires au codage d’un nombre spécifié de caractères.</span><span class="sxs-lookup"><span data-stu-id="6fd97-453">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method to return the maximum number of bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fd97-454">
            <paramref name="charCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-454">
              <paramref name="charCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6fd97-455">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-455">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="6fd97-456">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-456">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="unicodeEncoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount">
          <span data-ttu-id="6fd97-457">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-457">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fd97-458">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-458">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fd97-459">The maximum number of characters produced by decoding the specified number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-459">The maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-460">Pour calculer la taille exacte de tableau requise par <xref:System.Text.UnicodeEncoding.GetChars%2A> pour stocker les caractères obtenus, l’application utilise <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-460">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="6fd97-461">Pour calculer la taille maximale du tableau, l’application doit utiliser <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-461">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="6fd97-462">Le <xref:System.Text.UnicodeEncoding.GetCharCount%2A> méthode alloue généralement moins de mémoire, tandis que le <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-462">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6fd97-463"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> Récupère un nombre le plus défavorable, y compris le pire des cas correspondant à votre actuellement <xref:System.Text.DecoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-463"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="6fd97-464">Si une procédure de secours est choisi avec une chaîne potentiellement grande, <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> récupère des valeurs élevées.</span><span class="sxs-lookup"><span data-stu-id="6fd97-464">If a fallback is chosen with a potentially large string, <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> retrieves large values.</span></span>  
  
 <span data-ttu-id="6fd97-465">Dans la plupart des cas, cette méthode récupère un nombre raisonnable pour les petites chaînes.</span><span class="sxs-lookup"><span data-stu-id="6fd97-465">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="6fd97-466">Pour les chaînes de grande taille, vous devrez peut-être choisir entre l’utilisation de mémoires tampons de grande et interception des erreurs dans les rares cas qu’une mémoire tampon plus raisonnable est dépassée.</span><span class="sxs-lookup"><span data-stu-id="6fd97-466">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="6fd97-467">Vous pourriez également envisager une approche différente à l’aide <xref:System.Text.UnicodeEncoding.GetCharCount%2A> ou <xref:System.Text.Decoder.Convert%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-467">You might also want to consider a different approach using <xref:System.Text.UnicodeEncoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A>.</span></span>  
  
 <span data-ttu-id="6fd97-468"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> n’a aucun lien avec <xref:System.Text.UnicodeEncoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-468"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.UnicodeEncoding.GetBytes%2A>.</span></span> <span data-ttu-id="6fd97-469">Si votre application a besoin d’une fonction similaire à utiliser avec <xref:System.Text.UnicodeEncoding.GetBytes%2A>, il doit utiliser <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-469">If your application needs a similar function to use with <xref:System.Text.UnicodeEncoding.GetBytes%2A>, it should use <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6fd97-470">`GetMaxCharCount(N)` n’est pas nécessairement la même valeur que `N* GetMaxCharCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="6fd97-470">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fd97-471">L’exemple suivant montre comment utiliser le <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> méthode pour retourner le nombre maximal de caractères produits par le décodage d’un nombre spécifié d’octets.</span><span class="sxs-lookup"><span data-stu-id="6fd97-471">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method to return the maximum number of characters produced by decoding a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fd97-472">
            <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-472">
              <paramref name="byteCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6fd97-473">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-473">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="6fd97-474">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-474">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberSignature Language="F#" Value="override this.GetPreamble : unit -&gt; byte[]" Usage="unicodeEncoding.GetPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fd97-475">Returns a Unicode byte order mark encoded in UTF-16 format, if the constructor for this instance requests a byte order mark.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-475">Returns a Unicode byte order mark encoded in UTF-16 format, if the constructor for this instance requests a byte order mark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fd97-476">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UnicodeEncoding" /> object is configured to supply one.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-476">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UnicodeEncoding" /> object is configured to supply one.</span>
          </span>
          <span data-ttu-id="6fd97-477">Otherwise, this method returns a zero-length byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-477">Otherwise, this method returns a zero-length byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-478">Le <xref:System.Text.UnicodeEncoding> objet peut fournir un préambule, c'est-à-dire un tableau d’octets qui peut porter comme préfixe à la séquence d’octets résultant du processus de codage.</span><span class="sxs-lookup"><span data-stu-id="6fd97-478">The <xref:System.Text.UnicodeEncoding> object can provide a preamble, which is a byte array that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="6fd97-479">En le faisant précéder une séquence d’octets encodées avec une marque d’ordre d’octet (point de code U + FEFF) aide le décodeur à déterminer l’ordre d’octet et que le format de transformation ou UTF.</span><span class="sxs-lookup"><span data-stu-id="6fd97-479">Prefacing a sequence of encoded bytes with a byte order mark (code point U+FEFF) helps the decoder determine the byte order and the transformation format or UTF.</span></span> <span data-ttu-id="6fd97-480">La marque d’ordre octet Unicode (BOM) est sérialisée comme suit (hexadécimal) :</span><span class="sxs-lookup"><span data-stu-id="6fd97-480">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="6fd97-481">Ordre de primauté des octets : FE FF</span><span class="sxs-lookup"><span data-stu-id="6fd97-481">Big endian byte order: FE FF</span></span>  
  
-   <span data-ttu-id="6fd97-482">Primauté des octets : FF FE</span><span class="sxs-lookup"><span data-stu-id="6fd97-482">Little endian byte order: FF FE</span></span>  
  
 <span data-ttu-id="6fd97-483">Vous pouvez instancier un <xref:System.Text.UnicodeEncoding> de l’objet dont la propriété <xref:System.Text.UnicodeEncoding.GetPreamble%2A> méthode retourne une nomenclature valide comme suit :</span><span class="sxs-lookup"><span data-stu-id="6fd97-483">You can instantiate a <xref:System.Text.UnicodeEncoding> object whose <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="6fd97-484">En récupérant le <xref:System.Text.UnicodeEncoding> objet retourné par la <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> ou <xref:System.Text.Encoding.BigEndianUnicode%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="6fd97-484">By retrieving the <xref:System.Text.UnicodeEncoding> object returned by the <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> or <xref:System.Text.Encoding.BigEndianUnicode%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="6fd97-485">En appelant sans paramètre <xref:System.Text.UnicodeEncoding.%23ctor> constructeur pour instancier un <xref:System.Text.UnicodeEncoding> objet.</span><span class="sxs-lookup"><span data-stu-id="6fd97-485">By calling the parameterless <xref:System.Text.UnicodeEncoding.%23ctor> constructor to instantiate a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
-   <span data-ttu-id="6fd97-486">En fournissant `true` comme valeur de la `byteOrderMark` l’argument de la <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> ou <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructeurs.</span><span class="sxs-lookup"><span data-stu-id="6fd97-486">By supplying `true` as the value of the `byteOrderMark` argument to the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> or <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructors.</span></span>  
  
 <span data-ttu-id="6fd97-487">Nous recommandons que vous utilisez la nomenclature, dans la mesure où il fournit une certaine identification d’un encodage pour les fichiers qui ont perdu une référence à leur codage, telles que sans balise ou incorrectement référencées données web ou des fichiers texte aléatoires stockés lorsqu’une entreprise ne disposait pas problèmes internationaux.</span><span class="sxs-lookup"><span data-stu-id="6fd97-487">We recommended that you use the BOM, since it provides nearly certain identification of an encoding for files that otherwise have lost a reference to their encoding, such as untagged or improperly tagged web data or random text files stored when a business did not have international concerns.</span></span> <span data-ttu-id="6fd97-488">Souvent les problèmes d’utilisateur peuvent être évités si les données sont balisées de façon cohérente et correctement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-488">Often user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="6fd97-489">Des normes qui fournissent un type de codage, un BOM est quelque peu redondant.</span><span class="sxs-lookup"><span data-stu-id="6fd97-489">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="6fd97-490">Toutefois, il peut être utilisé pour aider à un serveur d’envoyer l’en-tête de codage correct.</span><span class="sxs-lookup"><span data-stu-id="6fd97-490">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="6fd97-491">Ou bien, il peut être utilisé comme solution de secours si l’encodage est perdu.</span><span class="sxs-lookup"><span data-stu-id="6fd97-491">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="6fd97-492">Il existe certains inconvénients à l’utilisation d’une nomenclature.</span><span class="sxs-lookup"><span data-stu-id="6fd97-492">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="6fd97-493">Par exemple, savoir comment limiter les champs de base de données qui utilisent un BOM peut être difficile.</span><span class="sxs-lookup"><span data-stu-id="6fd97-493">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="6fd97-494">Concaténation de fichiers peut être un problème également, par exemple, lorsque les fichiers sont fusionnés de telle façon un caractère inutile peut se retrouver au milieu des données.</span><span class="sxs-lookup"><span data-stu-id="6fd97-494">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="6fd97-495">Malgré le peu d’inconvénients, cependant, l’utilisation d’une nomenclature est hautement recommandée.</span><span class="sxs-lookup"><span data-stu-id="6fd97-495">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="6fd97-496">Pour vous assurer que les octets encodés sont décodés correctement, vous devez précéder le début d’un flux d’octets encodés avec un préambule.</span><span class="sxs-lookup"><span data-stu-id="6fd97-496">To ensure that the encoded bytes are decoded properly, you should prefix the beginning of a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6fd97-497">Notez que le <xref:System.Text.UnicodeEncoding.GetBytes%2A> méthode ne doit pas une nomenclature à une séquence d’octets encodés ; en fournissant une nomenclature au début d’un flux d’octets approprié est la responsabilité du développeur.</span><span class="sxs-lookup"><span data-stu-id="6fd97-497">Note that the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fd97-498">L’exemple suivant montre comment utiliser le <xref:System.Text.UnicodeEncoding.GetPreamble%2A> méthode pour récupérer la marque d’ordre d’octet Unicode dans le big endian ou little ordre de primauté des octets d’une instance d’un <xref:System.Text.UnicodeEncoding>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-498">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to retrieve the Unicode byte order mark in big endian or little endian byte order for an instance of a <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/CPP/getpreamble-.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/CS/getpreamble-.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/VB/getpreamble-.vb#1)]  
  
 <span data-ttu-id="6fd97-499">L’exemple suivant instancie deux <xref:System.Text.UnicodeEncoding> objets, le premier d'entre eux ne fournit pas une nomenclature et qui effectue la deuxième.</span><span class="sxs-lookup"><span data-stu-id="6fd97-499">The following example instantiates two <xref:System.Text.UnicodeEncoding> objects, the first of which does not provide a BOM, and the second of which does.</span></span> <span data-ttu-id="6fd97-500">Il appelle ensuite la <xref:System.Text.UnicodeEncoding.GetPreamble%2A> méthode pour écrire la marque BOM dans un fichier avant d’écrire une chaîne encodée en Unicode.</span><span class="sxs-lookup"><span data-stu-id="6fd97-500">It then calls the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to write the BOM to a file before writing a Unicode-encoded string.</span></span> <span data-ttu-id="6fd97-501">Comme le montre la sortie de l’exemple de console, le fichier qui enregistre les octets à partir de la deuxième encodeur comporte trois davantage d’octets que la première.</span><span class="sxs-lookup"><span data-stu-id="6fd97-501">As the console output from the example shows, the file that saves the bytes from the second encoder has three more bytes than the first.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Text.UnicodeEncoding.GetPreamble/cs/GetPreamble1.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Text.UnicodeEncoding.GetPreamble/vb/GetPreamble1.vb#1)]  
  
 <span data-ttu-id="6fd97-502">Vous pouvez également comparer les fichiers à l’aide de la `fc` commande dans une fenêtre de console, ou vous pouvez inspecter les fichiers dans un éditeur de texte qui inclut un mode d’affichage de format hexadécimal.</span><span class="sxs-lookup"><span data-stu-id="6fd97-502">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="6fd97-503">Notez que lorsque le fichier est ouvert dans un éditeur qui prend en charge l’encodage UTF-16, la marque BOM n’est pas affiché.</span><span class="sxs-lookup"><span data-stu-id="6fd97-503">Note that when the file is opened in an editor that supports UTF-16 encoding, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="unicodeEncoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="6fd97-504">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-504">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6fd97-505">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-505">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6fd97-506">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-506">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fd97-507">Decodes a range of bytes from a byte array into a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-507">Decodes a range of bytes from a byte array into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fd97-508">A <see cref="T:System.String" /> object containing the results of decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-508">A <see cref="T:System.String" /> object containing the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fd97-509">Avec la détection de l’erreur, une séquence non valide provoque cette méthode lève un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6fd97-509">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6fd97-510">Absence de détection d’erreur, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="6fd97-510">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6fd97-511">Si la plage d’octets à décoder inclut la marque d’ordre d’octet (BOM) et le tableau d’octets a été retourné par une méthode d’un type prenant en charge non-BOM, le caractère U + FFFE est inclus dans le tableau de caractères retourné par cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6fd97-511">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="6fd97-512">Vous pouvez le supprimer en appelant le <xref:System.String.TrimStart%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-512">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6fd97-513">Données à convertir, telles que les données lues à partir d’un flux, peuvent être disponibles uniquement dans les blocs séquentiels.</span><span class="sxs-lookup"><span data-stu-id="6fd97-513">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="6fd97-514">Dans ce cas, ou si la quantité de données est tellement importante qu’il doit être divisée en blocs plus petits, l’application doit utiliser le <xref:System.Text.Decoder> ou le <xref:System.Text.Encoder> objet fourni par le <xref:System.Text.UnicodeEncoding.GetDecoder%2A> ou <xref:System.Text.UnicodeEncoding.GetEncoder%2A> (méthode), respectivement.</span><span class="sxs-lookup"><span data-stu-id="6fd97-514">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fd97-515">L’exemple suivant initialise un tableau en appelant le <xref:System.Text.UnicodeEncoding.GetByteCount%2A> méthode pour déterminer exactement combien d’octets est nécessaires pour une chaîne encodée, puis en ajoutant la taille de la marque d’ordre d’octet (BOM).</span><span class="sxs-lookup"><span data-stu-id="6fd97-515">The following example initializes an array by calling the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="6fd97-516">L’exemple appelle ensuite la <xref:System.Text.UnicodeEncoding.GetPreamble%2A> méthode pour stocker la nomenclature dans le tableau avant d’appeler le <xref:System.Text.Encoding.GetBytes%2A> méthode pour stocker les octets encodés dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="6fd97-516">The example then calls the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="6fd97-517">L’exemple appelle ensuite la <xref:System.Text.UnicodeEncoding.GetString%2A> méthode à décoder la chaîne.</span><span class="sxs-lookup"><span data-stu-id="6fd97-517">The example then calls the <xref:System.Text.UnicodeEncoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/cs/getstring1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/vb/getstring1.vb#1)]  
  
 <span data-ttu-id="6fd97-518">Notez que dans ce cas la chaîne décodée diffère de la chaîne d’origine, dans la mesure où il commence par une marque d’ordre d’octet de 16 bits U + FFFD.</span><span class="sxs-lookup"><span data-stu-id="6fd97-518">Note that in this case the decoded string differs from the original string, since it begins with a 16-bit byte order mark U+FFFD.</span></span> <span data-ttu-id="6fd97-519">Cela signifie que les deux chaînes sont considérés comme égaux, et que si la chaîne est sortie, la nomenclature s’affichera en tant que le caractère de remplacement « ? ».</span><span class="sxs-lookup"><span data-stu-id="6fd97-519">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span> <span data-ttu-id="6fd97-520">Pour supprimer la marque BOM au début de la chaîne, vous pouvez appeler la <xref:System.String.TrimStart%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fd97-520">To remove the BOM at the beginning of the string, you can call the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6fd97-521">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-521">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6fd97-522">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-522">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6fd97-523">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-523">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6fd97-524">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-524">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="6fd97-525">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fd97-525">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>