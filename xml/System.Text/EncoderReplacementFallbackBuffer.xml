<Type Name="EncoderReplacementFallbackBuffer" FullName="System.Text.EncoderReplacementFallbackBuffer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c44ffec1524edbb10ca1c63aa2dc3cccee95be4e" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48704346" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EncoderReplacementFallbackBuffer : System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncoderReplacementFallbackBuffer extends System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderReplacementFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncoderReplacementFallbackBuffer&#xA;Inherits EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderReplacementFallbackBuffer sealed : System::Text::EncoderFallbackBuffer" />
  <TypeSignature Language="F#" Value="type EncoderReplacementFallbackBuffer = class&#xA;    inherit EncoderFallbackBuffer" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.EncoderFallbackBuffer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente une chaîne de substitution en entrée qui est utilisée lorsque le caractère d'origine en entrée ne peut pas être encodé. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il se peut qu’il ne soit pas possible de convertir un caractère en une séquence d’octets encodée équivalente si aucun encodage adapté n’existe. Une raison courante pour un encodage pour la restauration est si l’opération de conversion utilise une page de codes qui ne peut pas représenter le caractère à encoder.  
  
 Si le caractère d’entrée ne peut pas être converti en une séquence d’octets de sortie, un <xref:System.Text.EncoderReplacementFallback?displayProperty=nameWithType> objet fournit une chaîne de remplacement est remplacée par le caractère d’entrée d’origine. La chaîne de remplacement initialise la valeur de la <xref:System.Text.EncoderReplacementFallback> objet et la valeur de la <xref:System.Text.EncoderReplacementFallback> objet initialise la valeur d’un <xref:System.Text.EncoderReplacementFallbackBuffer> objet. La valeur d’un <xref:System.Text.EncoderReplacementFallbackBuffer> objet est appelé à la mémoire tampon de remplacement de secours. L’opération de conversion encode la mémoire de tampon de secours de remplacement au lieu du caractère d’entrée d’origine, puis continue à traiter le reste de l’entrée.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderReplacementFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderReplacementFallbackBuffer (System.Text.EncoderReplacementFallback fallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.EncoderReplacementFallback fallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.#ctor(System.Text.EncoderReplacementFallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fallback As EncoderReplacementFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderReplacementFallbackBuffer(System::Text::EncoderReplacementFallback ^ fallback);" />
      <MemberSignature Language="F#" Value="new System.Text.EncoderReplacementFallbackBuffer : System.Text.EncoderReplacementFallback -&gt; System.Text.EncoderReplacementFallbackBuffer" Usage="new System.Text.EncoderReplacementFallbackBuffer fallback" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fallback" Type="System.Text.EncoderReplacementFallback" />
      </Parameters>
      <Docs>
        <param name="fallback">Objet <see cref="T:System.Text.EncoderReplacementFallback" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.EncoderReplacementFallbackBuffer" /> avec la valeur d'un objet <see cref="T:System.Text.EncoderReplacementFallback" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Prépare la mémoire tampon de secours de remplacement pour utiliser la chaîne de remplacement en cours.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public override bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Fallback(char charUnknown, int index);" />
      <MemberSignature Language="F#" Value="override this.Fallback : char * int -&gt; bool" Usage="encoderReplacementFallbackBuffer.Fallback (charUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown">Caractère d'entrée. Ce paramètre est ignoré dans cette opération à moins qu'une exception ne soit levée.</param>
        <param name="index">Position d'index du caractère dans la mémoire tampon d'entrée. Ce paramètre est ignoré dans cette opération.</param>
        <summary>Prépare la mémoire tampon de secours de remplacement pour utiliser la chaîne de remplacement en cours.</summary>
        <returns>
          <see langword="true" /> si la chaîne de remplacement n'est pas vide ; <see langword="false" /> si la chaîne de remplacement est vide.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Text.Encoding.GetBytes%2A> et <xref:System.Text.Encoder.Convert%2A> appel de méthodes <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> si elles rencontrent un caractère inconnu dans leur entrée. Si la valeur de retour de <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> est `true`, la méthode appelante peut appeler le <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A> méthode pour obtenir chaque caractère dans la mémoire tampon de remplacement de secours.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Cette méthode est encore appelée avant que la méthode <see cref="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" /> n'ait lu tous les caractères dans la mémoire tampon de remplacement de secours.</exception>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public override bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="F#" Value="override this.Fallback : char * char * int -&gt; bool" Usage="encoderReplacementFallbackBuffer.Fallback (charUnknownHigh, charUnknownLow, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh">Substitut étendu de la paire d'entrée.</param>
        <param name="charUnknownLow">Substitut faible de la paire d'entrée.</param>
        <param name="index">Position d'index de la paire de substitution dans la mémoire tampon d'entrée.</param>
        <summary>Indique si une chaîne de remplacement peut être utilisée quand une paire de substitution en entrée ne peut pas être encodée, ou si la paire de substitution peut être ignorée. Les paramètres spécifient la paire de substitution et la position d'index de la paire dans l'entrée.</summary>
        <returns>
          <see langword="true" /> si la chaîne de remplacement n'est pas vide ; <see langword="false" /> si la chaîne de remplacement est vide.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Text.Encoding.GetBytes%2A> et <xref:System.Text.Encoder.Convert%2A> appel de méthodes <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> si elles rencontrent un caractère inconnu dans leur entrée. Si la valeur de retour de <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> est `true`, la méthode appelante peut appeler le <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A> méthode pour obtenir chaque caractère dans la mémoire tampon de remplacement de secours.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Cette méthode est encore appelée avant que la méthode <see cref="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" /> n'ait lu tous les caractères de la chaîne de remplacement.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur de <paramref name="charUnknownHigh" /> est inférieure à U+D800 ou supérieure à U+D8FF.  
  
- ou - 
La valeur de <paramref name="charUnknownLow" /> est inférieure à U+DC00 ou supérieure à U+DFFF.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public override char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetNextChar();" />
      <MemberSignature Language="F#" Value="override this.GetNextChar : unit -&gt; char" Usage="encoderReplacementFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère le caractère suivant de la mémoire tampon de remplacement de secours.</summary>
        <returns>Caractère Unicode suivant dans la mémoire tampon de remplacement de secours que l'application peut encoder.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Text.Encoding.GetBytes%2A> et <xref:System.Text.Encoder.Convert%2A> appel de méthodes <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> si elles rencontrent un caractère en entrée ou une paire de substitution inconnue. Si la valeur de retour de <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> est `true`, la méthode appelante peut appeler <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A> pour obtenir chaque caractère dans la mémoire tampon de remplacement de secours.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public override bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MovePrevious();" />
      <MemberSignature Language="F#" Value="override this.MovePrevious : unit -&gt; bool" Usage="encoderReplacementFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Provoque l'appel suivant à la méthode <see cref="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" /> pour accéder à la position de caractère dans la mémoire tampon de remplacement de secours précédant la position de caractère en cours.</summary>
        <returns>
          <see langword="true" /> si l'opération <see cref="M:System.Text.EncoderReplacementFallbackBuffer.MovePrevious" /> a réussi ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public override int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderReplacementFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.EncoderReplacementFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre de caractères dans la mémoire tampon de remplacement de secours qu'il reste à traiter.</summary>
        <value>Nombre de caractères de la mémoire tampon de remplacement de secours n'ayant pas encore été traités.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> retourne de la méthode `true` si le <xref:System.Text.EncoderReplacementFallbackBuffer.Remaining%2A> propriété est différente de zéro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="encoderReplacementFallbackBuffer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialise toutes les données et les informations d'état internes dans cette instance de <see cref="T:System.Text.EncoderReplacementFallbackBuffer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Text.EncoderReplacementFallbackBuffer.Reset%2A> méthode ignore les informations d’état persistant et les données qui régissent l’émission d’une chaîne de remplacement. Des résultats imprévisibles peuvent se produire si l’opération d’encodage se poursuit après le <xref:System.Text.EncoderReplacementFallbackBuffer.Reset%2A> méthode est appelée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>