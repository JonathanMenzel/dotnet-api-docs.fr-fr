<Type Name="EncoderFallbackBuffer" FullName="System.Text.EncoderFallbackBuffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6da17ba94b085f8076678dc84ce0c5a10ed6e6cf" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46692191" /></Metadata><TypeSignature Language="C#" Value="public abstract class EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallbackBuffer abstract" />
  <TypeSignature Language="F#" Value="type EncoderFallbackBuffer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0c646-101">Fournit une mémoire tampon qui permet à un gestionnaire de secours de retourner une autre chaîne à un encodeur lorsqu'il ne peut pas encoder un caractère d'entrée.</span><span class="sxs-lookup"><span data-stu-id="0c646-101">Provides a buffer that allows a fallback handler to return an alternate string to an encoder when it cannot encode an input character.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c646-102">Un encodage définit un mappage entre un caractère Unicode et une séquence d’octets encodée.</span><span class="sxs-lookup"><span data-stu-id="0c646-102">An encoding defines a mapping between a Unicode character and an encoded sequence of bytes.</span></span> <span data-ttu-id="0c646-103">Une opération d’encodage, qui convertit un caractère d’entrée en une séquence d’octets de sortie, échoue si aucun mappage n’est défini pour un caractère particulier.</span><span class="sxs-lookup"><span data-stu-id="0c646-103">An encoding operation, which converts an input character to an output byte sequence, fails if no mapping is defined for a particular character.</span></span>  
  
 <span data-ttu-id="0c646-104">Le .NET Framework fournit un mécanisme, appelé secours, si une conversion ne peut pas être effectuée de gestion.</span><span class="sxs-lookup"><span data-stu-id="0c646-104">The .NET Framework provides a failure handling mechanism, called a fallback, if a conversion cannot be performed.</span></span> <span data-ttu-id="0c646-105">Tous les gestionnaires de secours d’encodeur doivent implémenter les éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="0c646-105">All encoder fallback handlers must implement the following:</span></span>  
  
-   <span data-ttu-id="0c646-106">Un encodeur de secours, qui est représenté par une classe dérivée de la <xref:System.Text.EncoderFallback> classe.</span><span class="sxs-lookup"><span data-stu-id="0c646-106">An encoder fallback, which is represented by a class derived from the <xref:System.Text.EncoderFallback> class.</span></span>  
  
-   <span data-ttu-id="0c646-107">Un encodeur mémoire tampon de secours, qui est représentée par un type dérivé la <xref:System.Text.EncoderFallbackBuffer> classe qui peut retourner une chaîne à l’opération de conversion.</span><span class="sxs-lookup"><span data-stu-id="0c646-107">An encoder fallback buffer, which is represented by a type derived from the <xref:System.Text.EncoderFallbackBuffer> class that can return a string to the conversion operation.</span></span>  
  
 <span data-ttu-id="0c646-108">Solutions de secours peuvent utiliser trois stratégies pour gérer les échecs de conversion :</span><span class="sxs-lookup"><span data-stu-id="0c646-108">Fallbacks can use three strategies to handle conversion failures:</span></span>  
  
-   <span data-ttu-id="0c646-109">Le mappage ajusté.</span><span class="sxs-lookup"><span data-stu-id="0c646-109">Best-fit mapping.</span></span> <span data-ttu-id="0c646-110">Le tampon de secours d’encodeur peut retourner une chaîne qui représente une approximation du caractère d’entrée.</span><span class="sxs-lookup"><span data-stu-id="0c646-110">The encoder fallback buffer can return a string that represents a close approximation to the input character.</span></span> <span data-ttu-id="0c646-111">Le .NET Framework ne fournit pas ajustée publique <xref:System.Text.EncoderFallbackBuffer> implémentation.</span><span class="sxs-lookup"><span data-stu-id="0c646-111">The .NET Framework does not provide a public best-fit <xref:System.Text.EncoderFallbackBuffer> implementation.</span></span>  
  
-   <span data-ttu-id="0c646-112">Remplacement.</span><span class="sxs-lookup"><span data-stu-id="0c646-112">Replacement.</span></span> <span data-ttu-id="0c646-113">Le tampon de secours d’encodeur peut retourner une chaîne, par exemple un point d’interrogation (« ? »), qui indique qu’un caractère ne peut pas être encodé.</span><span class="sxs-lookup"><span data-stu-id="0c646-113">The encoder fallback buffer can return a string, such as a question mark ("?"), that indicates that a character could not be encoded.</span></span> <span data-ttu-id="0c646-114">Dans le .NET Framework, le <xref:System.Text.EncoderReplacementFallback> et <xref:System.Text.EncoderReplacementFallbackBuffer> classes fournissent une implémentation de mémoire tampon de secours de remplacement publique.</span><span class="sxs-lookup"><span data-stu-id="0c646-114">In the .NET Framework, the <xref:System.Text.EncoderReplacementFallback> and <xref:System.Text.EncoderReplacementFallbackBuffer> classes provide a public replacement fallback buffer implementation.</span></span> <span data-ttu-id="0c646-115">Le constructeur de la <xref:System.Text.EncoderReplacementFallback> classe vous permet de définir la chaîne de remplacement.</span><span class="sxs-lookup"><span data-stu-id="0c646-115">The constructor of the <xref:System.Text.EncoderReplacementFallback> class enables you to define the replacement string.</span></span>  
  
-   <span data-ttu-id="0c646-116">Exception.</span><span class="sxs-lookup"><span data-stu-id="0c646-116">Exception.</span></span> <span data-ttu-id="0c646-117">Le <xref:System.Text.EncoderFallbackBuffer> implémentation lève une exception, ce qui indique qu’un caractère ne peut pas être encodé et termine l’opération d’encodage.</span><span class="sxs-lookup"><span data-stu-id="0c646-117">The <xref:System.Text.EncoderFallbackBuffer> implementation throws an exception, which indicates that a character cannot be encoded, and terminates the encoding operation.</span></span> <span data-ttu-id="0c646-118">Dans ce cas, le Gestionnaire de secours doit fournir un <xref:System.Text.EncoderFallbackBuffer> implémentation, bien qu’elle ne retourne pas une chaîne à l’encodeur.</span><span class="sxs-lookup"><span data-stu-id="0c646-118">In this case, the fallback handler must provide an <xref:System.Text.EncoderFallbackBuffer> implementation, although it does not return a string to the encoder.</span></span> <span data-ttu-id="0c646-119">Dans le .NET Framework, le <xref:System.Text.EncoderExceptionFallback> et <xref:System.Text.EncoderExceptionFallbackBuffer> classes fournissent une implémentation de secours d’exception publics qui lève une <xref:System.Text.EncoderFallbackException> quand un caractère ne peut pas être encodé.</span><span class="sxs-lookup"><span data-stu-id="0c646-119">In the .NET Framework, the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.EncoderExceptionFallbackBuffer> classes provide a public exception fallback implementation that throws an <xref:System.Text.EncoderFallbackException> when a character cannot be encoded.</span></span>  
  
 <span data-ttu-id="0c646-120">La mémoire tampon dans un <xref:System.Text.EncoderFallbackBuffer> implémentation représente la chaîne entière à retourner à l’encodeur en réponse à un encodeur de secours.</span><span class="sxs-lookup"><span data-stu-id="0c646-120">The buffer in an <xref:System.Text.EncoderFallbackBuffer> implementation represents the entire string to be returned to the encoder in response to an encoder fallback.</span></span> <span data-ttu-id="0c646-121">En règle générale, les implémentations incluent également des informations d’état, telles que l’index du caractère suivant à retourner à l’encodeur et le nombre de caractères restants à retourner.</span><span class="sxs-lookup"><span data-stu-id="0c646-121">Generally, implementations also include state information, such as the index of the next character to return to the encoder and the number of remaining characters to be returned.</span></span> <span data-ttu-id="0c646-122">Étant donné que <xref:System.Text.EncoderFallbackBuffer> est une classe abstraite, elle nécessite des classes dérivées d’implémenter les membres suivants au minimum :</span><span class="sxs-lookup"><span data-stu-id="0c646-122">Because <xref:System.Text.EncoderFallbackBuffer> is an abstract class, it requires derived classes to implement the following members at a minimum:</span></span>  
  
-   <span data-ttu-id="0c646-123">Surchargées <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> (méthode), qui est appelée par l’encodeur quand il ne peut pas encoder un caractère.</span><span class="sxs-lookup"><span data-stu-id="0c646-123">The overloaded <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method, which is called by the encoder when it cannot encode a character.</span></span> <span data-ttu-id="0c646-124">L’encodeur passe deux éléments d’information à l’implémentation de la mémoire tampon de secours : le caractère ou une paire de substitution qui ne peut pas être encodée et l’index du caractère dans l’entrée.</span><span class="sxs-lookup"><span data-stu-id="0c646-124">The encoder passes two pieces of information to the fallback buffer implementation: the character or surrogate pair that could not be encoded and the index of the character in the input.</span></span> <span data-ttu-id="0c646-125">Dans un gestionnaire d’exceptions de secours de codeur, l’exception est levée dans cette méthode.</span><span class="sxs-lookup"><span data-stu-id="0c646-125">In an encoder fallback exception handler, the exception is thrown in this method.</span></span> <span data-ttu-id="0c646-126">Sinon, la méthode retourne `true` si elle fournit une procédure de secours, ou `false` si elle n’est pas le cas.</span><span class="sxs-lookup"><span data-stu-id="0c646-126">Otherwise, the method returns `true` if it provides a fallback, or `false` if it does not.</span></span>  
  
-   <span data-ttu-id="0c646-127">Le <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> (méthode), qui est appelée à plusieurs reprises par l’encodeur si le <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> retourne de la méthode `true`.</span><span class="sxs-lookup"><span data-stu-id="0c646-127">The <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method, which is called repeatedly by the encoder if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`.</span></span> <span data-ttu-id="0c646-128">Dans les appels successifs, le gestionnaire doit retourner chaque caractère dans sa mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="0c646-128">In successive calls, the handler should return each character in its buffer.</span></span> <span data-ttu-id="0c646-129">Quand elle a retourné tous les caractères, elle doit retourner U + 0000.</span><span class="sxs-lookup"><span data-stu-id="0c646-129">When it has returned all characters, it should return U+0000.</span></span> <span data-ttu-id="0c646-130">Un gestionnaire d’exceptions retourne toujours U + 0000.</span><span class="sxs-lookup"><span data-stu-id="0c646-130">An exception handler always returns U+0000.</span></span>  
  
-   <span data-ttu-id="0c646-131">Le <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> (méthode), qui tente de déplacer le pointeur à la position précédente dans la mémoire tampon et indique si le déplacement a réussi.</span><span class="sxs-lookup"><span data-stu-id="0c646-131">The <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> method, which tries to move the pointer to the previous position in the buffer and indicates whether the move was successful.</span></span> <span data-ttu-id="0c646-132">Un gestionnaire d’exceptions retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="0c646-132">An exception handler always returns `false`.</span></span>  
  
-   <span data-ttu-id="0c646-133">Le <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> propriété, qui indique le nombre de caractères restants à retourner à l’encodeur.</span><span class="sxs-lookup"><span data-stu-id="0c646-133">The <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> property, which indicates the number of remaining characters to be returned to the encoder.</span></span> <span data-ttu-id="0c646-134">Un gestionnaire d’exceptions secours retourne toujours la valeur zéro.</span><span class="sxs-lookup"><span data-stu-id="0c646-134">An exception fallback handler always returns zero.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallback" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="0c646-135">Encodage de caractères dans le .NET Framework</span><span class="sxs-lookup"><span data-stu-id="0c646-135">Character Encoding in the .NET Framework</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Cyrillic-to-Roman-f7e88b29"><span data-ttu-id="0c646-136">Exemple : Cyrillique à l’utilitaire de translittération romain</span><span class="sxs-lookup"><span data-stu-id="0c646-136">Sample: Cyrillic to Roman Transliteration Utility</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0c646-137">Initialise une nouvelle instance de la classe <see cref="T:System.Text.EncoderFallbackBuffer" />.</span><span class="sxs-lookup"><span data-stu-id="0c646-137">Initializes a new instance of the <see cref="T:System.Text.EncoderFallbackBuffer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0c646-138">Indique si une chaîne de substitution est disponible lorsque l'entrée d'origine ne peut pas être codée, ou si l'entrée d'origine doit être ignorée.</span><span class="sxs-lookup"><span data-stu-id="0c646-138">Indicates whether a substitute string is available when the original input cannot be encoded, or whether the original input should be ignored.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknown, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown"><span data-ttu-id="0c646-139">Caractère d'entrée.</span><span class="sxs-lookup"><span data-stu-id="0c646-139">An input character.</span></span></param>
        <param name="index"><span data-ttu-id="0c646-140">Position d'index du caractère dans la mémoire tampon d'entrée.</span><span class="sxs-lookup"><span data-stu-id="0c646-140">The index position of the character in the input buffer.</span></span></param>
        <summary><span data-ttu-id="0c646-141">En cas de substitution dans une classe dérivée, prépare la mémoire tampon de secours à la gestion du caractère en entrée spécifié.</span><span class="sxs-lookup"><span data-stu-id="0c646-141">When overridden in a derived class, prepares the fallback buffer to handle the specified input character.</span></span></summary>
        <returns><span data-ttu-id="0c646-142"><see langword="true" /> si la mémoire tampon de secours peut traiter <paramref name="charUnknown" /> ; <see langword="false" /> si la mémoire tampon de secours ignore <paramref name="charUnknown" />.</span><span class="sxs-lookup"><span data-stu-id="0c646-142"><see langword="true" /> if the fallback buffer can process <paramref name="charUnknown" />; <see langword="false" /> if the fallback buffer ignores <paramref name="charUnknown" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c646-143">Le <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> et <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> appel de méthodes <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> si elles rencontrent un caractère inconnu en entrée qui ne peut pas être encodé.</span><span class="sxs-lookup"><span data-stu-id="0c646-143">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> if they encounter an unknown input character that cannot be encoded.</span></span> <span data-ttu-id="0c646-144">La valeur de retour `true` indique que la mémoire tampon de secours peut traiter le caractère d’entrée, ce qui provoque la méthode d’appel appeler le <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> méthode pour obtenir chaque caractère de la mémoire tampon de secours.</span><span class="sxs-lookup"><span data-stu-id="0c646-144">A return value of `true` indicates that the fallback buffer can process the input character, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span> <span data-ttu-id="0c646-145">Car il ne traite pas les caractères individuels, la <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> méthode dans un gestionnaire d’exceptions secours lève une exception.</span><span class="sxs-lookup"><span data-stu-id="0c646-145">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknownHigh, charUnknownLow, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh"><span data-ttu-id="0c646-146">Substitut étendu de la paire d'entrée.</span><span class="sxs-lookup"><span data-stu-id="0c646-146">The high surrogate of the input pair.</span></span></param>
        <param name="charUnknownLow"><span data-ttu-id="0c646-147">Substitut faible de la paire d'entrée.</span><span class="sxs-lookup"><span data-stu-id="0c646-147">The low surrogate of the input pair.</span></span></param>
        <param name="index"><span data-ttu-id="0c646-148">Position d'index de la paire de substitution dans la mémoire tampon d'entrée.</span><span class="sxs-lookup"><span data-stu-id="0c646-148">The index position of the surrogate pair in the input buffer.</span></span></param>
        <summary><span data-ttu-id="0c646-149">En cas de substitution dans une classe dérivée, prépare la mémoire tampon de secours à la gestion de la paire de substitution spécifiée.</span><span class="sxs-lookup"><span data-stu-id="0c646-149">When overridden in a derived class, prepares the fallback buffer to handle the specified surrogate pair.</span></span></summary>
        <returns><span data-ttu-id="0c646-150"><see langword="true" /> si la mémoire tampon de secours peut traiter <paramref name="charUnknownHigh" /> et <paramref name="charUnknownLow" /> ; <see langword="false" /> si la mémoire tampon de secours peut traiter la paire de substitution.</span><span class="sxs-lookup"><span data-stu-id="0c646-150"><see langword="true" /> if the fallback buffer can process <paramref name="charUnknownHigh" /> and <paramref name="charUnknownLow" />; <see langword="false" /> if the fallback buffer ignores the surrogate pair.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c646-151">Le <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> et <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> appel de méthodes <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> s’ils rencontrent une paire de substitution en entrée.</span><span class="sxs-lookup"><span data-stu-id="0c646-151">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> if they encounter a surrogate pair in their input.</span></span> <span data-ttu-id="0c646-152">La valeur de retour `true` indique que la mémoire tampon de secours peut traiter la paire de substitution, ce qui provoque la méthode d’appel appeler le <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> méthode pour obtenir chaque caractère de la mémoire tampon de secours.</span><span class="sxs-lookup"><span data-stu-id="0c646-152">A return value of `true` indicates that the fallback buffer can process the surrogate pair, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span>  <span data-ttu-id="0c646-153">Car il ne traite pas les caractères individuels, la <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> méthode dans un gestionnaire d’exceptions secours lève une exception.</span><span class="sxs-lookup"><span data-stu-id="0c646-153">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberSignature Language="F#" Value="abstract member GetNextChar : unit -&gt; char" Usage="encoderFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0c646-154">En cas de substitution dans une classe dérivée, récupère le caractère suivant de la mémoire tampon de secours.</span><span class="sxs-lookup"><span data-stu-id="0c646-154">When overridden in a derived class, retrieves the next character in the fallback buffer.</span></span></summary>
        <returns><span data-ttu-id="0c646-155">Caractère suivant de la mémoire tampon de secours.</span><span class="sxs-lookup"><span data-stu-id="0c646-155">The next character in the fallback buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c646-156">Une opération d’encodage appelle le <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> méthode si l’opération rencontre un caractère inconnu ou une paire de substitution dans l’entrée.</span><span class="sxs-lookup"><span data-stu-id="0c646-156">An encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method if the operation encounters an unknown character or surrogate pair in the input.</span></span> <span data-ttu-id="0c646-157">Par exemple, dans le cas d’un remplacement de secours, si le <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> méthode retourne `true`, une chaîne de substitution peut être encodée au lieu de l’entrée inconnue.</span><span class="sxs-lookup"><span data-stu-id="0c646-157">For example, in the case of a replacement fallback, if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`, a substitute string exists that can be encoded instead of the unknown input.</span></span> <span data-ttu-id="0c646-158">L’opération d’encodage appelle le <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> méthode à plusieurs reprises et obtient la chaîne de remplacement d’un caractère à la fois.</span><span class="sxs-lookup"><span data-stu-id="0c646-158">The encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method repeatedly and obtains the substitute string one character at a time.</span></span> <span data-ttu-id="0c646-159">Lorsque tous les caractères dans la mémoire tampon de secours ont été retournés à l’encodeur, la <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> méthode doit retourner U + 0000.</span><span class="sxs-lookup"><span data-stu-id="0c646-159">When all characters in the fallback buffer have been returned to the encoder, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 <span data-ttu-id="0c646-160">Pour un gestionnaire d’exceptions de secours, le <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> méthode doit retourner U + 0000.</span><span class="sxs-lookup"><span data-stu-id="0c646-160">For an exception fallback handler, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberSignature Language="F#" Value="abstract member MovePrevious : unit -&gt; bool" Usage="encoderFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0c646-161">En cas de substitution dans une classe dérivée, provoque l'appel suivant à la méthode <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> pour accéder à la position de caractère de la mémoire tampon précédant la position de caractère en cours.</span><span class="sxs-lookup"><span data-stu-id="0c646-161">When overridden in a derived class, causes the next call to the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method to access the data buffer character position that is prior to the current character position.</span></span></summary>
        <returns><span data-ttu-id="0c646-162"><see langword="true" /> si l'opération <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> a réussi ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c646-162"><see langword="true" /> if the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> operation was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c646-163">Un gestionnaire d’exceptions secours doit retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="0c646-163">An exception fallback handler should return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c646-164">En cas de substitution dans une classe dérivée, obtient le nombre de caractères de l'objet <see cref="T:System.Text.EncoderFallbackBuffer" /> en cours qu'il reste à traiter.</span><span class="sxs-lookup"><span data-stu-id="0c646-164">When overridden in a derived class, gets the number of characters in the current <see cref="T:System.Text.EncoderFallbackBuffer" /> object that remain to be processed.</span></span></summary>
        <value><span data-ttu-id="0c646-165">Nombre de caractères de la mémoire tampon de secours n'ayant pas encore été traités.</span><span class="sxs-lookup"><span data-stu-id="0c646-165">The number of characters in the current fallback buffer that have not yet been processed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c646-166">Le <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> retourne de la méthode `true` si <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> est une valeur différente de zéro.</span><span class="sxs-lookup"><span data-stu-id="0c646-166">The <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true` if <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> is a nonzero value.</span></span>  
  
 <span data-ttu-id="0c646-167">Pour un gestionnaire d’exceptions de secours, le <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> méthode doit retourner zéro.</span><span class="sxs-lookup"><span data-stu-id="0c646-167">For an exception fallback handler, the <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> method should return zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="encoderFallbackBuffer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0c646-168">Initialise toutes les données et informations d'état relatives à cette mémoire tampon de secours.</span><span class="sxs-lookup"><span data-stu-id="0c646-168">Initializes all data and state information pertaining to this fallback buffer.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0c646-169">Après avoir appelé la <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> (méthode), le <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> propriété doit retourner 0, la <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> méthode doit retourner U + 0000 et la <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> méthode doit retourner <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c646-169">After calling the <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> method, the <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> property should return 0, the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method should return U+0000, and the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> method should return <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>