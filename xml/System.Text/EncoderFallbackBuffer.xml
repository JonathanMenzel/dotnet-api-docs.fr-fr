<Type Name="EncoderFallbackBuffer" FullName="System.Text.EncoderFallbackBuffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6da17ba94b085f8076678dc84ce0c5a10ed6e6cf" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46692191" /></Metadata><TypeSignature Language="C#" Value="public abstract class EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallbackBuffer abstract" />
  <TypeSignature Language="F#" Value="type EncoderFallbackBuffer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une mémoire tampon qui permet à un gestionnaire de secours de retourner une autre chaîne à un encodeur lorsqu'il ne peut pas encoder un caractère d'entrée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un encodage définit un mappage entre un caractère Unicode et une séquence d’octets encodée. Une opération d’encodage, qui convertit un caractère d’entrée en une séquence d’octets de sortie, échoue si aucun mappage n’est défini pour un caractère particulier.  
  
 Le .NET Framework fournit un mécanisme, appelé secours, si une conversion ne peut pas être effectuée de gestion. Tous les gestionnaires de secours d’encodeur doivent implémenter les éléments suivants :  
  
-   Un encodeur de secours, qui est représenté par une classe dérivée de la <xref:System.Text.EncoderFallback> classe.  
  
-   Un encodeur mémoire tampon de secours, qui est représentée par un type dérivé la <xref:System.Text.EncoderFallbackBuffer> classe qui peut retourner une chaîne à l’opération de conversion.  
  
 Solutions de secours peuvent utiliser trois stratégies pour gérer les échecs de conversion :  
  
-   Le mappage ajusté. Le tampon de secours d’encodeur peut retourner une chaîne qui représente une approximation du caractère d’entrée. Le .NET Framework ne fournit pas ajustée publique <xref:System.Text.EncoderFallbackBuffer> implémentation.  
  
-   Remplacement. Le tampon de secours d’encodeur peut retourner une chaîne, par exemple un point d’interrogation (« ? »), qui indique qu’un caractère ne peut pas être encodé. Dans le .NET Framework, le <xref:System.Text.EncoderReplacementFallback> et <xref:System.Text.EncoderReplacementFallbackBuffer> classes fournissent une implémentation de mémoire tampon de secours de remplacement publique. Le constructeur de la <xref:System.Text.EncoderReplacementFallback> classe vous permet de définir la chaîne de remplacement.  
  
-   Exception. Le <xref:System.Text.EncoderFallbackBuffer> implémentation lève une exception, ce qui indique qu’un caractère ne peut pas être encodé et termine l’opération d’encodage. Dans ce cas, le Gestionnaire de secours doit fournir un <xref:System.Text.EncoderFallbackBuffer> implémentation, bien qu’elle ne retourne pas une chaîne à l’encodeur. Dans le .NET Framework, le <xref:System.Text.EncoderExceptionFallback> et <xref:System.Text.EncoderExceptionFallbackBuffer> classes fournissent une implémentation de secours d’exception publics qui lève une <xref:System.Text.EncoderFallbackException> quand un caractère ne peut pas être encodé.  
  
 La mémoire tampon dans un <xref:System.Text.EncoderFallbackBuffer> implémentation représente la chaîne entière à retourner à l’encodeur en réponse à un encodeur de secours. En règle générale, les implémentations incluent également des informations d’état, telles que l’index du caractère suivant à retourner à l’encodeur et le nombre de caractères restants à retourner. Étant donné que <xref:System.Text.EncoderFallbackBuffer> est une classe abstraite, elle nécessite des classes dérivées d’implémenter les membres suivants au minimum :  
  
-   Surchargées <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> (méthode), qui est appelée par l’encodeur quand il ne peut pas encoder un caractère. L’encodeur passe deux éléments d’information à l’implémentation de la mémoire tampon de secours : le caractère ou une paire de substitution qui ne peut pas être encodée et l’index du caractère dans l’entrée. Dans un gestionnaire d’exceptions de secours de codeur, l’exception est levée dans cette méthode. Sinon, la méthode retourne `true` si elle fournit une procédure de secours, ou `false` si elle n’est pas le cas.  
  
-   Le <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> (méthode), qui est appelée à plusieurs reprises par l’encodeur si le <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> retourne de la méthode `true`. Dans les appels successifs, le gestionnaire doit retourner chaque caractère dans sa mémoire tampon. Quand elle a retourné tous les caractères, elle doit retourner U + 0000. Un gestionnaire d’exceptions retourne toujours U + 0000.  
  
-   Le <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> (méthode), qui tente de déplacer le pointeur à la position précédente dans la mémoire tampon et indique si le déplacement a réussi. Un gestionnaire d’exceptions retourne toujours `false`.  
  
-   Le <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> propriété, qui indique le nombre de caractères restants à retourner à l’encodeur. Un gestionnaire d’exceptions secours retourne toujours la valeur zéro.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallback" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md">Encodage de caractères dans le .NET Framework</related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Cyrillic-to-Roman-f7e88b29">Exemple : Cyrillique à l’utilitaire de translittération romain</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.EncoderFallbackBuffer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Indique si une chaîne de substitution est disponible lorsque l'entrée d'origine ne peut pas être codée, ou si l'entrée d'origine doit être ignorée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknown, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown">Caractère d'entrée.</param>
        <param name="index">Position d'index du caractère dans la mémoire tampon d'entrée.</param>
        <summary>En cas de substitution dans une classe dérivée, prépare la mémoire tampon de secours à la gestion du caractère en entrée spécifié.</summary>
        <returns><see langword="true" /> si la mémoire tampon de secours peut traiter <paramref name="charUnknown" /> ; <see langword="false" /> si la mémoire tampon de secours ignore <paramref name="charUnknown" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> et <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> appel de méthodes <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> si elles rencontrent un caractère inconnu en entrée qui ne peut pas être encodé. La valeur de retour `true` indique que la mémoire tampon de secours peut traiter le caractère d’entrée, ce qui provoque la méthode d’appel appeler le <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> méthode pour obtenir chaque caractère de la mémoire tampon de secours. Car il ne traite pas les caractères individuels, la <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> méthode dans un gestionnaire d’exceptions secours lève une exception.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknownHigh, charUnknownLow, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh">Substitut étendu de la paire d'entrée.</param>
        <param name="charUnknownLow">Substitut faible de la paire d'entrée.</param>
        <param name="index">Position d'index de la paire de substitution dans la mémoire tampon d'entrée.</param>
        <summary>En cas de substitution dans une classe dérivée, prépare la mémoire tampon de secours à la gestion de la paire de substitution spécifiée.</summary>
        <returns><see langword="true" /> si la mémoire tampon de secours peut traiter <paramref name="charUnknownHigh" /> et <paramref name="charUnknownLow" /> ; <see langword="false" /> si la mémoire tampon de secours peut traiter la paire de substitution.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> et <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> appel de méthodes <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> s’ils rencontrent une paire de substitution en entrée. La valeur de retour `true` indique que la mémoire tampon de secours peut traiter la paire de substitution, ce qui provoque la méthode d’appel appeler le <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> méthode pour obtenir chaque caractère de la mémoire tampon de secours.  Car il ne traite pas les caractères individuels, la <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> méthode dans un gestionnaire d’exceptions secours lève une exception.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberSignature Language="F#" Value="abstract member GetNextChar : unit -&gt; char" Usage="encoderFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, récupère le caractère suivant de la mémoire tampon de secours.</summary>
        <returns>Caractère suivant de la mémoire tampon de secours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une opération d’encodage appelle le <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> méthode si l’opération rencontre un caractère inconnu ou une paire de substitution dans l’entrée. Par exemple, dans le cas d’un remplacement de secours, si le <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> méthode retourne `true`, une chaîne de substitution peut être encodée au lieu de l’entrée inconnue. L’opération d’encodage appelle le <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> méthode à plusieurs reprises et obtient la chaîne de remplacement d’un caractère à la fois. Lorsque tous les caractères dans la mémoire tampon de secours ont été retournés à l’encodeur, la <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> méthode doit retourner U + 0000.  
  
 Pour un gestionnaire d’exceptions de secours, le <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> méthode doit retourner U + 0000.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberSignature Language="F#" Value="abstract member MovePrevious : unit -&gt; bool" Usage="encoderFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, provoque l'appel suivant à la méthode <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> pour accéder à la position de caractère de la mémoire tampon précédant la position de caractère en cours.</summary>
        <returns><see langword="true" /> si l'opération <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> a réussi ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un gestionnaire d’exceptions secours doit retourner `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, obtient le nombre de caractères de l'objet <see cref="T:System.Text.EncoderFallbackBuffer" /> en cours qu'il reste à traiter.</summary>
        <value>Nombre de caractères de la mémoire tampon de secours n'ayant pas encore été traités.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> retourne de la méthode `true` si <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> est une valeur différente de zéro.  
  
 Pour un gestionnaire d’exceptions de secours, le <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> méthode doit retourner zéro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="encoderFallbackBuffer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialise toutes les données et informations d'état relatives à cette mémoire tampon de secours.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Après avoir appelé la <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> (méthode), le <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> propriété doit retourner 0, la <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> méthode doit retourner U + 0000 et la <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> méthode doit retourner <see langword="false" />.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>