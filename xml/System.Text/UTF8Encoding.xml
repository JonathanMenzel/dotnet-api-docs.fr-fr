<Type Name="UTF8Encoding" FullName="System.Text.UTF8Encoding">
  <TypeSignature Language="C#" Value="public class UTF8Encoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UTF8Encoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UTF8Encoding" />
  <TypeSignature Language="VB.NET" Value="Public Class UTF8Encoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UTF8Encoding : System::Text::Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5844c-101">Représente un encodage UTF-8 de caractères Unicode.</span><span class="sxs-lookup"><span data-stu-id="5844c-101">Represents a UTF-8 encoding of Unicode characters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-102">L'encodage est le processus de transformation d'un jeu de caractères Unicode en une séquence d'octets.</span><span class="sxs-lookup"><span data-stu-id="5844c-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="5844c-103">Le décodage est le processus de transformation d’une séquence d’octets codés en un jeu de caractères Unicode.</span><span class="sxs-lookup"><span data-stu-id="5844c-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="5844c-104">UTF-8 est le codage Unicode représente chaque point de code sous la forme d’une séquence d’un à quatre octets.</span><span class="sxs-lookup"><span data-stu-id="5844c-104">UTF-8 is a Unicode encoding that represents each code point as a sequence of one to four bytes.</span></span> <span data-ttu-id="5844c-105">Contrairement aux encodages UTF-16 et UTF-32, l’encodage UTF-8 ne pas obliger « endianness » ; le schéma d’encodage est le même que le processeur soit big-endian ou little-endian.</span><span class="sxs-lookup"><span data-stu-id="5844c-105">Unlike the UTF-16 and UTF-32 encodings, the UTF-8 encoding does not require "endianness"; the encoding scheme is the same regardless of whether the processor is big-endian or little-endian.</span></span> <span data-ttu-id="5844c-106"><xref:System.Text.UTF8Encoding> correspond à la page de codes 65001 de Windows.</span><span class="sxs-lookup"><span data-stu-id="5844c-106"><xref:System.Text.UTF8Encoding> corresponds to the Windows code page 65001.</span></span> <span data-ttu-id="5844c-107">Pour plus d’informations sur les formats UTF et d’autres encodages pris en charge par <xref:System.Text>, consultez [l’encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="5844c-107">For more information about the UTFs and other encodings supported by <xref:System.Text>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="5844c-108">Vous pouvez instancier un <xref:System.Text.UTF8Encoding> objet dans un nombre de façons, selon si vous souhaitez lui pour fournir une marque d’ordre octet (BOM) et si vous souhaitez activer la détection d’erreur.</span><span class="sxs-lookup"><span data-stu-id="5844c-108">You can instantiate a <xref:System.Text.UTF8Encoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM) and whether you want to enable error detection.</span></span> <span data-ttu-id="5844c-109">Le tableau suivant répertorie les constructeurs et les <xref:System.Text.Encoding> propriétés qui retournent un <xref:System.Text.UTF8Encoding> objet.</span><span class="sxs-lookup"><span data-stu-id="5844c-109">The following table lists the constructors and the <xref:System.Text.Encoding> property that return a <xref:System.Text.UTF8Encoding> object.</span></span>  
  
|<span data-ttu-id="5844c-110">Membre</span><span class="sxs-lookup"><span data-stu-id="5844c-110">Member</span></span>|<span data-ttu-id="5844c-111">BOM</span><span class="sxs-lookup"><span data-stu-id="5844c-111">BOM</span></span>|<span data-ttu-id="5844c-112">Détection d’erreurs</span><span class="sxs-lookup"><span data-stu-id="5844c-112">Error detection</span></span>|  
|------------|---------|---------------------|  
|<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>|<span data-ttu-id="5844c-113">Oui</span><span class="sxs-lookup"><span data-stu-id="5844c-113">Yes</span></span>|<span data-ttu-id="5844c-114">Aucun (stratégie de secours)</span><span class="sxs-lookup"><span data-stu-id="5844c-114">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="5844c-115">Non</span><span class="sxs-lookup"><span data-stu-id="5844c-115">No</span></span>|<span data-ttu-id="5844c-116">Aucun (stratégie de secours)</span><span class="sxs-lookup"><span data-stu-id="5844c-116">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="5844c-117">Configurable</span><span class="sxs-lookup"><span data-stu-id="5844c-117">Configurable</span></span>|<span data-ttu-id="5844c-118">Aucun (stratégie de secours)</span><span class="sxs-lookup"><span data-stu-id="5844c-118">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="5844c-119">Configurable</span><span class="sxs-lookup"><span data-stu-id="5844c-119">Configurable</span></span>|<span data-ttu-id="5844c-120">Configurable</span><span class="sxs-lookup"><span data-stu-id="5844c-120">Configurable</span></span>|  
  
 <span data-ttu-id="5844c-121">Le <xref:System.Text.UTF8Encoding.GetByteCount%2A> méthode détermine le nombre d’octets entraînant le codage d’un jeu de caractères Unicode et la <xref:System.Text.UTF8Encoding.GetBytes%2A> méthode exécute l’encodage réel.</span><span class="sxs-lookup"><span data-stu-id="5844c-121">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UTF8Encoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="5844c-122">De même, la <xref:System.Text.UTF8Encoding.GetCharCount%2A> méthode détermine le nombre de caractères entraînant le décodage d’une séquence d’octets et la <xref:System.Text.UTF8Encoding.GetChars%2A> et <xref:System.Text.UTF8Encoding.GetString%2A> les méthodes effectuent le décodage réel.</span><span class="sxs-lookup"><span data-stu-id="5844c-122">Likewise, the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UTF8Encoding.GetChars%2A> and <xref:System.Text.UTF8Encoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="5844c-123">Pour un encodeur ou un décodeur capable d’enregistrer les informations d’état lors de l’encodage ou de décodage des données qui s’étend sur plusieurs blocs (par exemple, la chaîne de 1 million de caractères est encodé dans les segments de 100 000 caractères), utilisez la <xref:System.Text.UTF8Encoding.GetEncoder%2A> et <xref:System.Text.UTF8Encoding.GetDecoder%2A> propriétés, respectivement.</span><span class="sxs-lookup"><span data-stu-id="5844c-123">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UTF8Encoding.GetEncoder%2A> and <xref:System.Text.UTF8Encoding.GetDecoder%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="5844c-124">Si vous le souhaitez, le <xref:System.Text.UTF8Encoding> objet fournit une marque d’ordre octet (BOM), qui est un tableau d’octets qui peut être préfixé au début du flux d’octets qui résulte du processus de codage.</span><span class="sxs-lookup"><span data-stu-id="5844c-124">Optionally, the <xref:System.Text.UTF8Encoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the beginning of the byte stream that results from the encoding process.</span></span> <span data-ttu-id="5844c-125">Si un flux d’octets codée en UTF-8 est précédé d’une marque d’ordre octet (BOM), il aide le décodeur à déterminer l’ordre d’octet et que le format de transformation ou UTF.</span><span class="sxs-lookup"><span data-stu-id="5844c-125">If a UTF-8 encoded byte stream is prefaced with a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF.</span></span> <span data-ttu-id="5844c-126">Toutefois, notez que la norme Unicode ne requiert ni recommande un marque BOM UTF-8 codé flux.</span><span class="sxs-lookup"><span data-stu-id="5844c-126">Note, however, that the Unicode Standard neither requires nor recommends a BOM in UTF-8 encoded streams.</span></span> <span data-ttu-id="5844c-127">Pour plus d’informations sur l’ordre d’octet et la marque d’ordre, consultez la norme Unicode sur le [page d’accueil Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="5844c-127">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
 <span data-ttu-id="5844c-128">Si l’encodeur est configuré pour fournir une nomenclature, vous pouvez le récupérer en appelant le <xref:System.Text.UTF8Encoding.GetPreamble%2A> méthode ; sinon, la méthode retourne un tableau vide.</span><span class="sxs-lookup"><span data-stu-id="5844c-128">If the encoder is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="5844c-129">Notez que, même si un <xref:System.Text.UTF8Encoding> objet est configuré pour prendre en charge de la nomenclature, vous devez inclure la nomenclature au début du flux d’octets encodés selon le cas, les méthodes de codage de la <xref:System.Text.UTF8Encoding> classe ne le faites pas automatiquement.</span><span class="sxs-lookup"><span data-stu-id="5844c-129">Note that, even if a <xref:System.Text.UTF8Encoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UTF8Encoding> class do not do this automatically.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5844c-130">Pour activer la détection d’erreur et la sécurisation de l’instance de classe, vous devez appeler la <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> constructeur et définissez la `throwOnInvalidBytes` paramètre `true`.</span><span class="sxs-lookup"><span data-stu-id="5844c-130">To enable error detection and to make the class instance more secure, you should call the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> constructor and set the `throwOnInvalidBytes` parameter to `true`.</span></span> <span data-ttu-id="5844c-131">Avec la détection d’erreurs, une méthode qui détecte une séquence non valide de caractères ou d’octets lève une <xref:System.ArgumentException> exception.</span><span class="sxs-lookup"><span data-stu-id="5844c-131">With error detection enabled, a method that detects an invalid sequence of characters or bytes throws an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="5844c-132">Sans détection d’erreurs, aucune exception n’est levée, et la séquence non valide est généralement ignorée.</span><span class="sxs-lookup"><span data-stu-id="5844c-132">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5844c-133">L’état d’un objet encodé en UTF-8 n’est pas conservé si l’objet est sérialisé et désérialisé à l’aide de différentes versions du .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="5844c-133">The state of a UTF-8 encoded object is not preserved if the object is serialized and deserialized using different .NET Framework versions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5844c-134">L’exemple suivant utilise un <xref:System.Text.UTF8Encoding> objet à encoder une chaîne de caractères Unicode et les stocker dans un tableau d’octets.</span><span class="sxs-lookup"><span data-stu-id="5844c-134">The following example uses a <xref:System.Text.UTF8Encoding> object to encode a string of Unicode characters and store them in a byte array.</span></span> <span data-ttu-id="5844c-135">La chaîne Unicode comprend deux caractères, Pi (U + 03A0) et Sigma (U + 03A3), qui sont en dehors de la plage de caractères ASCII.</span><span class="sxs-lookup"><span data-stu-id="5844c-135">The Unicode string includes two characters, Pi (U+03A0) and Sigma (U+03A3), that are outside the ASCII character range.</span></span> <span data-ttu-id="5844c-136">Lorsque le tableau d’octets encodé est décodé en chaîne, les caractères Pi et Sigma sont toujours présentes.</span><span class="sxs-lookup"><span data-stu-id="5844c-136">When the encoded byte array is decoded back to a string, the Pi and Sigma characters are still present.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.UTF8Encoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/VB/snippet.vb#1)]  
  
 <span data-ttu-id="5844c-137">L’exemple suivant utilise la même chaîne que l’exemple précédent, sauf qu’il écrit les octets encodés dans un fichier et les préfixes des flux d’octets avec une marque d’ordre octet (BOM).</span><span class="sxs-lookup"><span data-stu-id="5844c-137">The following example uses the same string as the previous example, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="5844c-138">Il lit ensuite le fichier de deux manières différentes : en tant qu’un fichier texte à l’aide un <xref:System.IO.StreamReader> de l’objet ; et dans un fichier binaire.</span><span class="sxs-lookup"><span data-stu-id="5844c-138">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="5844c-139">Comme pour tout, en aucun cas la nomenclature figure dans la chaîne qui vient d’être en lecture.</span><span class="sxs-lookup"><span data-stu-id="5844c-139">As you would expect, in neither case is the BOM included in the newly read string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CS/bom1.cs#2)]
 [!code-vb[System.Text.UTF8Encoding Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/VB/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.Encoder" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5844c-140">Initialise une nouvelle instance de la classe <see cref="T:System.Text.UTF8Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-140">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5844c-141">Initialise une nouvelle instance de la classe <see cref="T:System.Text.UTF8Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-141">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-142">Ce constructeur crée une instance qui ne fournit pas de marque d’ordre d’octet Unicode et ne lève pas d’exception lorsqu’un encodage non valide est détecté.</span><span class="sxs-lookup"><span data-stu-id="5844c-142">This constructor creates an instance that does not provide a Unicode byte order mark and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5844c-143">Pour des raisons de sécurité, nous vous recommandons d’activer la détection d’erreur en appelant un constructeur avec un `throwOnInvalidBytes` paramètre et sa valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="5844c-143">For security reasons, we recommend that you enable error detection by calling a constructor with a `throwOnInvalidBytes` parameter and setting its value to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5844c-144">L’exemple suivant crée un nouveau <xref:System.Text.UTF8Encoding> de l’instance et affiche son nom.</span><span class="sxs-lookup"><span data-stu-id="5844c-144">The following example creates a new <xref:System.Text.UTF8Encoding> instance and displays its name.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding (bool encoderShouldEmitUTF8Identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool encoderShouldEmitUTF8Identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encoderShouldEmitUTF8Identifier As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding(bool encoderShouldEmitUTF8Identifier);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoderShouldEmitUTF8Identifier" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoderShouldEmitUTF8Identifier">
          <span data-ttu-id="5844c-145"><see langword="true" /> pour spécifier que la méthode <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> retourne une marque d'ordre d'octet Unicode ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-145"><see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="5844c-146">Initialise une nouvelle instance de la classe <see cref="T:System.Text.UTF8Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-146">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span> <span data-ttu-id="5844c-147">Un paramètre spécifie si une marque d'ordre d'octet Unicode doit être fournie.</span><span class="sxs-lookup"><span data-stu-id="5844c-147">A parameter specifies whether to provide a Unicode byte order mark.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-148">Ce constructeur crée une instance qui ne lève pas d’exception lorsqu’un encodage non valide est détecté.</span><span class="sxs-lookup"><span data-stu-id="5844c-148">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5844c-149">Pour des raisons de sécurité, vous devez activer la détection d’erreur en appelant un constructeur qui inclut un `throwOnInvalidBytes` paramètre et sa valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="5844c-149">For security reasons, you should enable error detection by calling a constructor that includes a `throwOnInvalidBytes` parameter and setting its value to `true`.</span></span>  
  
 <span data-ttu-id="5844c-150">Le `encoderShouldEmitUTF8Identifier` paramètre contrôle le fonctionnement de la <xref:System.Text.UTF8Encoding.GetPreamble%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-150">The `encoderShouldEmitUTF8Identifier` parameter controls the operation of the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="5844c-151">Si `true`, la méthode retourne un tableau d’octets contenant la marque d’ordre d’octet Unicode (BOM) au format UTF-8.</span><span class="sxs-lookup"><span data-stu-id="5844c-151">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</span></span>  <span data-ttu-id="5844c-152">Si `false`, elle retourne un tableau d’octets de longueur nulle.</span><span class="sxs-lookup"><span data-stu-id="5844c-152">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="5844c-153">Toutefois, l’affectation `encoderShouldEmitUTF8Identifier` à `true` n’entraîne pas la <xref:System.Text.UTF8Encoding.GetBytes%2A> méthode pour préfixer la nomenclature au début du tableau d’octets, et ne déclenche la <xref:System.Text.UTF8Encoding.GetByteCount%2A> méthode pour inclure le nombre d’octets dans la nomenclature dans le nombre d’octets.</span><span class="sxs-lookup"><span data-stu-id="5844c-153">However, setting `encoderShouldEmitUTF8Identifier` to `true` does not cause the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5844c-154">L’exemple suivant crée un nouveau <xref:System.Text.UTF8Encoding> de l’instance et spécifie que le préfixe de marque d’un ordre d’octet Unicode doit être émis par le <xref:System.Text.UTF8Encoding.GetPreamble%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-154">The following example creates a new <xref:System.Text.UTF8Encoding> instance and specifies that a Unicode byte order mark prefix should be emitted by the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="5844c-155">Le <xref:System.Text.UTF8Encoding.GetPreamble%2A> méthode retourne ensuite la marque de préfixe d’ordre d’octet Unicode.</span><span class="sxs-lookup"><span data-stu-id="5844c-155">The <xref:System.Text.UTF8Encoding.GetPreamble%2A> method then returns the Unicode byte order mark prefix.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/CPP/ctor-boolean.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/CS/ctor-boolean.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/VB/ctor-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding (bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encoderShouldEmitUTF8Identifier As Boolean, throwOnInvalidBytes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoderShouldEmitUTF8Identifier" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidBytes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoderShouldEmitUTF8Identifier">
          <span data-ttu-id="5844c-156"><see langword="true" /> pour spécifier que la méthode <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> doit retourner une marque d'ordre d'octet Unicode ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-156"><see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method should return a Unicode byte order mark; otherwise, <see langword="false" />.</span></span></param>
        <param name="throwOnInvalidBytes">
          <span data-ttu-id="5844c-157"><see langword="true" /> pour lever une exception quand un encodage non valide est détecté ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-157"><see langword="true" /> to throw an exception when an invalid encoding is detected; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="5844c-158">Initialise une nouvelle instance de la classe <see cref="T:System.Text.UTF8Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-158">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span> <span data-ttu-id="5844c-159">Les paramètres spécifient s'il faut fournir une marque d'ordre d'octet Unicode et si une exception doit être levée quand un encodage non valide est détecté.</span><span class="sxs-lookup"><span data-stu-id="5844c-159">Parameters specify whether to provide a Unicode byte order mark and whether to throw an exception when an invalid encoding is detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-160">Le `encoderShouldEmitUTF8Identifier` paramètre contrôle le fonctionnement de la <xref:System.Text.UTF8Encoding.GetPreamble%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-160">The `encoderShouldEmitUTF8Identifier` parameter controls the operation of the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="5844c-161">Si `true`, la méthode retourne un tableau d’octets contenant la marque d’ordre d’octet Unicode (BOM) au format UTF-8.</span><span class="sxs-lookup"><span data-stu-id="5844c-161">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</span></span>  <span data-ttu-id="5844c-162">Si `false`, elle retourne un tableau d’octets de longueur nulle.</span><span class="sxs-lookup"><span data-stu-id="5844c-162">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="5844c-163">Toutefois, l’affectation `encoderShouldEmitUTF8Identifier` à `true` n’entraîne pas la <xref:System.Text.UTF8Encoding.GetBytes%2A> méthode pour préfixer la nomenclature au début du tableau d’octets, et ne déclenche la <xref:System.Text.UTF8Encoding.GetByteCount%2A> méthode pour inclure le nombre d’octets dans la nomenclature dans le nombre d’octets.</span><span class="sxs-lookup"><span data-stu-id="5844c-163">However, setting `encoderShouldEmitUTF8Identifier` to `true` does not cause the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
 <span data-ttu-id="5844c-164">Si `throwOnInvalidBytes` est `true`, une méthode qui détecte une séquence d’octets non valide lève une <xref:System.ArgumentException?displayProperty=nameWithType> exception.</span><span class="sxs-lookup"><span data-stu-id="5844c-164">If `throwOnInvalidBytes` is `true`, a method that detects an invalid byte sequence throws an <xref:System.ArgumentException?displayProperty=nameWithType> exception.</span></span> <span data-ttu-id="5844c-165">Sinon, la méthode ne lève pas d’exception et la séquence non valide est ignorée.</span><span class="sxs-lookup"><span data-stu-id="5844c-165">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5844c-166">Pour des raisons de sécurité, vous devez activer la détection d’erreur en appelant un constructeur qui inclut un `throwOnInvalidBytes` paramètre et en définissant ce paramètre sur `true`.</span><span class="sxs-lookup"><span data-stu-id="5844c-166">For security reasons, you should enable error detection by calling a constructor that includes a `throwOnInvalidBytes` parameter and setting that parameter to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5844c-167">L’exemple suivant crée un nouveau <xref:System.Text.UTF8Encoding> instance, en spécifiant que le <xref:System.Text.UTF8Encoding.GetPreamble%2A> méthode ne doit émettre un marque de préfixe d’ordre d’octet Unicode, et une exception doit être levée quand un encodage non valide est détecté.</span><span class="sxs-lookup"><span data-stu-id="5844c-167">The following example creates a new <xref:System.Text.UTF8Encoding> instance, specifying that the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method should not emit a Unicode byte order mark prefix, and an exception should be thrown when an invalid encoding is detected.</span></span> <span data-ttu-id="5844c-168">Le comportement de ce constructeur est comparé à la valeur par défaut <xref:System.Text.UTF8Encoding.%23ctor> constructeur, ce qui ne lève pas d’exception lorsqu’un encodage non valide est détecté.</span><span class="sxs-lookup"><span data-stu-id="5844c-168">The behavior of this constructor is compared to the default <xref:System.Text.UTF8Encoding.%23ctor> constructor, which does not throw an exception when an invalid encoding is detected.</span></span> <span data-ttu-id="5844c-169">Les deux <xref:System.Text.UTF8Encoding> instances encoder un tableau de caractères qui contient deux substituts haute (U + D801 et U + D802) dans une ligne, qui est une séquence de caractères non valide ; un caractère de substitution étendu doit toujours être suivi par un caractère de substitution faible.</span><span class="sxs-lookup"><span data-stu-id="5844c-169">The two <xref:System.Text.UTF8Encoding> instances encode a character array that contains two high surrogates (U+D801 and U+D802) in a row, which is an invalid character sequence; a high surrogate should always be followed by a low surrogate.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5844c-170">Objet à comparer à l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="5844c-170">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="5844c-171">Détermine si l'objet spécifié est identique à l'objet <see cref="T:System.Text.UTF8Encoding" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="5844c-171">Determines whether the specified object is equal to the current <see cref="T:System.Text.UTF8Encoding" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="5844c-172"><see langword="true" /> si <paramref name="value" /> est une instance de <see cref="T:System.Text.UTF8Encoding" /> et s'il est égal à l'objet actuel ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-172"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF8Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-173">Deux <xref:System.Text.UTF8Encoding> objets sont considérés comme égaux si toutes les conditions suivantes sont remplies :</span><span class="sxs-lookup"><span data-stu-id="5844c-173">Two <xref:System.Text.UTF8Encoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="5844c-174">Les deux objets fournissent la marque d’ordre, ou ne pas.</span><span class="sxs-lookup"><span data-stu-id="5844c-174">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="5844c-175">Les deux objets utilisent le même encodeur de secours.</span><span class="sxs-lookup"><span data-stu-id="5844c-175">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="5844c-176">Les deux objets utilisent le même décodeur de secours.</span><span class="sxs-lookup"><span data-stu-id="5844c-176">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5844c-177">L’exemple suivant utilise le <xref:System.Text.UTF8Encoding.Equals%2A> méthode pour tester si actuel <xref:System.Text.UTF8Encoding> objet est égal à un autre <xref:System.Text.UTF8Encoding> objet.</span><span class="sxs-lookup"><span data-stu-id="5844c-177">The following example uses the <xref:System.Text.UTF8Encoding.Equals%2A> method to test whether the current <xref:System.Text.UTF8Encoding> object is equal to a different <xref:System.Text.UTF8Encoding> object.</span></span> <span data-ttu-id="5844c-178">Quatre <xref:System.Text.UTF8Encoding> objets sont créés et comparées et les résultats des comparaisons sont affichés.</span><span class="sxs-lookup"><span data-stu-id="5844c-178">Four <xref:System.Text.UTF8Encoding> objects are created and compared and the results of the comparisons are displayed.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/CPP/equals-object.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/CS/equals-object.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/VB/equals-object.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5844c-179">Calcule le nombre d'octets produits par l'encodage d'un jeu de caractères.</span><span class="sxs-lookup"><span data-stu-id="5844c-179">Calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ chars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="5844c-180"><see cref="T:System.String" /> contenant le jeu de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-180">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="5844c-181">Calcule le nombre d'octets générés en encodant les caractères dans le <see cref="T:System.String" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="5844c-181">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="5844c-182">Nombre d'octets produits par l'encodage des caractères spécifiés.</span><span class="sxs-lookup"><span data-stu-id="5844c-182">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-183">Pour calculer la taille exacte de tableau requise par <xref:System.Text.UTF8Encoding.GetBytes%2A> pour stocker les octets obtenus, vous appelez le <xref:System.Text.UTF8Encoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-183">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="5844c-184">Pour calculer la taille maximale du tableau, vous appelez le <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-184">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="5844c-185">Le <xref:System.Text.UTF8Encoding.GetByteCount%2A> méthode alloue généralement moins de mémoire, alors que le <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="5844c-185">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="5844c-186">Avec la détection d’erreur, une séquence non valide provoque la levée de cette méthode une <xref:System.ArgumentException> exception.</span><span class="sxs-lookup"><span data-stu-id="5844c-186">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="5844c-187">Sans la détection d’erreurs, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="5844c-187">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="5844c-188">Pour vous assurer que les octets encodés sont décodés correctement lorsqu’ils sont enregistrés en tant que fichier ou en tant que flux, vous pouvez préfixer un flux d’octets encodés avec un préambule.</span><span class="sxs-lookup"><span data-stu-id="5844c-188">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="5844c-189">Insérer le préambule au début d’un flux d’octets (comme au début d’une série d’octets à écrire dans un fichier) est la responsabilité du développeur et le nombre d’octets dans le préambule n’est pas reflétée dans la valeur retournée par le <xref:System.Text.UTF8Encoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-189">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5844c-190">L’exemple suivant appelle la <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> et <xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29> méthodes pour calculer le nombre maximal et réel d’octets requis pour encoder une chaîne.</span><span class="sxs-lookup"><span data-stu-id="5844c-190">The following example calls the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> and <xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="5844c-191">Il affiche également le nombre réel d’octets requis pour stocker un flux d’octets avec une marque d’ordre d’octet.</span><span class="sxs-lookup"><span data-stu-id="5844c-191">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5844c-192"><paramref name="chars" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-192"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5844c-193">Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</span><span class="sxs-lookup"><span data-stu-id="5844c-193">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5844c-194">La détection d’erreurs est activée et <paramref name="chars" /> contient une séquence de caractères non valide.</span><span class="sxs-lookup"><span data-stu-id="5844c-194">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="5844c-195">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="5844c-195">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="5844c-196">-et-</span><span class="sxs-lookup"><span data-stu-id="5844c-196">-and-</span></span>  
  
 <span data-ttu-id="5844c-197"><see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-197"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="5844c-198">Pointeur du premier caractère à encoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-198">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="5844c-199">Nombre de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-199">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="5844c-200">Calcule le nombre d'octets produits par l'encodage d'un jeu de caractères commençant au pointeur de caractère spécifié.</span><span class="sxs-lookup"><span data-stu-id="5844c-200">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="5844c-201">Nombre d'octets produits par l'encodage des caractères spécifiés.</span><span class="sxs-lookup"><span data-stu-id="5844c-201">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-202">Pour calculer la taille exacte de tableau requise par le <xref:System.Text.UTF8Encoding.GetBytes%2A> méthode pour stocker les octets obtenus, vous appelez le <xref:System.Text.UTF8Encoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-202">To calculate the exact array size required by the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="5844c-203">Pour calculer la taille maximale du tableau, vous appelez le <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-203">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="5844c-204">Le <xref:System.Text.UTF8Encoding.GetByteCount%2A> méthode alloue généralement moins de mémoire, alors que le <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="5844c-204">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="5844c-205">Avec la détection d’erreur, une séquence non valide provoque la levée de cette méthode une <xref:System.ArgumentException> exception.</span><span class="sxs-lookup"><span data-stu-id="5844c-205">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="5844c-206">Sans la détection d’erreurs, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="5844c-206">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="5844c-207">Pour vous assurer que les octets encodés sont décodés correctement lorsqu’ils sont enregistrés en tant que fichier ou en tant que flux, vous pouvez préfixer un flux d’octets encodés avec un préambule.</span><span class="sxs-lookup"><span data-stu-id="5844c-207">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="5844c-208">Insérer le préambule au début d’un flux d’octets (comme au début d’une série d’octets à écrire dans un fichier) est la responsabilité du développeur et le nombre d’octets dans le préambule n’est pas reflétée dans la valeur retournée par le <xref:System.Text.UTF8Encoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-208">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5844c-209"><paramref name="chars" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-209"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5844c-210"><paramref name="count" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="5844c-210"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="5844c-211">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-211">-or-</span></span>  
  
 <span data-ttu-id="5844c-212">Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</span><span class="sxs-lookup"><span data-stu-id="5844c-212">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5844c-213">La détection d’erreurs est activée et <paramref name="chars" /> contient une séquence de caractères non valide.</span><span class="sxs-lookup"><span data-stu-id="5844c-213">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="5844c-214">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="5844c-214">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)</span></span>  
  
 <span data-ttu-id="5844c-215">-et-</span><span class="sxs-lookup"><span data-stu-id="5844c-215">-and-</span></span>  
  
 <span data-ttu-id="5844c-216"><see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-216"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="5844c-217">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="5844c-217">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="5844c-218">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="5844c-218">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="5844c-219">Tableau de caractères contenant le jeu de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-219">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="5844c-220">Index du premier caractère à encoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-220">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="5844c-221">Nombre de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-221">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="5844c-222">Calcule le nombre d'octets produits par l'encodage d'un jeu de caractères du tableau de caractères spécifié.</span><span class="sxs-lookup"><span data-stu-id="5844c-222">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span></summary>
        <returns><span data-ttu-id="5844c-223">Nombre d'octets produits par l'encodage des caractères spécifiés.</span><span class="sxs-lookup"><span data-stu-id="5844c-223">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-224">Pour calculer la taille exacte de tableau requise par <xref:System.Text.UTF8Encoding.GetBytes%2A> pour stocker les octets obtenus, vous appelez les utilisations <xref:System.Text.UTF8Encoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-224">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the uses <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="5844c-225">Pour calculer la taille maximale du tableau, vous appelez le <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-225">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="5844c-226">Le <xref:System.Text.UTF8Encoding.GetByteCount%2A> méthode alloue généralement moins de mémoire, alors que le <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="5844c-226">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="5844c-227">Avec la détection d’erreur, une séquence non valide provoque la levée de cette méthode une <xref:System.ArgumentException> exception.</span><span class="sxs-lookup"><span data-stu-id="5844c-227">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="5844c-228">Sans la détection d’erreurs, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="5844c-228">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="5844c-229">Pour vous assurer que les octets encodés sont décodés correctement lorsqu’ils sont enregistrés en tant que fichier ou en tant que flux, vous pouvez préfixer un flux d’octets encodés avec un préambule.</span><span class="sxs-lookup"><span data-stu-id="5844c-229">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="5844c-230">Insérer le préambule au début d’un flux d’octets (comme au début d’une série d’octets à écrire dans un fichier) est la responsabilité du développeur et le nombre d’octets dans le préambule n’est pas reflétée dans la valeur retournée par le <xref:System.Text.UTF8Encoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-230">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5844c-231">L’exemple suivant remplit un tableau avec un Latin en majuscules et minuscules et appelle le <xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> méthode pour déterminer le nombre d’octets requis pour encoder les caractères latins.</span><span class="sxs-lookup"><span data-stu-id="5844c-231">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="5844c-232">Il affiche ensuite ces informations ainsi que le nombre total d’octets nécessaires si une marque d’ordre d’octet est ajoutée.</span><span class="sxs-lookup"><span data-stu-id="5844c-232">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="5844c-233">Il compare ce numéro avec la valeur retournée par le <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> (méthode), ce qui indique le nombre maximal d’octets nécessaires pour coder les caractères latins.</span><span class="sxs-lookup"><span data-stu-id="5844c-233">It compares this number with the value returned by the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.UTF8Encoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5844c-234"><paramref name="chars" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-234"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5844c-235"><paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="5844c-235"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="5844c-236">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-236">-or-</span></span>  
  
 <span data-ttu-id="5844c-237"><paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-237"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
 <span data-ttu-id="5844c-238">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-238">-or-</span></span>  
  
 <span data-ttu-id="5844c-239">Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</span><span class="sxs-lookup"><span data-stu-id="5844c-239">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5844c-240">La détection d’erreurs est activée et <paramref name="chars" /> contient une séquence de caractères non valide.</span><span class="sxs-lookup"><span data-stu-id="5844c-240">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="5844c-241">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="5844c-241">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="5844c-242">-et-</span><span class="sxs-lookup"><span data-stu-id="5844c-242">-and-</span></span>  
  
 <span data-ttu-id="5844c-243">La propriété <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-243">The <see cref="P:System.Text.Encoding.EncoderFallback" /> property is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5844c-244">Encode un jeu de caractères en une séquence d'octets.</span><span class="sxs-lookup"><span data-stu-id="5844c-244">Encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="5844c-245">Pointeur du premier caractère à encoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-245">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="5844c-246">Nombre de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-246">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="5844c-247">Pointeur de l'emplacement où commencer l'écriture de la séquence d'octets obtenue.</span><span class="sxs-lookup"><span data-stu-id="5844c-247">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="5844c-248">Nombre maximal d'octets à écrire.</span><span class="sxs-lookup"><span data-stu-id="5844c-248">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="5844c-249">Code une séquence de caractères commençant au pointeur de caractère spécifié en une séquence d'octets, qui sera stockée à partir du pointeur d'octet spécifié.</span><span class="sxs-lookup"><span data-stu-id="5844c-249">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="5844c-250">Nombre réel d'octets écrits à l'emplacement indiqué par <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-250">The actual number of bytes written at the location indicated by <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-251">Pour calculer la taille exacte de tableau requise par <xref:System.Text.UTF8Encoding.GetBytes%2A> pour stocker les octets obtenus, vous appelez le <xref:System.Text.UTF8Encoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-251">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="5844c-252">Pour calculer la taille maximale du tableau, vous appelez le <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-252">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="5844c-253">Le <xref:System.Text.UTF8Encoding.GetByteCount%2A> méthode alloue généralement moins de mémoire, alors que le <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="5844c-253">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="5844c-254">Avec la détection d’erreur, une séquence non valide provoque la levée de cette méthode une <xref:System.ArgumentException> exception.</span><span class="sxs-lookup"><span data-stu-id="5844c-254">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="5844c-255">Sans la détection d’erreurs, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="5844c-255">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="5844c-256">Données à convertir, telles que les données lues à partir d’un flux de données peuvent être disponibles uniquement dans les blocs séquentiels.</span><span class="sxs-lookup"><span data-stu-id="5844c-256">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="5844c-257">Dans ce cas, ou si la quantité de données est tellement importante qu’il doit être divisée en blocs plus petits, utilisez le <xref:System.Text.Decoder> ou le <xref:System.Text.Encoder> retournée par le <xref:System.Text.UTF8Encoding.GetDecoder%2A> (méthode) ou <xref:System.Text.UTF8Encoding.GetEncoder%2A> (méthode), respectivement.</span><span class="sxs-lookup"><span data-stu-id="5844c-257">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> returned by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="5844c-258">Pour vous assurer que les octets encodés sont décodés correctement lorsqu’ils sont enregistrés en tant que fichier ou en tant que flux, vous pouvez préfixer un flux d’octets encodés avec un préambule.</span><span class="sxs-lookup"><span data-stu-id="5844c-258">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="5844c-259">Insérer le préambule au début d’un flux d’octets (par exemple au début d’une série d’octets à écrire dans un fichier) est la responsabilité du développeur.</span><span class="sxs-lookup"><span data-stu-id="5844c-259">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="5844c-260">Le <xref:System.Text.UTF8Encoding.GetBytes%2A> méthode n’ajoutez pas un préambule au début d’une séquence d’octets encodées.</span><span class="sxs-lookup"><span data-stu-id="5844c-260">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5844c-261"><paramref name="chars" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-261"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="5844c-262">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-262">-or-</span></span>  
  
 <span data-ttu-id="5844c-263"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-263"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5844c-264"><paramref name="charCount" /> ou <paramref name="byteCount" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="5844c-264"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5844c-265">La détection d’erreurs est activée et <paramref name="chars" /> contient une séquence de caractères non valide.</span><span class="sxs-lookup"><span data-stu-id="5844c-265">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
 <span data-ttu-id="5844c-266">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-266">-or-</span></span>  
  
 <span data-ttu-id="5844c-267"><paramref name="byteCount" /> est inférieur au nombre d'octets obtenus.</span><span class="sxs-lookup"><span data-stu-id="5844c-267"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="5844c-268">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="5844c-268">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="5844c-269">-et-</span><span class="sxs-lookup"><span data-stu-id="5844c-269">-and-</span></span>  
  
 <span data-ttu-id="5844c-270"><see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-270"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="5844c-271">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="5844c-271">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="5844c-272">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="5844c-272">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="5844c-273">Tableau de caractères contenant le jeu de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-273">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="5844c-274">Index du premier caractère à encoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-274">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="5844c-275">Nombre de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-275">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="5844c-276">Tableau d'octets destiné à contenir la séquence d'octets obtenue.</span><span class="sxs-lookup"><span data-stu-id="5844c-276">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="5844c-277">Index auquel commencer l'écriture de la séquence d'octets obtenue.</span><span class="sxs-lookup"><span data-stu-id="5844c-277">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="5844c-278">Encode un jeu de caractères du tableau de caractères spécifié en un tableau d'octets.</span><span class="sxs-lookup"><span data-stu-id="5844c-278">Encodes a set of characters from the specified character array into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="5844c-279">Nombre réel d'octets écrits dans <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-279">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-280">Pour calculer la taille exacte de tableau requise par <xref:System.Text.UTF8Encoding.GetBytes%2A> pour stocker les octets obtenus, vous appelez le <xref:System.Text.UTF8Encoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-280">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="5844c-281">Pour calculer la taille maximale du tableau, vous appelez le <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-281">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="5844c-282">Le <xref:System.Text.UTF8Encoding.GetByteCount%2A> méthode alloue généralement moins de mémoire, alors que le <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="5844c-282">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="5844c-283">Avec la détection d’erreur, une séquence non valide provoque la levée de cette méthode une <xref:System.ArgumentException> exception.</span><span class="sxs-lookup"><span data-stu-id="5844c-283">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="5844c-284">Sans la détection d’erreurs, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="5844c-284">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="5844c-285">Données à convertir, telles que les données lues à partir d’un flux de données peuvent être disponibles uniquement dans les blocs séquentiels.</span><span class="sxs-lookup"><span data-stu-id="5844c-285">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="5844c-286">Dans ce cas, ou si la quantité de données est tellement importante qu’il doit être divisée en blocs plus petits, utilisez le <xref:System.Text.Decoder> ou le <xref:System.Text.Encoder> fournie par le <xref:System.Text.UTF8Encoding.GetDecoder%2A> (méthode) ou <xref:System.Text.UTF8Encoding.GetEncoder%2A> (méthode), respectivement.</span><span class="sxs-lookup"><span data-stu-id="5844c-286">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="5844c-287">Pour vous assurer que les octets encodés sont décodés correctement lorsqu’ils sont enregistrés en tant que fichier ou en tant que flux, vous pouvez préfixer un flux d’octets encodés avec un préambule.</span><span class="sxs-lookup"><span data-stu-id="5844c-287">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="5844c-288">Insérer le préambule au début d’un flux d’octets (par exemple au début d’une série d’octets à écrire dans un fichier) est la responsabilité du développeur.</span><span class="sxs-lookup"><span data-stu-id="5844c-288">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="5844c-289">Le <xref:System.Text.UTF8Encoding.GetBytes%2A> méthode n’ajoutez pas un préambule au début d’une séquence d’octets encodées.</span><span class="sxs-lookup"><span data-stu-id="5844c-289">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5844c-290">L’exemple suivant utilise la <xref:System.Text.UTF8Encoding.GetBytes%2A> méthode pour encoder une plage de caractères à partir d’une chaîne et stocke les octets encodés dans une plage d’éléments dans un tableau d’octets.</span><span class="sxs-lookup"><span data-stu-id="5844c-290">The following example uses the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to encode a range of characters from a string and stores the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5844c-291"><paramref name="chars" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-291"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="5844c-292">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-292">-or-</span></span>  
  
 <span data-ttu-id="5844c-293"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-293"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5844c-294"><paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="5844c-294"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
 <span data-ttu-id="5844c-295">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-295">-or-</span></span>  
  
 <span data-ttu-id="5844c-296"><paramref name="charIndex" /> et <paramref name="charCount" /> ne désignent pas une plage valide dans <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-296"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
 <span data-ttu-id="5844c-297">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-297">-or-</span></span>  
  
 <span data-ttu-id="5844c-298"><paramref name="byteIndex" /> n'est pas un index valide dans <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-298"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5844c-299">La détection d’erreurs est activée et <paramref name="chars" /> contient une séquence de caractères non valide.</span><span class="sxs-lookup"><span data-stu-id="5844c-299">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
 <span data-ttu-id="5844c-300">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-300">-or-</span></span>  
  
 <span data-ttu-id="5844c-301"><paramref name="bytes" /> ne possède pas une capacité suffisante entre <paramref name="byteIndex" /> et la fin du tableau pour prendre en charge les octets obtenus.</span><span class="sxs-lookup"><span data-stu-id="5844c-301"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="5844c-302">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="5844c-302">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="5844c-303">-et-</span><span class="sxs-lookup"><span data-stu-id="5844c-303">-and-</span></span>  
  
 <span data-ttu-id="5844c-304"><see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-304"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="5844c-305"><see cref="T:System.String" /> contenant le jeu de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-305">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="5844c-306">Index du premier caractère à encoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-306">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="5844c-307">Nombre de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-307">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="5844c-308">Tableau d'octets destiné à contenir la séquence d'octets obtenue.</span><span class="sxs-lookup"><span data-stu-id="5844c-308">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="5844c-309">Index auquel commencer l'écriture de la séquence d'octets obtenue.</span><span class="sxs-lookup"><span data-stu-id="5844c-309">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="5844c-310">Encode un jeu de caractères de la chaîne <see cref="T:System.String" /> spécifiée dans le tableau d'octets indiqué.</span><span class="sxs-lookup"><span data-stu-id="5844c-310">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="5844c-311">Nombre réel d'octets écrits dans <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-311">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-312">Pour calculer la taille exacte de tableau requise par <xref:System.Text.UTF8Encoding.GetBytes%2A> pour stocker les octets obtenus, vous appelez le <xref:System.Text.UTF8Encoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-312">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="5844c-313">Pour calculer la taille maximale du tableau, vous appelez le <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-313">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="5844c-314">Le <xref:System.Text.UTF8Encoding.GetByteCount%2A> méthode alloue généralement moins de mémoire, alors que le <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="5844c-314">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="5844c-315">Avec la détection d’erreur, une séquence non valide provoque la levée de cette méthode une <xref:System.ArgumentException> exception.</span><span class="sxs-lookup"><span data-stu-id="5844c-315">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="5844c-316">Sans la détection d’erreurs, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="5844c-316">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="5844c-317">Données à convertir, telles que les données lues à partir d’un flux de données peuvent être disponibles uniquement dans les blocs séquentiels.</span><span class="sxs-lookup"><span data-stu-id="5844c-317">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="5844c-318">Dans ce cas, ou si la quantité de données est tellement importante qu’il doit être divisée en blocs plus petits, utilisez le <xref:System.Text.Decoder> ou le <xref:System.Text.Encoder> fournie par le <xref:System.Text.UTF8Encoding.GetDecoder%2A> (méthode) ou <xref:System.Text.UTF8Encoding.GetEncoder%2A> (méthode), respectivement.</span><span class="sxs-lookup"><span data-stu-id="5844c-318">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="5844c-319">Pour vous assurer que les octets encodés sont décodés correctement lorsqu’ils sont enregistrés en tant que fichier ou en tant que flux, vous pouvez préfixer un flux d’octets encodés avec un préambule.</span><span class="sxs-lookup"><span data-stu-id="5844c-319">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="5844c-320">Insérer le préambule au début d’un flux d’octets (par exemple au début d’une série d’octets à écrire dans un fichier) est la responsabilité du développeur.</span><span class="sxs-lookup"><span data-stu-id="5844c-320">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="5844c-321">Le <xref:System.Text.UTF8Encoding.GetBytes%2A> méthode n’ajoutez pas un préambule au début d’une séquence d’octets encodées.</span><span class="sxs-lookup"><span data-stu-id="5844c-321">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5844c-322">L’exemple suivant utilise le <xref:System.Text.UTF8Encoding.GetBytes%2A> pour encoder une plage d’éléments à partir d’un tableau de caractères Unicode et stocker les octets encodés dans une plage d’éléments dans un tableau d’octets.</span><span class="sxs-lookup"><span data-stu-id="5844c-322">The following example uses the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5844c-323"><paramref name="s" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-323"><paramref name="s" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="5844c-324">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-324">-or-</span></span>  
  
 <span data-ttu-id="5844c-325"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-325"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5844c-326"><paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="5844c-326"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
 <span data-ttu-id="5844c-327">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-327">-or-</span></span>  
  
 <span data-ttu-id="5844c-328"><paramref name="charIndex" /> et <paramref name="charCount" /> ne désignent pas une plage valide dans <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-328"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
 <span data-ttu-id="5844c-329">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-329">-or-</span></span>  
  
 <span data-ttu-id="5844c-330"><paramref name="byteIndex" /> n'est pas un index valide dans <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-330"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5844c-331">La détection d’erreurs est activée et <paramref name="s" /> contient une séquence de caractères non valide.</span><span class="sxs-lookup"><span data-stu-id="5844c-331">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span></span>  
  
 <span data-ttu-id="5844c-332">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-332">-or-</span></span>  
  
 <span data-ttu-id="5844c-333"><paramref name="bytes" /> ne possède pas une capacité suffisante entre <paramref name="byteIndex" /> et la fin du tableau pour prendre en charge les octets obtenus.</span><span class="sxs-lookup"><span data-stu-id="5844c-333"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="5844c-334">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="5844c-334">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="5844c-335">-et-</span><span class="sxs-lookup"><span data-stu-id="5844c-335">-and-</span></span>  
  
 <span data-ttu-id="5844c-336"><see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-336"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5844c-337">Calcule le nombre de caractères produits par le décodage d'une séquence d'octets.</span><span class="sxs-lookup"><span data-stu-id="5844c-337">Calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="5844c-338">Pointeur du premier octet à décoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-338">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="5844c-339">Nombre d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-339">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="5844c-340">Calcule le nombre de caractères produits par le décodage d'une séquence d'octets commençant au pointeur d'octet spécifié.</span><span class="sxs-lookup"><span data-stu-id="5844c-340">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="5844c-341">Nombre de caractères produits par le décodage de la séquence d'octets spécifiée.</span><span class="sxs-lookup"><span data-stu-id="5844c-341">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-342">Pour calculer la taille exacte de tableau requise par <xref:System.Text.UTF8Encoding.GetChars%2A> pour stocker les caractères obtenus, appelez le <xref:System.Text.UTF8Encoding.GetCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-342">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="5844c-343">Pour calculer la taille de tableau maximale, appelez le <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-343">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="5844c-344">Le <xref:System.Text.UTF8Encoding.GetCharCount%2A> méthode alloue généralement moins de mémoire, alors que le <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="5844c-344">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="5844c-345">Avec la détection d’erreur, une séquence non valide provoque la levée de cette méthode une <xref:System.ArgumentException> exception.</span><span class="sxs-lookup"><span data-stu-id="5844c-345">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="5844c-346">Sans la détection d’erreurs, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="5844c-346">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5844c-347"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-347"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5844c-348"><paramref name="count" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="5844c-348"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="5844c-349">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-349">-or-</span></span>  
  
 <span data-ttu-id="5844c-350">Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</span><span class="sxs-lookup"><span data-stu-id="5844c-350">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5844c-351">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.</span><span class="sxs-lookup"><span data-stu-id="5844c-351">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="5844c-352">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="5844c-352">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="5844c-353">-et-</span><span class="sxs-lookup"><span data-stu-id="5844c-353">-and-</span></span>  
  
 <span data-ttu-id="5844c-354"><see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-354"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="5844c-355">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="5844c-355">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="5844c-356">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="5844c-356">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Text.UTF8Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="5844c-357">Tableau d'octets contenant la séquence d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-357">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="5844c-358">Index du premier octet à décoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-358">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="5844c-359">Nombre d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-359">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="5844c-360">Calcule le nombre de caractères produits par le décodage d'une séquence d'octets du tableau d'octets spécifié.</span><span class="sxs-lookup"><span data-stu-id="5844c-360">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="5844c-361">Nombre de caractères produits par le décodage de la séquence d'octets spécifiée.</span><span class="sxs-lookup"><span data-stu-id="5844c-361">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-362">Pour calculer la taille exacte de tableau requise par <xref:System.Text.UTF8Encoding.GetChars%2A> pour stocker les caractères obtenus, appelez le <xref:System.Text.UTF8Encoding.GetCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-362">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="5844c-363">Pour calculer la taille de tableau maximale, appelez le <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-363">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="5844c-364">Le <xref:System.Text.UTF8Encoding.GetCharCount%2A> méthode alloue généralement moins de mémoire, alors que le <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="5844c-364">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="5844c-365">Avec la détection d’erreur, une séquence non valide provoque la levée de cette méthode une <xref:System.ArgumentException> exception.</span><span class="sxs-lookup"><span data-stu-id="5844c-365">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="5844c-366">Sans la détection d’erreurs, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="5844c-366">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5844c-367">L’exemple suivant utilise la <xref:System.Text.UTF8Encoding.GetCharCount%2A> méthode pour retourner le nombre de caractères produits par le décodage d’une plage d’éléments dans un tableau d’octets.</span><span class="sxs-lookup"><span data-stu-id="5844c-367">The following example uses the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5844c-368"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-368"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5844c-369"><paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="5844c-369"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="5844c-370">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-370">-or-</span></span>  
  
 <span data-ttu-id="5844c-371"><paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-371"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
 <span data-ttu-id="5844c-372">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-372">-or-</span></span>  
  
 <span data-ttu-id="5844c-373">Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</span><span class="sxs-lookup"><span data-stu-id="5844c-373">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5844c-374">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.</span><span class="sxs-lookup"><span data-stu-id="5844c-374">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="5844c-375">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="5844c-375">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="5844c-376">-et-</span><span class="sxs-lookup"><span data-stu-id="5844c-376">-and-</span></span>  
  
 <span data-ttu-id="5844c-377"><see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-377"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.UTF8Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5844c-378">Décode une séquence d'octets en un jeu de caractères.</span><span class="sxs-lookup"><span data-stu-id="5844c-378">Decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="5844c-379">Pointeur du premier octet à décoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-379">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="5844c-380">Nombre d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-380">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="5844c-381">Pointeur de l'emplacement où commencer l'écriture du jeu de caractères obtenu.</span><span class="sxs-lookup"><span data-stu-id="5844c-381">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="5844c-382">Nombre maximal de caractères à écrire.</span><span class="sxs-lookup"><span data-stu-id="5844c-382">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="5844c-383">Décode une séquence d'octets commençant au pointeur d'octet spécifié en un jeu de caractères qui sera stocké à partir du pointeur de caractère spécifié.</span><span class="sxs-lookup"><span data-stu-id="5844c-383">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="5844c-384">Nombre réel de caractères écrits à l'emplacement indiqué par <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-384">The actual number of characters written at the location indicated by <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-385">Pour calculer la taille exacte de tableau requise par <xref:System.Text.UTF8Encoding.GetChars%2A> pour stocker les caractères obtenus, appelez le <xref:System.Text.UTF8Encoding.GetCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-385">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="5844c-386">Pour calculer la taille de tableau maximale, appelez le <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-386">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="5844c-387">Le <xref:System.Text.UTF8Encoding.GetCharCount%2A> méthode alloue généralement moins de mémoire, alors que le <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="5844c-387">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="5844c-388">Avec la détection d’erreur, une séquence non valide provoque la levée de cette méthode une <xref:System.ArgumentException> exception.</span><span class="sxs-lookup"><span data-stu-id="5844c-388">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="5844c-389">Sans la détection d’erreurs, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="5844c-389">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="5844c-390">Si la plage d’octets à décoder inclut la marque d’ordre octet (BOM) et le tableau d’octets a été retourné par une méthode d’un type prenant en charge non-nomenclature, le caractère U + FFFE est inclus dans le tableau de caractères retourné par cette méthode.</span><span class="sxs-lookup"><span data-stu-id="5844c-390">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="5844c-391">Vous pouvez le supprimer en appelant le <xref:System.String.TrimStart%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-391">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="5844c-392">Données à convertir, telles que les données lues à partir d’un flux de données peuvent être disponibles uniquement dans les blocs séquentiels.</span><span class="sxs-lookup"><span data-stu-id="5844c-392">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="5844c-393">Dans ce cas, ou si la quantité de données est tellement importante qu’il doit être divisée en blocs plus petits, utilisez le <xref:System.Text.Decoder> ou le <xref:System.Text.Encoder> objet fourni par le <xref:System.Text.UTF8Encoding.GetDecoder%2A> (méthode) ou <xref:System.Text.UTF8Encoding.GetEncoder%2A> (méthode), respectivement.</span><span class="sxs-lookup"><span data-stu-id="5844c-393">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5844c-394"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-394"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="5844c-395">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-395">-or-</span></span>  
  
 <span data-ttu-id="5844c-396"><paramref name="chars" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-396"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5844c-397"><paramref name="byteCount" /> ou <paramref name="charCount" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="5844c-397"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5844c-398">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.</span><span class="sxs-lookup"><span data-stu-id="5844c-398">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
 <span data-ttu-id="5844c-399">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-399">-or-</span></span>  
  
 <span data-ttu-id="5844c-400"><paramref name="charCount" /> est inférieur au nombre de caractères obtenus.</span><span class="sxs-lookup"><span data-stu-id="5844c-400"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="5844c-401">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="5844c-401">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="5844c-402">-et-</span><span class="sxs-lookup"><span data-stu-id="5844c-402">-and-</span></span>  
  
 <span data-ttu-id="5844c-403"><see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-403"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="5844c-404">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="5844c-404">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="5844c-405">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="5844c-405">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="5844c-406">Tableau d'octets contenant la séquence d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-406">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="5844c-407">Index du premier octet à décoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-407">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="5844c-408">Nombre d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-408">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="5844c-409">Tableau de caractères destiné à contenir le jeu de caractères obtenu.</span><span class="sxs-lookup"><span data-stu-id="5844c-409">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="5844c-410">Index auquel commencer l'écriture du jeu de caractères obtenu.</span><span class="sxs-lookup"><span data-stu-id="5844c-410">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="5844c-411">Décode une séquence d'octets du tableau d'octets spécifié dans le tableau de caractères spécifié.</span><span class="sxs-lookup"><span data-stu-id="5844c-411">Decodes a sequence of bytes from the specified byte array into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="5844c-412">Nombre réel de caractères écrits dans <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-412">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-413">Pour calculer la taille exacte de tableau requise par <xref:System.Text.UTF8Encoding.GetChars%2A> pour stocker les caractères obtenus, appelez le <xref:System.Text.UTF8Encoding.GetCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-413">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="5844c-414">Pour calculer la taille de tableau maximale, appelez le <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-414">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="5844c-415">Le <xref:System.Text.UTF8Encoding.GetCharCount%2A> méthode alloue généralement moins de mémoire, alors que le <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="5844c-415">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="5844c-416">Avec la détection d’erreur, une séquence non valide provoque la levée de cette méthode une <xref:System.ArgumentException> exception.</span><span class="sxs-lookup"><span data-stu-id="5844c-416">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="5844c-417">Sans la détection d’erreurs, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="5844c-417">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="5844c-418">Si la plage d’octets à décoder inclut la marque d’ordre octet (BOM) et le tableau d’octets a été retourné par une méthode d’un type prenant en charge non-nomenclature, le caractère U + FFFE est inclus dans le tableau de caractères retourné par cette méthode.</span><span class="sxs-lookup"><span data-stu-id="5844c-418">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="5844c-419">Vous pouvez le supprimer en appelant le <xref:System.String.TrimStart%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-419">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="5844c-420">Données à convertir, telles que les données lues à partir d’un flux de données peuvent être disponibles uniquement dans les blocs séquentiels.</span><span class="sxs-lookup"><span data-stu-id="5844c-420">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="5844c-421">Dans ce cas, ou si la quantité de données est tellement importante qu’il doit être divisée en blocs plus petits, utilisez le <xref:System.Text.Decoder> ou le <xref:System.Text.Encoder> fournie par le <xref:System.Text.UTF8Encoding.GetDecoder%2A> (méthode) ou <xref:System.Text.UTF8Encoding.GetEncoder%2A> (méthode), respectivement.</span><span class="sxs-lookup"><span data-stu-id="5844c-421">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5844c-422">L’exemple suivant utilise le <xref:System.Text.UTF8Encoding.GetChars%2A> pour décoder une plage d’éléments dans un tableau d’octets et stocker le résultat dans un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="5844c-422">The following example uses the <xref:System.Text.UTF8Encoding.GetChars%2A> method to decode a range of elements in a byte array and store the result in a character array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5844c-423"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-423"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="5844c-424">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-424">-or-</span></span>  
  
 <span data-ttu-id="5844c-425"><paramref name="chars" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-425"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5844c-426"><paramref name="byteIndex" />, <paramref name="byteCount" /> ou <paramref name="charIndex" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="5844c-426"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
 <span data-ttu-id="5844c-427">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-427">-or-</span></span>  
  
 <span data-ttu-id="5844c-428"><paramref name="byteindex" /> et <paramref name="byteCount" /> ne désignent pas une plage valide dans <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-428"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
 <span data-ttu-id="5844c-429">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-429">-or-</span></span>  
  
 <span data-ttu-id="5844c-430"><paramref name="charIndex" /> n'est pas un index valide dans <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-430"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5844c-431">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.</span><span class="sxs-lookup"><span data-stu-id="5844c-431">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
 <span data-ttu-id="5844c-432">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-432">-or-</span></span>  
  
 <span data-ttu-id="5844c-433"><paramref name="chars" /> ne possède pas une capacité suffisante entre <paramref name="charIndex" /> et la fin du tableau pour prendre en charge les caractères obtenus.</span><span class="sxs-lookup"><span data-stu-id="5844c-433"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="5844c-434">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="5844c-434">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="5844c-435">-et-</span><span class="sxs-lookup"><span data-stu-id="5844c-435">-and-</span></span>  
  
 <span data-ttu-id="5844c-436"><see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-436"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5844c-437">Obtient un décodeur qui convertit une séquence d'octets encodée en UTF-8 en une séquence de caractères Unicode.</span><span class="sxs-lookup"><span data-stu-id="5844c-437">Obtains a decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="5844c-438">Décodeur qui convertit une séquence d'octets encodée en UTF-8 en une séquence de caractères Unicode.</span><span class="sxs-lookup"><span data-stu-id="5844c-438">A decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-439">Le <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> méthode convertit des blocs d’octets en blocs séquentiels de caractères, d’une manière similaire à la <xref:System.Text.UTF8Encoding.GetChars%2A> méthode de cette classe.</span><span class="sxs-lookup"><span data-stu-id="5844c-439">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UTF8Encoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="5844c-440">Toutefois, un <xref:System.Text.Decoder> conserve les informations d’état entre les appels, de sorte qu’il peut décoder correctement les séquences d’octets qui s’étendent sur des blocs.</span><span class="sxs-lookup"><span data-stu-id="5844c-440">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="5844c-441">Le <xref:System.Text.Decoder> également conserve les octets de fin à la fin des blocs de données et les octets de fin dans la prochaine opération de décodage.</span><span class="sxs-lookup"><span data-stu-id="5844c-441">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="5844c-442">Par conséquent, <xref:System.Text.UTF8Encoding.GetDecoder%2A> et <xref:System.Text.UTF8Encoding.GetEncoder%2A> sont utiles pour la transmission réseau et les opérations de fichiers, car celles-ci traitent souvent des blocs de données au lieu d’un flux de données complète.</span><span class="sxs-lookup"><span data-stu-id="5844c-442">Therefore, <xref:System.Text.UTF8Encoding.GetDecoder%2A> and <xref:System.Text.UTF8Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="5844c-443">Si la détection d’erreurs est activée, autrement dit, si le `throwOnInvalidCharacters` paramètre du constructeur est défini sur `true`, détection d’erreurs est également activée dans le <xref:System.Text.Decoder> retourné par cette méthode.</span><span class="sxs-lookup"><span data-stu-id="5844c-443">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="5844c-444">Si la détection d’erreurs est activée et une séquence non valide est rencontrée, l’état du décodeur est indéfini et le traitement doit s’arrêter.</span><span class="sxs-lookup"><span data-stu-id="5844c-444">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5844c-445">L’exemple suivant utilise la <xref:System.Text.UTF8Encoding.GetDecoder%2A> méthode pour obtenir un décodeur UTF-8.</span><span class="sxs-lookup"><span data-stu-id="5844c-445">The following example uses the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method to obtain a UTF-8 decoder.</span></span> <span data-ttu-id="5844c-446">Le décodeur convertit une séquence d’octets en une séquence de caractères.</span><span class="sxs-lookup"><span data-stu-id="5844c-446">The decoder converts a sequence of bytes into a sequence of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/CPP/getdecoder-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/CS/getdecoder-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/VB/getdecoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5844c-447">Obtient un encodeur qui convertit une séquence de caractères Unicode en une séquence d'octets encodée en UTF-8.</span><span class="sxs-lookup"><span data-stu-id="5844c-447">Obtains an encoder that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="5844c-448">Un <see cref="T:System.Text.Encoder" /> qui convertit une séquence de caractères Unicode en une séquence de caractères UTF-8.</span><span class="sxs-lookup"><span data-stu-id="5844c-448">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-449">Le <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> méthode convertit des blocs de caractères en blocs séquentiels d’octets, d’une manière similaire à la <xref:System.Text.UTF8Encoding.GetBytes%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-449">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.UTF8Encoding.GetBytes%2A> method.</span></span> <span data-ttu-id="5844c-450">Toutefois, un <xref:System.Text.Encoder> conserve les informations d’état entre les appels et peut donc encoder correctement les séquences de caractères qui s’étendent sur des blocs.</span><span class="sxs-lookup"><span data-stu-id="5844c-450">However, a <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="5844c-451">Le <xref:System.Text.Encoder> également conserve à la fin des caractères à la fin des blocs de données et utilise les caractères de fin dans la prochaine opération de codage.</span><span class="sxs-lookup"><span data-stu-id="5844c-451">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="5844c-452">Par exemple, un bloc de données peut se terminer par un substitut étendu non apparié, et le substitut faible correspondant peut être dans le bloc de données suivant.</span><span class="sxs-lookup"><span data-stu-id="5844c-452">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="5844c-453">Par conséquent, <xref:System.Text.UTF8Encoding.GetDecoder%2A> et <xref:System.Text.UTF8Encoding.GetEncoder%2A> sont utiles pour la transmission réseau et les opérations de fichiers, car celles-ci traitent souvent des blocs de données au lieu d’un flux de données complète.</span><span class="sxs-lookup"><span data-stu-id="5844c-453">Therefore, <xref:System.Text.UTF8Encoding.GetDecoder%2A> and <xref:System.Text.UTF8Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="5844c-454">Si la détection d’erreurs est activée, autrement dit, si le `throwOnInvalidCharacters` paramètre du constructeur est défini sur `true`, détection d’erreurs est également activée dans le <xref:System.Text.Encoder> retourné par cette méthode.</span><span class="sxs-lookup"><span data-stu-id="5844c-454">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> returned by this method.</span></span> <span data-ttu-id="5844c-455">Si la détection d’erreurs est activée et une séquence non valide est rencontrée, l’état de l’encodeur n’est pas défini et le traitement doit s’arrêter.</span><span class="sxs-lookup"><span data-stu-id="5844c-455">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5844c-456">L’exemple suivant utilise la <xref:System.Text.UTF8Encoding.GetEncoder%2A> séquence d’octets encodée de méthode pour obtenir un encodeur pour convertir une séquence de caractères UTF-8.</span><span class="sxs-lookup"><span data-stu-id="5844c-456">The following example uses the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method to obtain an encoder to convert a sequence of characters into a UTF-8 encoded sequence of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/CPP/getencoder-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/CS/getencoder-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/VB/getencoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5844c-457">Retourne le code de hachage pour l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="5844c-457">Returns the hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="5844c-458">Code de hachage de l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="5844c-458">The hash code for the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5844c-459">L’exemple suivant utilise le <xref:System.Text.UTF8Encoding.GetHashCode%2A> méthode pour retourner un code de hachage pour <xref:System.Text.UTF8Encoding> instances.</span><span class="sxs-lookup"><span data-stu-id="5844c-459">The following example uses the <xref:System.Text.UTF8Encoding.GetHashCode%2A> method to return a hash code for <xref:System.Text.UTF8Encoding> instances.</span></span> <span data-ttu-id="5844c-460">Notez que le code de hachage retourné par cette méthode varie selon le constructeur utilisé pour créer le <xref:System.Text.UTF8Encoding> objet.</span><span class="sxs-lookup"><span data-stu-id="5844c-460">Notice that the hash code returned by this method depends on the constructor used to create the <xref:System.Text.UTF8Encoding> object.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/CPP/gethashcode-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/CS/gethashcode-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/VB/gethashcode-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount"><span data-ttu-id="5844c-461">Nombre de caractères à encoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-461">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="5844c-462">Calcule le nombre maximal d'octets produits par l'encodage du nombre de caractères spécifié.</span><span class="sxs-lookup"><span data-stu-id="5844c-462">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="5844c-463">Nombre maximal d'octets produits par l'encodage du nombre de caractères spécifié.</span><span class="sxs-lookup"><span data-stu-id="5844c-463">The maximum number of bytes produced by encoding the specified number of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-464">Pour calculer la taille exacte de tableau requise par <xref:System.Text.UTF8Encoding.GetBytes%2A> pour stocker les octets obtenus, vous appelez le <xref:System.Text.UTF8Encoding.GetByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-464">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="5844c-465">Pour calculer la taille maximale du tableau, vous appelez le <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-465">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="5844c-466">Le <xref:System.Text.UTF8Encoding.GetByteCount%2A> méthode alloue généralement moins de mémoire, alors que le <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="5844c-466">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="5844c-467"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> est un nombre le plus défavorable, y compris le pire des cas actuellement sélectionné <xref:System.Text.EncoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="5844c-467"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="5844c-468">Si une stratégie de secours est choisi avec une chaîne potentiellement grande, <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> peut retourner des valeurs élevées.</span><span class="sxs-lookup"><span data-stu-id="5844c-468">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="5844c-469">Dans la plupart des cas, cette méthode retourne un nombre raisonnable pour les petites chaînes.</span><span class="sxs-lookup"><span data-stu-id="5844c-469">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="5844c-470">Pour les chaînes de grande taille, vous devrez choisir entre l’utilisation de mémoires tampons de grande et d’intercepter les erreurs dans les rares cas qu’une mémoire tampon plus raisonnable est dépassée.</span><span class="sxs-lookup"><span data-stu-id="5844c-470">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="5844c-471">Vous pouvez également envisager une approche différente à l’aide de <xref:System.Text.UTF8Encoding.GetByteCount%2A> ou <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5844c-471">You might also want to consider a different approach using <xref:System.Text.UTF8Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5844c-472">Par exemple, du texte en anglais et de nombreux autres langages doit souvent qu’un seul octet UTF-8 pour représenter un caractère, mais le nombre retourné par <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> a la possibilité que la chaîne à convertir se compose uniquement de caractères que que chaque nécessite quatre octets.</span><span class="sxs-lookup"><span data-stu-id="5844c-472">For example, text in English and many other languages often needs only one UTF-8 byte to represent a character, but the number returned by <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> has to allow for the possibility that the string to be converted will consist entirely of characters that each require four bytes.</span></span>  
  
 <span data-ttu-id="5844c-473"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> n’a aucune relation avec <xref:System.Text.UTF8Encoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="5844c-473"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.UTF8Encoding.GetChars%2A>.</span></span> <span data-ttu-id="5844c-474">Si votre application a besoin d’une fonction semblable à utiliser avec <xref:System.Text.UTF8Encoding.GetChars%2A>, elle doit utiliser <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="5844c-474">If your application needs a similar function to use with <xref:System.Text.UTF8Encoding.GetChars%2A>, it should use <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5844c-475">`GetMaxByteCount(N)` n’est pas nécessairement la même valeur que `N* GetMaxByteCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="5844c-475">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5844c-476">L’exemple suivant utilise la <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> méthode pour retourner le nombre maximal d’octets nécessaires au codage d’un nombre spécifié de caractères.</span><span class="sxs-lookup"><span data-stu-id="5844c-476">The following example uses the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method to return the maximum number of bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5844c-477"><paramref name="charCount" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="5844c-477"><paramref name="charCount" /> is less than zero.</span></span>  
  
 <span data-ttu-id="5844c-478">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-478">-or-</span></span>  
  
 <span data-ttu-id="5844c-479">Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</span><span class="sxs-lookup"><span data-stu-id="5844c-479">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="5844c-480">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="5844c-480">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="5844c-481">-et-</span><span class="sxs-lookup"><span data-stu-id="5844c-481">-and-</span></span>  
  
 <span data-ttu-id="5844c-482"><see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-482"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount"><span data-ttu-id="5844c-483">Nombre d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-483">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="5844c-484">Calcule le nombre maximal de caractères produits par le décodage du nombre d'octets spécifié.</span><span class="sxs-lookup"><span data-stu-id="5844c-484">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="5844c-485">Nombre maximal de caractères produits par le décodage du nombre d'octets spécifié.</span><span class="sxs-lookup"><span data-stu-id="5844c-485">The maximum number of characters produced by decoding the specified number of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-486">Pour calculer la taille exacte de tableau requise par <xref:System.Text.UTF8Encoding.GetChars%2A> pour stocker les caractères obtenus, vous appelez le <xref:System.Text.UTF8Encoding.GetCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-486">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, you call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="5844c-487">Pour calculer la taille maximale du tableau, vous appelez le <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-487">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="5844c-488">Le <xref:System.Text.UTF8Encoding.GetCharCount%2A> méthode alloue généralement moins de mémoire, alors que le <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> méthode s’exécute plus rapidement.</span><span class="sxs-lookup"><span data-stu-id="5844c-488">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="5844c-489"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> est un nombre le plus défavorable, y compris le pire des cas actuellement sélectionné <xref:System.Text.DecoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="5844c-489"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="5844c-490">Si une stratégie de secours est choisi avec une chaîne potentiellement grande, <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> peut retourner des valeurs élevées.</span><span class="sxs-lookup"><span data-stu-id="5844c-490">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="5844c-491">Dans la plupart des cas, cette méthode retourne un nombre raisonnable pour les petites chaînes.</span><span class="sxs-lookup"><span data-stu-id="5844c-491">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="5844c-492">Pour les chaînes de grande taille, vous devrez choisir entre l’utilisation de mémoires tampons de grande et d’intercepter les erreurs dans les rares cas qu’une mémoire tampon plus raisonnable est dépassée.</span><span class="sxs-lookup"><span data-stu-id="5844c-492">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span>  <span data-ttu-id="5844c-493">Vous pouvez également envisager une approche différente à l’aide de <xref:System.Text.UTF8Encoding.GetCharCount%2A> ou <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5844c-493">You might also want to consider a different approach using <xref:System.Text.UTF8Encoding.GetCharCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="5844c-494"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> n’a aucune relation avec <xref:System.Text.UTF8Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="5844c-494"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.UTF8Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="5844c-495">Si votre application a besoin d’une fonction semblable à utiliser avec <xref:System.Text.UTF8Encoding.GetBytes%2A>, elle doit utiliser <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="5844c-495">If your application needs a similar function to use with <xref:System.Text.UTF8Encoding.GetBytes%2A>, it should use <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5844c-496">`GetMaxCharCount(N)` n’est pas nécessairement la même valeur que `N* GetMaxCharCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="5844c-496">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5844c-497">L’exemple suivant utilise la <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> méthode pour retourner le nombre maximal de caractères produits par le décodage d’un nombre spécifié d’octets.</span><span class="sxs-lookup"><span data-stu-id="5844c-497">The following example uses the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method to return the maximum number of characters produced by decoding a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5844c-498"><paramref name="byteCount" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="5844c-498"><paramref name="byteCount" /> is less than zero.</span></span>  
  
 <span data-ttu-id="5844c-499">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-499">-or-</span></span>  
  
 <span data-ttu-id="5844c-500">Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</span><span class="sxs-lookup"><span data-stu-id="5844c-500">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="5844c-501">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="5844c-501">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="5844c-502">-et-</span><span class="sxs-lookup"><span data-stu-id="5844c-502">-and-</span></span>  
  
 <span data-ttu-id="5844c-503"><see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-503"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5844c-504">Retourne une marque d'ordre d'octet Unicode au format UTF-8, si l'objet de codage <see cref="T:System.Text.UTF8Encoding" /> est configuré pour en fournir une.</span><span class="sxs-lookup"><span data-stu-id="5844c-504">Returns a Unicode byte order mark encoded in UTF-8 format, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span></span></summary>
        <returns><span data-ttu-id="5844c-505">Tableau d'octets contenant la marque d'ordre d'octet Unicode, si l'objet de codage <see cref="T:System.Text.UTF8Encoding" /> est configuré pour en fournir une.</span><span class="sxs-lookup"><span data-stu-id="5844c-505">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span></span> <span data-ttu-id="5844c-506">Sinon, cette méthode retourne un tableau d'octets de longueur égale à zéro.</span><span class="sxs-lookup"><span data-stu-id="5844c-506">Otherwise, this method returns a zero-length byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-507">Le <xref:System.Text.UTF8Encoding> objet peut fournir un préambule, qui est un tableau d’octets qui peut être un préfixe à la séquence d’octets résultant du processus de codage.</span><span class="sxs-lookup"><span data-stu-id="5844c-507">The <xref:System.Text.UTF8Encoding> object can provide a preamble, which is a byte array that can be prefixed to the sequence of bytes that result from the encoding process.</span></span> <span data-ttu-id="5844c-508">En le faisant précéder une séquence d’octets encodées avec une marque d’ordre (point de code U + FEFF) aide le décodeur à déterminer l’ordre d’octet et le format de transformation ou UTF.</span><span class="sxs-lookup"><span data-stu-id="5844c-508">Prefacing a sequence of encoded bytes with a byte order mark (code point U+FEFF) helps the decoder determine the byte order and the transformation format, or UTF.</span></span> <span data-ttu-id="5844c-509">La marque d’ordre octet (BOM) Unicode est sérialisée comme 0xEF 0xBB 0xBF.</span><span class="sxs-lookup"><span data-stu-id="5844c-509">The Unicode byte order mark (BOM) is serialized as 0xEF 0xBB 0xBF.</span></span> <span data-ttu-id="5844c-510">Notez que la norme Unicode ni requiert ni ne recommande l’utilisation d’une nomenclature du codage UTF-8 encodés de flux de données.</span><span class="sxs-lookup"><span data-stu-id="5844c-510">Note that the Unicode Standard neither requires nor recommends the use of a BOM for UTF-8 encoded streams.</span></span>  
  
 <span data-ttu-id="5844c-511">Vous pouvez instancier un <xref:System.Text.UTF8Encoding> dont l’objet <xref:System.Text.UTF8Encoding.GetPreamble%2A> méthode retourne une nomenclature valide comme suit :</span><span class="sxs-lookup"><span data-stu-id="5844c-511">You can instantiate a <xref:System.Text.UTF8Encoding> object whose <xref:System.Text.UTF8Encoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="5844c-512">En récupérant le <xref:System.Text.UTF8Encoding> objet retourné par la <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="5844c-512">By retrieving the <xref:System.Text.UTF8Encoding> object returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="5844c-513">En appelant un <xref:System.Text.UTF8Encoding> constructeur avec un `encoderShouldEmitUTF8Identifier` paramètre et en définissant sa valeur est définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="5844c-513">By calling a <xref:System.Text.UTF8Encoding> constructor with a `encoderShouldEmitUTF8Identifier` parameter and setting its value set to `true`.</span></span>  
  
 <span data-ttu-id="5844c-514">Tous les autres <xref:System.Text.UTF8Encoding> objets sont configurés pour retourner un tableau vide, et non une marque BOM est valide.</span><span class="sxs-lookup"><span data-stu-id="5844c-514">All other <xref:System.Text.UTF8Encoding> objects are configured to return an empty array rather than a valid BOM.</span></span>  
  
 <span data-ttu-id="5844c-515">La nomenclature fournissent certaine identification d’un encodage pour fichiers qui autrement ont perdu une référence à leur codage, telles que web sans balise ou incorrectement référencée données ou des fichiers texte aléatoires stockés lorsqu’une entreprise n’ont pas intérêts internationaux.</span><span class="sxs-lookup"><span data-stu-id="5844c-515">The BOM provide nearly certain identification of an encoding for files that otherwise have lost a reference to their encoding, such as untagged or improperly tagged web data or random text files stored when a business did not have international concerns.</span></span> <span data-ttu-id="5844c-516">Souvent des problèmes d’utilisateur peuvent être évités si les données sont balisées de manière cohérente et correctement configurée.</span><span class="sxs-lookup"><span data-stu-id="5844c-516">Often user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="5844c-517">Des normes qui fournissent un type de codage, un BOM est quelque peu redondant.</span><span class="sxs-lookup"><span data-stu-id="5844c-517">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="5844c-518">Toutefois, il peut être utilisé pour aider un serveur à envoyer l’en-tête de codage correct.</span><span class="sxs-lookup"><span data-stu-id="5844c-518">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="5844c-519">Sinon, il peut être utilisé comme un secours au cas où l’encodage est perdu.</span><span class="sxs-lookup"><span data-stu-id="5844c-519">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="5844c-520">Il existe certains inconvénients à l’aide d’une nomenclature.</span><span class="sxs-lookup"><span data-stu-id="5844c-520">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="5844c-521">Par exemple, le fait de savoir comment limiter les champs de base de données qui utilisent un BOM peut être difficile.</span><span class="sxs-lookup"><span data-stu-id="5844c-521">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="5844c-522">Concaténation de fichiers peut poser un problème également, par exemple, lors de la fusion des fichiers de telle façon un caractère inutile peut finir au milieu des données.</span><span class="sxs-lookup"><span data-stu-id="5844c-522">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="5844c-523">En dépit de quelques inconvénients, toutefois, l’utilisation d’une nomenclature est hautement recommandée.</span><span class="sxs-lookup"><span data-stu-id="5844c-523">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="5844c-524">Pour plus d’informations sur l’ordre d’octet et la marque d’ordre, consultez la norme Unicode sur le [page d’accueil Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="5844c-524">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="5844c-525">Pour vous assurer que les octets encodés sont décodés correctement lorsqu’ils sont enregistrés en tant que fichier ou en tant que flux, vous pouvez préfixer le début d’un flux d’octets encodés avec un préambule.</span><span class="sxs-lookup"><span data-stu-id="5844c-525">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix the beginning of a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="5844c-526">Notez que le <xref:System.Text.UTF8Encoding.GetBytes%2A> méthode n’ajoutez pas une nomenclature à une séquence d’octets codés ; en fournissant une nomenclature au début d’un flux d’octets approprié est la responsabilité du développeur.</span><span class="sxs-lookup"><span data-stu-id="5844c-526">Note that the <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5844c-527">L’exemple suivant utilise le <xref:System.Text.UTF8Encoding.GetPreamble%2A> encodé au format UTF-8 de marque d’ordre d’octet Unicode de retour de méthode.</span><span class="sxs-lookup"><span data-stu-id="5844c-527">The following example uses the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to return the Unicode byte order mark encoded in UTF-8 format.</span></span> <span data-ttu-id="5844c-528">Notez que le constructeur par défaut <xref:System.Text.UTF8Encoding> ne fournit pas de préambule.</span><span class="sxs-lookup"><span data-stu-id="5844c-528">Notice that the default constructor for <xref:System.Text.UTF8Encoding> does not provide a preamble.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/CPP/getpreamble-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/CS/getpreamble-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/VB/getpreamble-.vb#1)]  
  
 <span data-ttu-id="5844c-529">L’exemple suivant instancie deux <xref:System.Text.UTF8Encoding> objets, la première en appelant sans paramètre <xref:System.Text.UTF8Encoding.%23ctor> constructeur qui ne fournit pas d’une nomenclature et le second en appelant le <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29> constructeur avec son `encoderShouldEmitUTF8Identifier` affectée à l’argument `true`.</span><span class="sxs-lookup"><span data-stu-id="5844c-529">The following example instantiates two <xref:System.Text.UTF8Encoding> objects, the first by calling the parameterless <xref:System.Text.UTF8Encoding.%23ctor> constructor, which does not provide a BOM, and the second by calling the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29> constructor with its `encoderShouldEmitUTF8Identifier` argument set to `true`.</span></span> <span data-ttu-id="5844c-530">Il appelle ensuite la <xref:System.Text.UTF8Encoding.GetPreamble%2A> méthode pour écrire la nomenclature dans un fichier avant d’écrire une chaîne codée au format UF8.</span><span class="sxs-lookup"><span data-stu-id="5844c-530">It then calls the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to write the BOM to a file before writing a UF8-encoded string.</span></span> <span data-ttu-id="5844c-531">Comme le montre la sortie de l’exemple de console, le fichier qui enregistre les octets à partir de l’encodeur deuxième possède trois octets plus que la première.</span><span class="sxs-lookup"><span data-stu-id="5844c-531">As the console output from the example shows, the file that saves the bytes from the second encoder has three more bytes than the first.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getpreamble/cs/getpreamble1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getpreamble/vb/getpreamble1.vb#1)]  
  
 <span data-ttu-id="5844c-532">Vous pouvez également comparer les fichiers à l’aide de la `fc` commande dans une fenêtre de console, ou vous pouvez inspecter les fichiers dans un éditeur de texte qui inclut un mode d’affichage de format hexadécimal.</span><span class="sxs-lookup"><span data-stu-id="5844c-532">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="5844c-533">Notez que lorsque le fichier est ouvert dans un éditeur qui prend en charge UTF-8, la nomenclature n’est pas affichée.</span><span class="sxs-lookup"><span data-stu-id="5844c-533">Note that when the file is opened in an editor that supports UTF-8, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="5844c-534">Tableau d'octets contenant la séquence d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-534">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="5844c-535">Index du premier octet à décoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-535">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="5844c-536">Nombre d'octets à décoder.</span><span class="sxs-lookup"><span data-stu-id="5844c-536">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="5844c-537">Décode une plage d'octets d'un tableau d'octets en une chaîne.</span><span class="sxs-lookup"><span data-stu-id="5844c-537">Decodes a range of bytes from a byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="5844c-538"><see cref="T:System.String" /> contenant les résultats du décodage de la séquence d'octets spécifiée.</span><span class="sxs-lookup"><span data-stu-id="5844c-538">A <see cref="T:System.String" /> containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5844c-539">Avec la détection d’erreur, une séquence non valide provoque la levée de cette méthode une <xref:System.ArgumentException> exception.</span><span class="sxs-lookup"><span data-stu-id="5844c-539">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="5844c-540">Sans la détection d’erreurs, les séquences non valides sont ignorées et aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="5844c-540">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="5844c-541">Si la plage d’octets à décoder inclut la marque d’ordre octet (BOM) et le tableau d’octets a été retourné par une méthode d’un type prenant en charge non-nomenclature, le caractère U + FFFE est inclus dans le tableau de caractères retourné par cette méthode.</span><span class="sxs-lookup"><span data-stu-id="5844c-541">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="5844c-542">Vous pouvez le supprimer en appelant le <xref:System.String.TrimStart%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-542">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="5844c-543">Données à convertir, telles que les données lues à partir d’un flux de données peuvent être disponibles uniquement dans les blocs séquentiels.</span><span class="sxs-lookup"><span data-stu-id="5844c-543">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="5844c-544">Dans ce cas, ou si la quantité de données est tellement importante qu’il doit être divisée en blocs plus petits, utilisez le <xref:System.Text.Decoder> ou le <xref:System.Text.Encoder> fournie par le <xref:System.Text.UTF8Encoding.GetDecoder%2A> (méthode) ou <xref:System.Text.UTF8Encoding.GetEncoder%2A> (méthode), respectivement.</span><span class="sxs-lookup"><span data-stu-id="5844c-544">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5844c-545">L’exemple suivant initialise un tableau en appelant le <xref:System.Text.UTF8Encoding.GetByteCount%2A> méthode pour déterminer exactement combien d’octets est nécessaires pour une chaîne encodée, puis en ajoutant la taille de la marque d’ordre octet (BOM).</span><span class="sxs-lookup"><span data-stu-id="5844c-545">The following example initializes an array by calling the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="5844c-546">L’exemple appelle ensuite la <xref:System.Text.UTF8Encoding.GetPreamble%2A> méthode pour stocker la nomenclature vers le tableau avant d’appeler le <xref:System.Text.UTF8Encoding.GetBytes%2A> méthode pour stocker les octets encodés dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="5844c-546">The example then calls the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="5844c-547">L’exemple appelle ensuite la <xref:System.Text.UTF8Encoding.GetString%2A> méthode pour décoder la chaîne.</span><span class="sxs-lookup"><span data-stu-id="5844c-547">The example then calls the <xref:System.Text.UTF8Encoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/cs/getstring1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/vb/getstring1.vb#1)]  
  
 <span data-ttu-id="5844c-548">Notez que dans ce cas la chaîne décodée diffère de la chaîne d’origine, car il commence par une marque d’ordre des octets de 16 bits U + FFFD.</span><span class="sxs-lookup"><span data-stu-id="5844c-548">Note that in this case the decoded string differs from the original string, since it begins with a 16-bit byte order mark U+FFFD.</span></span> <span data-ttu-id="5844c-549">Cela signifie que les deux chaînes sont considérés comme égaux, et que si la chaîne est la sortie, la nomenclature s’affichera en tant que le caractère de remplacement « ? ».</span><span class="sxs-lookup"><span data-stu-id="5844c-549">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span> <span data-ttu-id="5844c-550">Pour supprimer la nomenclature au début de la chaîne, vous pouvez appeler la <xref:System.String.TrimStart%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5844c-550">To remove the BOM at the beginning of the string, you can call the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5844c-551"><paramref name="bytes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-551"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5844c-552"><paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="5844c-552"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="5844c-553">- ou -</span><span class="sxs-lookup"><span data-stu-id="5844c-553">-or-</span></span>  
  
 <span data-ttu-id="5844c-554"><paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-554"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5844c-555">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.</span><span class="sxs-lookup"><span data-stu-id="5844c-555">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="5844c-556">Une procédure de secours a eu lieu (consultez [Encodage de caractères dans le .NET Framework](~/docs/standard/base-types/character-encoding.md) pour obtenir une explication complète)</span><span class="sxs-lookup"><span data-stu-id="5844c-556">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span>  
  
 <span data-ttu-id="5844c-557">-et-</span><span class="sxs-lookup"><span data-stu-id="5844c-557">-and-</span></span>  
  
 <span data-ttu-id="5844c-558"><see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="5844c-558"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>