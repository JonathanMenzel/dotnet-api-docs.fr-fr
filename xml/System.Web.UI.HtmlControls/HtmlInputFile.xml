<Type Name="HtmlInputFile" FullName="System.Web.UI.HtmlControls.HtmlInputFile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7cc6a5794a0a1dfaae0abb38194dd6ca4ad85b50" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30590383" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlInputFile : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputFile extends System.Web.UI.HtmlControls.HtmlInputControl implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputFile" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlInputFile&#xA;Inherits HtmlInputControl&#xA;Implements IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlInputFile : System::Web::UI::HtmlControls::HtmlInputControl, System::Web::UI::IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Autorise l’accès programmatique à l’élément <see langword="&lt;input type= file&gt;" /> HTML sur le serveur.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la <xref:System.Web.UI.HtmlControls.HtmlInputFile> contrôle de serveur pour gérer le téléchargement de fichiers texte ou binaires à partir d’un client de navigateur sur le serveur. Téléchargement du fichier fonctionne avec Microsoft Internet Explorer 3.02 ou version ultérieure.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.HtmlControls.HtmlInputFile> contrôle est conçu pour être utilisé uniquement dans les scénarios de publication (postback) et non dans les scénarios de publication (postback) asynchrone pendant le rendu de page partiel. Lorsque vous utilisez un <xref:System.Web.UI.HtmlControls.HtmlInputFile> contrôler à l’intérieur d’une <xref:System.Web.UI.UpdatePanel> (contrôle), le fichier doit être téléchargé à l’aide d’un contrôle qui est un <xref:System.Web.UI.PostBackTrigger> objet pour le panneau de configuration. <xref:System.Web.UI.UpdatePanel> les contrôles sont utilisés pour mettre à jour certaines régions d’une page au lieu de la mise à jour de la page entière avec une publication (postback). Pour plus d’informations, consultez [vue d’ensemble du contrôle UpdatePanel](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) et [vue d’ensemble du rendu de Page partiel](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
 Pour spécifier le fichier à télécharger, entrez le chemin d’accès complet au fichier (par exemple, « C:\MyFiles\Test.txt ») dans la zone de texte du contrôle. Vous pouvez également sélectionner le fichier en cliquant sur le **Parcourir** bouton, puis en recherchant dans le **choisir un fichier** boîte de dialogue.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> propriété d’un <xref:System.Web.UI.HtmlControls.HtmlForm> contrôle doit être défini sur « multipart/form-data » pour ce contrôle fonctionne correctement.  
  
 Le <xref:System.Web.UI.HtmlControls.HtmlInputFile> contrôle n’a pas de méthode intégrée pour publier sur le serveur. Pour télécharger le fichier sur le serveur, utilisez le <xref:System.Web.HttpPostedFile.SaveAs%2A> méthode de la <xref:System.Web.HttpPostedFile?displayProperty=nameWithType> objet contenu dans le <xref:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile%2A> propriété. Cette opération s’effectue habituellement dans une méthode de gestion des événements, par exemple un bouton, cliquez sur.  
  
> [!NOTE]
>  Lorsque vous utilisez la <xref:System.Web.HttpPostedFile.SaveAs%2A> méthode de la <xref:System.Web.HttpPostedFile> de classe, veillez à spécifier un chemin d’accès racine (par exemple, « C:\MyFiles\Test.txt »). Le comportement de la <xref:System.Web.HttpPostedFile.SaveAs%2A> méthode peut être spécifiée dans le [httpRuntime, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) section de configuration avec la `requireRootedSaveAsPath` attribut. La valeur par défaut de cet attribut est `true`. Si vous définissez cet attribut sur `false`, puis en utilisant la <xref:System.Web.HttpPostedFile.SaveAs%2A> méthode sans chemin d’accès spécifié tente de placer le fichier dans le `systemroot` répertoire \system32\inetsrv. Par défaut, ce répertoire est protégé en écriture ; Par conséquent, le fichier ne peut pas être enregistré. Veillez à fournir l’autorisation d’écriture pour le compte utilisé par ASP.NET pour le répertoire où vous souhaitez stocker le fichier.  
  
 Lorsque vous transférez des fichiers volumineux, utilisez le `maxRequestLength` attribut de la [httpRuntime, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) élément pour augmenter la taille de fichier maximale autorisée. Une erreur DNS est générée dans le navigateur lorsque le fichier dépasse la taille spécifiée. Vous pouvez également recevoir le message d’erreur suivant lors du téléchargement de fichiers volumineux :  
  
 aspnet_wp.exe (PID : 1520) a été recyclé, car la consommation de mémoire dépassait 460 Mo (60 pour cent de mémoire vive disponible).  
  
 Si vous rencontrez ce message d’erreur, augmentez la valeur de la `memoryLimit` d’attribut dans le [processModel, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/4b8fe20e-74c8-4566-b72c-ce5f83c8e32d) élément du fichier Machine.config.  
  
 Pour obtenir la liste de valeurs de propriété initiales d’une instance de <xref:System.Web.UI.HtmlControls.HtmlInputFile>, consultez la <xref:System.Web.UI.HtmlControls.HtmlInputFile.%23ctor%2A> constructeur.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser la <xref:System.Web.UI.HtmlControls.HtmlInputFile> contrôle pour créer un scénario de transfert de fichier simple. Pour cet exemple fonctionne correctement, vous devez créer un répertoire appelé `Temp` sur votre ordinateur le lecteur C.  
  
 [!code-aspx-csharp[Classic HtmlInputFile Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpPostedFile" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputControl" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputFile();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour créer et initialiser une nouvelle instance de la <xref:System.Web.UI.HtmlControls.HtmlInputFile> classe.  
  
 Le tableau suivant affiche la valeur de propriété initiales d’une instance de <xref:System.Web.UI.HtmlControls.HtmlInputFile>.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|La chaîne littérale « fichier ».|  
  
   
  
## Examples  
 L'exemple de code suivant illustre la création d'une nouvelle instance de la classe <xref:System.Web.UI.HtmlControls.HtmlInputFile>. Pour cet exemple fonctionne correctement, vous devez créer un répertoire appelé `Temp` sur votre ordinateur le lecteur C.  
  
 [!code-aspx-csharp[HtmlInputFileCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputFileCtor/CS/htmlinputfilectorcs.aspx#1)]
 [!code-aspx-vb[HtmlInputFileCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputFileCtor/VB/htmlinputfilectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public string Accept { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Accept" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.Accept" />
      <MemberSignature Language="VB.NET" Value="Public Property Accept As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Accept { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une liste des encodages MIME avec la virgule comme séparateur, qui peuvent être utilisés pour limiter les types de fichiers que l'utilisateur peut sélectionner.</summary>
        <value>Liste des encodages MIME avec la virgule comme séparateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette propriété pour spécifier le type de fichier qui peut être téléchargé sur le serveur. Par exemple, pour limiter la sélection aux images, définissez cette propriété sur « image / * ».  
  
> [!NOTE]
>  Prise en charge pour cette propriété est dépendante du navigateur. Vérifiez votre navigateur pour déterminer si elle prend en charge cette propriété. Il est recommandé d’utiliser le code côté serveur pour vous assurer que le fichier est du type attendu.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlControls.HtmlInputFile.Accept%2A> propriété pour empêcher l’utilisateur de sélectionner n’importe quel fichier autre que d’un fichier image. Pour cet exemple fonctionne correctement, vous devez créer un répertoire appelé `Temp` sur votre ordinateur le lecteur C. Étant donné que prend en charge pour le <xref:System.Web.UI.HtmlControls.HtmlInputFile.Accept%2A> propriété dépend du navigateur, une vérification côté serveur est effectuée pour garantir que seules les images sont téléchargées. Une exception est levée si le fichier téléchargé n’a pas peut être lu comme un <xref:System.Drawing.Image> type.  
  
 [!code-aspx-csharp[Classic HtmlInputFile.Accept Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile.Accept Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputFile.Accept Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile.Accept Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identificateur de clé pour le contrôle.</param>
        <param name="postCollection">La collection de toutes les valeurs de nom entrantes.</param>
        <summary>Traite les données de publication (postback) pour le contrôle <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" />.</summary>
        <returns>Cette méthode retourne toujours la valeur <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.HtmlControls.HtmlInputFile> contrôle implémente la <xref:System.Web.UI.IPostBackDataHandler> interface qui possède deux méthodes : <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=nameWithType> et <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=nameWithType>. Le <xref:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData%2A> méthode est appelée par le <xref:System.Web.UI.HtmlControls.HtmlInputFile.System%23Web%23UI%23IPostBackDataHandler%23RaisePostDataChangedEvent%2A> méthode et retourne toujours `false`, qui indique que le <xref:System.Web.UI.HtmlControls.HtmlInputFile> état du contrôle n’est pas géré par l’infrastructure de page ASP.NET.  
  
 Le <xref:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData%2A> méthode est utilisée principalement par les développeurs de contrôles étendent les fonctionnalités de la <xref:System.Web.UI.HtmlControls.HtmlInputFile> contrôle.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la longueur maximale du chemin d'accès du fichier à sauvegarder à partir de l'ordinateur client.</summary>
        <value>Longueur maximale du chemin d'accès du fichier. La valeur par défaut est -1, ce qui indique que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette propriété pour spécifier une limite pour le nombre de caractères qui peuvent être entrés pour le chemin d’accès au fichier à télécharger.  
  
> [!NOTE]
>  Prise en charge pour cette propriété est dépendante du navigateur. Vérifiez votre navigateur pour déterminer si elle prend en charge cette propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputFile.Size" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.Control.PreRender" /> pour le contrôle <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si aucun codage n’est spécifié pour la page Web <xref:System.Web.UI.HtmlControls.HtmlForm> (contrôle), le <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> propriété a la valeur « multipart/form-data ».  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.HtmlControls.HtmlInputFile.OnPreRender%2A> méthode afin qu’un `Title` attribut est toujours ajouté à chaque personnalisé <xref:System.Web.UI.HtmlControls.HtmlInputFile> contrôle. Pour cet exemple fonctionne correctement, vous devez créer un répertoire appelé `Temp` sur votre ordinateur le lecteur C.  
  
 [!code-aspx-csharp[CustomHtmlInputFileOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/CS/custom_htmlinputfile_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlInputFileOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/VB/custom_htmlinputfile_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputFileOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/CS/custom_htmlinputfile_onprerender.cs#2)]
 [!code-vb[CustomHtmlInputFileOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/VB/custom_htmlinputfile_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="PostedFile">
      <MemberSignature Language="C#" Value="public System.Web.HttpPostedFile PostedFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpPostedFile PostedFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFile As HttpPostedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpPostedFile ^ PostedFile { System::Web::HttpPostedFile ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpPostedFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'accès au fichier sauvegardé spécifié par un client.</summary>
        <value>
          <see cref="T:System.Web.HttpPostedFile" /> qui accède au fichier à sauvegarder.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Restrictions de sécurité de navigateur empêchent cette valeur de maintenue entre plusieurs demandes.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile%2A> propriété pour lancer l’utilitaire qui transfère les fichiers sur le serveur. Notez que si la taille du fichier téléchargé en octets dépasse la valeur de la <xref:System.Web.HttpPostedFile.ContentLength%2A> propriété, le fichier n’est pas téléchargée. Pour cet exemple fonctionne correctement, vous devez créer un répertoire appelé `Temp` sur votre ordinateur le lecteur C.  
  
 [!code-aspx-csharp[Classic HtmlInputFile.PostedFile Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile.PostedFile Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputFile.PostedFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile.PostedFile Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpPostedFile" />
        <altmember cref="P:System.Web.HttpPostedFile.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indique au contrôle <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> le changement d’état du contrôle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.HtmlControls.HtmlInputFile> contrôle implémente la <xref:System.Web.UI.IPostBackDataHandler> interface qui possède deux méthodes : <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=nameWithType> et <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=nameWithType>. Le <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=nameWithType> méthode ne participe pas le traitement de la <xref:System.Web.UI.HtmlControls.HtmlInputFile> contrôler et est incluse pour compléter l’implémentation d’interface.  
  
 Le <xref:System.Web.UI.HtmlControls.HtmlInputFile.RaisePostDataChangedEvent%2A> méthode est utilisée principalement par les développeurs de contrôles pour étendre les fonctionnalités de la <xref:System.Web.UI.HtmlControls.HtmlInputFile> contrôle.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la largeur de la zone de texte dans laquelle le chemin d'accès du fichier est entré.</summary>
        <value>Largeur de la zone de texte du chemin d'accès au fichier. La valeur par défaut est -1, ce qui indique que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette propriété pour spécifier la largeur de la zone de texte pour entrer le chemin d’accès de fichier.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlControls.HtmlInputFile.Size%2A> propriété pour spécifier la largeur de la zone de texte dans laquelle l’utilisateur entre le chemin d’accès de fichier. Pour cet exemple fonctionne correctement, vous devez créer un répertoire appelé `Temp` sur votre ordinateur le lecteur C.  
  
 [!code-aspx-csharp[Classic HtmlInputFile.Size Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile.Size Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputFile.Size Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile.Size Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identificateur de clé pour le contrôle.</param>
        <param name="postCollection">La collection de toutes les valeurs de nom entrantes.</param>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />.</summary>
        <returns>
          <see langword="true" /> si l'état du contrôle <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> a été modifié à la suite de la publication (postback) ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.HtmlControls.HtmlInputFile> est castée en interface <xref:System.Web.UI.IPostBackDataHandler>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.HtmlControls.HtmlInputFile> est castée en interface <xref:System.Web.UI.IPostBackDataHandler>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient  le chemin d'accès complet du fichier sur l'ordinateur client.</summary>
        <value>Chemin d'accès complet du fichier sur le client.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.HtmlControls.HtmlInputFile.Value%2A> propriété récupère le chemin d’accès complet du fichier sur l’ordinateur client (par exemple « C:\MyFiles\Test.txt »). Cela est utile lorsque vous avez besoin de savoir où le fichier est stocké sur l’ordinateur d’envoi du fichier. Cette propriété est généralement utilisée pour déterminer le nom de fichier d’origine. Pour obtenir le nom du fichier d’origine, analyser la valeur de cette propriété.  
  
> [!NOTE]
>  La propriété <xref:System.Web.UI.HtmlControls.HtmlInputFile.Value%2A> est en lecture seule. Si vous tentez d’assigner une valeur à cette propriété, un <xref:System.NotSupportedException?displayProperty=nameWithType> est levée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlControls.HtmlInputFile.Value%2A> propriété pour afficher le chemin d’accès complet du fichier sur l’ordinateur client. Pour cet exemple fonctionne correctement, vous devez créer un répertoire appelé `Temp` sur votre ordinateur le lecteur C.  
  
 [!code-aspx-csharp[HtmlInputFileValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputFileValue/CS/htmlinputfilevaluecs.aspx#1)]
 [!code-aspx-vb[HtmlInputFileValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputFileValue/VB/htmlinputfilevaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Une tentative d'assignation d'une valeur à cette propriété a été effectuée.</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputControl.Value" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile" />
        <altmember cref="T:System.NotSupportedException" />
      </Docs>
    </Member>
  </Members>
</Type>