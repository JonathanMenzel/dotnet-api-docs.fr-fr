<Type Name="HtmlInputButton" FullName="System.Web.UI.HtmlControls.HtmlInputButton">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd77ed0a6c6934bac48165a5f882acd29a1e3f57" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39937497" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlInputButton : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputButton extends System.Web.UI.HtmlControls.HtmlInputControl implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputButton" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlInputButton&#xA;Inherits HtmlInputControl&#xA;Implements IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlInputButton : System::Web::UI::HtmlControls::HtmlInputControl, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type HtmlInputButton = class&#xA;    inherit HtmlInputControl&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DefaultEvent("ServerClick")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Autorise l’accès par programmation aux éléments HTML <see langword="&lt;input type= button&gt;" />, <see langword="&lt;input type= submit&gt;" /> et <see langword="&lt;input type= reset&gt;" /> sur le serveur.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la <xref:System.Web.UI.HtmlControls.HtmlInputButton> classe pour créer des contrôles de bouton sur une page Web. Un `<input type=button>` élément HTML est un bouton de commande avec aucun comportement par défaut lorsque vous cliquez sur. Un `<input type=submit>` élément HTML est un bouton qui soumet un formulaire lorsque vous cliquez sur. Un `<input type=reset>` bouton HTML réinitialise tous les contrôles à leurs valeurs initiales d’un clic.  
  
 Dans ASP.NET 2.0, utilisez la <xref:System.Web.UI.HtmlControls.HtmlInputReset> classe et la <xref:System.Web.UI.HtmlControls.HtmlInputSubmit> classe pour créer des boutons Envoyer et de réinitialisation, respectivement.  
  
 Pour obtenir la liste des valeurs initiales des propriétés d’une instance de <xref:System.Web.UI.HtmlControls.HtmlInputButton>, consultez le <xref:System.Web.UI.HtmlControls.HtmlInputButton.%23ctor%2A> constructeur.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlControls.HtmlInputButton> contrôle pour créer un bouton de commande, un bouton d’envoi et un bouton de réinitialisation.  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInputButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInputButton/cs/htmlinputbuttoncs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInputButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInputButton/vb/htmlinputbuttonvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputControl" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlButton" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputButton();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> en utilisant les valeurs par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant affiche la valeur de propriété initiales d’une instance de <xref:System.Web.UI.HtmlControls.HtmlInputButton>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|La chaîne littérale « bouton ».|  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer une nouvelle instance d’un <xref:System.Web.UI.HtmlControls.HtmlInputButton> contrôler à l’aide du constructeur par défaut.  
  
 [!code-aspx-csharp[HtmlInputButtonCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonCtor/CS/htmlinputbuttonctorcs.aspx#1)]
 [!code-aspx-vb[HtmlInputButtonCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonCtor/VB/htmlinputbuttonctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputButton (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputButton(System::String ^ type);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlControls.HtmlInputButton : string -&gt; System.Web.UI.HtmlControls.HtmlInputButton" Usage="new System.Web.UI.HtmlControls.HtmlInputButton type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Type de bouton d'entrée.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> en utilisant le type de bouton spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant affiche la valeur de propriété initiales d’une instance de <xref:System.Web.UI.HtmlControls.HtmlInputButton>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|Valeur du paramètre `type`.|  
  
 Le tableau suivant montre les différentes valeurs possibles pour le `type` paramètre.  
  
|Value|Description |  
|-----------|-----------------|  
|`button`|Bouton de commande.|  
|`submit`|Un bouton qui envoie le formulaire au serveur.|  
|`reset`|Un bouton qui efface le formulaire.|  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer une nouvelle instance de la <xref:System.Web.UI.HtmlControls.HtmlInputButton> contrôler à l’aide du constructeur surchargé.  
  
 [!code-aspx-csharp[HtmlInputButtonCtor2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonCtor2/CS/htmlinputbuttonctor2cs.aspx#1)]
 [!code-aspx-vb[HtmlInputButtonCtor2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonCtor2/VB/htmlinputbuttonctor2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si une validation est effectuée suite à un clic sur le contrôle <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" />.</summary>
        <value>
          <see langword="true" /> si une validation est effectuée suite à un clic sur le contrôle <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, la validation de la page est effectuée lorsqu’un <xref:System.Web.UI.HtmlControls.HtmlInputButton> clic sur le contrôle. Validation de la page détermine si les contrôles d’entrée associé à un contrôle de validation sur la page que passent toutes les règles de validation spécifiées par le contrôle de validation.  
  
 Vous pouvez spécifier ou déterminer si une validation est effectuée sur le client et le serveur quand un <xref:System.Web.UI.HtmlControls.HtmlInputButton> clic sur le contrôle à l’aide de la <xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A> propriété. Pour empêcher l’exécution de la validation, définissez la <xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A> propriété `false`.  
  
 Cette propriété est couramment utilisée dans le Gestionnaire d’événements pour le <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> événement pour empêcher la validation de la page lorsque l’utilisateur clique sur un bouton Annuler ou réinitialiser.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A> propriété pour empêcher la validation de page. Notez comment la <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> méthode activation indépendante de chaque contrôle de validation.  
  
 [!code-aspx-csharp[HtmlInputButtonCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonCausesValidation/CS/htmlinputbuttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[HtmlInputButtonCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonCausesValidation/VB/htmlinputbuttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlInputButton.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="P:System.Web.UI.Design.ViewEventArgs.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> et inscrit le script client pour générer une publication (postback).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender%2A> substitutions de méthode le <xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=nameWithType> (méthode). <xref:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender%2A> est principalement utilisée par les développeurs de contrôles.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender%2A> méthode afin qu’elle affiche toujours une personnalisée <xref:System.Web.UI.HtmlControls.HtmlInputButton> contrôle avec du texte en gras.  
  
 [!code-aspx-csharp[CustomHtmlInputButtonOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputButtonOnPreRender/CS/custom_htmlinputbutton_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlInputButtonOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputButtonOnPreRender/VB/custom_htmlinputbutton_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputButtonOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputButtonOnPreRender/CS/custom_htmlinputbutton_onprerender.cs#2)]
 [!code-vb[CustomHtmlInputButtonOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputButtonOnPreRender/VB/custom_htmlinputbutton_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnServerClick">
      <MemberSignature Language="C#" Value="protected virtual void OnServerClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.OnServerClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnServerClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnServerClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnServerClick : EventArgs -&gt; unit&#xA;override this.OnServerClick : EventArgs -&gt; unit" Usage="htmlInputButton.OnServerClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick" />. Cela vous permet de gérer l'événement directement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> événement est déclenché quand un <xref:System.Web.UI.HtmlControls.HtmlInputButton> clic sur le contrôle.  
  
> [!NOTE]
>  Un bouton Réinitialiser ne déclenche pas le <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> événement.  
  
 Lorsque vous créez un délégué <xref:System.Web.UI.HtmlControls.HtmlInputButton>, vous identifiez la méthode qui gérera l'événement. Pour associer l'événement au gestionnaire d'événements, ajoutez une instance du délégué à l'événement. Le gestionnaire d'événements est appelé chaque fois qu'un événement se produit, sauf si vous supprimez le délégué. Pour plus d’informations sur les délégués de gestionnaire d’événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment spécifier et coder un gestionnaire pour le <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> événement. Le Gestionnaire d’événements ajoute les valeurs de deux zones de texte sur la page et affiche les résultats.  
  
 [!code-aspx-csharp[HtmlInputButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButton/CS/htmlinputbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlInputButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButton/VB/htmlinputbuttonvb.aspx#1)]  
  
 [!code-aspx-csharp[HtmlInputButtonServerClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonServerClick/CS/htmlinputbuttonserverclickcs.aspx#1)]
 [!code-aspx-vb[HtmlInputButtonServerClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonServerClick/VB/htmlinputbuttonserverclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="htmlInputButton.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argument pour l'événement.</param>
        <summary>Déclenche des événements pour le contrôle <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> pendant la publication sur le serveur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.HtmlControls.HtmlInputButton.RaisePostBackEvent%2A> méthode est utilisée par le <xref:System.Web.UI.HtmlControls.HtmlInputButton> contrôle, lorsque vous cliquez dessus, pour déclencher un <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> événement.  
  
 Si le <xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A> propriété est `true`, le <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> méthode est appelée à l’aide du groupe de contrôles spécifié dans le <xref:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup%2A> propriété.  
  
 Cette méthode est utilisée principalement par les développeurs qui étendent les fonctionnalités de la <xref:System.Web.UI.HtmlControls.HtmlInputButton> contrôle.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlInputButton.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> qui reçoit le contenu rendu.</param>
        <summary>Génère le rendu des attributs dans le writer spécifié, puis appelle la méthode <see cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.HtmlControls.HtmlInputButton.RenderAttributes%2A> méthode substitue à la base de <xref:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes%2A?displayProperty=nameWithType>.method. <xref:System.Web.UI.HtmlControls.HtmlInputButton.RenderAttributes%2A> est principalement utilisée par les développeurs de contrôles.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender%2A> contrôler la méthode dans un serveur personnalisé afin que le texte du titre spécifique, accessible en tant qu’une info-bulle est toujours affiché pour le <xref:System.Web.UI.HtmlControls.HtmlInputButton>.  
  
 [!code-aspx-csharp[CustomHtmlInputButtonRenderAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputButtonRenderAttributes/CS/custom_htmlinputbutton_renderattributescs.aspx#1)]
 [!code-aspx-vb[CustomHtmlInputButtonRenderAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputButtonRenderAttributes/VB/custom_htmlinputbutton_renderattributesvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputButtonRenderAttributes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputButtonRenderAttributes/CS/custom_htmlinputbutton_renderattributes.cs#2)]
 [!code-vb[CustomHtmlInputButtonRenderAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputButtonRenderAttributes/VB/custom_htmlinputbutton_renderattributes.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerClick">
      <MemberSignature Language="C#" Value="public event EventHandler ServerClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ServerClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ServerClick;" />
      <MemberSignature Language="F#" Value="member this.ServerClick : EventHandler " Usage="member this.ServerClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'un clic est effectué sur un bouton <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> sur la page Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cet événement est déclenché quand un <xref:System.Web.UI.HtmlControls.HtmlInputButton> clic sur le contrôle.  
  
> [!NOTE]
>  Un bouton Réinitialiser ne déclenche pas le <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> événement.  
  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment spécifier et coder un gestionnaire pour le <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> événement. Le Gestionnaire d’événements ajoute les valeurs de deux zones de texte sur la page et affiche les résultats.  
  
 [!code-aspx-csharp[HtmlInputButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButton/CS/htmlinputbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlInputButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButton/VB/htmlinputbuttonvb.aspx#1)]  
  
 [!code-aspx-csharp[HtmlInputButtonServerClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonServerClick/CS/htmlinputbuttonserverclickcs.aspx#1)]
 [!code-aspx-vb[HtmlInputButtonServerClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonServerClick/VB/htmlinputbuttonserverclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputButton.OnServerClick(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <see cref="T:System.String" /> qui représente un argument d'événement facultatif à passer au gestionnaire d'événements.</param>
        <summary>Implémente la méthode <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" /> en appelant la méthode <see cref="M:System.Web.UI.HtmlControls.HtmlInputButton.RaisePostBackEvent(System.String)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le groupe de contrôles pour lequel le <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> provoque la validation lors de la publication sur le serveur.</summary>
        <value>Groupe de contrôles dont le contrôle <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> provoque la validation lors de la publication sur le serveur. La valeur par défaut est une chaîne vide (""), ce qui signifie que cette propriété n'est pas définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Groupes de contrôle permettent d’affecter des contrôles de validation sur une page à une catégorie spécifique. Chaque groupe de validation peut être validé indépendamment des autres groupes de validation sur la page. Utilisez le <xref:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup%2A> propriété pour spécifier le nom du groupe de validation pour lequel le <xref:System.Web.UI.HtmlControls.HtmlInputButton> contrôle provoque la validation lors de la publication sur le serveur.  
  
 Cette propriété a un effet uniquement lorsque la valeur de la <xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A> propriété est définie sur `true`. Lorsque vous spécifiez une valeur pour le <xref:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup%2A> propriété, seuls les contrôles de validation qui font partie du groupe spécifié sont validés lorsque le <xref:System.Web.UI.HtmlControls.HtmlInputButton> publication (postback) sur le serveur. Si vous ne spécifiez pas une valeur pour cette propriété et la <xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A> propriété est définie sur `true`, tous les contrôles de validation sur la page qui ne sont pas affectés à un groupe de validation sont validés lors de la publication (postback) sur le serveur.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup%2A> propriété pour spécifier les contrôles à valider quand un <xref:System.Web.UI.HtmlControls.HtmlInputButton> publication (postback) sur le serveur. La page contient deux zones de texte pour capturer des données à partir de l’utilisateur et deux <xref:System.Web.UI.WebControls.RequiredFieldValidator> contrôles pour vous assurer que l’utilisateur ne laisse pas une zone de texte vide. Le <xref:System.Web.UI.WebControls.RequiredFieldValidator> contrôler pour la première zone de texte se trouve dans le `CityInfoGroup` groupe de validation et la <xref:System.Web.UI.WebControls.RequiredFieldValidator> contrôler pour la deuxième zone se trouve dans le `StateInfoGroup` groupe de validation. Lorsque le `CityQueryButton` est activé, seul le contrôle de le `CityInfoGroup` groupe de validation est validé. Lorsque le `StateQueryButton` est activé, seul le contrôle de le `StateInfoGroup` groupe de validation est validé.  
  
 [!code-aspx-csharp[HtmlInputButtonValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonValidationGroup/CS/htmlinputbuttonvalidationgroupcs.aspx#1)]
 [!code-aspx-vb[HtmlInputButtonValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonValidationGroup/VB/htmlinputbuttonvalidationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation" />
      </Docs>
    </Member>
  </Members>
</Type>