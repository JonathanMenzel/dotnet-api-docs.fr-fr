<Type Name="HtmlTableCellCollection" FullName="System.Web.UI.HtmlControls.HtmlTableCellCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eea98c4dc80796890ee2e6b79f4c83bf997d15d2" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51316309" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HtmlTableCellCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HtmlTableCellCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HtmlTableCellCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTableCellCollection sealed : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type HtmlTableCellCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Collection d'objets <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> qui représentent les cellules dans une seule ligne d'un contrôle <see cref="T:System.Web.UI.HtmlControls.HtmlTable" />. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> classe pour gérer par programme une collection de <xref:System.Web.UI.HtmlControls.HtmlTableCell> les objets qui représentent les cellules d’une ligne unique dans un <xref:System.Web.UI.HtmlControls.HtmlTable> contrôle. Cette classe est couramment utilisée pour ajouter, supprimer ou modifier le contenu d’une cellule dans une ligne d’un <xref:System.Web.UI.HtmlControls.HtmlTable> contrôle.  
  
> [!NOTE]
>  Un <xref:System.Web.UI.HtmlControls.HtmlTable> contrôle contient un <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> propriété qui contient une collection de <xref:System.Web.UI.HtmlControls.HtmlTableRow> objets. Chaque <xref:System.Web.UI.HtmlControls.HtmlTableRow> objet représente une ligne dans la table. Un <xref:System.Web.UI.HtmlControls.HtmlTableRow> objet contient un <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> propriété qui représente une collection de <xref:System.Web.UI.HtmlControls.HtmlTableCell> objets. Ces objets, représentent à son tour, les cellules individuelles d’une ligne. Pour récupérer une cellule individuelle, commencez par obtenir le <xref:System.Web.UI.HtmlControls.HtmlTableRow> objet qui représente la ligne contenant la cellule dans la table (à partir de la <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> collection de la <xref:System.Web.UI.HtmlControls.HtmlTable> contrôle). Vous pouvez ensuite obtenir le <xref:System.Web.UI.HtmlControls.HtmlTableCell> objet qui représente la cellule dans la ligne (à partir de la <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> collection de la <xref:System.Web.UI.HtmlControls.HtmlTableRow> objet).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment générer dynamiquement le contenu d’un <xref:System.Web.UI.HtmlControls.HtmlTable> contrôle en ajoutant des cellules à un <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. Notez que le <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> propriété d’une ligne, représentée par un <xref:System.Web.UI.HtmlControls.HtmlTableRow> l’objet, est le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  
  
 [!code-aspx-csharp[HtmlTableCellCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollection/CS/htmltablecellcollectioncs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollection/VB/htmltablecellcollectionvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Rows" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.HtmlControls.HtmlTableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.HtmlControls.HtmlTableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Add(System.Web.UI.HtmlControls.HtmlTableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (cell As HtmlTableCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::HtmlControls::HtmlTableCell ^ cell);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.HtmlControls.HtmlTableCell -&gt; unit" Usage="htmlTableCellCollection.Add cell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.HtmlControls.HtmlTableCell" />
      </Parameters>
      <Docs>
        <param name="cell">Objet <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> à ajouter à la collection.</param>
        <summary>Ajoute l'objet <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> spécifié à la fin de la collection <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour ajouter le texte spécifié <xref:System.Web.UI.HtmlControls.HtmlTableCell> objet à la fin d’un <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. Si vous souhaitez insérer une <xref:System.Web.UI.HtmlControls.HtmlTableCell> objet dans un emplacement spécifié dans la collection, utilisez la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Add%2A> méthode pour ajouter la cellule de tableau, représentée par un <xref:System.Web.UI.HtmlControls.HtmlTableCell> objet, à la fin d’un <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. Notez que le <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> propriété d’une ligne représentée par une <xref:System.Web.UI.HtmlControls.HtmlTableRow> objet est le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  
  
 [!code-aspx-csharp[HtmlTableCellCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollection/CS/htmltablecellcollectioncs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollection/VB/htmltablecellcollectionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="htmlTableCellCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime tous les objets <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> de la collection <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour supprimer tous les <xref:System.Web.UI.HtmlControls.HtmlTableCell> objets à partir de la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection et réinitialisation le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A> propriété `0`.  
  
> [!NOTE]
>  Cette méthode supprime les cellules à partir d’une ligne, mais elle ne supprime pas la ligne de la table. Pour supprimer une ligne de la table, veillez à supprimer également le <xref:System.Web.UI.HtmlControls.HtmlTableRow> objet qui représente la ligne à partir de la <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> collection de la <xref:System.Web.UI.HtmlControls.HtmlTable> contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear%2A> méthode pour supprimer tous les éléments de la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. Nouvelles entrées sont ensuite ajoutées à la collection et affichées dans le <xref:System.Web.UI.HtmlControls.HtmlTable> contrôle.  
  
 [!code-aspx-csharp[HtmlTableCellCollectioncClear#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectioncClear/CS/htmltablecellcollectionclearcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectioncClear#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectioncClear/VB/htmltablecellcollectionclearvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="htmlTableCellCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Un élément de base zéro <see cref="T:System.Array" /> qui reçoit les éléments copiés à partir de <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</param>
        <param name="index">Premier index du <see cref="T:System.Array" /> spécifié à recevoir les éléments.</param>
        <summary>Copie les éléments de la collection <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> dans le <see cref="T:System.Array" /> spécifié, en commençant à l'index spécifié dans <see cref="T:System.Array" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour copier le contenu de la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection dans le texte spécifié <xref:System.Array?displayProperty=nameWithType>, en commençant à l’index spécifié du tableau.  
  
> [!NOTE]
>  Le `array` paramètre doit être de base zéro <xref:System.Array?displayProperty=nameWithType>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo%2A> méthode pour créer un tableau qui contient le même contenu que le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. Le tableau est ensuite parcouru pour afficher le contenu de la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionCopyTo/CS/htmltablecellcollectioncopytocs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionCopyTo/VB/htmltablecellcollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.HtmlControls.HtmlTableCellCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre d'objets <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> dans la collection <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</summary>
        <value>Nombre d'objets <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> de <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />. La valeur par défaut est <see langword="0" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A> propriété afin de déterminer le nombre de cellules contenues dans le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. Le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A> propriété est généralement utilisée lors de l’itération au sein de la collection pour déterminer l’angle limite.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A> propriété afin de déterminer le nombre de cellules dans une ligne de la <xref:System.Web.UI.HtmlControls.HtmlTable> contrôle. Cette valeur est ensuite utilisée comme limite supérieure d’une boucle pour effectuer une itération dans les cellules d’une ligne dans la table.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionCount/CS/htmltablecellcollectioncountcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionCount/VB/htmltablecellcollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="htmlTableCellCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un objet implémentant <see cref="T:System.Collections.IEnumerator" /> qui contient tous les objets <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> de la collection <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</summary>
        <returns>Objet implémentant <see cref="T:System.Collections.IEnumerator" /> qui contient tous les objets <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> de <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour créer un <xref:System.Collections.IEnumerator?displayProperty=nameWithType>-implémenté l’objet qui peut être parcouru pour récupérer le contenu de chaque élément dans le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  
  
 Utilisez le <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> propriété à obtenir l’élément actuellement pointé dans la collection.  
  
 Utilisez le <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> méthode pour passer à l’élément suivant dans la collection.  
  
 Utilisez le <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> méthode pour déplacer l’énumérateur à sa position initiale.  
  
> [!NOTE]
>  Le <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> méthode doit être appelée après la création de la <xref:System.Collections.IEnumerator?displayProperty=nameWithType>-implémenté l’objet, ou après avoir utilisé le <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> méthode pour déplacer l’énumérateur vers le premier élément dans la collection. Sinon, l’élément représenté par le <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> propriété n’est pas définie.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator%2A> méthode pour créer un <xref:System.Collections.IEnumerator?displayProperty=nameWithType>-objet implémentant. L’objet est ensuite parcouru pour afficher le contenu de la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionienumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionienumerator/CS/htmltablecellcollectionienumeratorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionienumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionienumerator/VB/htmltablecellcollectionienumeratorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.HtmlControls.HtmlTableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.HtmlControls.HtmlTableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert(System.Int32,System.Web.UI.HtmlControls.HtmlTableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, cell As HtmlTableCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::UI::HtmlControls::HtmlTableCell ^ cell);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Web.UI.HtmlControls.HtmlTableCell -&gt; unit" Usage="htmlTableCellCollection.Insert (index, cell)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cell" Type="System.Web.UI.HtmlControls.HtmlTableCell" />
      </Parameters>
      <Docs>
        <param name="index">Emplacement dans la <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> où ajouter la <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</param>
        <param name="cell">
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> à ajouter à <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</param>
        <summary>Ajoute l'objet <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> spécifié à l'emplacement d'index spécifié de la collection <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert%2A> méthode pour ajouter le texte spécifié <xref:System.Web.UI.HtmlControls.HtmlTableCell> de l’objet à un <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection à l’index spécifié. Si vous souhaitez simplement ajouter un <xref:System.Web.UI.HtmlControls.HtmlTableCell> objet à la fin de la collection, utilisez la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Add%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert%2A> méthode pour insérer dynamiquement une cellule de tableau, représentée par un <xref:System.Web.UI.HtmlControls.HtmlTableCell> de l’objet, dans un <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionInsert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionInsert/CS/htmltablecellcollectioninsertcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionInsert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionInsert/VB/htmltablecellcollectioninsertvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si la collection <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> est en lecture seule.</summary>
        <value>
          <see langword="false" /> dans tous les cas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété retourne toujours `false` pour indiquer que le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection peut être écrites dans tous les cas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'accès à la collection <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> est synchronisé (thread-safe).</summary>
        <value>
          <see langword="false" /> dans tous les cas, qui indique que l'accès à <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> n'est pas synchronisé (pas thread-safe).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est dérivée de <xref:System.Collections.ICollection?displayProperty=nameWithType> est substituée pour toujours retourner `false` pour indiquer que l’accès à la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection n’est pas synchronisée (pas thread-safe).  
  
 Pour plus d’informations sur la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized%2A> propriété, consultez le <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> propriété de la <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlControls.HtmlTableCell this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.HtmlControls.HtmlTableCell Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As HtmlTableCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::HtmlControls::HtmlTableCell ^ default[int] { System::Web::UI::HtmlControls::HtmlTableCell ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.HtmlControls.HtmlTableCell" Usage="System.Web.UI.HtmlControls.HtmlTableCellCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlControls.HtmlTableCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Valeur d'index ordinale spécifiant le <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> à retourner.</param>
        <summary>Obtient l'objet <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> situé à l'index spécifié de la collection <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> qui représente une cellule contenue dans <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cet indexeur pour obtenir un <xref:System.Web.UI.HtmlControls.HtmlTableCell> de l’objet à partir de la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. Vous pouvez accéder à un <xref:System.Web.UI.HtmlControls.HtmlTableCell> objet à l’index spécifié en utilisant la notation de tableau simple.  
  
> [!NOTE]
>  La collection est zéro ; Par conséquent, le premier élément dans la collection contient une valeur d’index de `0`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser l’indexeur pour récupérer une cellule de tableau, représentée par un <xref:System.Web.UI.HtmlControls.HtmlTableCell> objet, à partir de la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. La cellule est ensuite mis à jour avec le nouveau contenu. Notez que le <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> propriété d’une ligne représentée par une <xref:System.Web.UI.HtmlControls.HtmlTableRow> objet est le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  
  
 [!code-aspx-csharp[HtmlTableCellCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollection/CS/htmltablecellcollectioncs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollection/VB/htmltablecellcollectionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.HtmlControls.HtmlTableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.HtmlControls.HtmlTableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(System.Web.UI.HtmlControls.HtmlTableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (cell As HtmlTableCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::HtmlControls::HtmlTableCell ^ cell);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.HtmlControls.HtmlTableCell -&gt; unit" Usage="htmlTableCellCollection.Remove cell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.HtmlControls.HtmlTableCell" />
      </Parameters>
      <Docs>
        <param name="cell">
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> à supprimer de <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</param>
        <summary>Supprime de la collection <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> l'objet <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour supprimer le texte spécifié <xref:System.Web.UI.HtmlControls.HtmlTableCell> de l’objet à partir de la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  
  
> [!NOTE]
>  Si vous spécifiez un <xref:System.Web.UI.HtmlControls.HtmlTableCell> objet n’existe pas dans le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection, aucun élément n’est supprimée de la collection.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove%2A> méthode pour supprimer de la cellule spécifiée d’une table, représentée par un <xref:System.Web.UI.HtmlControls.HtmlTableCell> objet, à partir de la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. Cet exemple supprime les cellules de la première colonne de la <xref:System.Web.UI.HtmlControls.HtmlTable> contrôle.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionRemove/CS/htmltablecellcollectionremovecs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionRemove/VB/htmltablecellcollectionremovevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(System.Int32)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="htmlTableCellCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> à supprimer de <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</param>
        <summary>Supprime l'objet <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> de la collection <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> à l'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour supprimer le <xref:System.Web.UI.HtmlControls.HtmlTableCell> objet à l’index spécifié à partir d’un <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. Il s’agit d’un numéro d’index de base zéro ; Par conséquent, le premier élément dans la collection a une valeur d’index de `0`.  
  
> [!NOTE]
>  Si vous spécifiez un index est en dehors de la plage de valeurs d’index, une exception est levée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt%2A> méthode pour supprimer l’élément à l’index spécifié à partir de la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. Cet exemple supprime les cellules de la première colonne de la <xref:System.Web.UI.HtmlControls.HtmlTable> contrôle.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionRemoveAt#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionRemoveAt/CS/htmltablecellcollectionremoveatcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionRemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionRemoveAt/VB/htmltablecellcollectionremoveatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L'index spécifié est en dehors de la plage des valeurs d'index de la collection.</exception>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(System.Web.UI.HtmlControls.HtmlTableCell)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet pouvant être utilisé pour synchroniser l'accès à la collection <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</summary>
        <value>Objet permettant de synchroniser l’accès à la collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’objet retourné dans cette implémentation est l’instance actuelle de la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> classe.  
  
 Pour plus d’informations sur la <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot%2A> propriété, consultez le <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> propriété de la <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
  </Members>
</Type>