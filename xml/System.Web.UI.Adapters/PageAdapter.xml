<Type Name="PageAdapter" FullName="System.Web.UI.Adapters.PageAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d439034d4f4c3638f04bec5e14c074ac5e104b9d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39867192" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PageAdapter : System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageAdapter extends System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Adapters.PageAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageAdapter&#xA;Inherits ControlAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAdapter abstract : System::Web::UI::Adapters::ControlAdapter" />
  <TypeSignature Language="F#" Value="type PageAdapter = class&#xA;    inherit ControlAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Adapters.ControlAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Adapte une page Web pour un navigateur spécifique et fournit la classe de base de laquelle tous les adaptateurs de page héritent, directement ou indirectement.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Adapters.PageAdapter> classe est une classe abstraite qui s’adapte une page Web pour une classe spécifique de navigateurs, définie par le langage de balisage qui utilise le navigateur (par exemple, HTML ou XHTML). Une grande partie de l’adaptabilité dans le comportement de rendu peut être encapsulée dans les classes de writer de texte spécialisée qui dérivent de la <xref:System.Web.UI.HtmlTextWriter> classe, elle n’est pas toujours nécessaire de fournir un adaptateur de page.  
  
 La plupart des membres d’adaptateurs de page dérivée sont appelées à partir de la <xref:System.Web.UI.Page> classe ou à partir des adaptateurs de contrôle. Tout d’abord, le <xref:System.Web.UI.Page> les adaptateurs de contrôle ou de la classe détecter la présence de l’adaptateur de page dérivé, puis appeler le membre ou fournissent les fonctionnalités si l’adaptateur de page n’est pas présent.  
  
 Les membres de la <xref:System.Web.UI.Adapters.PageAdapter> classe fournissent les fonctionnalités suivantes :  
  
-   Le <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> et <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams%2A> propriétés définissent des en-têtes HTTP supplémentaires et HTTP `GET` et `POST` paramètres qui peuvent être utilisés pour faire varier la mise en cache. Elles sont appelées pendant l’initialisation du cache à partir de la <xref:System.Web.UI.Page> classe.  
  
-   Le <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> méthode retourne un objet qui peut être utilisé pour conserver les États de contrôle et d’affichage combinés de la page. Il est référencé à partir de la <xref:System.Web.UI.Page.PageStatePersister%2A> propriété si un adaptateur de page dérivé est présent.  
  
-   Le <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> méthode fournit un fragment de code DHTML qui peut être utilisé pour référencer des formulaires dans les scripts.  
  
-   Le <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> méthode retourne une collection des variables de publication (postback) si la page est dans la publication (postback). Elle est appelée par le .NET Framework au lieu du <xref:System.Web.UI.Page.DeterminePostBackMode%2A?displayProperty=nameWithType> méthode si un adaptateur de page dérivé est présent.  
  
-   Le <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> et <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> méthodes sont utilisées par les adaptateurs de contrôle pour afficher des liens hypertexte si un adaptateur de page dérivé est présent.  
  
-   Le <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> méthode restitue un lien hypertexte ou une balise cliente de publication (postback) qui peut envoyer le formulaire.  
  
-   Le <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> et <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> méthodes sont utilisées par les adaptateurs de contrôle de case d’option pour référencer l’autre <xref:System.Web.UI.WebControls.RadioButton> contrôles dans un groupe de cases d’option.  
  
-   Le <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A> propriété fournit l’accès aux États de contrôle et d’affichage combinés de la <xref:System.Web.UI.Page> objet via interne `ClientState` propriété de la <xref:System.Web.UI.Page> classe.  
  
-   Le <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> méthode est utilisée par les adaptateurs de contrôle pour effectuer la transformation de texte spécifique à l’appareil.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment dériver une classe nommée `CustomPageAdapter` à partir de la <xref:System.Web.UI.Adapters.PageAdapter> classe et substituer les <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> (méthode). Le <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> méthode ajoute un attribut nommé `src` vers un lien hypertexte, qui contient une référence à la page actuelle. Tous les liens hypertexte affichés dans les pages à laquelle `CustomPageAdapter` est attaché auront le `src` attribut.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.Adapters.PageAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le .NET Framework construit cet adaptateur en interne lorsqu’il crée le correspondantes <xref:System.Web.UI.Page> classe ou une classe dérivée.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByHeaders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByHeaders As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByHeaders { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByHeaders : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une liste d'en-têtes HTTP supplémentaires permettant la variation de la mise en cache pour la page Web à laquelle cet adaptateur de page dérivé est attaché.</summary>
        <value>
          <see cref="T:System.Collections.IList" /> qui contient une liste d'en-têtes HTPP ; sinon, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les entités sur le Web qui mettent en cache les pages Web mettre en cache plusieurs versions, selon les en-têtes HTTP et d’autres facteurs. Par exemple, une version pour chaque langage dans lequel une page est générée est généralement mis en cache, selon le `Accept-Language` en-tête HTTP.  
  
 Pour des navigateurs spécifiques, il peut être nécessaire faire varier la mise en cache par des en-têtes HTTP en plus les en-têtes qui contrôle la mise en cache indépendante de la cible. Par exemple, il peut être nécessaire pour mettre en cache les différentes versions d’une page pour différentes tailles d’écran.  
  
 Les noms d’en-tête retournées par le <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> propriété sont ajoutés à la liste des en-têtes sur la `Vary` en-tête HTTP envoyée au navigateur client.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous héritez de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), vous pouvez remplacer le <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> propriété pour retourner une liste des en-têtes supplémentaires pour contrôler la mise en cache spécifique à la cible. Le <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> retourne de la propriété de base <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.Web.HttpCacheVaryByHeaders" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByHeaders" />
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByParams">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByParams As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByParams { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByParams : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une liste de paramètres supplémentaires à partir des demandes HTTP GET et POST permettant la variation de la mise en cache pour la page Web à laquelle cet adaptateur de page dérivé est attaché.</summary>
        <value>
          <see cref="T:System.Collections.IList" /> qui contient une liste des paramètres GET et POST ; sinon, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entités sur le Web que les pages Web cache plusieurs versions dépend, entre autres facteurs, les paramètres de demande. Par exemple, une version pour chaque emplacement de magasin d’une chaîne de distribution pour laquelle une page peut être générée serait généralement être mis en cache basée sur le nom du paramètre (par exemple, `StoreID`).  
  
 Pour des navigateurs spécifiques, il peut être nécessaire de faire varier la mise en cache par GET ou de paramètres en plus des paramètres de publication de ce contrôle la mise en cache indépendante de la cible. Par exemple, il peut être nécessaire pour mettre en cache les différentes versions d’une page de téléphone mobile différents fournisseurs de services.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous héritez de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), vous pouvez remplacer le <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> propriété pour retourner une liste de paramètres GET ou POST supplémentaires pour contrôler la mise en cache spécifique à la cible. Le <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> retourne de la méthode de base <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByParams" />
      </Docs>
    </Member>
    <Member MemberName="ClientState">
      <MemberSignature Language="C#" Value="protected string ClientState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ClientState As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ClientState { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientState : string" Usage="System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une chaîne encodée qui contient les données d'états de contrôle et d'affichage de la page Web à laquelle cet adaptateur de page dérivé est attaché.</summary>
        <value>
          <see cref="T:System.String" /> encodé contenant les états de contrôle et d'affichage combinés des contrôles sur le <see cref="T:System.Web.UI.Page" /> associé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A> propriété fournit l’accès à la liste interne `ClientState` propriété de la <xref:System.Web.UI.Page> classe.  
  
 Afficher les données d’état stockées par le <xref:System.Web.UI.PageStatePersister> objet dans le texte interne `ClientState` propriété du <xref:System.Web.UI.Page> seront toujours enregistrées dans le champ masqué sur la page Web.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous héritez de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), vous ne pouvez pas remplacer le <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> propriété, car il n’est pas <see langword="virtual" />. Pour modifier le comportement de <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> dans une classe dérivée, implémentez une nouvelle <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> propriété qui fait référence à la <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> propriété de la classe de base.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackMode">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackMode () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackMode();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Détermine si la page Web est en cours de publication et retourne une collection de noms/valeurs pour les variables de publication.</summary>
        <returns>
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> des variables de publication, le cas échéant ; sinon, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> méthode retourne une des collections suivantes :  
  
-   Les variables de formulaire si la méthode de transfert de données HTTP est `POST`.  
  
-   Chaîne de requête si la méthode HTTP est `GET`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous héritez de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), vous pouvez remplacer le <see cref="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" /> méthode pour fournir une gestion propres à la cible de la collection de variables de publication (postback).</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Page.DeterminePostBackMode" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackModeUnvalidated">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackModeUnvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackModeUnvalidated () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackModeUnvalidated();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackModeUnvalidated " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une collection de données nom-valeur qui a été publiée dans la page à l'aide d'une commande POST ou GET, sans effectuer la validation de demande ASP.NET sur la demande.</summary>
        <returns>Données de formulaire non validées.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d'informations, consultez la classe <xref:System.Web.UnvalidatedRequestValues>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackFormReference">
      <MemberSignature Language="C#" Value="protected internal virtual string GetPostBackFormReference (string formId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetPostBackFormReference(string formId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetPostBackFormReference (formId As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetPostBackFormReference(System::String ^ formId);" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackFormReference : string -&gt; string&#xA;override this.GetPostBackFormReference : string -&gt; string" Usage="pageAdapter.GetPostBackFormReference formId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formId">
          <see cref="T:System.String" /> contenant l'ID client du formulaire publié.</param>
        <summary>Retourne un fragment de code DHTML que le navigateur client peut utiliser pour référencer le formulaire sur la page qui a été publiée.</summary>
        <returns>
          <see cref="T:System.String" /> avec une référence au formulaire de la page qui a été publié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> méthode fournit une référence DHTML au formulaire de publication (postback). Le fragment de code a le format suivant :  
  
 `document.forms['` `formID` `']`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous héritez de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), vous pouvez remplacer le <see cref="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" /> méthode si le balisage pour le navigateur pris en charge par l’adaptateur requiert un format différent pour la référence au formulaire de publication (postback). Par exemple, la norme HTML 3.2 utilisée par les navigateurs PocketPC requiert le format suivant : <c>document.</c><paramref name="formID" /></para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="GetRadioButtonsByGroup">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection GetRadioButtonsByGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetRadioButtonsByGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRadioButtonsByGroup (groupName As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ICollection ^ GetRadioButtonsByGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="abstract member GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection&#xA;override this.GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection" Usage="pageAdapter.GetRadioButtonsByGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">
          <see cref="T:System.String" /> correspondant au nom du groupe <see cref="T:System.Web.UI.WebControls.RadioButton" /> à récupérer.</param>
        <summary>Récupère une collection de contrôles de case d'option spécifiée par <paramref name="groupName" />.</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> des contrôles <see cref="T:System.Web.UI.WebControls.RadioButton" /> qui composent <paramref name="groupName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisation de cartes de contrôle de bouton de case d’option le <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> et <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> méthodes pour référencer l’autre <xref:System.Web.UI.WebControls.RadioButton> contrôles dans le groupe.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <Member MemberName="GetStatePersister">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.PageStatePersister GetStatePersister ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.PageStatePersister GetStatePersister() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatePersister () As PageStatePersister" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::PageStatePersister ^ GetStatePersister();" />
      <MemberSignature Language="F#" Value="abstract member GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister&#xA;override this.GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister" Usage="pageAdapter.GetStatePersister " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PageStatePersister</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un objet qui est utilisé par la page Web pour maintenir les états de contrôle et d'affichage.</summary>
        <returns>Un objet dérivé de <see cref="T:System.Web.UI.PageStatePersister" /> qui prend en charge la création et l'extraction des états de contrôle et d'affichage combinés pour <see cref="T:System.Web.UI.Page" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Page.PageStatePersister%2A> propriété utilise le <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> dérivé de la méthode pour retourner l’objet, le <xref:System.Web.UI.PageStatePersister> (classe), qui forme et extrait les États de contrôle et d’affichage combinés pour la page. S’il n’existe aucun adaptateur de page dérivé attaché à la page, un <xref:System.Web.UI.HiddenFieldPageStatePersister> objet est utilisé pour maintenir l’état dans un champ masqué sur la page.  
  
|Type de lien|Lien résultant|  
|---------------|--------------------|  
|Référence d’entité de code, cer|<xref:System.Char.ToString%2A>|  
|Code entité référence qualifiée, cerq|<xref:System.Char.ToString%2A?displayProperty=nameWithType>|  
|Code entité référence spécifique, CER|<xref:System.Char.ToString%28System.Char%29>|  
|Code entité référence qualifiée spécifique, cerqs|<xref:System.Char.ToString%28System.Char%29?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Afficher les données d’état stockées par le <see cref="T:System.Web.UI.PageStatePersister" /> objet dans le texte interne <see langword="ClientState" /> propriété de le <see cref="T:System.Web.UI.Page" /> seront toujours enregistrées dans le champ masqué sur la page Web.</para>
        </block>
        <block subset="none" type="overrides">
          <para>Lorsque vous héritez de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), vous pouvez remplacer le <see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> méthode pour retourner une autre dérivée de système de persistance de page État si elle n’est pas possible de maintenir l’état combiné dans un champ masqué (par exemple, en raison de ressources limitées).  Le <see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> retourne de la classe de base un <see cref="T:System.Web.UI.HiddenFieldPageStatePersister" /> objet. Vous pouvez utiliser la <see cref="T:System.Web.UI.SessionPageStatePersister" /> classe pour maintenir l’état de page dans l’état de session.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
        <altmember cref="T:System.Web.UI.HiddenFieldPageStatePersister" />
        <altmember cref="T:System.Web.UI.SessionPageStatePersister" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRadioButton">
      <MemberSignature Language="C#" Value="public virtual void RegisterRadioButton (System.Web.UI.WebControls.RadioButton radioButton);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRadioButton(class System.Web.UI.WebControls.RadioButton radioButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterRadioButton(System::Web::UI::WebControls::RadioButton ^ radioButton);" />
      <MemberSignature Language="F#" Value="abstract member RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit&#xA;override this.RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit" Usage="pageAdapter.RegisterRadioButton radioButton" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radioButton" Type="System.Web.UI.WebControls.RadioButton" />
      </Parameters>
      <Docs>
        <param name="radioButton">Objet <see cref="T:System.Web.UI.WebControls.RadioButton" /> à ajouter à la collection.</param>
        <summary>Ajoute un contrôle de case d'option à la collection pour un groupe de cases d'option spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Adapters.PageAdapter> classe utilise un <xref:System.Collections.Specialized.ListDictionary> objet pour maintenir une liste de groupes de cases d’option. Chaque élément dans <xref:System.Collections.Specialized.ListDictionary> est une collection de la <xref:System.Web.UI.WebControls.RadioButton> contrôles dans un groupe de cases d’option. Le <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> méthode ajoute un <xref:System.Web.UI.WebControls.RadioButton> contrôle à la collection appropriée, la création de la collection si elle n’existe pas déjà et la création <xref:System.Collections.Specialized.ListDictionary> si il ne précédemment inscrits <xref:System.Web.UI.WebControls.RadioButton> contrôles.  
  
 Utilisation de cartes de contrôle de bouton de case d’option le <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> et <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> méthodes pour référencer l’autre <xref:System.Web.UI.WebControls.RadioButton> contrôles dans un groupe de cases d’option.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restitue une balise d'ouverture de lien hypertexte au flux de réponse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> contenant les méthodes qui restituent la sortie spécifique à la cible.</param>
        <param name="targetUrl">Valeur <see cref="T:System.String" /> contenant l'URL cible du lien.</param>
        <param name="encodeUrl">
          <see langword="true" /> pour utiliser <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> pour encoder le flux de sortie ; sinon, <see langword="false" />.</param>
        <param name="softkeyLabel">Valeur <see cref="T:System.String" /> à utiliser comme étiquette de touche programmable.</param>
        <summary>Restitue une balise d'ouverture de lien hypertexte qui inclut l'URL cible au flux de réponse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> méthode écrit une ouverture de balise du lien hypertexte. Lorsque `writer` est <xref:System.Web.UI.HtmlTextWriter>, cette balise a le format suivant :  
  
 `<a href="` `targetUrl` `">`  
  
   
  
## Examples  
 L’exemple de code suivant montre comment dériver une classe nommée `CustomPageAdapter` à partir de la <xref:System.Web.UI.Adapters.PageAdapter> classe et substituer les <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> (méthode). Le <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> méthode ajoute un attribut nommé `src` vers un lien hypertexte, qui contient une référence à la page actuelle. Tous les liens hypertexte affichés dans les pages à laquelle `CustomPageAdapter` est attaché auront le `src` attribut.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous héritez de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), vous pouvez remplacer le <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> méthode pour écrire un format différent pour une ouverture de lien hypertexte de balise ou pour écrire la balise supplémentaire des attributs. Par exemple, le <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> méthode de base n’écrit pas d’attribut pour <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> contenant les méthodes qui restituent la sortie spécifique à la cible.</param>
        <param name="targetUrl">Valeur <see cref="T:System.String" /> contenant l'URL cible du lien.</param>
        <param name="encodeUrl">
          <see langword="true" /> pour utiliser <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> pour encoder le flux de sortie ; sinon, <see langword="false" />.</param>
        <param name="softkeyLabel">Valeur <see cref="T:System.String" /> à utiliser comme étiquette de touche programmable.</param>
        <param name="accessKey">Valeur <see cref="T:System.String" /> à assigner à l'attribut <see langword="accessKey" /> du lien à créer.</param>
        <summary>Restitue une balise d'ouverture de lien hypertexte qui inclut l'URL cible et une touche d'accès rapide au flux de réponse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> méthode écrit une ouverture de balise du lien hypertexte. Lorsque `writer` est un <xref:System.Web.UI.HtmlTextWriter> de l’objet, cette balise a le format suivant :  
  
 `<a href="` `targetUrl` `" accessKey="` `accessKey` `">`  
  
   
  
## Examples  
 L’exemple de code suivant montre comment dériver une classe nommée `CustomPageAdapter` à partir de la <xref:System.Web.UI.Adapters.PageAdapter> classe et substituer les <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> (méthode). <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Ajoute un attribut nommé `src` vers un lien hypertexte, qui contient une référence à la page actuelle. Tous les liens hypertexte affichés dans les pages à laquelle `CustomPageAdapter` est attaché auront le `src` attribut.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="accessKey" /> dépasse un caractère.</exception>
        <block subset="none" type="overrides">
          <para>Lorsque vous héritez de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), vous pouvez remplacer le <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> méthode pour écrire un format différent pour une ouverture de lien hypertexte de balise ou pour écrire la balise supplémentaire des attributs. Par exemple, le <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> méthode de base n’écrit pas d’attribut pour <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderEndHyperlink (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndHyperlink(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndHyperlink (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndHyperlink(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="pageAdapter.RenderEndHyperlink writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> qui contient les méthodes qui restituent la sortie spécifique à la cible.</param>
        <summary>Restitue une balise de fermeture de lien hypertexte au flux de réponse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> méthode écrit de fermer une balise de lien hypertexte. Lorsque le writer de texte est un <xref:System.Web.UI.HtmlTextWriter> de l’objet, cette balise a le format suivant :  
  
 `</a>`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous héritez de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), vous pouvez remplacer le <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" /> et <see cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" /> méthodes lorsqu’un format différent de lien hypertexte doivent être restitués.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderPostBackEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restitue un événement de publication dans le flux de réponse en tant que lien, y compris tous les arguments requis.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> contenant les méthodes qui restituent la sortie spécifique à la cible.</param>
        <param name="target">Valeur <see cref="T:System.String" /> contenant le nom cible de l'événement de publication.</param>
        <param name="argument">Valeur <see cref="T:System.String" /> contenant l'argument à passer à l'événement de publication cible.</param>
        <param name="softkeyLabel">Valeur <see cref="T:System.String" /> à utiliser comme étiquette de touche programmable.</param>
        <param name="text">Valeur <see cref="T:System.String" /> du texte à afficher en tant que lien.</param>
        <summary>Restitue un événement de publication dans le flux de réponse en tant que lien hypertexte, y compris l'état d'affichage encodé éventuellement chiffré, la cible et l'argument d'événement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> méthode écrit un événement de publication (postback) comme un lien hypertexte sans script.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous héritez de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), vous pouvez remplacer le <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> si un format différent est requis pour le lien hypertexte d’événement de publication ou le navigateur a d’autres exigences uniques de méthode. Par exemple, certains navigateurs nécessitent le texte du lien hypertexte pour être non vide si le lien doit restituer. Vous pouvez également remplacer <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> si des ressources limitées empêchent d’inclure l’état d’affichage comme un paramètre d’URL. Le <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> méthode de base n’écrit pas d’attribut pour <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> contenant les méthodes qui restituent la sortie spécifique à la cible.</param>
        <param name="target">Valeur <see cref="T:System.String" /> contenant le nom cible de l'événement de publication.</param>
        <param name="argument">Valeur <see cref="T:System.String" /> contenant l'argument à passer à l'événement de publication cible.</param>
        <param name="softkeyLabel">Valeur <see cref="T:System.String" /> à utiliser comme étiquette de touche programmable.</param>
        <param name="text">Valeur <see cref="T:System.String" /> du texte à afficher en tant que lien.</param>
        <param name="postUrl">Valeur <see cref="T:System.String" /> contenant la page cible de l'URL pour la publication.</param>
        <param name="accessKey">Valeur <see cref="T:System.String" /> à assigner à l'attribut <see langword="accessKey" /> du lien créé.</param>
        <summary>Restitue un événement de publication dans le flux de réponse en tant que lien hypertexte, y compris l'état d'affichage encodé éventuellement chiffré, une cible et un argument d'événement, un paramètre de page précédente et une touche d'accès rapide.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> méthode écrit un événement de publication (postback) en tant que lien hypertexte sans script, y compris éventuellement mémorisé en bloc <xref:System.Web.HttpUtility.UrlEncode%2A> état d’affichage, `__EVENTTARGET=target`, `__EVENTARGUMENT=argument`, `__PREVIOUSPAGE=currentFilePath` paramètres et un `accessKey="accessKey"` attribut.  
  
 État d’affichage est chiffrée si la `enableViewStateMac` attribut de la [pages, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) élément de configuration est définie sur `true`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous héritez de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), vous pouvez remplacer le <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> si un format différent est requis pour le lien hypertexte d’événement de publication ou le navigateur a d’autres exigences uniques de méthode. Par exemple, certains navigateurs nécessitent le texte du lien hypertexte pour être non vide si le lien doit restituer. Vous pouvez également remplacer <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> si des ressources limitées empêchent d’inclure l’état d’affichage comme un paramètre d’URL. Le <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> méthode de base n’écrit pas d’attribut pour <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="protected void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey, bool encode);" />
      <MemberSignature Language="F#" Value="member this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string * bool -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> contenant les méthodes qui restituent la sortie spécifique à la cible.</param>
        <param name="target">Valeur <see cref="T:System.String" /> contenant le nom cible de l'événement de publication.</param>
        <param name="argument">Valeur <see cref="T:System.String" /> contenant l'argument à passer à l'événement de publication cible.</param>
        <param name="softkeyLabel">Valeur <see cref="T:System.String" /> à utiliser comme étiquette de touche programmable.</param>
        <param name="text">Valeur <see cref="T:System.String" /> du texte à afficher en tant que lien.</param>
        <param name="postUrl">Valeur <see cref="T:System.String" /> contenant la page cible de l'URL pour la publication.</param>
        <param name="accessKey">Valeur <see cref="T:System.String" /> à assigner à l'attribut <see langword="accessKey" /> du lien créé.</param>
        <param name="encode">
          <see langword="true" /> pour utiliser <c>&amp;amp;</c> comme séparateur de paramètre d’URL ; <see langword="false" /> pour utiliser <c>&amp;</c>.</param>
        <summary>Restitue un événement de publication dans le flux de réponse en tant que lien hypertexte, y compris l'état d'affichage encodé, une cible et un argument d'événement, un paramètre de page précédente et une touche d'accès rapide.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> méthode écrit un événement de publication (postback) en tant que lien hypertexte sans script, y compris éventuellement mémorisé en bloc <xref:System.Web.HttpUtility.UrlEncode%2A> état d’affichage, `__EVENTTARGET=target`, `__EVENTARGUMENT=argument`, `__PREVIOUSPAGE=currentFilePath` paramètres et un `accessKey="accessKey"` attribut.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous héritez de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), vous pouvez remplacer le <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> si un format différent est requis pour le lien hypertexte d’événement de publication ou le navigateur a d’autres exigences uniques de méthode. Par exemple, certains navigateurs nécessitent le texte du lien hypertexte pour être non vide si le lien doit restituer. Vous pouvez également remplacer <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> si des ressources limitées empêchent d’inclure l’état d’affichage comme un paramètre d’URL. Le <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> méthode de base n’écrit pas d’attribut pour <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="TransformText">
      <MemberSignature Language="C#" Value="public virtual string TransformText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string TransformText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TransformText (text As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ TransformText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member TransformText : string -&gt; string&#xA;override this.TransformText : string -&gt; string" Usage="pageAdapter.TransformText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <see cref="T:System.String" /> qui est le texte à transformer.</param>
        <summary>Transforme le texte pour le navigateur cible.</summary>
        <returns>
          <see cref="T:System.String" /> qui contient le texte transformé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> méthode peut être utilisée, par exemple, pour transformer les caractères de tabulation (`\t`) en sauts de ligne (`\n`).  
  
 Le <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> retourne de la méthode de base `text` inchangé.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous héritez de la <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), vous pouvez remplacer <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> si une balise particulière a une construction avec une autre forme à partir de code HTML standard. Par exemple, si un navigateur requiert un identificateur différent pour une balise que celui utilisé dans HTML, <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> méthode peut être substituée pour rechercher la balise et la modifier.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
  </Members>
</Type>