<Type Name="DynamicUpdateServices" FullName="System.Activities.DynamicUpdate.DynamicUpdateServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="95d4489badc68bd2be9cfafeb4e6b15bbf878ec5" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34317176" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DynamicUpdateServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DynamicUpdateServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DynamicUpdate.DynamicUpdateServices" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicUpdateServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicUpdateServices abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente les services de mise à jour dynamique.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe prend en charge la fonctionnalité de contrôle de version et de mise à jour dynamique de Windows Workflow Foundation. Pour plus d’informations sur le versioning de workflow, d’identité de flux de travail et mise à jour dynamique, consultez les rubriques suivantes.  
  
 [Contrôle de version de flux de travail](~/docs/framework/windows-workflow-foundation/whats-new-in-wf-in-dotnet.md)  
 Décrit les fonctionnalités de contrôle de version de workflow introduites dans [!INCLUDE[net_v45](~/includes/net-v45-md.md)].  
  
 [Mise à jour dynamique](~/docs/framework/windows-workflow-foundation/dynamic-update.md)  
 Décrit comment mettre à jour la définition de workflow d'une instance persistante de workflow à l'aide de la mise à jour dynamique.  
  
 [À l’aide de WorkflowApplication identité et contrôle de version](~/docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md)  
 Décrit comment utiliser <xref:System.Activities.WorkflowIdentity> pour héberger plusieurs versions d'un workflow côte à côte.  
  
 [Gestion de version côte à côte dans WorkflowServiceHost](~/docs/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost.md)  
 Décrit comment héberger plusieurs versions d'un workflow sur un point de terminaison unique.  
  
 [Guide pratique pour héberger plusieurs versions d’un workflow côte à côte](~/docs/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour d’une définition de workflow et l’hébergement de workflows à l’aide de la définition ancienne et nouvelle en même temps.  
  
 [Guide pratique pour mettre à jour la définition d’une instance de workflow en cours d’exécution](~/docs/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour des instances de workflow persistantes pour utiliser une nouvelle définition de flux de travail.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateUpdateMap">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée une carte de mise à jour.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode prend en charge la fonctionnalité de contrôle de version et de mise à jour dynamique de Windows Workflow Foundation. Pour plus d’informations sur le versioning de workflow, d’identité de flux de travail et mise à jour dynamique, consultez les rubriques suivantes.  
  
 [Contrôle de version de flux de travail](~/docs/framework/windows-workflow-foundation/whats-new-in-wf-in-dotnet.md)  
 Décrit les fonctionnalités de contrôle de version de workflow introduites dans [!INCLUDE[net_v45](~/includes/net-v45-md.md)].  
  
 [Mise à jour dynamique](~/docs/framework/windows-workflow-foundation/dynamic-update.md)  
 Décrit comment mettre à jour la définition de workflow d'une instance persistante de workflow à l'aide de la mise à jour dynamique.  
  
 [À l’aide de WorkflowApplication identité et contrôle de version](~/docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md)  
 Décrit comment utiliser <xref:System.Activities.WorkflowIdentity> pour héberger plusieurs versions d'un workflow côte à côte.  
  
 [Gestion de version côte à côte dans WorkflowServiceHost](~/docs/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost.md)  
 Décrit comment héberger plusieurs versions d'un workflow sur un point de terminaison unique.  
  
 [Guide pratique pour héberger plusieurs versions d’un workflow côte à côte](~/docs/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour d’une définition de workflow et l’hébergement de workflows à l’aide de la définition ancienne et nouvelle en même temps.  
  
 [Guide pratique pour mettre à jour la définition d’une instance de workflow en cours d’exécution](~/docs/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour des instances de workflow persistantes pour utiliser une nouvelle définition de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateUpdateMap">
      <MemberSignature Language="C#" Value="public static System.Activities.DynamicUpdate.DynamicUpdateMap CreateUpdateMap (System.Activities.Activity updatedWorkflowDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.DynamicUpdate.DynamicUpdateMap CreateUpdateMap(class System.Activities.Activity updatedWorkflowDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.DynamicUpdateServices.CreateUpdateMap(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUpdateMap (updatedWorkflowDefinition As Activity) As DynamicUpdateMap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::DynamicUpdate::DynamicUpdateMap ^ CreateUpdateMap(System::Activities::Activity ^ updatedWorkflowDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.DynamicUpdate.DynamicUpdateMap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updatedWorkflowDefinition" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="updatedWorkflowDefinition">Définition mise à jour du workflow.</param>
        <summary>Crée une carte de mise à jour avec la définition de flux de travail spécifiée.</summary>
        <returns>Table de mise à jour créée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode prend en charge la fonctionnalité de contrôle de version et de mise à jour dynamique de Windows Workflow Foundation. Pour plus d’informations sur le versioning de workflow, d’identité de flux de travail et mise à jour dynamique, consultez les rubriques suivantes.  
  
 [Contrôle de version de flux de travail](~/docs/framework/windows-workflow-foundation/whats-new-in-wf-in-dotnet.md)  
 Décrit les fonctionnalités de contrôle de version de workflow introduites dans [!INCLUDE[net_v45](~/includes/net-v45-md.md)].  
  
 [Mise à jour dynamique](~/docs/framework/windows-workflow-foundation/dynamic-update.md)  
 Décrit comment mettre à jour la définition de workflow d'une instance persistante de workflow à l'aide de la mise à jour dynamique.  
  
 [À l’aide de WorkflowApplication identité et contrôle de version](~/docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md)  
 Décrit comment utiliser <xref:System.Activities.WorkflowIdentity> pour héberger plusieurs versions d'un workflow côte à côte.  
  
 [Gestion de version côte à côte dans WorkflowServiceHost](~/docs/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost.md)  
 Décrit comment héberger plusieurs versions d'un workflow sur un point de terminaison unique.  
  
 [Guide pratique pour héberger plusieurs versions d’un workflow côte à côte](~/docs/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour d’une définition de workflow et l’hébergement de workflows à l’aide de la définition ancienne et nouvelle en même temps.  
  
 [Guide pratique pour mettre à jour la définition d’une instance de workflow en cours d’exécution](~/docs/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour des instances de workflow persistantes pour utiliser une nouvelle définition de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUpdateMap">
      <MemberSignature Language="C#" Value="public static System.Activities.DynamicUpdate.DynamicUpdateMap CreateUpdateMap (System.Activities.ActivityBuilder updatedActivityDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.DynamicUpdate.DynamicUpdateMap CreateUpdateMap(class System.Activities.ActivityBuilder updatedActivityDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.DynamicUpdateServices.CreateUpdateMap(System.Activities.ActivityBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUpdateMap (updatedActivityDefinition As ActivityBuilder) As DynamicUpdateMap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::DynamicUpdate::DynamicUpdateMap ^ CreateUpdateMap(System::Activities::ActivityBuilder ^ updatedActivityDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.DynamicUpdate.DynamicUpdateMap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updatedActivityDefinition" Type="System.Activities.ActivityBuilder" />
      </Parameters>
      <Docs>
        <param name="updatedActivityDefinition">Définition d'activité mise à jour.</param>
        <summary>Crée une carte de mise à jour avec la définition d'activité spécifiée.</summary>
        <returns>Table de mise à jour créée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode prend en charge la fonctionnalité de contrôle de version et de mise à jour dynamique de Windows Workflow Foundation. Pour plus d’informations sur le versioning de workflow, d’identité de flux de travail et mise à jour dynamique, consultez les rubriques suivantes.  
  
 [Contrôle de version de flux de travail](~/docs/framework/windows-workflow-foundation/whats-new-in-wf-in-dotnet.md)  
 Décrit les fonctionnalités de contrôle de version de workflow introduites dans [!INCLUDE[net_v45](~/includes/net-v45-md.md)].  
  
 [Mise à jour dynamique](~/docs/framework/windows-workflow-foundation/dynamic-update.md)  
 Décrit comment mettre à jour la définition de workflow d'une instance persistante de workflow à l'aide de la mise à jour dynamique.  
  
 [À l’aide de WorkflowApplication identité et contrôle de version](~/docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md)  
 Décrit comment utiliser <xref:System.Activities.WorkflowIdentity> pour héberger plusieurs versions d'un workflow côte à côte.  
  
 [Gestion de version côte à côte dans WorkflowServiceHost](~/docs/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost.md)  
 Décrit comment héberger plusieurs versions d'un workflow sur un point de terminaison unique.  
  
 [Guide pratique pour héberger plusieurs versions d’un workflow côte à côte](~/docs/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour d’une définition de workflow et l’hébergement de workflows à l’aide de la définition ancienne et nouvelle en même temps.  
  
 [Guide pratique pour mettre à jour la définition d’une instance de workflow en cours d’exécution](~/docs/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour des instances de workflow persistantes pour utiliser une nouvelle définition de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUpdateMap">
      <MemberSignature Language="C#" Value="public static System.Activities.DynamicUpdate.DynamicUpdateMap CreateUpdateMap (System.Activities.Activity updatedWorkflowDefinition, System.Collections.Generic.IEnumerable&lt;System.Activities.Activity&gt; disallowUpdateInsideActivities);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.DynamicUpdate.DynamicUpdateMap CreateUpdateMap(class System.Activities.Activity updatedWorkflowDefinition, class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Activity&gt; disallowUpdateInsideActivities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.DynamicUpdateServices.CreateUpdateMap(System.Activities.Activity,System.Collections.Generic.IEnumerable{System.Activities.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUpdateMap (updatedWorkflowDefinition As Activity, disallowUpdateInsideActivities As IEnumerable(Of Activity)) As DynamicUpdateMap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::DynamicUpdate::DynamicUpdateMap ^ CreateUpdateMap(System::Activities::Activity ^ updatedWorkflowDefinition, System::Collections::Generic::IEnumerable&lt;System::Activities::Activity ^&gt; ^ disallowUpdateInsideActivities);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.DynamicUpdate.DynamicUpdateMap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updatedWorkflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="disallowUpdateInsideActivities" Type="System.Collections.Generic.IEnumerable&lt;System.Activities.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="updatedWorkflowDefinition">Définition mise à jour du workflow.</param>
        <param name="disallowUpdateInsideActivities">Liste des activités.</param>
        <summary>Crée une carte de mise à jour avec la définition de flux de travail et la liste des mises à jour des interdictions au sein des activités spécifiées.</summary>
        <returns>Table de mise à jour créée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode prend en charge la fonctionnalité de contrôle de version et de mise à jour dynamique de Windows Workflow Foundation. Pour plus d’informations sur le versioning de workflow, d’identité de flux de travail et mise à jour dynamique, consultez les rubriques suivantes.  
  
 [Contrôle de version de flux de travail](~/docs/framework/windows-workflow-foundation/whats-new-in-wf-in-dotnet.md)  
 Décrit les fonctionnalités de contrôle de version de workflow introduites dans [!INCLUDE[net_v45](~/includes/net-v45-md.md)].  
  
 [Mise à jour dynamique](~/docs/framework/windows-workflow-foundation/dynamic-update.md)  
 Décrit comment mettre à jour la définition de workflow d'une instance persistante de workflow à l'aide de la mise à jour dynamique.  
  
 [À l’aide de WorkflowApplication identité et contrôle de version](~/docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md)  
 Décrit comment utiliser <xref:System.Activities.WorkflowIdentity> pour héberger plusieurs versions d'un workflow côte à côte.  
  
 [Gestion de version côte à côte dans WorkflowServiceHost](~/docs/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost.md)  
 Décrit comment héberger plusieurs versions d'un workflow sur un point de terminaison unique.  
  
 [Guide pratique pour héberger plusieurs versions d’un workflow côte à côte](~/docs/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour d’une définition de workflow et l’hébergement de workflows à l’aide de la définition ancienne et nouvelle en même temps.  
  
 [Guide pratique pour mettre à jour la définition d’une instance de workflow en cours d’exécution](~/docs/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour des instances de workflow persistantes pour utiliser une nouvelle définition de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUpdateMap">
      <MemberSignature Language="C#" Value="public static System.Activities.DynamicUpdate.DynamicUpdateMap CreateUpdateMap (System.Activities.ActivityBuilder updatedActivityDefinition, System.Collections.Generic.IEnumerable&lt;System.Activities.Activity&gt; disallowUpdateInsideActivities);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.DynamicUpdate.DynamicUpdateMap CreateUpdateMap(class System.Activities.ActivityBuilder updatedActivityDefinition, class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Activity&gt; disallowUpdateInsideActivities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.DynamicUpdateServices.CreateUpdateMap(System.Activities.ActivityBuilder,System.Collections.Generic.IEnumerable{System.Activities.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUpdateMap (updatedActivityDefinition As ActivityBuilder, disallowUpdateInsideActivities As IEnumerable(Of Activity)) As DynamicUpdateMap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::DynamicUpdate::DynamicUpdateMap ^ CreateUpdateMap(System::Activities::ActivityBuilder ^ updatedActivityDefinition, System::Collections::Generic::IEnumerable&lt;System::Activities::Activity ^&gt; ^ disallowUpdateInsideActivities);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.DynamicUpdate.DynamicUpdateMap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updatedActivityDefinition" Type="System.Activities.ActivityBuilder" />
        <Parameter Name="disallowUpdateInsideActivities" Type="System.Collections.Generic.IEnumerable&lt;System.Activities.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="updatedActivityDefinition">Définition d'activité mise à jour.</param>
        <param name="disallowUpdateInsideActivities">Liste des activités.</param>
        <summary>Crée une carte de mise à jour avec la définition d'activité et la liste des mises à jour des interdictions au sein des activités spécifiées.</summary>
        <returns>Table de mise à jour créée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode prend en charge la fonctionnalité de contrôle de version et de mise à jour dynamique de Windows Workflow Foundation. Pour plus d’informations sur le versioning de workflow, d’identité de flux de travail et mise à jour dynamique, consultez les rubriques suivantes.  
  
 [Contrôle de version de flux de travail](~/docs/framework/windows-workflow-foundation/whats-new-in-wf-in-dotnet.md)  
 Décrit les fonctionnalités de contrôle de version de workflow introduites dans [!INCLUDE[net_v45](~/includes/net-v45-md.md)].  
  
 [Mise à jour dynamique](~/docs/framework/windows-workflow-foundation/dynamic-update.md)  
 Décrit comment mettre à jour la définition de workflow d'une instance persistante de workflow à l'aide de la mise à jour dynamique.  
  
 [À l’aide de WorkflowApplication identité et contrôle de version](~/docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md)  
 Décrit comment utiliser <xref:System.Activities.WorkflowIdentity> pour héberger plusieurs versions d'un workflow côte à côte.  
  
 [Gestion de version côte à côte dans WorkflowServiceHost](~/docs/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost.md)  
 Décrit comment héberger plusieurs versions d'un workflow sur un point de terminaison unique.  
  
 [Guide pratique pour héberger plusieurs versions d’un workflow côte à côte](~/docs/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour d’une définition de workflow et l’hébergement de workflows à l’aide de la définition ancienne et nouvelle en même temps.  
  
 [Guide pratique pour mettre à jour la définition d’une instance de workflow en cours d’exécution](~/docs/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour des instances de workflow persistantes pour utiliser une nouvelle définition de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUpdateMap">
      <MemberSignature Language="C#" Value="public static System.Activities.DynamicUpdate.DynamicUpdateMap CreateUpdateMap (System.Activities.Activity updatedWorkflowDefinition, System.Collections.Generic.IEnumerable&lt;System.Activities.Activity&gt; disallowUpdateInsideActivities, out System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt; activitiesBlockingUpdate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.DynamicUpdate.DynamicUpdateMap CreateUpdateMap(class System.Activities.Activity updatedWorkflowDefinition, class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Activity&gt; disallowUpdateInsideActivities, [out] class System.Collections.Generic.IList`1&lt;class System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt;&amp; activitiesBlockingUpdate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.DynamicUpdateServices.CreateUpdateMap(System.Activities.Activity,System.Collections.Generic.IEnumerable{System.Activities.Activity},System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUpdateMap (updatedWorkflowDefinition As Activity, disallowUpdateInsideActivities As IEnumerable(Of Activity), ByRef activitiesBlockingUpdate As IList(Of ActivityBlockingUpdate)) As DynamicUpdateMap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::DynamicUpdate::DynamicUpdateMap ^ CreateUpdateMap(System::Activities::Activity ^ updatedWorkflowDefinition, System::Collections::Generic::IEnumerable&lt;System::Activities::Activity ^&gt; ^ disallowUpdateInsideActivities, [Runtime::InteropServices::Out] System::Collections::Generic::IList&lt;System::Activities::DynamicUpdate::ActivityBlockingUpdate ^&gt; ^ % activitiesBlockingUpdate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.DynamicUpdate.DynamicUpdateMap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updatedWorkflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="disallowUpdateInsideActivities" Type="System.Collections.Generic.IEnumerable&lt;System.Activities.Activity&gt;" />
        <Parameter Name="activitiesBlockingUpdate" Type="System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="updatedWorkflowDefinition">Définition mise à jour du workflow.</param>
        <param name="disallowUpdateInsideActivities">Liste des activités.</param>
        <param name="activitiesBlockingUpdate">Liste de mise à jour bloquante.</param>
        <summary>Crée une carte de mise à jour avec la définition de flux de travail, la liste des mises à jour des interdictions au sein des activités, ainsi que les mises à jour de blocage spécifiées.</summary>
        <returns>Table de mise à jour créée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode prend en charge la fonctionnalité de contrôle de version et de mise à jour dynamique de Windows Workflow Foundation. Pour plus d’informations sur le versioning de workflow, d’identité de flux de travail et mise à jour dynamique, consultez les rubriques suivantes.  
  
 [Contrôle de version de flux de travail](~/docs/framework/windows-workflow-foundation/whats-new-in-wf-in-dotnet.md)  
 Décrit les fonctionnalités de contrôle de version de workflow introduites dans [!INCLUDE[net_v45](~/includes/net-v45-md.md)].  
  
 [Mise à jour dynamique](~/docs/framework/windows-workflow-foundation/dynamic-update.md)  
 Décrit comment mettre à jour la définition de workflow d'une instance persistante de workflow à l'aide de la mise à jour dynamique.  
  
 [À l’aide de WorkflowApplication identité et contrôle de version](~/docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md)  
 Décrit comment utiliser <xref:System.Activities.WorkflowIdentity> pour héberger plusieurs versions d'un workflow côte à côte.  
  
 [Gestion de version côte à côte dans WorkflowServiceHost](~/docs/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost.md)  
 Décrit comment héberger plusieurs versions d'un workflow sur un point de terminaison unique.  
  
 [Guide pratique pour héberger plusieurs versions d’un workflow côte à côte](~/docs/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour d’une définition de workflow et l’hébergement de workflows à l’aide de la définition ancienne et nouvelle en même temps.  
  
 [Guide pratique pour mettre à jour la définition d’une instance de workflow en cours d’exécution](~/docs/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour des instances de workflow persistantes pour utiliser une nouvelle définition de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUpdateMap">
      <MemberSignature Language="C#" Value="public static System.Activities.DynamicUpdate.DynamicUpdateMap CreateUpdateMap (System.Activities.ActivityBuilder updatedActivityDefinition, System.Collections.Generic.IEnumerable&lt;System.Activities.Activity&gt; disallowUpdateInsideActivities, out System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt; activitiesBlockingUpdate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.DynamicUpdate.DynamicUpdateMap CreateUpdateMap(class System.Activities.ActivityBuilder updatedActivityDefinition, class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Activity&gt; disallowUpdateInsideActivities, [out] class System.Collections.Generic.IList`1&lt;class System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt;&amp; activitiesBlockingUpdate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.DynamicUpdateServices.CreateUpdateMap(System.Activities.ActivityBuilder,System.Collections.Generic.IEnumerable{System.Activities.Activity},System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUpdateMap (updatedActivityDefinition As ActivityBuilder, disallowUpdateInsideActivities As IEnumerable(Of Activity), ByRef activitiesBlockingUpdate As IList(Of ActivityBlockingUpdate)) As DynamicUpdateMap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::DynamicUpdate::DynamicUpdateMap ^ CreateUpdateMap(System::Activities::ActivityBuilder ^ updatedActivityDefinition, System::Collections::Generic::IEnumerable&lt;System::Activities::Activity ^&gt; ^ disallowUpdateInsideActivities, [Runtime::InteropServices::Out] System::Collections::Generic::IList&lt;System::Activities::DynamicUpdate::ActivityBlockingUpdate ^&gt; ^ % activitiesBlockingUpdate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.DynamicUpdate.DynamicUpdateMap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updatedActivityDefinition" Type="System.Activities.ActivityBuilder" />
        <Parameter Name="disallowUpdateInsideActivities" Type="System.Collections.Generic.IEnumerable&lt;System.Activities.Activity&gt;" />
        <Parameter Name="activitiesBlockingUpdate" Type="System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="updatedActivityDefinition">Définition d'activité mise à jour.</param>
        <param name="disallowUpdateInsideActivities">Liste des activités.</param>
        <param name="activitiesBlockingUpdate">Liste de mise à jour bloquante.</param>
        <summary>Crée une carte de mise à jour avec la définition d'activité et la liste des mises à jour des interdictions au sein des activités, ainsi que les mises à jour de blocage spécifiées.</summary>
        <returns>Table de mise à jour créée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode prend en charge la fonctionnalité de contrôle de version et de mise à jour dynamique de Windows Workflow Foundation. Pour plus d’informations sur le versioning de workflow, d’identité de flux de travail et mise à jour dynamique, consultez les rubriques suivantes.  
  
 [Contrôle de version de flux de travail](~/docs/framework/windows-workflow-foundation/whats-new-in-wf-in-dotnet.md)  
 Décrit les fonctionnalités de contrôle de version de workflow introduites dans [!INCLUDE[net_v45](~/includes/net-v45-md.md)].  
  
 [Mise à jour dynamique](~/docs/framework/windows-workflow-foundation/dynamic-update.md)  
 Décrit comment mettre à jour la définition de workflow d'une instance persistante de workflow à l'aide de la mise à jour dynamique.  
  
 [À l’aide de WorkflowApplication identité et contrôle de version](~/docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md)  
 Décrit comment utiliser <xref:System.Activities.WorkflowIdentity> pour héberger plusieurs versions d'un workflow côte à côte.  
  
 [Gestion de version côte à côte dans WorkflowServiceHost](~/docs/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost.md)  
 Décrit comment héberger plusieurs versions d'un workflow sur un point de terminaison unique.  
  
 [Guide pratique pour héberger plusieurs versions d’un workflow côte à côte](~/docs/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour d’une définition de workflow et l’hébergement de workflows à l’aide de la définition ancienne et nouvelle en même temps.  
  
 [Guide pratique pour mettre à jour la définition d’une instance de workflow en cours d’exécution](~/docs/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour des instances de workflow persistantes pour utiliser une nouvelle définition de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImplementationMap">
      <MemberSignature Language="C#" Value="public static System.Activities.DynamicUpdate.DynamicUpdateMap GetImplementationMap (System.Activities.Activity targetActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.DynamicUpdate.DynamicUpdateMap GetImplementationMap(class System.Activities.Activity targetActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.DynamicUpdateServices.GetImplementationMap(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetImplementationMap (targetActivity As Activity) As DynamicUpdateMap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::DynamicUpdate::DynamicUpdateMap ^ GetImplementationMap(System::Activities::Activity ^ targetActivity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.DynamicUpdate.DynamicUpdateMap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="targetActivity">Activité cible.</param>
        <summary>Obtient une carte d'implémentation pour les <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateServices" />.</summary>
        <returns>Carte d'implémentation récupérée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode prend en charge la fonctionnalité de contrôle de version et de mise à jour dynamique de Windows Workflow Foundation. Pour plus d’informations sur le versioning de workflow, d’identité de flux de travail et mise à jour dynamique, consultez les rubriques suivantes.  
  
 [Contrôle de version de flux de travail](~/docs/framework/windows-workflow-foundation/whats-new-in-wf-in-dotnet.md)  
 Décrit les fonctionnalités de contrôle de version de workflow introduites dans [!INCLUDE[net_v45](~/includes/net-v45-md.md)].  
  
 [Mise à jour dynamique](~/docs/framework/windows-workflow-foundation/dynamic-update.md)  
 Décrit comment mettre à jour la définition de workflow d'une instance persistante de workflow à l'aide de la mise à jour dynamique.  
  
 [À l’aide de WorkflowApplication identité et contrôle de version](~/docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md)  
 Décrit comment utiliser <xref:System.Activities.WorkflowIdentity> pour héberger plusieurs versions d'un workflow côte à côte.  
  
 [Gestion de version côte à côte dans WorkflowServiceHost](~/docs/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost.md)  
 Décrit comment héberger plusieurs versions d'un workflow sur un point de terminaison unique.  
  
 [Guide pratique pour héberger plusieurs versions d’un workflow côte à côte](~/docs/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour d’une définition de workflow et l’hébergement de workflows à l’aide de la définition ancienne et nouvelle en même temps.  
  
 [Guide pratique pour mettre à jour la définition d’une instance de workflow en cours d’exécution](~/docs/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour des instances de workflow persistantes pour utiliser une nouvelle définition de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PrepareForUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Prépare une définition de workflow à mettre à jour.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode prend en charge la fonctionnalité de contrôle de version et de mise à jour dynamique de Windows Workflow Foundation. Pour plus d’informations sur le versioning de workflow, d’identité de flux de travail et mise à jour dynamique, consultez les rubriques suivantes.  
  
 [Contrôle de version de flux de travail](~/docs/framework/windows-workflow-foundation/whats-new-in-wf-in-dotnet.md)  
 Décrit les fonctionnalités de contrôle de version de workflow introduites dans [!INCLUDE[net_v45](~/includes/net-v45-md.md)].  
  
 [Mise à jour dynamique](~/docs/framework/windows-workflow-foundation/dynamic-update.md)  
 Décrit comment mettre à jour la définition de workflow d'une instance persistante de workflow à l'aide de la mise à jour dynamique.  
  
 [À l’aide de WorkflowApplication identité et contrôle de version](~/docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md)  
 Décrit comment utiliser <xref:System.Activities.WorkflowIdentity> pour héberger plusieurs versions d'un workflow côte à côte.  
  
 [Gestion de version côte à côte dans WorkflowServiceHost](~/docs/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost.md)  
 Décrit comment héberger plusieurs versions d'un workflow sur un point de terminaison unique.  
  
 [Guide pratique pour héberger plusieurs versions d’un workflow côte à côte](~/docs/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour d’une définition de workflow et l’hébergement de workflows à l’aide de la définition ancienne et nouvelle en même temps.  
  
 [Guide pratique pour mettre à jour la définition d’une instance de workflow en cours d’exécution](~/docs/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour des instances de workflow persistantes pour utiliser une nouvelle définition de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="PrepareForUpdate">
      <MemberSignature Language="C#" Value="public static void PrepareForUpdate (System.Activities.Activity workflowDefinitionToBeUpdated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrepareForUpdate(class System.Activities.Activity workflowDefinitionToBeUpdated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.DynamicUpdateServices.PrepareForUpdate(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PrepareForUpdate (workflowDefinitionToBeUpdated As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrepareForUpdate(System::Activities::Activity ^ workflowDefinitionToBeUpdated);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDefinitionToBeUpdated" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinitionToBeUpdated">Flux de travail à mettre à jour.</param>
        <summary>Prépare une définition de workflow à mettre à jour.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode prend en charge la fonctionnalité de contrôle de version et de mise à jour dynamique de Windows Workflow Foundation. Pour plus d’informations sur le versioning de workflow, d’identité de flux de travail et mise à jour dynamique, consultez les rubriques suivantes.  
  
 [Contrôle de version de flux de travail](~/docs/framework/windows-workflow-foundation/whats-new-in-wf-in-dotnet.md)  
 Décrit les fonctionnalités de contrôle de version de workflow introduites dans [!INCLUDE[net_v45](~/includes/net-v45-md.md)].  
  
 [Mise à jour dynamique](~/docs/framework/windows-workflow-foundation/dynamic-update.md)  
 Décrit comment mettre à jour la définition de workflow d'une instance persistante de workflow à l'aide de la mise à jour dynamique.  
  
 [À l’aide de WorkflowApplication identité et contrôle de version](~/docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md)  
 Décrit comment utiliser <xref:System.Activities.WorkflowIdentity> pour héberger plusieurs versions d'un workflow côte à côte.  
  
 [Gestion de version côte à côte dans WorkflowServiceHost](~/docs/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost.md)  
 Décrit comment héberger plusieurs versions d'un workflow sur un point de terminaison unique.  
  
 [Guide pratique pour héberger plusieurs versions d’un workflow côte à côte](~/docs/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour d’une définition de workflow et l’hébergement de workflows à l’aide de la définition ancienne et nouvelle en même temps.  
  
 [Guide pratique pour mettre à jour la définition d’une instance de workflow en cours d’exécution](~/docs/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour des instances de workflow persistantes pour utiliser une nouvelle définition de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareForUpdate">
      <MemberSignature Language="C#" Value="public static void PrepareForUpdate (System.Activities.ActivityBuilder activityDefinitionToBeUpdated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrepareForUpdate(class System.Activities.ActivityBuilder activityDefinitionToBeUpdated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.DynamicUpdateServices.PrepareForUpdate(System.Activities.ActivityBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PrepareForUpdate (activityDefinitionToBeUpdated As ActivityBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrepareForUpdate(System::Activities::ActivityBuilder ^ activityDefinitionToBeUpdated);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityDefinitionToBeUpdated" Type="System.Activities.ActivityBuilder" />
      </Parameters>
      <Docs>
        <param name="activityDefinitionToBeUpdated">Activité à mettre à jour.</param>
        <summary>Prépare une définition de workflow à mettre à jour.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode prend en charge la fonctionnalité de contrôle de version et de mise à jour dynamique de Windows Workflow Foundation. Pour plus d’informations sur le versioning de workflow, d’identité de flux de travail et mise à jour dynamique, consultez les rubriques suivantes.  
  
 [Contrôle de version de flux de travail](~/docs/framework/windows-workflow-foundation/whats-new-in-wf-in-dotnet.md)  
 Décrit les fonctionnalités de contrôle de version de workflow introduites dans [!INCLUDE[net_v45](~/includes/net-v45-md.md)].  
  
 [Mise à jour dynamique](~/docs/framework/windows-workflow-foundation/dynamic-update.md)  
 Décrit comment mettre à jour la définition de workflow d'une instance persistante de workflow à l'aide de la mise à jour dynamique.  
  
 [À l’aide de WorkflowApplication identité et contrôle de version](~/docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md)  
 Décrit comment utiliser <xref:System.Activities.WorkflowIdentity> pour héberger plusieurs versions d'un workflow côte à côte.  
  
 [Gestion de version côte à côte dans WorkflowServiceHost](~/docs/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost.md)  
 Décrit comment héberger plusieurs versions d'un workflow sur un point de terminaison unique.  
  
 [Guide pratique pour héberger plusieurs versions d’un workflow côte à côte](~/docs/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour d’une définition de workflow et l’hébergement de workflows à l’aide de la définition ancienne et nouvelle en même temps.  
  
 [Guide pratique pour mettre à jour la définition d’une instance de workflow en cours d’exécution](~/docs/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour des instances de workflow persistantes pour utiliser une nouvelle définition de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImplementationMap">
      <MemberSignature Language="C#" Value="public static void SetImplementationMap (System.Activities.Activity targetActivity, System.Activities.DynamicUpdate.DynamicUpdateMap implementationMap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetImplementationMap(class System.Activities.Activity targetActivity, class System.Activities.DynamicUpdate.DynamicUpdateMap implementationMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.DynamicUpdateServices.SetImplementationMap(System.Activities.Activity,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetImplementationMap (targetActivity As Activity, implementationMap As DynamicUpdateMap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetImplementationMap(System::Activities::Activity ^ targetActivity, System::Activities::DynamicUpdate::DynamicUpdateMap ^ implementationMap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetActivity" Type="System.Activities.Activity" />
        <Parameter Name="implementationMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
      </Parameters>
      <Docs>
        <param name="targetActivity">Activité cible.</param>
        <param name="implementationMap">Carte d'implémentation définie.</param>
        <summary>Définit une carte d'implémentation pour les <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateServices" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode prend en charge la fonctionnalité de contrôle de version et de mise à jour dynamique de Windows Workflow Foundation. Pour plus d’informations sur le versioning de workflow, d’identité de flux de travail et mise à jour dynamique, consultez les rubriques suivantes.  
  
 [Contrôle de version de flux de travail](~/docs/framework/windows-workflow-foundation/whats-new-in-wf-in-dotnet.md)  
 Décrit les fonctionnalités de contrôle de version de workflow introduites dans [!INCLUDE[net_v45](~/includes/net-v45-md.md)].  
  
 [Mise à jour dynamique](~/docs/framework/windows-workflow-foundation/dynamic-update.md)  
 Décrit comment mettre à jour la définition de workflow d'une instance persistante de workflow à l'aide de la mise à jour dynamique.  
  
 [À l’aide de WorkflowApplication identité et contrôle de version](~/docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md)  
 Décrit comment utiliser <xref:System.Activities.WorkflowIdentity> pour héberger plusieurs versions d'un workflow côte à côte.  
  
 [Gestion de version côte à côte dans WorkflowServiceHost](~/docs/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost.md)  
 Décrit comment héberger plusieurs versions d'un workflow sur un point de terminaison unique.  
  
 [Guide pratique pour héberger plusieurs versions d’un workflow côte à côte](~/docs/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour d’une définition de workflow et l’hébergement de workflows à l’aide de la définition ancienne et nouvelle en même temps.  
  
 [Guide pratique pour mettre à jour la définition d’une instance de workflow en cours d’exécution](~/docs/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance.md)  
 Cette étape dans la [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour des instances de workflow persistantes pour utiliser une nouvelle définition de flux de travail.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>