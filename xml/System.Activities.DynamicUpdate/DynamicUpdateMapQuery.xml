<Type Name="DynamicUpdateMapQuery" FullName="System.Activities.DynamicUpdate.DynamicUpdateMapQuery">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f7afbfddf9009f226bf6327c309bc34957bef190" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53288809" /></Metadata><TypeSignature Language="C#" Value="public class DynamicUpdateMapQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicUpdateMapQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicUpdateMapQuery" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicUpdateMapQuery" />
  <TypeSignature Language="F#" Value="type DynamicUpdateMapQuery = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente une requête de carte de mise à jour dynamique.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe prend en charge la fonctionnalité de contrôle de version et de mise à jour dynamique de Windows Workflow Foundation. Pour plus d’informations sur le versioning de workflow, d’identité de flux de travail et de mise à jour dynamique, consultez les rubriques suivantes.  
  
 [Versioning de workflow](~/docs/framework/windows-workflow-foundation/whats-new-in-wf-in-dotnet.md)  
 Décrit les fonctionnalités de contrôle de version de workflow introduites dans [!INCLUDE[net_v45](~/includes/net-v45-md.md)].  
  
 [Mise à jour dynamique](~/docs/framework/windows-workflow-foundation/dynamic-update.md)  
 Décrit comment mettre à jour la définition de workflow d'une instance persistante de workflow à l'aide de la mise à jour dynamique.  
  
 [À l’aide de WorkflowApplication identité et contrôle de version](~/docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md)  
 Décrit comment utiliser <xref:System.Activities.WorkflowIdentity> pour héberger plusieurs versions d'un workflow côte à côte.  
  
 [Gestion de version côte à côte dans WorkflowServiceHost](~/docs/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost.md)  
 Décrit comment héberger plusieurs versions d'un workflow sur un point de terminaison unique.  
  
 [Guide pratique pour héberger plusieurs versions d’un workflow côte à côte](~/docs/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side.md)  
 Cette étape le [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour une définition de workflow et hébergement de workflows à l’aide de la définition de nouvelle et ancienne en même temps.  
  
 [Guide pratique pour mettre à jour la définition d’une instance de workflow en cours d’exécution](~/docs/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance.md)  
 Cette étape le [Getting Started Tutorial](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) illustre la mise à jour des instances de workflow persistantes pour utiliser une nouvelle définition de flux de travail.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanApplyUpdateWhileRunning">
      <MemberSignature Language="C#" Value="public bool CanApplyUpdateWhileRunning (System.Activities.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanApplyUpdateWhileRunning(class System.Activities.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.DynamicUpdateMapQuery.CanApplyUpdateWhileRunning(System.Activities.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanApplyUpdateWhileRunning(System::Activities::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="member this.CanApplyUpdateWhileRunning : System.Activities.Activity -&gt; bool" Usage="dynamicUpdateMapQuery.CanApplyUpdateWhileRunning activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">Action actuelle.</param>
        <summary>Spécifie si la <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" /> peut être mise à jour pendant l'exécution.</summary>
        <returns><see langword="true" /> si <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" /> peut être mis à jour pendant l'exécution ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindMatch">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recherche la correspondance avec <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindMatch">
      <MemberSignature Language="C#" Value="public System.Activities.Activity FindMatch (System.Activities.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Activity FindMatch(class System.Activities.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.DynamicUpdateMapQuery.FindMatch(System.Activities.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Activity ^ FindMatch(System::Activities::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="member this.FindMatch : System.Activities.Activity -&gt; System.Activities.Activity" Usage="dynamicUpdateMapQuery.FindMatch activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">Activité dans laquelle une correspondance doit être cherchée.</param>
        <summary>Recherche la correspondance avec <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" /> à l'aide des activités spécifiées.</summary>
        <returns>Correspondance pour l'activité.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMatch">
      <MemberSignature Language="C#" Value="public System.Activities.Variable FindMatch (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Variable FindMatch(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.DynamicUpdateMapQuery.FindMatch(System.Activities.Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Variable ^ FindMatch(System::Activities::Variable ^ variable);" />
      <MemberSignature Language="F#" Value="member this.FindMatch : System.Activities.Variable -&gt; System.Activities.Variable" Usage="dynamicUpdateMapQuery.FindMatch variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Variable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="variable">Variable dans laquelle rechercher une correspondance.</param>
        <summary>Recherche la correspondance avec <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" /> à l'aide de la variable spécifiée.</summary>
        <returns>Correspondance pour la variable.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>