<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Popup.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e8d5147905114d47d68c49aefe79779c5f0cb1fd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8d5147905114d47d68c49aefe79779c5f0cb1fd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>Represents a pop-up window that has content.</source>
          <target state="translated">Représente une fenêtre contextuelle qui a un contenu.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source><bpt id="p1">**</bpt>Content Model<ept id="p1">**</ept>:  <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> has one content property: <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.Child%2A&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Modèle de contenu<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> a une propriété de contenu : <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.Child%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> can have a maximum of one child, which can be any <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> peut avoir un maximum d’un seul enfant, qui peut être tout <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>The following illustration shows a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control that has a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> as its parent.</source>
          <target state="translated">L’illustration suivante montre un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contrôle qui a un <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> comme son parent.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source><bpt id="p1">![</bpt>Popup illustration<ept id="p1">]</ept><bpt id="p2">(~/add/media/popuppicture.JPG "</bpt>Popup illustration<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Illustration Popup<ept id="p1">]</ept><bpt id="p2">(~/add/media/popuppicture.JPG "</bpt>illustration Popup<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>You can position a popup by setting the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> properties.</source>
          <target state="translated">Vous pouvez positionner un popup en définissant le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, et <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>For more information, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Comportement de positionnement de Popup<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is displayed on the screen, it does not reposition itself if its parent is repositioned.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> est affiché dans l’écran, il ne se repositionne pas si son parent est repositionné.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> displays its content in its own window on the screen.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> affiche son contenu dans sa propre fenêtre sur l’écran.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control supports animation when the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph> and the application is running with full trust.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contrôle prend en charge l’animation lorsque la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> est définie sur <ph id="ph3">`true`</ph> et l’application s’exécute avec une confiance totale.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>An application that is running with full trust has complete access to system resources and is typically installed on the user's system.</source>
          <target state="translated">Une application qui s’exécute avec une confiance totale dispose d’un accès complet aux ressources système et est généralement installée sur le système de l’utilisateur.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>For more information, see<bpt id="p1">[</bpt>Security (WPF)<ept id="p1">](~/docs/framework/wpf/security-wpf.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez<bpt id="p1">[</bpt>sécurité (WPF)<ept id="p1">](~/docs/framework/wpf/security-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>For bitmap and opacity effects to appear on the content of a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>, you must set the effects directly on the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> content.</source>
          <target state="translated">Pour des effets bitmap et d’opacité apparaissent dans le contenu d’un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>, vous devez définir ces effets directement sur le <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contenu.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>The content of a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> does not inherit effects that are set on the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control or on any other element that is in the parent window.</source>
          <target state="translated">Le contenu d’un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> n’hérite pas d’effets qui sont définis sur le <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contrôler ou tout autre élément qui se trouve dans la fenêtre parente.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is sized to its content by default.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> son contenu a une taille par défaut.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>When this occurs, applying a <ph id="ph1">&lt;xref:System.Windows.UIElement.RenderTransform%2A&gt;</ph> or bitmap effects may cause the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> to be obscured.</source>
          <target state="translated">Lorsque cela se produit, appliquer un <ph id="ph1">&lt;xref:System.Windows.UIElement.RenderTransform%2A&gt;</ph> ou effets bitmap peut provoquer le <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> pour être masquées.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>This occurs because the default size of the content does not provide enough area for the effects to display.</source>
          <target state="translated">Cela se produit car la taille par défaut du contenu ne fournit pas assez d’espace pour l’affichage des effets.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>If more space is required, you can define a margin around the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> content to increase the area that is available to the control.</source>
          <target state="translated">Si davantage d’espace est requis, vous pouvez définir une marge autour du <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> pour augmenter la zone qui est disponible pour le contrôle de contenu.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Parent%2A&gt;</ph> property must be set on the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> when used in a <ph id="ph3">[!INCLUDE[TLA#tla_winfxwebapp](~/includes/tlasharptla-winfxwebapp-md.md)]</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Parent%2A&gt;</ph> propriété doit être définie sur le <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> lorsqu’il est utilisé dans un <ph id="ph3">[!INCLUDE[TLA#tla_winfxwebapp](~/includes/tlasharptla-winfxwebapp-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>To create a tooltip, use the <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.ToolTipService&gt;</ph> classes.</source>
          <target state="translated">Pour créer une info-bulle, utilisez la <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Controls.ToolTipService&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>For more information, see <bpt id="p1">[</bpt>ToolTip Overview<ept id="p1">](~/docs/framework/wpf/controls/tooltip-overview.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Vue d’ensemble de l’info-bulle<ept id="p1">](~/docs/framework/wpf/controls/tooltip-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Primitives.Popup">
          <source>The following example shows how to create a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</source>
          <target state="translated">L’exemple suivant montre comment créer un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>Gets or sets a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control can contain transparent content.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si un contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> peut contenir du contenu transparent.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control can contain transparent content; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le contrôle <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> peut contenir du contenu transparent ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control can only contain transparent content when the application runs with full trust.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contrôle peut uniquement contenir du contenu transparent lorsque l’application s’exécute avec une confiance totale.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>An application that runs with full trust has complete access to system resources and is typically installed on the local system.</source>
          <target state="translated">Une application qui s’exécute avec une confiance totale dispose d’un accès complet aux ressources système et est généralement installée sur le système local.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>For more information, see<bpt id="p1">[</bpt>Security (WPF)<ept id="p1">](~/docs/framework/wpf/security-wpf.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez<bpt id="p1">[</bpt>sécurité (WPF)<ept id="p1">](~/docs/framework/wpf/security-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>This property cannot be set to <ph id="ph1">`true`</ph> when the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is hosted in a <ph id="ph3">[!INCLUDE[TLA#tla_winfxwebapp](~/includes/tlasharptla-winfxwebapp-md.md)]</ph>.</source>
          <target state="translated">Cette propriété ne peut pas être définie sur <ph id="ph1">`true`</ph> lors de la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> est hébergé dans un <ph id="ph3">[!INCLUDE[TLA#tla_winfxwebapp](~/includes/tlasharptla-winfxwebapp-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> in an application that does not run in full trust, the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> property value is changed to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> est définie sur <ph id="ph2">`true`</ph> dans une application qui ne s’exécute pas avec une confiance totale, le <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> valeur de propriété est modifiée sur <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>An application that is hosted in a browser is an example of an application that does not run in full trust.</source>
          <target state="translated">Une application qui est hébergée dans un navigateur est un exemple d’une application qui ne s’exécute pas en mode confiance totale.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>None</source>
          <target state="translated">Aucun.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> property on a <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</source>
          <target state="translated">L’exemple suivant montre comment définir la <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> propriété sur un <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>for setting this property to <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Pour définir cette propriété sur <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifie la propriété de dépendance <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty">
          <source>The identifier for the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> dependency property.</source>
          <target state="translated">Identificateur de la propriété de dépendance <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty">
          <source><bpt id="p1">[</bpt>Dependency Properties Overview<ept id="p1">](~/docs/framework/wpf/advanced/dependency-properties-overview.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Vue d’ensemble des propriétés de dépendance<ept id="p1">](~/docs/framework/wpf/advanced/dependency-properties-overview.md)</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>Gets or sets the content of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Obtient ou définit le contenu du contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> content of the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Contenu <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> du contrôle <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source><bpt id="p1">**</bpt>Content Model<ept id="p1">**</ept>: The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Child%2A&gt;</ph> property is the only content property for the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</source>
          <target state="translated"><bpt id="p1">**</bpt>Modèle de contenu<ept id="p1">**</ept>: le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Child%2A&gt;</ph> propriété est la seule propriété de contenu pour le <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> can only have one <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> as a child, but that child can contain complex embedded content.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> peut posséder une seule <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> comme un enfant, mais cet enfant peut contenir contenu incorporé complexe.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>For example, the child can be a <ph id="ph1">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> that contains an <ph id="ph2">&lt;xref:System.Windows.Controls.Image&gt;</ph>, text, and other types of controls.</source>
          <target state="translated">Par exemple, l’enfant peut être un <ph id="ph1">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> qui contient un <ph id="ph2">&lt;xref:System.Windows.Controls.Image&gt;</ph>, texte et autres types de contrôles.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>When content is added to a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control becomes the logical parent to the content.</source>
          <target state="translated">Lorsque le contenu est ajouté à un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> (contrôle), le <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contrôle devient le parent logique du contenu.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>Similarly, the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> content is considered to be the logical child of the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">De même, la <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contenu est considéré comme l’enfant logique de la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>The child content is not added to the visual tree that contains the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</source>
          <target state="translated">Le contenu enfant n’est pas ajouté à l’arborescence d’éléments visuels qui contient le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>Instead, the child content is rendered in a separate window with its own visual tree when the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Au lieu de cela, le contenu enfant est restitué dans une fenêtre distincte avec sa propre visual arborescence lorsque le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> a la valeur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>None</source>
          <target state="translated">Aucun.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Child">
          <source>The following example shows how to add content to a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</source>
          <target state="translated">L’exemple suivant montre comment ajouter du contenu à un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.ChildProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.Child" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifie la propriété de dépendance <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.Child" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.Primitives.Popup.Closed">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> property changes to <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Se produit lorsque la valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> devient <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.Popup.Closed">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is opened and closed by toggling the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> property.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> est ouvert et fermé en basculant le <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.Popup.Closed">
          <source>The following example shows how to define an event handler for the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Closed&gt;</ph> event.</source>
          <target state="translated">L’exemple suivant montre comment définir un gestionnaire d’événements pour le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Closed&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> to which to add child content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> auquel le contenu enfant doit être ajouté.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> child content.</source>
          <target state="translated">Contenu enfant <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>Attaches a child element to a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Joint un élément enfant à un contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>You might want to create a custom control that has the same functionality as an existing control and also exhibits the behavior of a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">Vous souhaiterez peut-être créer un contrôle personnalisé qui a les mêmes fonctionnalités qu’un contrôle existant et présente également le comportement d’un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>You can make your control behave like a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> by adding a <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> to your control and calling the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.CreateRootPopup%2A&gt;</ph> method.</source>
          <target state="translated">Vous pouvez rendre votre contrôle se comportent comme une <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> en ajoutant un <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> sur votre contrôle et en appelant le <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.CreateRootPopup%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>This method assigns <ph id="ph1">`child`</ph> to the child property and binds the following properties to <ph id="ph2">`child`</ph>.</source>
          <target state="translated">Cette méthode attribue <ph id="ph1">`child`</ph> à la propriété enfant et lie les propriétés suivantes pour <ph id="ph2">`child`</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>You should implement these as dependency properties in your control so it can be used the same way as a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">Vous devez implémenter ces comme propriétés de dépendance dans votre contrôle, il peut être utilisé comme un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Dependency Properties<ept id="p1">](~/docs/framework/wpf/advanced/custom-dependency-properties.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Propriétés de dépendance personnalisées<ept id="p1">](~/docs/framework/wpf/advanced/custom-dependency-properties.md)</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>When you call <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.CreateRootPopup%2A&gt;</ph>, <ph id="ph2">`child`</ph> cannot be a child of a <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
          <target state="translated">Lorsque vous appelez <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.CreateRootPopup%2A&gt;</ph>, <ph id="ph2">`child`</ph> ne peut pas être un enfant d’un <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
          <source>Also, <ph id="ph1">`PlacementTarget`</ph> should be set on your control before you call this method.</source>
          <target state="translated">En outre, <ph id="ph1">`PlacementTarget`</ph> doit être défini sur votre contrôle avant d’appeler cette méthode.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
          <source>Gets or sets a delegate handler method that positions the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Obtient ou définit une méthode de gestionnaire délégué qui positionne le contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /&gt;</ph> delegate method that provides placement information for the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Méthode déléguée <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /&gt;</ph> qui fournit des informations de positionnement pour le contrôle <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
          <source>None</source>
          <target state="translated">Aucun.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
          <source>The following example shows how to set a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback%2A&gt;</ph> delegate.</source>
          <target state="translated">L’exemple suivant montre comment définir un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback%2A&gt;</ph> déléguer.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifie la propriété de dépendance <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.GetUIParentCore">
          <source>Returns the logical parent of a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</source>
          <target state="translated">Retourne le parent logique d'un <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.GetUIParentCore">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> does not have a defined parent and the <ph id="ph2">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /&gt;</ph> is not <ph id="ph3">&lt;see langword="null" /&gt;</ph>, the <ph id="ph4">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /&gt;</ph> is returned.</source>
          <target state="translated">Si le <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> n'a pas de parent défini et que le <ph id="ph2">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /&gt;</ph> n'est pas <ph id="ph3">&lt;see langword="null" /&gt;</ph>, le <ph id="ph4">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /&gt;</ph> est retourné.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.GetUIParentCore">
          <source>Otherwise, the return values are the same as <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.GetUIParentCore" /&gt;</ph>.</source>
          <target state="translated">Sinon, les valeurs de retour sont les mêmes que <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.GetUIParentCore" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
          <source>Gets a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> is displayed with a drop shadow effect.</source>
          <target state="translated">Obtient une valeur qui indique si un <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> est affiché avec un effet d'ombre portée.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> is displayed with a drop shadow; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> est affiché avec une ombre portée ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
          <source>A drop shadow effect displays when the <ph id="ph1">&lt;xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A?displayProperty=nameWithType&gt;</ph> property are set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Un effet d’ombre portée s’affiche lorsque le <ph id="ph1">&lt;xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType&gt;</ph> propriété et la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A?displayProperty=nameWithType&gt;</ph> propriété la valeur <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
          <source>None</source>
          <target state="translated">Aucun.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
          <source>The following example shows how to get the value of the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple suivant montre comment obtenir la valeur de la <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.HasDropShadow" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifie la propriété de dépendance <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.HasDropShadow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty">
          <source>The identifier for the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A&gt;</ph> dependency property.</source>
          <target state="translated">Identificateur de la propriété de dépendance <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty">
          <source><bpt id="p1">[</bpt>Dependency Properties Overview<ept id="p1">](~/docs/framework/wpf/advanced/dependency-properties-overview.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Vue d’ensemble des propriétés de dépendance<ept id="p1">](~/docs/framework/wpf/advanced/dependency-properties-overview.md)</ept></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>Get or sets the horizontal distance between the target origin and the popup alignment point.</source>
          <target state="translated">Obtient ou définit la distance horizontale entre l'origine de la cible et le point d'alignement de la fenêtre contextuelle.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>The horizontal distance between the target origin and the popup alignment point.</source>
          <target state="translated">Distance horizontale entre l'origine de la cible et le point d'alignement du menu contextuel.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>For information about the target origin and popup alignment point, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur le point d’alignement de fenêtre contextuelle et d’origine cible, consultez <bpt id="p1">[</bpt>comportement de positionnement Popup<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>The default is 0.</source>
          <target state="translated">La valeur par défaut est 0.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>You can position a popup by setting the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> properties.</source>
          <target state="translated">Vous pouvez positionner un popup en définissant le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, et <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>For more information, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Comportement de positionnement de Popup<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>None</source>
          <target state="translated">Aucun.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>XAML Attribute Usage</source>
          <target state="translated">Utilisation d'attributs XAML</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>XAML Values</source>
          <target state="translated">Valeurs XAML</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>A string representation of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">Une représentation sous forme de chaîne d’un <ph id="ph1">&lt;xref:System.Double&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>This is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">Ceci est interprété comme un <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> mesure.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>Strings do not have to explicitly include decimal points.</source>
          <target state="translated">Chaînes n’ont pas inclure explicitement des décimales.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>For example, a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">Par exemple, une valeur de <ph id="ph1">`1`</ph> est acceptable.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>The same <ph id="ph1">&lt;xref:System.Double&gt;</ph> range restrictions apply as those that are mentioned in the Property Value section of this topic.</source>
          <target state="translated">Le même <ph id="ph1">&lt;xref:System.Double&gt;</ph> applique des restrictions que celles qui sont mentionnés dans la section de la valeur de la propriété de cette rubrique.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>A <ph id="ph1">`double`</ph> value as described earlier in this table, followed by one of the following unit declaration strings: <ph id="ph2">`px`</ph>, <ph id="ph3">`in`</ph>, <ph id="ph4">`cm`</ph>, or <ph id="ph5">`pt`</ph>.</source>
          <target state="translated">A <ph id="ph1">`double`</ph> valeur comme décrit précédemment dans ce tableau, suivie d’une des chaînes de déclaration d’unité suivantes : <ph id="ph2">`px`</ph>, <ph id="ph3">`in`</ph>, <ph id="ph4">`cm`</ph>, ou <ph id="ph5">`pt`</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></source>
          <target state="translated"><ph id="ph1">`px`</ph> (valeur par défaut) est <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source><ph id="ph1">`in`</ph> is inches; 1in=96px</source>
          <target state="translated"><ph id="ph1">`in`</ph> pouces ; 1 = 96px</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source><ph id="ph1">`cm`</ph> is centimeters; 1cm=(96/2.54) px</source>
          <target state="translated"><ph id="ph1">`cm`</ph> centimètres ; 1cm=(96/2.54) px</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source><ph id="ph1">`pt`</ph> is points; 1pt=(96/72) px</source>
          <target state="translated"><ph id="ph1">`pt`</ph> correspond à points ; 1pt=(96/72) px</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A&gt;</ph> properties to 20.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> et définit les <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A&gt;</ph> 20 aux propriétés.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Bottom&gt;</ph> (which is the default), so the target origin is the bottom left corner of the target area and the popup alignment point is the top left corner of the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> est définie sur <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Bottom&gt;</ph> (qui est la valeur par défaut), afin que l’origine de la cible est l’angle inférieur gauche de la zone cible et le point d’alignement est l’angle supérieur gauche de la <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifie la propriété de dépendance <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> is visible.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si le <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> est visible.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> is visible; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> est visible ; <ph id="ph3">&lt;see langword="false" /&gt;</ph> dans le cas contraire.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source>If a control uses a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> as part of its default style, bind the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> to a property of the control.</source>
          <target state="translated">Si un contrôle utilise un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> dans le cadre de son style par défaut, vous devez lier le <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> propriété de la <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> à une propriété du contrôle.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph> can bind its <ph id="ph2">&lt;xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A&gt;</ph> property to the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">Par exemple, un <ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph> peut lier son <ph id="ph2">&lt;xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A&gt;</ph> propriété le <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> propriété de la <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source>This simplifies the logic for controlling when the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is visible.</source>
          <target state="translated">Cela simplifie la logique pour le contrôle lorsque le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> est visible.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.IsOpen">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> property.</source>
          <target state="translated">L'exemple suivant indique comment définir la propriété <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.IsOpenProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifie la propriété de dépendance <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
          <source>Gets an enumerator that you can use to access the logical child elements of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Obtient un énumérateur que vous pouvez utiliser pour accéder aux éléments enfants logiques du contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that you can use to access the logical child elements of a <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Énumérateur <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> que vous pouvez utiliser pour accéder aux éléments enfants logiques d'un contrôle <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
          <source>When you add content to a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control becomes the logical parent to the content.</source>
          <target state="translated">Lorsque vous ajoutez du contenu à un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> (contrôle), le <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contrôle devient le parent logique du contenu.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
          <source>Similarly, the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> content is considered to be the logical child of the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">De même, la <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contenu est considéré comme l’enfant logique de la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
          <source>The child content is not added to the visual tree that contains the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</source>
          <target state="translated">Le contenu enfant n’est pas ajouté à l’arborescence d’éléments visuels qui contient le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
          <source>Instead, the child content is rendered in a separate window that has its own visual tree when the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Au lieu de cela, le contenu enfant est restitué dans une fenêtre distincte qui a son propre visual arborescence lorsque le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> est définie sur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)">
          <source>The available size that this element can give to the child.</source>
          <target state="translated">Taille disponible que cet élément peut donner à l'enfant.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)">
          <source>You can use infinity as a value to indicate that the element can size to whatever content is available.</source>
          <target state="translated">Vous pouvez utiliser l'infini comme valeur pour indiquer que l'élément ajuste sa taille en fonction du contenu disponible.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)">
          <source>Determines the required size of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> content within the visual tree of the logical parent.</source>
          <target state="translated">Détermine la taille requise du contenu <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> dans l'arborescence d'éléments visuels du parent logique.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure that has the <ph id="ph2">&lt;see cref="P:System.Windows.Size.Height" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Size.Width" /&gt;</ph> properties both equal to zero (0).</source>
          <target state="translated">Structure <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> dont les propriétés <ph id="ph2">&lt;see cref="P:System.Windows.Size.Height" /&gt;</ph> et <ph id="ph3">&lt;see cref="P:System.Windows.Size.Width" /&gt;</ph> sont égales à zéro (0).</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)">
          <source>This method always returns a <ph id="ph1">&lt;xref:System.Windows.Size&gt;</ph> that has a width and height of zero (0), because <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> content is not located in the visual tree of its logical parent or <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne toujours un <ph id="ph1">&lt;xref:System.Windows.Size&gt;</ph> qui a une largeur et une hauteur de zéro (0), car <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contenu ne se trouve pas dans l’arborescence d’éléments visuels de son parent logique ou <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)">
          <source>The child content is created in a different window that has its own visual tree.</source>
          <target state="translated">Le contenu enfant est créé dans une autre fenêtre qui a son propre arborescence d’éléments visuels.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnClosed(System.EventArgs)">
          <source>The event data.</source>
          <target state="translated">Données d'événement.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnClosed(System.EventArgs)">
          <source>Responds when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> property changes from to <ph id="ph2">&lt;see langword="true" /&gt;</ph> to <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Répond lorsque la valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> passe de <ph id="ph2">&lt;see langword="true" /&gt;</ph> à <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnOpened(System.EventArgs)">
          <source>The event arguments.</source>
          <target state="translated">Arguments des événements.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnOpened(System.EventArgs)">
          <source>Responds to the condition in which the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> property changes from <ph id="ph2">&lt;see langword="false" /&gt;</ph> to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Répond à la condition selon laquelle la valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> passe de <ph id="ph2">&lt;see langword="false" /&gt;</ph> à <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>The event data.</source>
          <target state="translated">Données d'événement.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>Provides class handling for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /&gt;</ph> event.</source>
          <target state="translated">Fournit la gestion de classe pour l’événement <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>This implementation makes sure that a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> closes when a mouse event occurs outside the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> when the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> property is set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Cette implémentation permet de s’assurer qu’un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> se ferme lorsqu’un événement de souris se produit en dehors de la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> lors de la <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> est définie sur <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>The event data.</source>
          <target state="translated">Données d'événement.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>Provides class handling for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /&gt;</ph> event.</source>
          <target state="translated">Fournit la gestion de classe pour l’événement <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>This implementation makes sure that a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> closes when a mouse event occurs outside the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> when the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> property is set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Cette implémentation permet de s’assurer qu’un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> se ferme lorsqu’un événement de souris se produit en dehors de la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> lors de la <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> est définie sur <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>The event data.</source>
          <target state="translated">Données d'événement.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>Provides class handling for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /&gt;</ph> event.</source>
          <target state="translated">Fournit la gestion de classe pour l’événement <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <source>This implementation makes sure that a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> closes when a mouse event occurs outside the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> when the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> property is set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Cette implémentation permet de s’assurer qu’un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> se ferme lorsqu’un événement de souris se produit en dehors de la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> lors de la <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> est définie sur <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>The event data.</source>
          <target state="translated">Données d'événement.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>Provides class handling for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /&gt;</ph> event.</source>
          <target state="translated">Fournit la gestion de classe pour l’événement <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <source>This implementation makes sure that a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> closes when a mouse event occurs outside the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> when the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> property is set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Cette implémentation permet de s’assurer qu’un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> se ferme lorsqu’un événement de souris se produit en dehors de la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> lors de la <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> est définie sur <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.Primitives.Popup.Opened">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> property changes to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se produit lorsque la valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> devient <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.Popup.Opened">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is opened and closed by toggling the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> property.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> est ouvert et fermé en basculant le <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.Primitives.Popup.Opened">
          <source>The following example shows how to define an event handler for the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Opened&gt;</ph> event.</source>
          <target state="translated">L’exemple suivant montre comment définir un gestionnaire d’événements pour le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Opened&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>Gets or sets the orientation of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control when the control opens, and specifies the behavior of the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control when it overlaps screen boundaries.</source>
          <target state="translated">Obtient ou définit l'orientation du contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> à son ouverture et spécifie comment <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> se comporte en cas de dépassement des limites de l'écran.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.PlacementMode" /&gt;</ph> enumeration value that determines the orientation of the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control when the control opens, and that specifies how the control interacts with screen boundaries.</source>
          <target state="translated">Valeur d'énumération <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.PlacementMode" /&gt;</ph> qui détermine l'orientation du contrôle <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> à son ouverture et qui spécifie comment ce dernier interagit avec les limites d'écran.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Controls.Primitives.PlacementMode.Bottom" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see cref="F:System.Windows.Controls.Primitives.PlacementMode.Bottom" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>You can position a popup by setting the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> properties.</source>
          <target state="translated">Vous pouvez positionner un popup en définissant le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, et <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>For more information, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Comportement de positionnement de Popup<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.SystemParameters.MenuDropAlignment%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, setting <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> to <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Left&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Right&gt;</ph> reverses the position of the <ph id="ph6">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>; a <ph id="ph7">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> with <ph id="ph8">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> set to <ph id="ph9">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Left&gt;</ph> aligns its left edge with the right edge of <ph id="ph10">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph> and a <ph id="ph11">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> with <ph id="ph12">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> set to <ph id="ph13">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Right&gt;</ph> aligns its right edge with the left edge of <ph id="ph14">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Windows.SystemParameters.MenuDropAlignment%2A&gt;</ph> propriété est <ph id="ph2">`true`</ph>, le paramètre <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> à <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Left&gt;</ph> ou <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Right&gt;</ph> inverse la position de la <ph id="ph6">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>; un <ph id="ph7">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> avec <ph id="ph8">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> la valeur <ph id="ph9">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Left&gt;</ph> aligne son bord gauche avec le droit de <ph id="ph10">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph> et un <ph id="ph11">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> avec <ph id="ph12">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> la valeur <ph id="ph13">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Right&gt;</ph> aligne son bord droit avec le bord gauche de <ph id="ph14">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>None</source>
          <target state="translated">Aucun.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>The following example creates four <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> controls that are relative to an image.</source>
          <target state="translated">L’exemple suivant crée quatre <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contrôles qui sont par rapport à une image.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.Placement">
          <source>Each <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> has a different value for the placement property.</source>
          <target state="translated">Chaque <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> a une valeur différente pour la propriété de positionnement.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.PlacementProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.Placement" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifie la propriété de dépendance <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.Placement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>Gets or sets the rectangle relative to which the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control is positioned when it opens.</source>
          <target state="translated">Obtient ou définit le rectangle par rapport auquel le contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> est positionné à son ouverture.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>The rectangle that is used to position the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Rectangle utilisé pour positionner le contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>You can position a popup by setting the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> properties.</source>
          <target state="translated">Vous pouvez positionner un popup en définissant le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, et <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>For more information, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Comportement de positionnement de Popup<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>None</source>
          <target state="translated">Aucun.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">L’exemple suivant définit la <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph> propriété d’un <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> properties of the <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph> are 50, 50, 50, and 100, respectively.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, et <ph id="ph4">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> propriétés de la <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph> sont de 50, 50, 50 et 100, respectivement.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> is relative to the bounds of the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph> property.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> est aux limites de la <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
          <source>Note that the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph> property does not create a visible element in the application; the example creates a <ph id="ph2">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> with the same bounds to represent the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>.</source>
          <target state="translated">Notez que la <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph> propriété ne crée pas d’élément visible dans l’application ; dans l’exemple crée un <ph id="ph2">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> avec les mêmes limites pour représenter le <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifie la propriété de dépendance <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>Gets or sets the element relative to which the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> is positioned when it opens.</source>
          <target state="translated">Obtient ou définit l'élément par rapport auquel le contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> est positionné à son ouverture.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> that is the logical parent of the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> qui est le parent logique du contrôle <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>You can position a popup by setting the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> properties.</source>
          <target state="translated">Vous pouvez positionner un popup en définissant le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, et <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>For more information, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Comportement de positionnement de Popup<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>None</source>
          <target state="translated">Aucun.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> that is the child of a <ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, and sets <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph> to <ph id="ph4">`ellipse1`</ph>, so the popup is relative to the <ph id="ph5">&lt;xref:System.Windows.Shapes.Ellipse&gt;</ph>.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> qui est l’enfant d’un <ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>et définit <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph> à <ph id="ph4">`ellipse1`</ph>, de sorte que la fenêtre contextuelle est relatif à la <ph id="ph5">&lt;xref:System.Windows.Shapes.Ellipse&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.PlacementTargetProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifie la propriété de dépendance <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>Gets or sets an animation for the opening and closing of a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Obtient ou définit une animation pour l'ouverture et la fermeture d'un contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.PopupAnimation" /&gt;</ph> enumeration value that defines an animation to open and close a <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated">Valeur d'énumération <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.PopupAnimation" /&gt;</ph> qui définit une animation pour ouvrir et fermer un contrôle <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Controls.Primitives.PopupAnimation.None" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see cref="F:System.Windows.Controls.Primitives.PopupAnimation.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> can only animate when the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> peut être animé seulement quand le <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A&gt;</ph> est définie sur <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>This requires the application that creates the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control to run with full trust.</source>
          <target state="translated">Cela requiert l’application qui crée le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contrôle s’exécute avec une confiance totale.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph> is animated, the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> will not be animated.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph> est animée, le <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> ne sont pas animées.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>None</source>
          <target state="translated">Aucun.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PopupAnimation%2A&gt;</ph> property.</source>
          <target state="translated">L'exemple suivant indique comment définir la propriété <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PopupAnimation%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.PopupAnimationProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifie la propriété de dépendance <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control closes when the control is no longer in focus.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si le contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> se ferme lorsqu'il perd le focus.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control closes when <ph id="ph3">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> property is set to <ph id="ph4">&lt;see langword="false" /&gt;</ph>; <ph id="ph5">&lt;see langword="false" /&gt;</ph> if the <ph id="ph6">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control closes when a mouse or keyboard event occurs outside the <ph id="ph7">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le contrôle <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> se ferme lorsque la propriété <ph id="ph3">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /&gt;</ph> a la valeur <ph id="ph4">&lt;see langword="false" /&gt;</ph> ; <ph id="ph5">&lt;see langword="false" /&gt;</ph> si le contrôle <ph id="ph6">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph> se ferme lorsqu'un événement de souris ou de clavier se produit à l'extérieur du contrôle <ph id="ph7">&lt;see cref="T:System.Windows.Controls.Primitives.Popup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> stays open until it is explicitly closed by setting the <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> property to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> est définie sur <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> reste ouverte jusqu'à ce qu’il est fermé explicitement en définissant le <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A&gt;</ph> propriété <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control intercepts all mouse and keyboard events to determine when one of these events occurs outside the <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> est <ph id="ph2">`false`</ph>, le <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contrôle intercepte tous les événements de souris et clavier pour déterminer quand un de ces événements se produit en dehors de la <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source>None</source>
          <target state="translated">Aucun.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph> property.</source>
          <target state="translated">L'exemple suivant indique comment définir la propriété <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.StaysOpenProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifie la propriété de dépendance <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild(System.Object)">
          <source>An object to add as a child.</source>
          <target state="translated">Objet à ajouter comme enfant.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild(System.Object)">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Ce membre prend en charge l’infrastructure <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> et n’est pas destiné à être directement utilisé à partir de votre code.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText(System.String)">
          <source>A string to add to the object.</source>
          <target state="translated">Chaîne à ajouter à l'objet.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText(System.String)">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Ce membre prend en charge l’infrastructure <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> et n’est pas destiné à être directement utilisé à partir de votre code.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>Gets or sets the vertical distance between the target origin and the popup alignment point.</source>
          <target state="translated">Obtient ou définit la distance verticale entre l'origine de la cible et le point d'alignement de la fenêtre contextuelle.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>The vertical distance between the target origin and the popup alignment point.</source>
          <target state="translated">Distance verticale entre l'origine de la cible et le point d'alignement du menu contextuel.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>For information about the target origin and popup alignment point, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur le point d’alignement de fenêtre contextuelle et d’origine cible, consultez <bpt id="p1">[</bpt>comportement de positionnement Popup<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>The default is 0.</source>
          <target state="translated">La valeur par défaut est 0.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>You can position a popup by setting the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> properties.</source>
          <target state="translated">Vous pouvez positionner un popup en définissant le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph>, et <ph id="ph5">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>For more information, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Comportement de positionnement de Popup<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>XAML Attribute Usage</source>
          <target state="translated">Utilisation d'attributs XAML</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>XAML Values</source>
          <target state="translated">Valeurs XAML</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>A string representation of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">Une représentation sous forme de chaîne d’un <ph id="ph1">&lt;xref:System.Double&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>This is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">Ceci est interprété comme un <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> mesure.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>Strings do not have to explicitly include decimal points.</source>
          <target state="translated">Chaînes n’ont pas inclure explicitement des décimales.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>For example, a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">Par exemple, une valeur de <ph id="ph1">`1`</ph> est acceptable.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>The same <ph id="ph1">&lt;xref:System.Double&gt;</ph> range restrictions apply as those that are mentioned in the Property Value section of this topic.</source>
          <target state="translated">Le même <ph id="ph1">&lt;xref:System.Double&gt;</ph> applique des restrictions que celles qui sont mentionnés dans la section de la valeur de la propriété de cette rubrique.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>A <ph id="ph1">`double`</ph> value as described earlier in this table, followed by one of the following unit declaration strings: <ph id="ph2">`px`</ph>, <ph id="ph3">`in`</ph>, <ph id="ph4">`cm`</ph>, or <ph id="ph5">`pt`</ph>.</source>
          <target state="translated">A <ph id="ph1">`double`</ph> valeur comme décrit précédemment dans ce tableau, suivie d’une des chaînes de déclaration d’unité suivantes : <ph id="ph2">`px`</ph>, <ph id="ph3">`in`</ph>, <ph id="ph4">`cm`</ph>, ou <ph id="ph5">`pt`</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></source>
          <target state="translated"><ph id="ph1">`px`</ph> (valeur par défaut) est <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source><ph id="ph1">`in`</ph> is inches; 1in=96px</source>
          <target state="translated"><ph id="ph1">`in`</ph> pouces ; 1 = 96px</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source><ph id="ph1">`cm`</ph> is centimeters; 1cm=(96/2.54) px</source>
          <target state="translated"><ph id="ph1">`cm`</ph> centimètres ; 1cm=(96/2.54) px</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source><ph id="ph1">`pt`</ph> is points; 1pt=(96/72) px</source>
          <target state="translated"><ph id="ph1">`pt`</ph> correspond à points ; 1pt=(96/72) px</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>Dependency Property Information</source>
          <target state="translated">Informations sur les propriétés de dépendance</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>Identifier field</source>
          <target state="translated">Champ d’identificateur</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">La valeur des propriétés de métadonnées <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>None</source>
          <target state="translated">Aucun.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A&gt;</ph> properties to 20.</source>
          <target state="translated">L’exemple suivant crée un <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> et définit les <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A&gt;</ph> 20 aux propriétés.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Bottom&gt;</ph> (which is the default), so the target origin is the bottom left corner of the target area, and the popup alignment point is the top left corner of the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup.Placement%2A&gt;</ph> est définie sur <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Bottom&gt;</ph> (qui est la valeur par défaut), afin que l’origine de la cible est l’angle inférieur gauche de la zone cible et le point d’alignement est l’angle supérieur gauche de la <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifie la propriété de dépendance <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>