<Type Name="ButtonBase" FullName="System.Windows.Controls.Primitives.ButtonBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="13e555cd2ed8ffe1e34cbc976d8ddc082c6bce0a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ButtonBase : System.Windows.Controls.ContentControl, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ButtonBase extends System.Windows.Controls.ContentControl implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ButtonBase&#xA;Inherits ContentControl&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonBase abstract : System::Windows::Controls::ContentControl, System::Windows::Input::ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Button)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d77b9-101">Représente la classe de base pour tous les contrôles <see cref="T:System.Windows.Controls.Button" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d77b9-101">Represents the base class for all <see cref="T:System.Windows.Controls.Button" /> controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77b9-102">Gérer les <xref:System.Windows.Controls.Primitives.ButtonBase.Click> événement répondre quand l’utilisateur clique sur un <xref:System.Windows.Controls.Primitives.ButtonBase>.</span><span class="sxs-lookup"><span data-stu-id="d77b9-102">Handle the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event to respond when the user clicks a <xref:System.Windows.Controls.Primitives.ButtonBase>.</span></span> <span data-ttu-id="d77b9-103">L’utilisateur peut déclencher la <xref:System.Windows.Controls.Primitives.ButtonBase.Click> événements en utilisant un <xref:System.Windows.Controls.AccessText> ou en appuyant sur entrée ou espace lorsque le contrôle a le focus.</span><span class="sxs-lookup"><span data-stu-id="d77b9-103">The user can raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.</span></span>  <span data-ttu-id="d77b9-104">Lorsque l’utilisateur appuie sur la barre d’espace, les jeux de contrôles <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> à `true` et capture la souris.</span><span class="sxs-lookup"><span data-stu-id="d77b9-104">When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.</span></span>  <span data-ttu-id="d77b9-105">Par conséquent, le contrôle déclenche les événements de souris comme <xref:System.Windows.UIElement.MouseEnter> et <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="d77b9-105">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="d77b9-106">Notez que l’utilisation du <xref:System.Windows.Controls.AccessText> ou entrée ne change pas <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> ou capturer la souris, mais elle déclenche le <xref:System.Windows.Controls.Primitives.ButtonBase.Click> événement.</span><span class="sxs-lookup"><span data-stu-id="d77b9-106">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="d77b9-107">Le <xref:System.Windows.Controls.Primitives.ButtonBase> définit le <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> propriété attachée `true`.</span><span class="sxs-lookup"><span data-stu-id="d77b9-107">The <xref:System.Windows.Controls.Primitives.ButtonBase> sets the <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> attached property to `true`.</span></span>  
  
 <span data-ttu-id="d77b9-108">Le <xref:System.Windows.Controls.Primitives.ButtonBase> définit le <xref:System.Windows.UIElement.IsInputMethodEnabled%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="d77b9-108">The <xref:System.Windows.Controls.Primitives.ButtonBase> sets the <xref:System.Windows.UIElement.IsInputMethodEnabled%2A> property to `false`.</span></span>  
  
 <span data-ttu-id="d77b9-109">A <xref:System.Windows.Controls.Primitives.ButtonBase> est un <xref:System.Windows.Controls.ContentControl>, ce qui signifie qu’il peut contenir un seul objet de tout type (par exemple, une chaîne, une image ou un panneau de configuration).</span><span class="sxs-lookup"><span data-stu-id="d77b9-109">A <xref:System.Windows.Controls.Primitives.ButtonBase> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="d77b9-110">Pour plus d'informations, consultez la classe <xref:System.Windows.Controls.ContentControl>.</span><span class="sxs-lookup"><span data-stu-id="d77b9-110">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ButtonBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ButtonBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d77b9-111">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Controls.Primitives.ButtonBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-111">Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.ButtonBase.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d77b9-112">Se produit lorsque l'utilisateur clique sur un <see cref="T:System.Windows.Controls.Button" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-112">Occurs when a <see cref="T:System.Windows.Controls.Button" /> is clicked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77b9-113">L’utilisateur peut déclencher la <xref:System.Windows.Controls.Primitives.ButtonBase.Click> événements en utilisant un <xref:System.Windows.Controls.AccessText> ou en appuyant sur entrée ou espace lorsque le contrôle a le focus.</span><span class="sxs-lookup"><span data-stu-id="d77b9-113">The user can raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.</span></span>  <span data-ttu-id="d77b9-114">Lorsque l’utilisateur appuie sur la barre d’espace, les jeux de contrôles <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> à `true` et capture la souris.</span><span class="sxs-lookup"><span data-stu-id="d77b9-114">When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.</span></span>  <span data-ttu-id="d77b9-115">Par conséquent, le contrôle déclenche les événements de souris comme <xref:System.Windows.UIElement.MouseEnter> et <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="d77b9-115">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="d77b9-116">Notez que l’utilisation du <xref:System.Windows.Controls.AccessText> ou entrée ne change pas <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> ou capturer la souris, mais elle déclenche le <xref:System.Windows.Controls.Primitives.ButtonBase.Click> événement.</span><span class="sxs-lookup"><span data-stu-id="d77b9-116">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="d77b9-117">Le <xref:System.Windows.Controls.Primitives.ButtonBase> marques le <xref:System.Windows.UIElement.MouseLeftButtonDown> événement comme géré dans le <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> (méthode) et déclenche le <xref:System.Windows.Controls.Primitives.ButtonBase.Click> événement.</span><span class="sxs-lookup"><span data-stu-id="d77b9-117">The <xref:System.Windows.Controls.Primitives.ButtonBase> marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled in the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> method and raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span> <span data-ttu-id="d77b9-118">Par conséquent, le <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> événement ne se produit jamais pour un contrôle qui hérite de <xref:System.Windows.Controls.Primitives.ButtonBase>.</span><span class="sxs-lookup"><span data-stu-id="d77b9-118">Hence, the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> event will never occur for a control that inherits from <xref:System.Windows.Controls.Primitives.ButtonBase>.</span></span> <span data-ttu-id="d77b9-119">Au lieu de cela, attachez un gestionnaire d’événements pour le <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> événement ou appel <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> avec `handledEventsToo` la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="d77b9-119">Instead, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
<a name="routedEventInfo_Click"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="d77b9-120">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="d77b9-120">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d77b9-121">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="d77b9-121">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickEvent>|  
|<span data-ttu-id="d77b9-122">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="d77b9-122">Routing strategy</span></span>|<span data-ttu-id="d77b9-123">Propagation</span><span class="sxs-lookup"><span data-stu-id="d77b9-123">Bubbling</span></span>|  
|<span data-ttu-id="d77b9-124">délégué</span><span class="sxs-lookup"><span data-stu-id="d77b9-124">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="d77b9-125">L’exemple suivant montre trois boutons qui répondent aux clics de trois façons différentes.</span><span class="sxs-lookup"><span data-stu-id="d77b9-125">The following example shows three buttons that respond to clicks in three different ways.</span></span>  
  
-   <span data-ttu-id="d77b9-126">Pointage - le premier bouton modifie les couleurs lorsque l’utilisateur pointe la souris sur le bouton</span><span class="sxs-lookup"><span data-stu-id="d77b9-126">Hover - the first button changes colors when the user hovers with the mouse over the button</span></span>  
  
-   <span data-ttu-id="d77b9-127">Appuyez sur - le deuxième bouton requiert que la souris est enfoncé alors que le pointeur de la souris est sur le bouton.</span><span class="sxs-lookup"><span data-stu-id="d77b9-127">Press - the second button requires that the mouse be pressed while the mouse pointer is in the button.</span></span>  
  
-   <span data-ttu-id="d77b9-128">Version - la troisième ne réinitialise pas la couleur d’arrière-plan des boutons jusqu'à ce que la souris est enfoncée et relâchée sur le bouton.</span><span class="sxs-lookup"><span data-stu-id="d77b9-128">Release - the third does not reset the background color of the buttons until the mouse is pressed and released in the button.</span></span>  
  
 [!code-xaml[ClickModes_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml#1)]  
  
 [!code-csharp[ClickModes_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml.cs#2)]
 [!code-vb[ClickModes_snip#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClickModes_snip/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClickEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClickEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.ClickEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClickEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d77b9-129">Identifie l'événement acheminé <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-129">Identifies the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77b9-130">Cet événement correspond à un clic du bouton gauche de la souris.</span><span class="sxs-lookup"><span data-stu-id="d77b9-130">This event corresponds to a left mouse button click.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ClickMode ClickMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ClickMode ClickMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ClickMode As ClickMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ClickMode ClickMode { System::Windows::Controls::ClickMode get(); void set(System::Windows::Controls::ClickMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ClickMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d77b9-131">Obtient ou définit le moment auquel l'événement <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-131">Gets or sets when the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d77b9-132">Lorsque l'événement <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-132">When the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs.</span>
          </span>
          <span data-ttu-id="d77b9-133">La valeur par défaut est <see cref="F:System.Windows.Controls.ClickMode.Release" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-133">The default value is <see cref="F:System.Windows.Controls.ClickMode.Release" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_ClickMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="d77b9-134">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="d77b9-134">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d77b9-135">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="d77b9-135">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty>|  
|<span data-ttu-id="d77b9-136">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="d77b9-136">Metadata properties set to `true`</span></span>|<span data-ttu-id="d77b9-137">Aucun.</span><span class="sxs-lookup"><span data-stu-id="d77b9-137">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClickModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClickModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClickModeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d77b9-138">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-138">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d77b9-139">Obtient ou définit la commande à appeler lorsque ce bouton est activé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-139">Gets or sets the command to invoke when this button is pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d77b9-140">Commande à appeler lorsque l'utilisateur clique sur ce bouton.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-140">A command to invoke when this button is pressed.</span>
          </span>
          <span data-ttu-id="d77b9-141">La valeur par défaut est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-141">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77b9-142">Cette propriété est utilisée pour associer une commande à une instance de bouton particulière.</span><span class="sxs-lookup"><span data-stu-id="d77b9-142">This property is used to associate a command with a particular button instance.</span></span>  
  
 <span data-ttu-id="d77b9-143">Dans [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], cette propriété est généralement définie à une valeur de commande statique de l’une des bibliothèques de commandes existantes, telles que <xref:System.Windows.Input.ApplicationCommands> ou <xref:System.Windows.Input.NavigationCommands>.</span><span class="sxs-lookup"><span data-stu-id="d77b9-143">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], this property is most often set to be a static command value from one of the existing command libraries, such as <xref:System.Windows.Input.ApplicationCommands> or <xref:System.Windows.Input.NavigationCommands>.</span></span> <span data-ttu-id="d77b9-144">Pour plus d’informations, consultez [vue d’ensemble de l’exécution des commandes](~/docs/framework/wpf/advanced/commanding-overview.md) ou <xref:System.Windows.Input.ICommand>.</span><span class="sxs-lookup"><span data-stu-id="d77b9-144">For details, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md) or <xref:System.Windows.Input.ICommand>.</span></span>  
  
<a name="xamlAttributeUsage_Command"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d77b9-145">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="d77b9-145">XAML Attribute Usage</span></span>  
  
```  
<object Command="commandName"/>  
```  
  
<a name="xamlValues_Command"></a>   
## <a name="xaml-values"></a><span data-ttu-id="d77b9-146">Valeurs XAML</span><span class="sxs-lookup"><span data-stu-id="d77b9-146">XAML Values</span></span>  
 <span data-ttu-id="d77b9-147">*commandName*</span><span class="sxs-lookup"><span data-stu-id="d77b9-147">*commandName*</span></span>  
 <span data-ttu-id="d77b9-148">La commande à appeler lorsque ce bouton est activé.</span><span class="sxs-lookup"><span data-stu-id="d77b9-148">The command to invoke when this button is pressed.</span></span>  
  
<a name="dependencyPropertyInfo_Command"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="d77b9-149">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="d77b9-149">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d77b9-150">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="d77b9-150">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandProperty>|  
|<span data-ttu-id="d77b9-151">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="d77b9-151">Metadata properties set to `true`</span></span>|<span data-ttu-id="d77b9-152">Aucun.</span><span class="sxs-lookup"><span data-stu-id="d77b9-152">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d77b9-153">Obtient ou définit le paramètre à passer à la propriété <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-153">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d77b9-154">Paramètre à transmettre à la propriété <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-154">Parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77b9-155">La plupart des commandes existantes dans les bibliothèques de commande n’utilisent pas un paramètre de commande.</span><span class="sxs-lookup"><span data-stu-id="d77b9-155">Most existing commands from the command libraries do not use a command parameter.</span></span> <span data-ttu-id="d77b9-156">Des commandes qui n’utilisent pas un paramètre de commande, la plupart de ceux-ci prendre un paramètre avec une valeur de type primitif, par exemple un entier ou une chaîne.</span><span class="sxs-lookup"><span data-stu-id="d77b9-156">Of the commands that do use a command parameter, most of these take a parameter with some primitive type value, such as an integer or a string.</span></span> <span data-ttu-id="d77b9-157">Toutefois, il est possible de créer une commande personnalisée attendant un paramètre de commande de type non primitif.</span><span class="sxs-lookup"><span data-stu-id="d77b9-157">However, it is possible to create a custom command where that command expects a nonprimitive type as its command parameter.</span></span> <span data-ttu-id="d77b9-158">Pour un cas de commande personnalisée comme celui-ci, le paramètre <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> dans le code peut nécessiter une instance d’objet nouvelle ou existante.</span><span class="sxs-lookup"><span data-stu-id="d77b9-158">For a custom command case like this, setting <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> in code might require a new or existing object instance.</span></span> <span data-ttu-id="d77b9-159">Paramètre <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> dans le balisage peut nécessiter une syntaxe d’élément de propriété, où l’élément objet qui remplit la syntaxe d’élément de propriété est un nouvel élément du type attendu par cette commande.</span><span class="sxs-lookup"><span data-stu-id="d77b9-159">Setting <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> in markup might require property element syntax, where the object element filling the property element syntax is a new element of the type expected by that command.</span></span> <span data-ttu-id="d77b9-160">Vous pouvez également, définition dans le balisage peut nécessiter une référence via une extension de balisage à un objet existant (en général, ces références sont faites avec [Extension de balisage de liaison](~/docs/framework/wpf/advanced/binding-markup-extension.md) ou [StaticResource Markup Extension ](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)).</span><span class="sxs-lookup"><span data-stu-id="d77b9-160">Alternatively, setting in markup might require a reference through a markup extension to an existing object (typically these references are made with [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)).</span></span>  
  
<a name="xamlAttributeUsage_CommandParameter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d77b9-161">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="d77b9-161">XAML Attribute Usage</span></span>  
  
```  
<object CommandParameter="commandParameter" />  
```  
  
<a name="xamlValues_CommandParameter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="d77b9-162">Valeurs XAML</span><span class="sxs-lookup"><span data-stu-id="d77b9-162">XAML Values</span></span>  
 <span data-ttu-id="d77b9-163">*commandParameter*</span><span class="sxs-lookup"><span data-stu-id="d77b9-163">*commandParameter*</span></span>  
 <span data-ttu-id="d77b9-164">Une valeur du même type que la commande particulière spécifiée dans le <xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A> propriété attend.</span><span class="sxs-lookup"><span data-stu-id="d77b9-164">A value of the same type as the particular command specified in the <xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A> property expects.</span></span> <span data-ttu-id="d77b9-165">Si vous utilisez une commande existante de la bibliothèque de commandes, consultez la documentation de cette bibliothèque de commandes pour [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] les informations d’utilisation, y compris le type de <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> attendu par la commande.</span><span class="sxs-lookup"><span data-stu-id="d77b9-165">If you use an existing command library command, see that command library's documentation for [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage information, including which type of <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> the command expects.</span></span> <span data-ttu-id="d77b9-166">Si vous utilisez une commande personnalisée, consultez la section Notes.</span><span class="sxs-lookup"><span data-stu-id="d77b9-166">If you use a custom command, see Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_CommandParameter"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="d77b9-167">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="d77b9-167">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d77b9-168">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="d77b9-168">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty>|  
|<span data-ttu-id="d77b9-169">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="d77b9-169">Metadata properties set to `true`</span></span>|<span data-ttu-id="d77b9-170">Aucun.</span><span class="sxs-lookup"><span data-stu-id="d77b9-170">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d77b9-171">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-171">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d77b9-172">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> routée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-172">Identifies the routed <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d77b9-173">Obtient ou définit l’élément auquel appliquer la commande spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-173">Gets or sets the element on which to raise the specified command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d77b9-174">Élément sur lequel déclencher une commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-174">Element on which to raise a command.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77b9-175">Le <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> propriété ne peut pas être utilisée pour définir un <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="d77b9-175">The <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> property cannot be used to define a <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="d77b9-176">Le <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> propriété fournit une référence à un élément qui est déjà défini quelque part dans votre application.</span><span class="sxs-lookup"><span data-stu-id="d77b9-176">The <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> property provides a reference to an element that is already defined somewhere in your application.</span></span>  
  
<a name="xamlAttributeUsage_Target"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d77b9-177">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="d77b9-177">XAML Attribute Usage</span></span>  
  
```  
<ButtonBase CommandTarget="{Binding ElementName= elementName }"/>  
```  
  
<a name="xamlValues_CommandTarget"></a>   
## <a name="xaml-values"></a><span data-ttu-id="d77b9-178">Valeurs XAML</span><span class="sxs-lookup"><span data-stu-id="d77b9-178">XAML Values</span></span>  
 <span data-ttu-id="d77b9-179">*elementName*</span><span class="sxs-lookup"><span data-stu-id="d77b9-179">*elementName*</span></span>  
 <span data-ttu-id="d77b9-180">Le nom de <xref:System.Windows.IInputElement> qui reçoit la commande.</span><span class="sxs-lookup"><span data-stu-id="d77b9-180">The name of <xref:System.Windows.IInputElement> that receives the command.</span></span>  
  
<a name="dependencyPropertyInfo_CommandTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="d77b9-181">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="d77b9-181">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d77b9-182">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="d77b9-182">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty>|  
|<span data-ttu-id="d77b9-183">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="d77b9-183">Metadata properties set to `true`</span></span>|<span data-ttu-id="d77b9-184">Aucun.</span><span class="sxs-lookup"><span data-stu-id="d77b9-184">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d77b9-185">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-185">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected override bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d77b9-186">Obtient la valeur de la propriété <see cref="P:System.Windows.ContentElement.IsEnabled" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-186">Gets the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d77b9-187">
            <see langword="true" /> si le contrôle est activé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-187">
              <see langword="true" /> if the control is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77b9-188">Si vous choisissez de substituer cette implémentation, assurez-vous que vous appelez la méthode de base.</span><span class="sxs-lookup"><span data-stu-id="d77b9-188">If you choose to override this implementation, make certain that you call the base method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressed">
      <MemberSignature Language="C#" Value="public bool IsPressed { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsPressed {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d77b9-189">Obtient une valeur qui indique si un <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> est actuellement activé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-189">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is currently activated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d77b9-190">
            <see langword="true" /> si <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> est activé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-190">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is activated; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d77b9-191">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-191">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77b9-192"><xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> est l’état d’un bouton qui indique le bouton gauche de la souris ou l’espace est appuyé sur le bouton.</span><span class="sxs-lookup"><span data-stu-id="d77b9-192"><xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is the state of a button that indicates the left mouse button or SPACEBAR is pressed over the button.</span></span> <span data-ttu-id="d77b9-193">Lorsque <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> est `true`, le contrôle capture la souris.</span><span class="sxs-lookup"><span data-stu-id="d77b9-193">When <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`, the control captures the mouse.</span></span>  <span data-ttu-id="d77b9-194">Par conséquent, le contrôle déclenche les événements de souris comme <xref:System.Windows.UIElement.MouseEnter> et <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="d77b9-194">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="d77b9-195">Notez que l’utilisation du <xref:System.Windows.Controls.AccessText> ou entrée ne change pas <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> ou capturer la souris, mais déclenche le <xref:System.Windows.Controls.Primitives.ButtonBase.Click> événement.</span><span class="sxs-lookup"><span data-stu-id="d77b9-195">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but is does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="d77b9-196">En commençant avec la version de .NET Framework 3.0 Service Pack 1, <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> a un accesseur Set protégé.</span><span class="sxs-lookup"><span data-stu-id="d77b9-196">Starting with the .NET Framework version 3.0 Service Pack 1, <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> has a protected setter.</span></span> <span data-ttu-id="d77b9-197">Pour utiliser cette fonctionnalité, votre application doit cibler le .NET Framework version 3.5.</span><span class="sxs-lookup"><span data-stu-id="d77b9-197">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="d77b9-198">Pour plus d’informations, consultez [Versions et dépendances](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="d77b9-198">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsPressed"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="d77b9-199">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="d77b9-199">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d77b9-200">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="d77b9-200">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty>|  
|<span data-ttu-id="d77b9-201">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="d77b9-201">Metadata properties set to `true`</span></span>|<span data-ttu-id="d77b9-202">Aucun.</span><span class="sxs-lookup"><span data-stu-id="d77b9-202">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d77b9-203">Cet exemple montre comment utiliser le <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> propriété dans un style de déclencheur.</span><span class="sxs-lookup"><span data-stu-id="d77b9-203">This example shows how to use the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property in a trigger style.</span></span>  
  
 [!code-xaml[BtnColor#9](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnColor/CSharp/Pane1.xaml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsPressedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsPressedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPressedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsPressedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d77b9-204">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-204">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected override void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d77b9-205">Données de l'événement <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-205">The event data for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d77b9-206">Répond lorsque le <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> pour ce contrôle est appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-206">Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for this control is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77b9-207">Si <xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A> est `true`, cette méthode appelle l’implémentation de base, ce qui donne le focus de ce contrôle.</span><span class="sxs-lookup"><span data-stu-id="d77b9-207">If <xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A> is `true`, this method calls the base implementation, which gives this control focus.</span></span>  <span data-ttu-id="d77b9-208">Sinon, cette méthode déclenche la <xref:System.Windows.Controls.Primitives.ButtonBase.Click> événement.</span><span class="sxs-lookup"><span data-stu-id="d77b9-208">Otherwise, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d77b9-209">Déclenche l'événement routé <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-209">Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77b9-210">Le contrôle déclenche la <xref:System.Windows.Controls.Primitives.ButtonBase.Click> événement en appelant <xref:System.Windows.UIElement.RaiseEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="d77b9-210">The control raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span> <span data-ttu-id="d77b9-211">Pour plus d’informations, consultez [vue d’ensemble des événements routés](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d77b9-211">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d77b9-212">Lors de la substitution <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> méthode afin que les délégués inscrits reçoivent l’événement.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-212">When overriding <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsPressedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsPressedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsPressedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsPressedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsPressedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d77b9-213">Données pour <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-213">The data for <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d77b9-214">Appelée lorsque la propriété <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> est modifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-214">Called when the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d77b9-215">Données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-215">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d77b9-216">Fournit la gestion de classe pour l'événement routé <see cref="E:System.Windows.UIElement.KeyDown" /> qui se produit lorsque l'utilisateur appuie sur une touche alors que ce contrôle a le focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-216">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event that occurs when the user presses a key while this control has focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77b9-217">Cette implémentation marque les <xref:System.Windows.UIElement.KeyDown> événement comme géré en affectant la <xref:System.Windows.RoutedEventArgs.Handled%2A> propriété des données d’événement pour `true` lorsque <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> n’est pas définie <xref:System.Windows.Controls.ClickMode.Hover> et qu’un des cas suivants se vérifient :</span><span class="sxs-lookup"><span data-stu-id="d77b9-217">This implementation marks the <xref:System.Windows.UIElement.KeyDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover> and one of the following cases are true:</span></span>  
  
-   <span data-ttu-id="d77b9-218">L’utilisateur appuie sur la barre d’espace.</span><span class="sxs-lookup"><span data-stu-id="d77b9-218">The user presses the SPACEBAR.</span></span>  
  
-   <span data-ttu-id="d77b9-219">L’utilisateur appuie sur entrée et <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> est `true` pour ce contrôle.</span><span class="sxs-lookup"><span data-stu-id="d77b9-219">The user presses ENTER and <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> is `true` for this control.</span></span>  
  
 <span data-ttu-id="d77b9-220">Dans tous les autres cas, cette implémentation ne modifie pas l’état géré (le <xref:System.Windows.RoutedEventArgs.Handled%2A> propriété) de la <xref:System.Windows.UIElement.KeyDown> les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="d77b9-220">In all other cases, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyDown> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d77b9-221">Si vous substituez <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, appelez toujours l’implémentation de base votre <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implémentation.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-221">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="d77b9-222">Faute d’appeler l’implémentation de base empêche les classes de base à partir de la gestion de l’événement avec un gestionnaire de classe, ce qui peut modifier le comportement d’exécution de la classe finale.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-222">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="d77b9-223">Vous pouvez appeler l’implémentation de base avant ou après le traitement spécial, selon vos besoins.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-223">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d77b9-224">Données de l'événement <see cref="E:System.Windows.UIElement.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-224">The event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d77b9-225">Fournit la gestion de classe pour l'événement routé <see cref="E:System.Windows.UIElement.KeyUp" /> qui se produit lorsque l'utilisateur relâche une touche alors que ce contrôle a le focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-225">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event that occurs when the user releases a key while this control has focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77b9-226">Cette implémentation marque les <xref:System.Windows.UIElement.KeyUp> événement comme géré en affectant la <xref:System.Windows.RoutedEventArgs.Handled%2A> propriété des données d’événement à `true` lorsque l’utilisateur relâche la barre d’espace.</span><span class="sxs-lookup"><span data-stu-id="d77b9-226">This implementation marks the <xref:System.Windows.UIElement.KeyUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when the user releases the SPACEBAR.</span></span> <span data-ttu-id="d77b9-227">Sinon, cette implémentation ne modifie pas l’état géré (le <xref:System.Windows.RoutedEventArgs.Handled%2A> propriété) de la <xref:System.Windows.UIElement.KeyUp> les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="d77b9-227">Otherwise, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyUp> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d77b9-228">Si vous substituez <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />, appelez toujours l’implémentation de base votre <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" /> implémentation.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-228">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="d77b9-229">Faute d’appeler l’implémentation de base empêche les classes de base à partir de la gestion de l’événement avec un gestionnaire de classe, ce qui peut modifier le comportement d’exécution de la classe finale.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-229">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="d77b9-230">Vous pouvez appeler l’implémentation de base avant ou après le traitement spécial, selon vos besoins.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-230">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d77b9-231">Données de l'événement <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-231">The event data for the <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d77b9-232">Appelé lorsqu'un élément perd le focus clavier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-232">Called when an element loses keyboard focus.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected override void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d77b9-233">Données de l'événement <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-233">The event data for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d77b9-234">Fournit la gestion de classe pour l'événement routé <see cref="E:System.Windows.UIElement.LostMouseCapture" /> qui se produit lorsque ce contrôle ne reçoit plus de messages d'événement de souris.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-234">Provides class handling for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event that occurs when this control is no longer receiving mouse event messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77b9-235">Cette implémentation ne modifie pas l’état géré (le <xref:System.Windows.RoutedEventArgs.Handled%2A> propriété) de la <xref:System.Windows.UIElement.LostMouseCapture> les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="d77b9-235">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.LostMouseCapture> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d77b9-236">Si vous substituez <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />, appelez toujours l’implémentation de base votre <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" /> implémentation.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-236">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="d77b9-237">Faute d’appeler l’implémentation de base empêche les classes de base à partir de la gestion de l’événement avec un gestionnaire de classe, ce qui peut modifier le comportement d’exécution de la classe finale.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-237">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="d77b9-238">Vous pouvez appeler l’implémentation de base avant ou après le traitement spécial, selon vos besoins.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-238">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d77b9-239">Données de l'événement <see cref="E:System.Windows.Input.Mouse.MouseEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-239">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d77b9-240">Fournit la gestion de classe pour l'événement routé <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> qui se produit lorsque la souris entre dans ce contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-240">Provides class handling for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> routed event that occurs when the mouse enters this control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77b9-241">Lorsque <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> a la valeur <xref:System.Windows.Controls.ClickMode.Hover>, cette implémentation marque les <xref:System.Windows.UIElement.MouseEnter> événement comme géré en affectant la <xref:System.Windows.RoutedEventArgs.Handled%2A> propriété des données d’événement pour `true` et déclenche le <xref:System.Windows.Controls.Primitives.ButtonBase.Click> événement.</span><span class="sxs-lookup"><span data-stu-id="d77b9-241">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Hover>, this implementation marks the <xref:System.Windows.UIElement.MouseEnter> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` and raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d77b9-242">Si vous substituez <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />, appelez toujours l’implémentation de base votre <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" /> implémentation.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-242">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="d77b9-243">Faute d’appeler l’implémentation de base empêche les classes de base à partir de la gestion de l’événement avec un gestionnaire de classe, ce qui peut modifier le comportement d’exécution de la classe finale.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-243">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="d77b9-244">Vous pouvez appeler l’implémentation de base avant ou après le traitement spécial, selon vos besoins.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-244">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d77b9-245">Données de l'événement <see cref="E:System.Windows.Input.Mouse.MouseLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-245">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d77b9-246">Fournit la gestion de classe pour l'événement routé <see cref="E:System.Windows.UIElement.MouseLeave" /> qui se produit lorsque la souris quitte un élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-246">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event that occurs when the mouse leaves an element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77b9-247">Cette implémentation marque les <xref:System.Windows.UIElement.MouseLeave> événement comme géré en affectant la <xref:System.Windows.RoutedEventArgs.Handled%2A> propriété des données d’événement pour `true` lorsque <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> a la valeur <xref:System.Windows.Controls.ClickMode.Hover>.</span><span class="sxs-lookup"><span data-stu-id="d77b9-247">This implementation marks the <xref:System.Windows.UIElement.MouseLeave> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d77b9-248">Si vous substituez <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />, appelez toujours l’implémentation de base votre <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /> implémentation.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-248">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="d77b9-249">Faute d’appeler l’implémentation de base empêche les classes de base à partir de la gestion de l’événement avec un gestionnaire de classe, ce qui peut modifier le comportement d’exécution de la classe finale.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-249">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="d77b9-250">Vous pouvez appeler l’implémentation de base avant ou après le traitement spécial, selon vos besoins.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-250">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d77b9-251">Données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-251">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d77b9-252">Fournit la gestion de classe pour l'événement routé <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> qui se produit lorsque le bouton gauche de la souris est enfoncé alors que le pointeur de la souris se trouve sur ce contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-252">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event that occurs when the left mouse button is pressed while the mouse pointer is over this control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77b9-253">Cette implémentation marque les <xref:System.Windows.UIElement.MouseLeftButtonDown> événement comme géré en affectant la <xref:System.Windows.RoutedEventArgs.Handled%2A> propriété des données d’événement pour `true` lorsque <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> n’est pas définie <xref:System.Windows.Controls.ClickMode.Hover>.</span><span class="sxs-lookup"><span data-stu-id="d77b9-253">This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span> <span data-ttu-id="d77b9-254">Pour répondre à la <xref:System.Windows.UIElement.MouseLeftButtonDown> événement, attacher le Gestionnaire d’événements pour le <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> événement ou appel <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> avec `handledEventsToo` la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="d77b9-254">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonDown> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 <span data-ttu-id="d77b9-255">Lorsque <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> a la valeur <xref:System.Windows.Controls.ClickMode.Press>, cette méthode déclenche la <xref:System.Windows.Controls.Primitives.ButtonBase.Click> événement.</span><span class="sxs-lookup"><span data-stu-id="d77b9-255">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Press>, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d77b9-256">Si vous substituez <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />, appelez toujours l’implémentation de base votre <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" /> implémentation.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-256">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="d77b9-257">Faute d’appeler l’implémentation de base empêche les classes de base à partir de la gestion de l’événement avec un gestionnaire de classe, ce qui peut modifier le comportement d’exécution de la classe finale.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-257">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="d77b9-258">Vous pouvez appeler l’implémentation de base avant ou après le traitement spécial, selon vos besoins.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-258">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d77b9-259">Données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-259">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d77b9-260">Fournit la gestion de classe pour l'événement routé <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> qui se produit lorsque le bouton gauche de la souris est relâché alors que le pointeur de la souris se trouve sur ce contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-260">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event that occurs when the left mouse button is released while the mouse pointer is over this control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77b9-261">Cette implémentation marque les <xref:System.Windows.UIElement.MouseLeftButtonUp> événement comme géré en affectant la <xref:System.Windows.RoutedEventArgs.Handled%2A> propriété des données d’événement pour `true` lorsque <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> n’est pas définie <xref:System.Windows.Controls.ClickMode.Hover>.</span><span class="sxs-lookup"><span data-stu-id="d77b9-261">This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span> <span data-ttu-id="d77b9-262">Pour répondre à la <xref:System.Windows.UIElement.MouseLeftButtonUp> événement, attacher le Gestionnaire d’événements pour le <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> événement ou appel <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> avec `handledEventsToo` la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="d77b9-262">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonUp> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 <span data-ttu-id="d77b9-263">Lorsque <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> a la valeur <xref:System.Windows.Controls.ClickMode.Release> est <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> est `true`, cette méthode déclenche la <xref:System.Windows.Controls.Primitives.ButtonBase.Click> événement.</span><span class="sxs-lookup"><span data-stu-id="d77b9-263">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Release> is <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d77b9-264">Si vous substituez <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />, appelez toujours l’implémentation de base votre <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" /> implémentation.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-264">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="d77b9-265">Faute d’appeler l’implémentation de base empêche les classes de base à partir de la gestion de l’événement avec un gestionnaire de classe, ce qui peut modifier le comportement d’exécution de la classe finale.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-265">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="d77b9-266">Vous pouvez appeler l’implémentation de base avant ou après le traitement spécial, selon vos besoins.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-266">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d77b9-267">Données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-267">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d77b9-268">Fournit la gestion de classe pour l'événement routé <see cref="E:System.Windows.UIElement.MouseMove" /> qui se produit lorsque le pointeur de la souris se déplace alors qu'il se trouve sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-268">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove" /> routed event that occurs when the mouse pointer moves while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77b9-269">Cette implémentation marque les <xref:System.Windows.UIElement.MouseMove> événement comme géré en affectant la <xref:System.Windows.RoutedEventArgs.Handled%2A> propriété des données d’événement pour `true` lorsque <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> n’est pas définie <xref:System.Windows.Controls.ClickMode.Hover> et <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> est `true`.</span><span class="sxs-lookup"><span data-stu-id="d77b9-269">This implementation marks the <xref:System.Windows.UIElement.MouseMove> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover> and <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`.</span></span> <span data-ttu-id="d77b9-270">Pour répondre à la <xref:System.Windows.UIElement.MouseMove> événement, attacher le Gestionnaire d’événements pour le <xref:System.Windows.ContentElement.PreviewMouseMove> événement ou appel <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> avec `handledEventsToo` la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="d77b9-270">To respond to the <xref:System.Windows.UIElement.MouseMove> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseMove> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d77b9-271">Si vous substituez <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />, appelez toujours l’implémentation de base votre <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" /> implémentation.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-271">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="d77b9-272">Faute d’appeler l’implémentation de base empêche les classes de base à partir de la gestion de l’événement avec un gestionnaire de classe, ce qui peut modifier le comportement d’exécution de la classe finale.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-272">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="d77b9-273">Vous pouvez appeler l’implémentation de base avant ou après le traitement spécial, selon vos besoins.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d77b9-273">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRenderSizeChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnRenderSizeChanged (System.Windows.SizeChangedInfo sizeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnRenderSizeChanged(class System.Windows.SizeChangedInfo sizeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnRenderSizeChanged (sizeInfo As SizeChangedInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnRenderSizeChanged(System::Windows::SizeChangedInfo ^ sizeInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeInfo" Type="System.Windows.SizeChangedInfo" />
      </Parameters>
      <Docs>
        <param name="sizeInfo">
          <span data-ttu-id="d77b9-274">Spécifie les modifications de taille.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-274">Specifies the size changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d77b9-275">Appelé lorsque la taille rendue d'un contrôle change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d77b9-275">Called when the rendered size of a control changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77b9-276">Remplace le <xref:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged%2A> méthode de la <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="d77b9-276">Overrides the <xref:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged%2A> method of the <xref:System.Windows.UIElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>